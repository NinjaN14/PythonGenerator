{"BinOp -> [('left', 'BinOp'), ('op', 'Add'), ('right', 'Name')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'For', 'Expr', 'If', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "And -> <NULL>": 5, "GeneratorExp -> [('elt', 'Attribute'), ('generators', ['comprehension'])]": 1, "Assign -> [('targets', ['Name']), ('value', 'Call')]": 3, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If', 'Expr']), ('decorator_list', [])]": 1, "If -> [('test', 'Name'), ('body', ['Assign']), ('orelse', ['Expr'])]": 3, "arguments -> [('args', ['Name', 'Name']), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', ['Str'])]": 1, "TryExcept -> [('body', ['Expr']), ('handlers', ['ExceptHandler']), ('orelse', ['For'])]": 1, "Mod -> <NULL>": 1, "Num -> [('n', 'int')]": 10, "NotIn -> <NULL>": 1, "If -> [('test', 'Compare'), ('body', ['Expr']), ('orelse', ['If'])]": 1, "Pass -> <NULL>": 1, "If -> [('test', 'Name'), ('body', ['Expr', 'Expr']), ('orelse', [])]": 1, "Call -> [('func', 'Name'), ('args', ['Name']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 4, "If -> [('test', 'BoolOp'), ('body', ['Expr', 'Expr', 'Expr']), ('orelse', ['Expr'])]": 1, "If -> [('test', 'Call'), ('body', ['For', 'Return']), ('orelse', [])]": 1, "For -> [('target', 'Name'), ('iter', 'Attribute'), ('body', ['Expr']), ('orelse', [])]": 6, "If -> [('test', 'Call'), ('body', ['Expr']), ('orelse', [])]": 2, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "Store -> <NULL>": 56, "Assign -> [('targets', ['Name']), ('value', 'Name')]": 12, "Assign -> [('targets', ['Tuple']), ('value', 'Attribute')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Assert', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'While', 'If']), ('decorator_list', [])]": 1, "For -> [('target', 'Tuple'), ('iter', 'Call'), ('body', ['If', 'Expr', 'If']), ('orelse', [])]": 1, "Tuple -> [('elts', ['Name']), ('ctx', 'Store')]": 1, "BinOp -> [('left', 'Str'), ('op', 'Mod'), ('right', 'Subscript')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'For']), ('decorator_list', [])]": 1, "BoolOp -> [('op', 'And'), ('values', ['Attribute', 'Compare', 'Call'])]": 1, "Assert -> [('test', 'Attribute'), ('msg', 'NoneType')]": 1, "Call -> [('func', 'Name'), ('args', ['Call']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "Assign -> [('targets', ['Name']), ('value', 'BinOp')]": 3, "Compare -> [('left', 'Attribute'), ('ops', ['Eq']), ('comparators', ['Str'])]": 1, "Assign -> [('targets', ['Name']), ('value', 'Subscript')]": 1, "Lambda -> [('args', 'arguments'), ('body', 'Call')]": 10, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If', 'If', 'If']), ('decorator_list', [])]": 1, "arguments -> [('args', ['Name', 'Name']), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', [])]": 57, "Name -> [('id', 'str'), ('ctx', 'Load')]": 584, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 2, "Attribute -> [('value', 'Name'), ('attr', 'str'), ('ctx', 'Store')]": 5, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Assign', 'For', 'For', 'If', 'If', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'If', 'If']), ('decorator_list', [])]": 1, "Call -> [('func', 'Attribute'), ('args', ['BinOp']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 10, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr']), ('decorator_list', [])]": 6, "While -> [('test', 'BoolOp'), ('body', ['Assign', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr']), ('orelse', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['If', 'Expr', 'If', 'If']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'For', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['For']), ('decorator_list', [])]": 1, "Call -> [('func', 'Name'), ('args', ['Subscript', 'Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 2, "AugAssign -> [('target', 'Attribute'), ('op', 'Sub'), ('value', 'Num')]": 1, "Str -> [('s', 'str')]": 218, "Tuple -> [('elts', ['Call']), ('ctx', 'Load')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'If', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'For', 'If']), ('decorator_list', [])]": 1, "Param -> <NULL>": 126, "Call -> [('func', 'Name'), ('args', ['Attribute', 'Name']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 4, "If -> [('test', 'Attribute'), ('body', ['Expr', 'For', 'Expr']), ('orelse', [])]": 1, "Call -> [('func', 'Name'), ('args', ['Name', 'BinOp']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "For -> [('target', 'Tuple'), ('iter', 'Call'), ('body', ['Expr', 'Expr']), ('orelse', [])]": 1, "BoolOp -> [('op', 'And'), ('values', ['Compare', 'Call'])]": 1, "For -> [('target', 'Name'), ('iter', 'Attribute'), ('body', ['Expr', 'Expr']), ('orelse', [])]": 5, "Subscript -> [('value', 'Attribute'), ('slice', 'Index'), ('ctx', 'Load')]": 8, "Mult -> <NULL>": 3, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Assign', 'Assign', 'For', 'If', 'If']), ('decorator_list', [])]": 1, "arguments -> [('args', []), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', [])]": 10, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'For', 'Expr']), ('decorator_list', [])]": 4, "BinOp -> [('left', 'Attribute'), ('op', 'Add'), ('right', 'Num')]": 1, "Sub -> <NULL>": 2, "Call -> [('func', 'Attribute'), ('args', ['Call']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 3, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'For', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'AugAssign']), ('decorator_list', [])]": 1, "Dict -> [('keys', ['Str', 'Str', 'Str', 'Str']), ('values', ['Str', 'Str', 'Str', 'Str'])]": 1, "Module -> [('body', ['Expr', 'Import', 'Import', 'ClassDef'])]": 1, "Call -> [('func', 'Attribute'), ('args', ['Str', 'Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If']), ('decorator_list', [])]": 2, "Expr -> [('value', 'Call')]": 281, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Assign', 'If', 'For', 'If']), ('decorator_list', [])]": 1, "BinOp -> [('left', 'Str'), ('op', 'Add'), ('right', 'Attribute')]": 5, "AugAssign -> [('target', 'Attribute'), ('op', 'Add'), ('value', 'Num')]": 1, "Name -> [('id', 'str'), ('ctx', 'Store')]": 47, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Assign', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "BinOp -> [('left', 'BinOp'), ('op', 'Add'), ('right', 'Str')]": 4, "Call -> [('func', 'Attribute'), ('args', []), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 34, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Assign', 'If', 'Expr', 'If']), ('decorator_list', [])]": 1, "Name -> [('id', 'str'), ('ctx', 'Param')]": 126, "arguments -> [('args', ['Name', 'Name', 'Name', 'Name']), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', [])]": 1, "List -> [('elts', ['Name']), ('ctx', 'Load')]": 1, "If -> [('test', 'Attribute'), ('body', ['Expr']), ('orelse', [])]": 5, "arguments -> [('args', ['Name', 'Name', 'Name']), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', ['Attribute'])]": 1, "Call -> [('func', 'Name'), ('args', ['BinOp']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "BinOp -> [('left', 'Str'), ('op', 'Mult'), ('right', 'Attribute')]": 2, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'AugAssign']), ('decorator_list', [])]": 1, "If -> [('test', 'Attribute'), ('body', ['If', 'Expr', 'Expr']), ('orelse', [])]": 3, "comprehension -> [('target', 'Name'), ('iter', 'Attribute'), ('ifs', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'FunctionDef', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "Load -> <NULL>": 1097, "Call -> [('func', 'Attribute'), ('args', ['Name']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 24, "Compare -> [('left', 'Str'), ('ops', ['NotIn']), ('comparators', ['Attribute'])]": 1, "Assert -> [('test', 'Name'), ('msg', 'Str')]": 1, "Assign -> [('targets', ['Tuple']), ('value', 'Name')]": 1, "Index -> [('value', 'Attribute')]": 5, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['If', 'Expr', 'Expr', 'If', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "Tuple -> [('elts', ['Name', 'Name']), ('ctx', 'Store')]": 3, "Expr -> [('value', 'Str')]": 9, "Eq -> <NULL>": 4, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr']), ('decorator_list', [])]": 7, "BoolOp -> [('op', 'And'), ('values', ['Call', 'Call'])]": 2, "If -> [('test', 'Call'), ('body', ['Expr']), ('orelse', ['Assert'])]": 1, "ClassDef -> [('name', 'str'), ('bases', []), ('body', ['Expr', 'Assign', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'Assign', 'FunctionDef', 'Assign', 'FunctionDef', 'Assign', 'FunctionDef', 'Assign', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef', 'FunctionDef']), ('decorator_list', [])]": 1, "Dict -> [('keys', ['Attribute', 'Attribute']), ('values', ['Str', 'Str'])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'If', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "If -> [('test', 'Attribute'), ('body', ['If', 'Expr']), ('orelse', [])]": 1, "alias -> [('name', 'str'), ('asname', 'NoneType')]": 2, "Call -> [('func', 'Attribute'), ('args', ['Subscript']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "If -> [('test', 'Attribute'), ('body', ['Expr', 'Expr', 'Assign']), ('orelse', [])]": 1, "Expr -> [('value', 'Tuple')]": 1, "Dict -> [('keys', ['Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str']), ('values', ['Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str'])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'If']), ('decorator_list', [])]": 1, "Call -> [('func', 'Attribute'), ('args', ['Lambda', 'Name', 'Call']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "For -> [('target', 'Name'), ('iter', 'Name'), ('body', ['Expr']), ('orelse', [])]": 1, "Not -> <NULL>": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['If', 'Expr', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'If', 'Expr']), ('decorator_list', [])]": 1, "Dict -> [('keys', ['Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str']), ('values', ['Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str', 'Str'])]": 1, "BoolOp -> [('op', 'And'), ('values', ['Attribute', 'Compare'])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'If']), ('decorator_list', [])]": 1, "If -> [('test', 'Attribute'), ('body', ['Expr', 'Expr', 'Expr', 'Expr']), ('orelse', [])]": 4, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If', 'If', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "Assign -> [('targets', ['Attribute']), ('value', 'Num')]": 1, "Call -> [('func', 'Name'), ('args', ['Name', 'Name']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "If -> [('test', 'Compare'), ('body', ['Assign', 'Expr', 'Expr']), ('orelse', ['Expr'])]": 1, "For -> [('target', 'Name'), ('iter', 'Attribute'), ('body', ['If', 'Expr']), ('orelse', [])]": 3, "Attribute -> [('value', 'Attribute'), ('attr', 'str'), ('ctx', 'Load')]": 16, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Assign', 'Assign', 'Assign', 'Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['If']), ('decorator_list', [])]": 1, "BinOp -> [('left', 'Call'), ('op', 'Sub'), ('right', 'Call')]": 1, "Assign -> [('targets', ['Name']), ('value', 'Dict')]": 4, "Add -> <NULL>": 19, "If -> [('test', 'BoolOp'), ('body', ['Expr']), ('orelse', [])]": 2, "BinOp -> [('left', 'List'), ('op', 'Mult'), ('right', 'BinOp')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'For', 'Expr']), ('decorator_list', [])]": 1, "BinOp -> [('left', 'Str'), ('op', 'Add'), ('right', 'Subscript')]": 3, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Assign', 'TryExcept']), ('decorator_list', [])]": 1, "UnaryOp -> [('op', 'Not'), ('operand', 'Attribute')]": 1, "Call -> [('func', 'Name'), ('args', []), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "List -> [('elts', []), ('ctx', 'Load')]": 1, "Index -> [('value', 'Num')]": 3, "If -> [('test', 'Call'), ('body', ['Expr']), ('orelse', ['If'])]": 1, "BinOp -> [('left', 'Str'), ('op', 'Add'), ('right', 'BinOp')]": 1, "Return -> [('value', 'NoneType')]": 1, "Attribute -> [('value', 'Name'), ('attr', 'str'), ('ctx', 'Load')]": 485, "If -> [('test', 'Attribute'), ('body', ['Expr', 'Expr']), ('orelse', [])]": 11, "Assign -> [('targets', ['Attribute']), ('value', 'List')]": 1, "Compare -> [('left', 'Call'), ('ops', ['Eq']), ('comparators', ['Num'])]": 3, "Call -> [('func', 'Attribute'), ('args', ['GeneratorExp']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 1, "Call -> [('func', 'Name'), ('args', ['Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 9, "If -> [('test', 'BoolOp'), ('body', ['Expr']), ('orelse', ['Expr', 'Expr', 'Expr', 'Expr'])]": 1, "Call -> [('func', 'Attribute'), ('args', ['Str']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 132, "Import -> [('names', ['alias'])]": 2, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr', 'Expr', 'Expr', 'If']), ('decorator_list', [])]": 1, "Call -> [('func', 'Attribute'), ('args', ['Lambda', 'Attribute', 'Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 9, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Expr', 'Expr']), ('decorator_list', [])]": 3, "For -> [('target', 'Name'), ('iter', 'Name'), ('body', ['Expr', 'Expr']), ('orelse', [])]": 1, "Call -> [('func', 'Attribute'), ('args', ['Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 76, "If -> [('test', 'Name'), ('body', ['Expr']), ('orelse', ['Assign'])]": 5, "ExceptHandler -> [('type', 'Name'), ('name', 'NoneType'), ('body', ['Pass'])]": 1, "BinOp -> [('left', 'BinOp'), ('op', 'Add'), ('right', 'Attribute')]": 1, "Call -> [('func', 'Name'), ('args', ['Attribute', 'Attribute']), ('keywords', []), ('starargs', 'NoneType'), ('kwargs', 'NoneType')]": 5, "arguments -> [('args', ['Name']), ('vararg', 'NoneType'), ('kwarg', 'NoneType'), ('defaults', [])]": 3, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'If', 'Assign', 'Expr']), ('decorator_list', [])]": 1, "If -> [('test', 'UnaryOp'), ('body', ['Expr']), ('orelse', [])]": 1, "Assign -> [('targets', ['Attribute']), ('value', 'Name')]": 1, "Attribute -> [('value', 'Call'), ('attr', 'str'), ('ctx', 'Load')]": 1, "FunctionDef -> [('name', 'str'), ('args', 'arguments'), ('body', ['Expr', 'Assign', 'Expr', 'Expr']), ('decorator_list', [])]": 1, "BinOp -> [('left', 'Str'), ('op', 'Add'), ('right', 'Call')]": 2}