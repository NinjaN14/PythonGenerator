{"int": [0, 0, 0, 0, 0, 0, 1, 3703, 3703, 2, 3703, 2, 3703, 2, 3, 2, 528, 2008, 3, 3, 2, 2, 3, 2, 528, 2008, 3, 3, 2, 2, 3, 2, 528, 2008, 3, 3, 2, 2, 3, 2, 528, 2008, 3, 3, 2, 1, 1, 2, 1, 9, 35, 3, 37, 7, 45, 1, 57, 9, 57, 7, 10, 2, 1132, 6, 3, 1132, 1132, 0, 8, 5, 2, 1132, 1995, 1, 15, 3, 6, 2, 1, 2, 5, 3, 2, 2, 2, 3, 2, 2, 1, 9, 2, 7, 2, 2, 3, 0, 0, 1, 1, 2, 1, 9, 2, 7, 2, 2, 3, 0, 0, 1, 1, 0, 0, 5, 0, 0, 5, 2, 1, 2, 2, 1, 3, 2, 4, 1, 1, 2, 2, 1, 3, 2, 4, 1, 100, 2, 9, 0, 0, 1, 9, 0, 0, 9, 0, 0, 2, 0, 0, 2, 1995, 1, 15, 0, 0, 2007, 12, 6, 0, 0, 1, 2, 150, 175, 224, 264, 473, 566, 4, 6, 1, 2, 0, 2, 2078, 2078, 2, 1, 2, 1, 0, 200, 2, 3, 3, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 60, 10, 1, 2, 1, 1, 5, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 1, 0, -4, 8, 1, 200, 0, 0, 1, 61, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 1, 2, 300, 300, 0, 1, 1, 180, 180, 255, 255, 0, 0, 2, 1, 2, 10, 0, 5000, 2500, 5000, 2500, 3, 0, 0, 0, 1, 135, 0, 10, 10, 10, 100, -1, 2, 31, 0, 0, 0, 0, 180, 180, 0, 2, 1, 2, 0, 2, 1, 2, 180, 180, 3, 90, 0, 255, 0, 0, 2, 1, 2, 0, 0, 2, 2, 1, 2, 2, 0, 255, 0, 0, 2, 1, 2, 0, 0, 0, 255, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 100, 0, -1, 0, 101, 420, 1, 1, 0, 1, 0, 0, 0, 0, 104, 1, 0, 1, 0, 1, 0, 999, 1, 1, 1, 0, 0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 19, 1, 3, 0, 6, 6, 2, 0, 2, 0, 1, 2, 0, 0, 6, 1, 1, 6, 4269, 3, 5, 10, 1, 0, 5, 1, 2, 4, 7, 1000, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 16, 16, 0, 16, 16, 0, 0, 0, 18, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 1, 0, 0, -1, 0, 0, 2, 2, -1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1000, -1, 1000, 2, 1, -1, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1000, 0, 0, 0, 0, 128, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 30, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 21, 20, 2, 1, 0, 0, 1, 1, 8, 8, 111, 0, 80, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 100, 1, 99, 0, 0, 100, 99, 1, 0, 0, 0, 0, 380, 900, 5, 380, 900, 5, 0, 800, -1, 800, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 1, 1, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 1, 2, 0, 1, 2, 0, 0, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 0, 0, -1, 0, 0, 0, 0, -1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, -2, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, -2, 1, 0, 0, -1, 0, 1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 3, 1, 0, 0, 0, -1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 500, 1, 3, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 100, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12345, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 3, 4, 2, 3, 4, 2, 0, 0, 2, 2, 2, 2, 3, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1000, 0, 0, 1000, 1, 0, 3, 3, 0, 1, 2, 2, 1, 3, 0, 1, 2, 1, 0, 1, 4, 0, 1, 2, 3, 1, 0, 1, 0, 3, 6, 3, 4, 3, 4, 1, 0, 3, 3, 0, 0, 4, 2, 1, 0, 1, 2, 0, 1, 3, 3, 0, 1, 2, 1, 2, 3, 0, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 1, 0, 1, 77777, 1, 1, 1, 0, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 3, 2, 5, 0, 1, 2, 3, 4, 0, 1, 2, 1, 0, 1, 2, 2, 0, 1, 1, 3, 0, 1, 2, 1, 0, 1, 1, 1, 0, 1, 54, 1, 0, 1, 55, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 2, 2, 0, 2, 2, 0, 2, 0, 1, 1, 2, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 5, 0, 0, 1, 1, 5, 23, 4326, 23, 5, 23, 5, 23, 5, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 40, 40, 40, 60, 60, 60, 60, 40, 40, 40, 4326, 30, 30, 30, 70, 70, 70, 70, 30, 30, 30, 1, 1, 4326, 1, 3, 3, 9, 9, 9, 9, 1, 4, 0, 5, 5, 3084, 2774, 3, 3084, 2774, 4, 4326, 7, 1, 0, 3, 0, 1, 0, 1, 0, 4326, 41157, 3084, 6, 6, 17, 23, 4326, -1, 1, 0, 2, 6, 2, 2, 4326, 2847, 4326, 23, 0, 0, 1, 1, 0, 0, 1, 1, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 2, 4326, 4326, 2, 3, 5, 0, 0, 1, 1, 5, -23, 0, 0, 5, 1, 1, 5, 2, 1, 1, 5, 23, 1, 32128, 1, 32128, 3, 5, 4, 0, 0, 5, 0, 0, 5, 0, 0, 1, 1, 1, 3, 3, 1, 1, 1, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 3, 1, 1, 3, 1, 1, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 10, 1, 180, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 4, 1, 0, 0, 0, 40, 1000, 1, 4096, 100, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 3600, 3600, 60, 60, 1, 1, 3, -4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 5, 0, 5, 0, 0, 3, -1, 10, 0, 0, 1, 1, 0, 2, 1, 0, 1, 1, 7, 1, 1, 0, 1, 0, 0, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 0, 0, 255, 0, 0, 255, 50, -500, 50, -500, 50, 50, 10, 10, 30, 30, 50, 50, 80, 80, 40, 40, 100, 0, 0, 255, 100, 0, 0, 255, 0, 0, 0, 0, 0, 0, 1, 30, 2, 4, 3, 0, 1, 1, 1, 2, 0, 1, 3, 1, 1, 4, 1, 0, 1, 5, 1, 6, 1, 7, 1, 8, 1, 1, 9, 1, 10, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 255, 255, 255, 255, 10, 255, 50, 50, 50, 50, 20, 50, 0, 0, 255, 255, 50, 255, 255, 255, 255, 1, 50, 0, 0, 0, 0, 1, 255, 255, 255, 50, 255, 15, 255, 50, 1, 12, 12, 1, 0, 0, 0, 0, 1, 20, 0, -1, 0, 32, 1, 0, 0, 0, 0, 1, 50, 50, 20, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, -1, 0, 0, 0, 0, 3, 0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 2, 10, 0, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 100000, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 0, 2, 2, 2, 2, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 1, 1, 1, 0, 86400, 0, 302, 301, 304, 400, 404, 403, 405, 410, 500, 0, 2, 2, 2, 0, 0, 100, 0, 1, 1, 0, 1, 1, 2, -1, 0, 1, 0, 3, 5, 2, 160, -1, -1, 1, -1, -1, 0, 1, 1, 1, 3579, 0, 1, 0, 3, 0, 1, 0, 3, 0, 1, 2, 1, 1, 1, 0, 0, 1000, 1, 1, 0, 1, 1, 2000, 1, 1, 1, 1, 1, 6000, 10, 20, 0, 0, 1, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 10, 233, 1, 0, 0, 3, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1000, 1, 1, 0, 2000, 1, 1, 1, 6000, 10, 2, 1, 1, 0, 0, 0, 2, 1, 1, 0, 6, 0, 1, 1, 2, 2, 0, 1, 0, 1, 0, 6000, 1, 1, 1, 1, 1, 6000, -5, 0, 0, 0, 0, 0, 1895, 1994, 1932, 2245, 233, 3, 0, 1, 0, 1, 100000, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 20, 168, 2, 1, 2, 1, 0, 0, 0, 163, 50, 0, 1000, 1, 1, 0, 0, 200, 5, 0, 0, 2000, 1, 1, 0, -1, 0, -1, 2, 1, 2, 2, 3, 0, 1, 0, 1, 1, 0, 80, 50, 15, 1350, 1000, 1, 0, 0, 1, 90, 2, 180, 1, 1, 3100, 3750, 300, 300, -1, -2, 0, 0, 1, 0, 0, 1, 1, 10, 0, 1, 1, 1, 0, 0, 10000, 2, 0, -2, 1, 2, 0, 0, 20, 0, -1, 0, 2, 0, 0, 10000, 10000, 0, -1, 0, 1, 2, -1, 2, 2, 2, 2, 0, 1, 1, 1, 10000, 10000, 2, 0, 10000, 10000, 100, 50, 20, 10, 100, 12, 50, 20, 8, 10, 5, 0, 1, 50, 50, 0, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 5, 8, 19, 37, 57, 110, 201, 331, 602, 1006, 1683, 2646, 4283, 6783, 10382, 15344, 22612, 32871, 45971, 63336, 85157, 112676, 144016, 183174, 226837, 275037, 324926, 376696, 428399, 474959, 515910, 548642, 570915, 581400, 579176, 565419, 538934, 505254, 461770, 414213, 363708, 312642, 263381, 217939, 176157, 139385, 108892, 83128, 61869, 45213, 32574, 22949, 15943, 10889, 7380, 4810, 3253, 2117, 1347, 976, 638, 418, 323, 204, 188, 159, 141, 97, 94, 83, 90, 75, 74, 70, 57, 62, 63, 75, 55, 64, 34, 29, 36, 27, 21, 22, 16, 12, 27, 41, 37, 45, 49, 37, 49, 49, 84, 80, 90, 154, 293, 638, 1374, 2277, 3247, 3821, 4012, 3927, 3855, 3869, 3845, 3804, 3830, 3664, 3667, 3777, 3823, 3753, 3643, 3558, 3614, 3482, 3457, 3609, 3542, 3428, 3452, 3319, 3393, 3426, 3346, 3229, 3312, 3223, 3258, 3243, 3193, 3122, 3092, 3230, 3150, 3078, 3121, 3066, 3194, 3085, 3033, 3103, 2919, 2902, 3038, 3121, 2866, 2951, 2906, 2888, 2983, 2882, 2850, 2894, 2940, 2882, 2842, 2771, 2862, 2847, 2851, 2859, 2816, 2766, 2714, 2831, 2719, 2757, 2810, 2723, 2713, 2657, 2700, 2725, 2802, 2684, 2695, 2691, 2680, 2694, 2702, 2638, 2686, 2588, 2609, 2653, 2534, 2605, 2608, 2579, 2569, 2624, 2622, 2525, 2580, 2578, 2565, 2640, 2614, 2558, 2562, 2516, 2575, 2538, 2565, 2514, 2427, 2574, 2534, 2582, 2435, 2421, 2579, 2456, 2484, 2436, 2384, 2562, 2390, 2411, 2444, 2414, 2437, 2317, 2429, 2376, 2413, 2347, 2330, 2389, 2431, 2381, 2371, 2345, 2399, 2362, 2460, 2423, 2322, 2348, 2318, 2277, 2258, 2257, 2215, 2291, 2310, 2136, 2279, 2100, 2125, 2165, 2155, 2110, 2061, 2127, 2053, 2035, 2051, 2075, 1964, 1962, 1962, 2028, 2025, 2086, 2030, 2058, 1953, 1992, 1970, 2053, 2030, 2018, 1982, 2048, 2051, 1915, 2005, 2011, 2024, 2035, 1983, 1984, 2011, 1927, 1928, 1962, 1982, 1933, 1822, 1908, 1869, 1891, 1980, 1897, 1892, 1913, 1849, 2019, 2038, 2081, 2052, 2201, 2292, 2449, 2722, 2848, 3087, 3435, 3739, 4232, 4698, 5115, 5805, 6294, 6984, 7817, 8285, 9215, 9612, 10265, 10762, 11107, 11397, 11539, 11585, 11485, 11413, 11112, 10818, 10480, 9978, 9461, 8814, 8145, 7864, 7261, 7063, 6597, 6120, 5824, 5501, 5286, 5048, 4717, 4667, 4578, 4489, 4594, 4638, 4889, 5255, 5841, 6563, 7533, 8858, 10589, 12603, 15007, 17943, 21444, 25399, 29728, 34756, 40006, 45571, 51301, 56779, 62070, 67589, 72754, 77015, 80603, 82682, 83931, 84935, 84480, 83473, 80914, 77332, 73071, 68805, 63644, 58770, 53293, 47728, 42893, 37443, 32859, 29090, 25032, 22040, 18677, 16320, 14142, 12538, 10814, 9553, 8635, 7719, 6851, 6180, 5835, 5144, 4935, 4759, 4436, 4241, 4113, 3948, 4005, 3913, 3876, 3797, 3739, 3767, 3746, 3762, 3551, 3646, 3547, 3552, 3496, 3476, 3302, 3230, 3143, 3133, 2981, 2872, 2830, 2718, 2697, 2707, 2492, 2549, 2441, 2362, 2282, 2237, 2150, 2214, 2086, 2133, 1993, 1999, 2019, 1955, 1828, 1880, 1848, 1889, 1825, 1883, 1840, 1755, 1718, 1822, 1646, 1756, 1788, 1737, 1732, 1629, 1682, 1631, 1706, 1722, 1728, 1748, 1739, 1663, 1766, 1756, 1761, 1682, 1812, 1765, 1754, 1874, 1809, 1825, 1755, 1824, 1843, 1808, 1754, 1774, 1750, 1766, 1903, 1796, 1740, 1708, 1717, 1701, 1639, 1704, 1752, 1712, 1602, 1701, 1614, 1631, 1661, 1633, 1677, 1625, 1581, 1623, 1617, 1625, 1636, 1582, 1600, 1628, 1625, 1589, 1580, 1648, 1583, 1564, 1592, 1519, 1599, 1657, 1596, 1598, 1567, 1633, 1688, 1656, 1588, 1591, 1589, 1701, 1694, 1735, 1682, 1723, 1701, 1751, 1809, 1910, 1847, 1838, 1926, 1890, 1966, 1998, 2019, 2017, 1901, 2024, 1983, 1968, 1966, 1956, 1939, 1928, 1937, 1984, 1900, 1832, 1899, 1956, 1924, 1836, 1903, 1946, 1973, 1957, 1953, 2051, 1960, 1953, 2019, 1977, 1964, 2016, 1947, 1995, 2019, 1979, 2012, 1960, 2056, 1962, 1963, 1986, 1995, 1921, 1936, 1879, 1827, 1871, 1899, 1880, 1899, 1809, 1919, 1848, 1877, 1852, 1876, 1909, 1910, 1929, 2086, 1992, 2188, 2146, 2142, 2131, 2084, 2225, 2147, 2127, 2219, 2271, 2259, 2285, 2263, 2204, 2168, 2115, 2151, 2159, 2094, 2103, 1994, 2014, 1948, 1971, 2018, 1952, 1917, 2014, 1963, 2021, 1857, 1999, 1982, 2018, 2012, 2059, 2069, 2099, 2137, 2173, 2181, 2214, 2364, 2442, 2522, 2616, 2822, 3152, 3353, 3737, 4123, 4704, 5483, 6301, 7434, 8758, 10371, 12037, 14287, 16829, 20204, 23741, 27753, 32321, 37330, 42397, 48679, 54519, 61426, 68407, 75284, 81925, 88818, 95139, 101377, 106392, 110984, 114684, 117829, 119732, 119976, 119714, 118406, 115420, 111845, 107262, 101514, 96162, 89506, 83032, 75387, 69004, 62465, 54984, 48873, 42564, 37661, 31846, 27707, 23633, 20132, 17132, 14310, 12154, 10238, 8846, 7672, 6659, 5952, 5450, 5033, 4894, 4779, 4965, 5148, 5457, 5838, 6236, 6847, 7528, 8474, 9119, 10153, 11196, 12524, 13895, 15265, 16646, 18467, 20479, 22489, 24838, 27217, 30123, 33336, 36433, 40748, 44573, 49188, 53508, 59492, 64830, 71255, 77696, 83567, 90527, 97050, 103143, 109422, 114846, 120182, 124433, 128548, 130701, 132814, 132637, 132333, 131539, 128022, 124166, 119944, 115248, 108549, 101801, 95079, 87876, 80181, 72321, 65021, 58187, 51734, 45219, 39529, 34086, 29596, 25072, 21297, 17662, 15030, 12621, 10451, 8765, 7566, 6296, 5375, 4622, 3994, 3623, 3338, 3168, 3019, 2963, 3065, 3061, 3299, 3614, 3563, 4076, 4381, 4782, 5202, 5783, 6457, 7147, 7807, 8476, 9415, 10250, 10991, 11957, 12926, 13833, 14615, 15297, 16154, 16808, 17560, 17770, 18109, 18157, 18342, 18451, 17854, 17837, 17078, 16610, 16147, 15275, 14054, 13365, 12629, 11398, 10717, 10014, 8846, 8031, 7190, 6487, 5882, 5208, 4515, 4210, 3690, 3267, 3008, 2713, 2427, 2226, 2044, 1878, 1757, 1706, 1597, 1592, 1521, 1412, 1429, 1346, 1407, 1385, 1386, 1342, 1365, 1366, 1425, 1428, 1387, 1304, 1392, 1435, 1334, 1401, 1494, 1437, 1499, 1515, 1470, 1614, 1695, 1641, 1691, 1871, 1912, 2067, 2213, 2426, 2634, 2889, 3154, 3545, 3960, 4579, 5048, 5854, 6645, 7437, 8680, 9697, 11061, 12439, 14091, 16037, 17444, 19398, 21623, 23682, 25559, 27680, 29667, 32011, 34128, 35834, 37527, 38856, 41119, 41379, 42055, 42299, 42951, 42888, 41962, 41292, 40570, 39615, 37550, 35993, 34197, 32387, 30324, 28645, 26050, 24065, 22446, 20491, 18664, 16961, 15249, 14004, 12634, 11437, 10615, 9996, 9112, 8449, 7884, 7353, 7042, 6515, 6412, 6093, 5831, 5566, 5308, 5070, 4736, 4743, 4598, 4263, 4308, 4015, 3929, 3800, 3844, 3741, 3733, 3758, 3756, 3819, 3978, 4098, 4173, 4423, 4591, 4890, 5124, 5170, 5433, 5749, 6002, 6119, 6402, 6752, 6838, 7150, 7315, 7697, 7683, 8210, 8194, 8411, 8418, 8766, 8755, 8824, 9316, 9391, 9347, 9663, 9494, 9572, 9470, 9577, 9397, 9381, 8930, 8790, 8799, 8545, 8386, 8006, 7676, 7159, 6827, 6554, 6221, 5768, 5499, 5247, 4806, 4479, 4209, 3781, 3715, 3446, 3173, 3018, 2771, 2597, 2511, 2421, 2384, 2297, 2258, 2187, 2219, 2233, 2229, 2210, 2203, 2221, 2302, 2352, 2320, 2377, 2456, 2433, 2433, 2500, 2449, 2502, 2451, 2506, 2502, 2564, 2481, 2521, 2549, 2502, 2345, 2457, 2409, 2432, 2319, 2413, 2218, 2358, 2323, 2344, 2320, 2308, 2352, 2248, 2337, 2265, 2180, 2297, 2184, 2071, 2223, 2235, 2169, 2166, 2136, 2242, 2150, 2104, 2083, 2100, 2124, 2081, 2057, 2130, 2063, 2082, 2040, 1999, 2038, 1963, 2018, 2006, 1880, 2029, 2033, 2178, 2015, 2119, 2073, 2096, 2136, 2114, 2096, 2105, 2176, 2175, 2161, 2124, 2222, 2210, 2150, 2301, 2229, 2331, 2208, 2278, 2300, 2268, 2214, 2138, 2254, 2273, 2185, 2131, 2125, 2050, 2060, 2125, 1969, 2036, 2042, 2026, 1951, 1913, 1904, 1956, 1870, 1884, 1906, 1785, 1907, 1943, 1892, 1781, 1882, 1964, 2067, 1947, 2009, 2076, 2185, 2216, 2212, 2284, 2349, 2535, 2660, 2885, 2966, 3042, 3428, 3490, 3972, 4168, 4674, 4979, 5325, 5888, 6334, 6893, 7398, 8138, 8778, 9488, 10231, 11096, 11595, 12222, 12856, 13790, 14385, 14831, 15384, 15922, 16191, 16514, 16603, 16918, 16960, 16844, 16634, 16216, 16028, 15739, 15095, 14406, 14047, 13017, 12704, 11662, 11099, 10368, 9813, 8930, 8418, 7758, 7305, 6841, 6249, 5924, 5398, 5062, 4769, 4467, 4293, 4189, 3985, 3846, 3609, 3629, 3649, 3554, 3495, 3529, 3481, 3593, 3542, 3555, 3665, 3704, 3833, 3966, 3926, 4121, 4248, 4307, 4378, 4631, 4886, 5101, 5375, 5707, 5996, 6390, 7071, 7483, 8226, 9117, 10424, 11884, 13838, 15550, 18256, 21663, 25321, 29942, 34933, 41444, 49066, 57880, 68104, 79097, 93206, 108467, 125905, 145302, 167334, 190234, 215787, 243561, 273199, 305256, 338845, 374630, 410922, 447619, 483237, 521626, 558315, 594427, 626179, 658777, 687807, 714286, 735083, 753942, 768135, 775673, 779820, 776828, 774598, 761417, 747270, 727100, 702896, 676692, 648849, 613594, 582254, 544090, 508350, 471945, 433457, 396586, 361645, 326468, 292739, 260941, 232228, 205463, 179433, 157424, 136009, 118031, 101327, 86412, 73683, 61835, 52204, 44458, 36845, 31104, 25587, 21165, 17464, 14641, 12186, 10135, 8603, 7178, 6219, 5488, 4783, 4156, 3760, 3399, 3246, 3044, 2841, 2722, 2618, 2622, 2597, 2415, 2371, 2343, 2358, 2337, 2420, 2323, 2244, 2332, 2318, 2252, 2318, 2318, 2331, 2373, 2427, 2365, 2428, 2423, 2441, 2590, 2601, 2564, 2652, 2751, 2826, 2836, 2938, 3091, 3157, 3261, 3491, 3692, 3802, 4038, 4317, 4604, 4881, 5410, 5745, 6143, 6805, 7512, 8415, 9355, 10347, 11487, 13033, 14368, 16448, 18217, 20398, 22655, 25103, 27986, 31235, 34530, 38595, 42181, 46464, 50155, 54478, 59007, 63727, 68130, 72736, 77388, 81520, 85569, 88531, 92392, 94732, 97444, 99007, 101002, 102329, 102220, 101955, 101542, 99811, 98312, 95524, 92644, 89335, 85911, 81682, 77613, 73085, 68070, 63993, 58972, 54656, 50349, 45765, 41363, 37333, 34125, 29786, 26653, 23578, 20667, 18214, 15789, 13963, 11999, 10409, 8899, 7752, 6463, 5482, 4735, 4054, 3477, 2969, 2463, 2253, 1836, 1577, 1363, 1231, 1061, 997, 925, 874, 761, 739, 692, 665, 649, 605, 636, 558, 552, 591, 595, 558, 562, 562, 543, 563, 536, 526, 572, 571, 593, 581, 580, 547, 539, 561, 541, 578, 586, 550, 561, 541, 574, 542, 539, 507, 539, 591, 489, 506, 517, 476, 493, 462, 486, 454, 454, 465, 423, 441, 436, 444, 440, 412, 384, 444, 416, 421, 400, 419, 371, 390, 384, 433, 404, 447, 403, 429, 372, 382, 422, 396, 417, 438, 448, 421, 421, 393, 425, 392, 382, 374, 398, 409, 389, 413, 409, 406, 442, 424, 441, 398, 417, 379, 445, 435, 436, 463, 418, 446, 421, 469, 457, 505, 470, 477, 477, 495, 470, 463, 538, 511, 574, 526, 526, 491, 588, 585, 557, 591, 615, 602, 656, 628, 698, 708, 714, 765, 793, 844, 862, 898, 932, 1024, 1049, 1102, 1170, 1147, 1234, 1273, 1323, 1348, 1379, 1403, 1517, 1569, 1495, 1598, 1600, 1607, 1582, 1629, 1679, 1635, 1680, 1652, 1589, 1547, 1512, 1491, 1518, 1482, 1339, 1363, 1321, 1275, 1237, 1203, 1149, 1079, 1046, 995, 986, 935, 972, 844, 811, 821, 750, 755, 770, 729, 640, 578, 600, 604, 541, 542, 483, 498, 483, 477, 445, 488, 414, 451, 426, 432, 399, 401, 408, 424, 405, 368, 425, 417, 374, 393, 389, 376, 380, 413, 387, 400, 413, 404, 400, 413, 393, 420, 403, 389, 432, 441, 403, 412, 430, 449, 429, 462, 508, 487, 482, 566, 510, 589, 635, 679, 688, 788, 847, 900, 954, 1074, 1108, 1254, 1349, 1437, 1507, 1667, 1778, 1869, 2021, 2163, 2177, 2436, 2500, 2611, 2746, 2860, 2917, 3023, 3010, 3066, 3192, 3207, 3223, 3239, 3238, 3191, 3092, 3063, 3042, 3005, 2781, 2819, 2645, 2469, 2453, 2375, 2175, 2103, 2022, 1891, 1805, 1649, 1514, 1454, 1303, 1287, 1120, 1026, 1033, 963, 902, 806, 756, 695, 614, 681, 610, 610, 536, 603, 557, 537, 483, 502, 493, 505, 492, 493, 487, 552, 478, 500, 520, 471, 501, 533, 578, 508, 528, 497, 501, 492, 487, 478, 476, 497, 460, 494, 467, 488, 470, 471, 453, 447, 453, 427, 452, 478, 469, 434, 463, 429, 378, 434, 470, 430, 403, 470, 456, 441, 465, 432, 483, 472, 471, 504, 509, 552, 582, 578, 688, 601, 650, 662, 752, 758, 751, 832, 886, 898, 959, 992, 1019, 1100, 1132, 1167, 1153, 1170, 1222, 1294, 1303, 1307, 1324, 1356, 1291, 1352, 1310, 1332, 1349, 1256, 1258, 1247, 1182, 1181, 1116, 1095, 1050, 1015, 1014, 1000, 977, 868, 838, 757, 772, 715, 668, 672, 590, 591, 597, 509, 572, 472, 521, 480, 476, 454, 460, 423, 438, 405, 441, 401, 455, 423, 450, 462, 441, 466, 489, 530, 515, 505, 587, 557, 585, 572, 586, 608, 608, 686, 690, 749, 695, 741, 739, 798, 792, 773, 830, 805, 792, 808, 821, 841, 823, 863, 864, 869, 870, 863, 915, 924, 905, 862, 902, 896, 893, 889, 835, 869, 889, 915, 912, 913, 860, 799, 827, 802, 812, 809, 807, 758, 770, 740, 746, 733, 734, 669, 671, 656, 617, 637, 584, 567, 595, 542, 558, 533, 520, 520, 502, 477, 480, 449, 497, 471, 490, 425, 491, 438, 465, 464, 430, 484, 484, 500, 481, 506, 460, 459, 512, 482, 520, 522, 494, 549, 582, 584, 585, 654, 622, 610, 634, 654, 674, 671, 704, 722, 736, 722, 747, 806, 812, 772, 783, 792, 852, 829, 814, 873, 871, 835, 838, 790, 810, 771, 798, 756, 763, 808, 738, 735, 700, 663, 676, 659, 628, 625, 597, 591, 565, 559, 567, 571, 552, 564, 503, 592, 517, 548, 546, 501, 492, 487, 472, 489, 549, 539, 510, 547, 508, 561, 497, 506, 507, 507, 507, 524, 507, 530, 528, 578, 567, 530, 541, 563, 563, 557, 551, 569, 543, 571, 625, 608, 586, 627, 664, 625, 684, 656, 725, 775, 737, 779, 763, 825, 851, 837, 885, 926, 877, 969, 964, 1026, 983, 1014, 1031, 1077, 1142, 1094, 1093, 1145, 1125, 1093, 1106, 1131, 1117, 1116, 1067, 1102, 1100, 1029, 953, 976, 923, 924, 897, 902, 846, 832, 718, 706, 685, 698, 660, 641, 659, 576, 584, 557, 521, 560, 498, 491, 506, 498, 440, 467, 432, 436, 440, 412, 410, 408, 427, 413, 409, 408, 434, 423, 437, 409, 429, 451, 445, 435, 430, 484, 457, 459, 445, 424, 452, 445, 473, 486, 466, 472, 503, 513, 449, 467, 492, 479, 490, 455, 515, 489, 484, 470, 464, 463, 466, 472, 464, 412, 414, 447, 418, 434, 416, 385, 397, 374, 374, 368, 388, 353, 383, 381, 353, 354, 362, 328, 363, 327, 363, 326, 368, 365, 298, 317, 346, 309, 329, 352, 353, 346, 330, 328, 329, 331, 349, 327, 336, 322, 330, 333, 305, 346, 326, 306, 298, 319, 343, 335, 350, 348, 343, 335, 325, 344, 373, 333, 344, 339, 317, 331, 365, 322, 330, 368, 364, 312, 361, 357, 350, 322, 347, 352, 335, 367, 330, 334, 367, 311, 378, 362, 356, 351, 336, 360, 327, 325, 328, 308, 316, 316, 319, 340, 341, 334, 285, 338, 306, 337, 350, 336, 303, 316, 324, 365, 312, 310, 340, 323, 335, 323, 312, 344, 363, 356, 330, 341, 361, 336, 368, 355, 324, 305, 312, 337, 358, 375, 343, 341, 331, 349, 341, 340, 354, 374, 342, 339, 375, 382, 338, 366, 359, 311, 386, 342, 332, 374, 372, 375, 341, 376, 393, 343, 353, 426, 408, 381, 404, 405, 436, 446, 456, 441, 454, 486, 459, 518, 537, 531, 505, 536, 561, 582, 614, 637, 657, 620, 683, 659, 713, 730, 744, 769, 750, 790, 704, 751, 763, 755, 765, 789, 782, 748, 757, 712, 739, 687, 666, 684, 665, 632, 619, 609, 632, 582, 605, 580, 550, 586, 515, 485, 479, 490, 474, 473, 445, 444, 418, 442, 379, 407, 414, 387, 385, 361, 377, 405, 347, 351, 393, 422, 397, 359, 401, 363, 383, 360, 382, 390, 373, 382, 400, 358, 394, 397, 377, 388, 375, 426, 408, 390, 423, 411, 429, 441, 438, 438, 444, 466, 460, 433, 428, 450, 472, 460, 457, 441, 431, 434, 461, 453, 427, 473, 432, 410, 417, 487, 424, 476, 450, 427, 448, 405, 436, 431, 448, 419, 403, 439, 436, 485, 431, 430, 463, 424, 464, 395, 483, 475, 455, 542, 524, 546, 532, 516, 609, 595, 599, 602, 668, 621, 720, 768, 731, 761, 776, 754, 862, 856, 850, 959, 921, 981, 950, 1007, 1098, 1059, 1086, 1152, 1206, 1135, 1193, 1169, 1215, 1304, 1297, 1320, 1432, 1435, 1441, 1444, 1558, 1544, 1561, 1666, 1622, 1687, 1735, 1706, 1809, 1922, 1853, 1957, 1980, 1855, 2026, 2071, 2063, 2087, 2083, 2160, 2026, 2001, 2086, 1998, 2036, 2043, 1850, 2014, 1932, 1977, 1852, 1856, 1830, 1760, 1718, 1646, 1602, 1545, 1482, 1490, 1399, 1328, 1363, 1265, 1147, 1177, 1163, 1132, 1085, 1033, 981, 988, 898, 887, 802, 800, 811, 776, 799, 733, 741, 759, 660, 667, 678, 660, 617, 631, 633, 594, 584, 569, 623, 578, 568, 539, 599, 603, 600, 573, 582, 571, 579, 588, 543, 587, 597, 597, 585, 593, 632, 615, 639, 669, 709, 742, 744, 815, 831, 906, 927, 1022, 1109, 1154, 1222, 1233, 1433, 1491, 1510, 1589, 1797, 1865, 2050, 2157, 2319, 2481, 2637, 2890, 2977, 3190, 3339, 3569, 3610, 3934, 4048, 4325, 4415, 4604, 4699, 4876, 5154, 5265, 5369, 5545, 5493, 5575, 5714, 5789, 5928, 5949, 5938, 5901, 5971, 6014, 5815, 5825, 5694, 5445, 5487, 5355, 5247, 5055, 5067, 4806, 4672, 4395, 4275, 4221, 3947, 3749, 3543, 3348, 3222, 3054, 2945, 2787, 2604, 2406, 2245, 2114, 2044, 1884, 1749, 1658, 1565, 1463, 1299, 1304, 1251, 1141, 1083, 1092, 1028, 964, 994, 903, 857, 836, 859, 793, 818, 773, 760, 735, 748, 731, 708, 700, 691, 705, 653, 634, 704, 654, 632, 655, 653, 657, 644, 662, 641, 668, 634, 647, 704, 649, 745, 647, 683, 693, 639, 653, 658, 674, 699, 680, 703, 693, 703, 736, 748, 789, 823, 791, 800, 855, 872, 898, 1015, 1041, 1068, 1109, 1218, 1220, 1404, 1510, 1540, 1738, 1817, 1982, 2202, 2325, 2646, 2878, 3206, 3485, 3670, 4058, 4471, 4918, 5435, 5839, 6223, 6807, 7378, 7976, 8547, 9078, 9894, 10645, 11095, 11836, 12840, 13688, 14167, 15154, 15724, 16561, 17293, 18288, 18947, 19378, 19981, 20523, 21206, 21811, 22148, 22725, 23021, 23501, 23484, 24094, 24134, 24343, 23961, 24013, 23799, 23665, 23163, 22917, 22345, 22123, 21724, 21032, 20517, 19743, 18822, 18350, 17587, 16713, 15958, 15276, 14155, 13727, 12844, 12159, 11319, 10702, 9829, 9350, 8668, 7704, 7460, 6801, 6141, 5842, 5202, 4768, 4323, 4061, 3614, 3327, 3121, 2885, 2520, 2337, 2158, 1886, 1870, 1730, 1591, 1432, 1405, 1301, 1237, 1199, 1169, 1071, 1019, 1033, 958, 981, 964, 884, 862, 846, 923, 834, 824, 894, 875, 840, 851, 877, 859, 920, 887, 895, 867, 887, 854, 910, 865, 875, 808, 871, 878, 958, 925, 912, 931, 884, 871, 878, 967, 916, 921, 911, 948, 949, 956, 984, 982, 996, 1031, 961, 1041, 1030, 1013, 1048, 1020, 1122, 1103, 1197, 1122, 1168, 1166, 1216, 1234, 1233, 1295, 1321, 1279, 1321, 1359, 1422, 1501, 1541, 1586, 1627, 1657, 1704, 1859, 1727, 1795, 1911, 2012, 2047, 2109, 2182, 2233, 2372, 2375, 2429, 2618, 2632, 2646, 2819, 2847, 2967, 2976, 3065, 3023, 3187, 3191, 3252, 3368, 3350, 3418, 3437, 3542, 3461, 3458, 3511, 3544, 3605, 3548, 3443, 3326, 3437, 3586, 3380, 3396, 3297, 3219, 3206, 3163, 3092, 3023, 2976, 2936, 2734, 2615, 2818, 2729, 2598, 2544, 2460, 2415, 2396, 2372, 2250, 2216, 2178, 2002, 2165, 2090, 2082, 2023, 2056, 1939, 1974, 2051, 1931, 1938, 1982, 1964, 1897, 1846, 1883, 1966, 2008, 1899, 1969, 1926, 1908, 1996, 1953, 2028, 2009, 2025, 1915, 2046, 1998, 2061, 1990, 2101, 2036, 2030, 2029, 2042, 2027, 2130, 2151, 2119, 2166, 2223, 2121, 2257, 2279, 2244, 2273, 2283, 2327, 2293, 2312, 2369, 2358, 2360, 2392, 2417, 2363, 2406, 2412, 2414, 2546, 2521, 2464, 2518, 2594, 2618, 2549, 2593, 2476, 2527, 2649, 2715, 2669, 2748, 2771, 2857, 2879, 2899, 2890, 2891, 2918, 2951, 3018, 3002, 3051, 3043, 2934, 2993, 3157, 3185, 3129, 3221, 3209, 3315, 3229, 3319, 3464, 3528, 3518, 3502, 3581, 3686, 3719, 3680, 3906, 3961, 3879, 4055, 4047, 4077, 4175, 4332, 4317, 4543, 4551, 4593, 4900, 5017, 5080, 5130, 5134, 5246, 5417, 5657, 5901, 5936, 6033, 6210, 6405, 6483, 6542, 6749, 6880, 6936, 7268, 7295, 7427, 7547, 7646, 7791, 7877, 7874, 7904, 7968, 7904, 8078, 8153, 8134, 8180, 8297, 8417, 8148, 8254, 8220, 8162, 8079, 8301, 8386, 8126, 7987, 8058, 7976, 8113, 7981, 7881, 7965, 7998, 7926, 7691, 7673, 7966, 7705, 7818, 7832, 7991, 7773, 7780, 7855, 7921, 8039, 8144, 8044, 8151, 8335, 8503, 8342, 8485, 8642, 8727, 8968, 9037, 8973, 9286, 9472, 9467, 9649, 9633, 9852, 10087, 10324, 10455, 10544, 10671, 10723, 10915, 11142, 11511, 11370, 11767, 11854, 12030, 12100, 12551, 12617, 12970, 13156, 13173, 13556, 14035, 13927, 14554, 14687, 14774, 15226, 15195, 15757, 16083, 16156, 16280, 16907, 17065, 17712, 17816, 18071, 18382, 18764, 19315, 19362, 19550, 20389, 20653, 20877, 21672, 21694, 22271, 22445, 22773, 23473, 23780, 24216, 24612, 24919, 25419, 25889, 26356, 26655, 27013, 27463, 28239, 28932, 29076, 29406, 30525, 30579, 31144, 31481, 31670, 32470, 32822, 33354, 33483, 34402, 34691, 35146, 35908, 36336, 36851, 37150, 37975, 38026, 38632, 39310, 39664, 40183, 40102, 41029, 41434, 42113, 42382, 42752, 43332, 43589, 44660, 45201, 45332, 45652, 46371, 46950, 47189, 47419, 48039, 48300, 48845, 49391, 49563, 50736, 50760, 50813, 51345, 51783, 52317, 52077, 53156, 53270, 53428, 53676, 54473, 54911, 55191, 55081, 55411, 56022, 56171, 56415, 56042, 57405, 57315, 57685, 58210, 58000, 58331, 58283, 58735, 59244, 59623, 59415, 59791, 59853, 60559, 60735, 60174, 60449, 60685, 61229, 61318, 61072, 61579, 61947, 61542, 61872, 62304, 62042, 62301, 62212, 62331, 62645, 62827, 63027, 62745, 62643, 63126, 63198, 63308, 63000, 63625, 63539, 63314, 63434, 63613, 63732, 63337, 63586, 63961, 63401, 63664, 63382, 63363, 63167, 62516, 63287, 63164, 63811, 63358, 62960, 63058, 63298, 63002, 62929, 62864, 62814, 62547, 62532, 62245, 62734, 62170, 62748, 61913, 62155, 62169, 61630, 61773, 61329, 61714, 61168, 61225, 61584, 61449, 61443, 61247, 61445, 61816, 61913, 61766, 61879, 62553, 62069, 62767, 62801, 63584, 64331, 65020, 65601, 65916, 66887, 67793, 69130, 69897, 71488, 72783, 73867, 75168, 76931, 78633, 79978, 82379, 83725, 86025, 87889, 90032, 92146, 94860, 97142, 99208, 102240, 103899, 106554, 109281, 111729, 114053, 116401, 119073, 121053, 123172, 125016, 127208, 129671, 131055, 132664, 134543, 135633, 137326, 137801, 138699, 139156, 139417, 138971, 139652, 139539, 138118, 137578, 136973, 135182, 133500, 131798, 130274, 128197, 125389, 123221, 120332, 117842, 113851, 110543, 107432, 103640, 99809, 95733, 92327, 88210, 84098, 80526, 76943, 72796, 68490, 65378, 61465, 57688, 54128, 50967, 47401, 44181, 41497, 38624, 35151, 33068, 30305, 28066, 25714, 23793, 21736, 19949, 18203, 16443, 15365, 13955, 12837, 11643, 10445, 9662, 8778, 8183, 7438, 6737, 6171, 5828, 5194, 4740, 4440, 4057, 3794, 3737, 3372, 3131, 2918, 2779, 2639, 2519, 2386, 2240, 2142, 2173, 2094, 1989, 1886, 1801, 1704, 1635, 1641, 1624, 1532, 1478, 1410, 1384, 1379, 1345, 1317, 1213, 1288, 1215, 1177, 1164, 1123, 1108, 1072, 1001, 1032, 1021, 973, 933, 874, 881, 886, 796, 813, 772, 799, 802, 744, 770, 711, 679, 689, 685, 628, 659, 635, 583, 613, 577, 617, 563, 525, 571, 553, 526, 501, 487, 470, 502, 476, 462, 464, 449, 429, 432, 419, 440, 394, 458, 371, 386, 368, 364, 358, 339, 353, 329, 360, 280, 335, 323, 322, 291, 314, 281, 289, 269, 324, 286, 264, 265, 309, 280, 266, 235, 268, 269, 251, 250, 238, 233, 274, 257, 226, 256, 229, 235, 245, 227, 248, 223, 197, 202, 214, 224, 203, 184, 185, 195, 218, 219, 212, 202, 214, 201, 182, 191, 207, 195, 175, 180, 193, 197, 169, 194, 179, 189, 182, 216, 179, 181, 190, 176, 131, 195, 188, 187, 174, 181, 160, 180, 159, 163, 173, 152, 194, 173, 179, 181, 170, 172, 173, 166, 182, 159, 202, 176, 167, 151, 172, 147, 167, 175, 182, 155, 171, 148, 149, 159, 171, 163, 161, 138, 150, 159, 159, 141, 171, 150, 156, 169, 130, 148, 144, 154, 148, 125, 150, 148, 159, 149, 155, 149, 152, 124, 125, 155, 157, 155, 124, 146, 175, 145, 152, 156, 136, 153, 139, 156, 160, 151, 143, 144, 141, 157, 153, 150, 145, 164, 141, 149, 155, 151, 126, 142, 163, 163, 159, 147, 153, 158, 154, 172, 160, 161, 166, 175, 156, 157, 155, 158, 153, 170, 174, 166, 167, 147, 190, 174, 168, 152, 190, 172, 162, 176, 164, 189, 177, 150, 150, 182, 159, 171, 190, 156, 134, 161, 191, 152, 163, 163, 145, 144, 132, 119, 140, 169, 152, 146, 142, 138, 128, 134, 130, 131, 147, 104, 139, 100, 114, 108, 106, 116, 91, 94, 120, 117, 101, 94, 93, 79, 78, 92, 86, 100, 86, 110, 87, 95, 86, 101, 75, 86, 79, 78, 88, 75, 91, 91, 94, 97, 84, 80, 82, 95, 96, 112, 102, 92, 91, 97, 106, 98, 101, 99, 116, 90, 118, 104, 128, 130, 126, 95, 130, 114, 117, 113, 113, 107, 128, 130, 127, 128, 131, 124, 112, 135, 130, 129, 118, 118, 101, 111, 140, 122, 130, 123, 111, 115, 117, 118, 102, 108, 126, 99, 132, 102, 96, 107, 103, 91, 100, 115, 96, 78, 98, 121, 109, 107, 95, 81, 125, 107, 71, 92, 100, 99, 109, 111, 94, 86, 107, 89, 99, 101, 98, 88, 89, 89, 111, 85, 80, 93, 97, 85, 124, 95, 96, 119, 99, 87, 96, 113, 110, 89, 107, 103, 116, 92, 103, 104, 114, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 14, 31, 38, 74, 164, 246, 477, 811, 1299, 2247, 3567, 5642, 8565, 13142, 19457, 28502, 40365, 55624, 76541, 101225, 132192, 168113, 210436, 256771, 305809, 358263, 409224, 456630, 500519, 538105, 562950, 576847, 580403, 569609, 548119, 517206, 477429, 431533, 381562, 331294, 281218, 234641, 192011, 152976, 120943, 93226, 70067, 52237, 38423, 27557, 19602, 13581, 9300, 6346, 4287, 2975, 1961, 1287, 932, 657, 504, 340, 254, 249, 186, 161, 153, 129, 93, 109, 100, 97, 101, 102, 86, 95, 82, 61, 76, 46, 52, 39, 37, 22, 24, 31, 52, 155, 174, 175, 189, 180, 184, 180, 200, 222, 229, 261, 396, 752, 1586, 2867, 4180, 5356, 5857, 6110, 6003, 6121, 5923, 5942, 5870, 5738, 5755, 5885, 5617, 5622, 5711, 5652, 5515, 5591, 5469, 5342, 5419, 5403, 5324, 5359, 5233, 5234, 5249, 5265, 5260, 5231, 5153, 5195, 5126, 5129, 5181, 5077, 5047, 4889, 5071, 4992, 4927, 4948, 4932, 4811, 4792, 4879, 4955, 4851, 4906, 4716, 4730, 4764, 4671, 4723, 4718, 4656, 4650, 4881, 4806, 4687, 4627, 4742, 4605, 4678, 4590, 4625, 4667, 4592, 4516, 4618, 4689, 4567, 4668, 4440, 4470, 4463, 4522, 4624, 4451, 4565, 4516, 4526, 4556, 4459, 4421, 4471, 4411, 4364, 4443, 4296, 4552, 4383, 4406, 4427, 4590, 4446, 4513, 4339, 4330, 4250, 4418, 4319, 4421, 4290, 4278, 4293, 4128, 4346, 4232, 4319, 4322, 4188, 4204, 4292, 4228, 4162, 4315, 3994, 4201, 3918, 4070, 4059, 4030, 3935, 4069, 3901, 3840, 3940, 3728, 3763, 3766, 3680, 3758, 3766, 3669, 3599, 3701, 3605, 3638, 3604, 3492, 3420, 3415, 3381, 3411, 3282, 3279, 3206, 3168, 3136, 3162, 2989, 3008, 2961, 3037, 2817, 2911, 2996, 2886, 2826, 2806, 2730, 2736, 2609, 2597, 2567, 2553, 2487, 2562, 2508, 2511, 2372, 2443, 2413, 2215, 2416, 2259, 2326, 2255, 2223, 2167, 2136, 2123, 2170, 2057, 2105, 2001, 2062, 2072, 2054, 2003, 2009, 2037, 1938, 1918, 1888, 1924, 1884, 1853, 1925, 1821, 1827, 1847, 1879, 1841, 1886, 1796, 1763, 1867, 1777, 1754, 1721, 1787, 1717, 1773, 1690, 1771, 1775, 1711, 1766, 1757, 1730, 1764, 1716, 1735, 1697, 1674, 1623, 1747, 1650, 1567, 1635, 1573, 1539, 1604, 1638, 1584, 1562, 1562, 1518, 1502, 1562, 1505, 1524, 1548, 1451, 1518, 1494, 1459, 1506, 1475, 1469, 1409, 1408, 1425, 1407, 1417, 1478, 1404, 1384, 1344, 1397, 1436, 1297, 1414, 1447, 1341, 1358, 1426, 1387, 1429, 1458, 1423, 1424, 1487, 1397, 1453, 1463, 1466, 1460, 1445, 1486, 1406, 1417, 1506, 1443, 1444, 1438, 1383, 1391, 1419, 1405, 1377, 1309, 1373, 1371, 1379, 1422, 1384, 1410, 1353, 1417, 1494, 1501, 1472, 1447, 1505, 1405, 1397, 1487, 1521, 1575, 1489, 1477, 1571, 1490, 1572, 1574, 1551, 1624, 1570, 1650, 1583, 1575, 1621, 1590, 1586, 1506, 1514, 1471, 1535, 1554, 1492, 1511, 1567, 1496, 1499, 1493, 1467, 1525, 1514, 1456, 1402, 1446, 1406, 1533, 1439, 1397, 1380, 1407, 1363, 1420, 1393, 1326, 1317, 1325, 1346, 1330, 1382, 1337, 1308, 1350, 1357, 1371, 1398, 1367, 1359, 1388, 1433, 1492, 1486, 1544, 1575, 1634, 1830, 1816, 2018, 2239, 2251, 2316, 2588, 2706, 2832, 3153, 3219, 3340, 3609, 3544, 3753, 3575, 3896, 3791, 3902, 3771, 3735, 3623, 3511, 3401, 3209, 3135, 2936, 2789, 2552, 2383, 2254, 2093, 1961, 1967, 1817, 1718, 1620, 1589, 1482, 1446, 1410, 1401, 1424, 1339, 1416, 1382, 1379, 1413, 1298, 1345, 1381, 1260, 1291, 1303, 1284, 1304, 1341, 1192, 1241, 1285, 1198, 1169, 1127, 1237, 1227, 1173, 1168, 1208, 1166, 1163, 1083, 1178, 1151, 1128, 1170, 1219, 1167, 1202, 1121, 1119, 1122, 1128, 1122, 1158, 1154, 1140, 1113, 1229, 1070, 1087, 1083, 1089, 1032, 1082, 1075, 1064, 1126, 1112, 1035, 1074, 1110, 1058, 1095, 1069, 1036, 1040, 983, 1060, 1071, 1058, 1027, 1038, 1105, 1059, 1094, 1018, 1029, 1022, 1053, 995, 1091, 1097, 1068, 1071, 1027, 1081, 947, 979, 1053, 1084, 1105, 1061, 1013, 1048, 1053, 1192, 1126, 1136, 1175, 1219, 1220, 1222, 1195, 1215, 1193, 1256, 1225, 1184, 1213, 1196, 1208, 1236, 1243, 1213, 1195, 1144, 1125, 1121, 1096, 1090, 1140, 1147, 1085, 1070, 1080, 1006, 1073, 1009, 1053, 1038, 972, 951, 1032, 959, 997, 1029, 957, 956, 1021, 1006, 1037, 1029, 1001, 1014, 1072, 1039, 1014, 972, 1051, 995, 990, 1027, 975, 1008, 1020, 1035, 1056, 1029, 1027, 1053, 1095, 1073, 1016, 1115, 1084, 1094, 1113, 1100, 1143, 1147, 1164, 1194, 1167, 1180, 1173, 1176, 1162, 1131, 1210, 1216, 1149, 1176, 1227, 1223, 1182, 1214, 1168, 1110, 1113, 1141, 1127, 1048, 1088, 1015, 1035, 1066, 1004, 955, 997, 990, 1010, 972, 998, 980, 1013, 964, 993, 966, 950, 1017, 995, 1017, 1012, 957, 1018, 1012, 1031, 1116, 1058, 1121, 1136, 1226, 1284, 1410, 1521, 1584, 1742, 1850, 2057, 2359, 2649, 3104, 3534, 4030, 4489, 5189, 5979, 6961, 7872, 8658, 9785, 10999, 12198, 13274, 14552, 15609, 16802, 17947, 18497, 19494, 20176, 20783, 21366, 21414, 21322, 21280, 20964, 20423, 19866, 19008, 18164, 17238, 16164, 14992, 13608, 12403, 11407, 10314, 9142, 8123, 7298, 6366, 5683, 4799, 4102, 3790, 3198, 2807, 2437, 2143, 1957, 1681, 1542, 1463, 1356, 1231, 1224, 1179, 1116, 1080, 1141, 1122, 1109, 1184, 1229, 1240, 1307, 1335, 1437, 1525, 1595, 1677, 1804, 1851, 2049, 2245, 2268, 2316, 2610, 2679, 2745, 2819, 2960, 3088, 3174, 3325, 3357, 3439, 3421, 3274, 3426, 3366, 3243, 3055, 3058, 3022, 2877, 2679, 2550, 2347, 2208, 2186, 1976, 1832, 1698, 1548, 1483, 1404, 1314, 1187, 1193, 1120, 1050, 1018, 939, 973, 920, 868, 870, 845, 824, 845, 831, 856, 858, 854, 817, 794, 782, 764, 824, 789, 786, 816, 756, 758, 765, 815, 855, 793, 783, 812, 788, 760, 786, 820, 826, 762, 816, 792, 770, 811, 854, 822, 813, 849, 751, 761, 786, 750, 797, 790, 802, 782, 806, 774, 801, 828, 768, 802, 785, 808, 822, 797, 889, 849, 805, 760, 839, 833, 819, 777, 817, 860, 790, 855, 811, 828, 833, 842, 804, 794, 830, 813, 825, 831, 746, 792, 789, 795, 798, 789, 767, 771, 732, 778, 818, 779, 728, 768, 732, 797, 838, 798, 751, 773, 774, 749, 799, 758, 748, 762, 753, 795, 779, 754, 751, 757, 744, 723, 770, 730, 715, 764, 752, 764, 778, 785, 754, 789, 750, 775, 702, 694, 772, 749, 794, 747, 731, 732, 734, 706, 721, 757, 772, 765, 763, 735, 734, 794, 753, 784, 760, 702, 770, 740, 706, 742, 749, 746, 768, 719, 754, 752, 746, 788, 711, 754, 801, 762, 794, 725, 711, 716, 723, 736, 750, 693, 731, 741, 728, 741, 731, 711, 739, 734, 703, 734, 707, 686, 730, 711, 667, 779, 703, 736, 710, 706, 717, 713, 691, 763, 727, 731, 744, 716, 730, 764, 733, 731, 706, 734, 738, 716, 739, 749, 691, 692, 677, 676, 721, 702, 723, 733, 724, 732, 694, 688, 668, 678, 737, 720, 753, 668, 691, 693, 785, 769, 689, 723, 705, 749, 703, 704, 757, 711, 692, 724, 700, 677, 768, 744, 764, 714, 701, 763, 713, 756, 709, 722, 700, 775, 723, 749, 707, 761, 691, 709, 738, 742, 656, 745, 708, 706, 683, 733, 697, 677, 689, 693, 724, 660, 675, 704, 697, 672, 714, 665, 686, 736, 685, 670, 695, 710, 688, 698, 691, 694, 688, 658, 663, 692, 683, 679, 685, 681, 718, 680, 657, 673, 673, 676, 681, 702, 695, 663, 703, 733, 660, 682, 712, 717, 678, 712, 714, 687, 689, 714, 710, 711, 659, 692, 710, 678, 694, 674, 692, 646, 664, 705, 662, 676, 696, 663, 644, 720, 711, 682, 710, 740, 711, 731, 702, 696, 713, 717, 725, 656, 730, 676, 674, 709, 675, 708, 663, 707, 688, 631, 704, 674, 711, 701, 740, 656, 699, 689, 661, 640, 692, 651, 691, 737, 688, 665, 690, 667, 686, 660, 676, 664, 697, 658, 685, 675, 653, 679, 649, 698, 667, 709, 721, 671, 719, 636, 691, 667, 680, 657, 694, 671, 667, 721, 693, 683, 684, 710, 670, 656, 727, 768, 731, 775, 759, 763, 754, 741, 759, 818, 823, 835, 1005, 986, 1035, 997, 1065, 1130, 1213, 1291, 1298, 1360, 1435, 1550, 1614, 1631, 1739, 1741, 1842, 1921, 2004, 2059, 2009, 2089, 2044, 2073, 2072, 2034, 2133, 1956, 1980, 1947, 1948, 1849, 1728, 1739, 1634, 1632, 1494, 1502, 1389, 1338, 1325, 1177, 1152, 1067, 1054, 1011, 951, 946, 895, 831, 792, 801, 772, 761, 740, 730, 689, 715, 708, 673, 685, 708, 682, 661, 715, 705, 644, 610, 653, 665, 661, 650, 675, 628, 638, 655, 651, 633, 662, 653, 633, 666, 651, 654, 618, 602, 648, 698, 686, 638, 632, 596, 609, 583, 644, 670, 637, 636, 659, 635, 642, 637, 631, 696, 697, 628, 651, 641, 675, 639, 638, 691, 670, 699, 644, 644, 629, 661, 610, 643, 661, 651, 679, 663, 680, 683, 652, 671, 691, 657, 666, 637, 720, 676, 716, 731, 721, 736, 711, 711, 791, 816, 742, 769, 789, 750, 785, 790, 792, 787, 801, 844, 841, 831, 836, 822, 857, 834, 866, 834, 790, 770, 774, 816, 732, 806, 747, 753, 740, 757, 705, 750, 686, 720, 696, 676, 759, 617, 655, 684, 668, 645, 651, 637, 665, 623, 647, 646, 640, 643, 633, 617, 652, 574, 623, 639, 643, 606, 619, 654, 615, 658, 637, 606, 627, 648, 670, 678, 656, 635, 646, 673, 639, 605, 709, 639, 673, 649, 655, 700, 674, 659, 637, 664, 729, 690, 689, 704, 717, 707, 706, 706, 708, 720, 760, 723, 748, 733, 741, 713, 709, 751, 640, 717, 707, 724, 730, 723, 702, 704, 666, 734, 661, 663, 664, 637, 648, 661, 674, 664, 679, 623, 661, 669, 598, 651, 625, 677, 664, 628, 637, 663, 627, 634, 635, 630, 606, 641, 651, 633, 598, 627, 605, 597, 623, 610, 669, 619, 644, 643, 587, 615, 621, 647, 659, 664, 632, 659, 613, 629, 634, 627, 599, 621, 616, 651, 651, 672, 615, 633, 640, 656, 636, 676, 703, 690, 724, 728, 681, 648, 768, 780, 778, 850, 793, 902, 864, 925, 965, 967, 1111, 1083, 1129, 1204, 1290, 1373, 1382, 1421, 1487, 1555, 1609, 1630, 1674, 1821, 1879, 1868, 1969, 1943, 2013, 2076, 1985, 1953, 2079, 1937, 1968, 1954, 1911, 1895, 1813, 1740, 1730, 1671, 1587, 1620, 1472, 1433, 1397, 1349, 1309, 1265, 1150, 1137, 1022, 1072, 969, 932, 859, 847, 797, 853, 786, 764, 735, 712, 764, 738, 711, 694, 672, 657, 662, 636, 653, 641, 630, 670, 625, 665, 654, 644, 625, 656, 684, 629, 615, 633, 628, 642, 664, 641, 612, 626, 641, 602, 627, 590, 671, 646, 631, 661, 645, 611, 595, 600, 631, 629, 644, 612, 599, 660, 605, 666, 641, 626, 671, 673, 651, 691, 702, 642, 681, 695, 724, 740, 787, 743, 737, 785, 863, 855, 896, 935, 919, 1062, 959, 1020, 966, 1103, 1060, 1126, 1109, 1146, 1196, 1163, 1209, 1191, 1249, 1276, 1233, 1238, 1248, 1233, 1256, 1225, 1163, 1182, 1126, 1144, 1177, 1091, 1081, 1072, 1039, 955, 990, 923, 980, 947, 856, 858, 869, 827, 782, 765, 778, 710, 755, 719, 733, 730, 713, 665, 686, 701, 730, 715, 703, 723, 750, 738, 809, 774, 742, 800, 757, 799, 817, 744, 802, 765, 796, 750, 824, 797, 814, 834, 743, 826, 725, 796, 705, 744, 765, 735, 692, 802, 771, 695, 759, 669, 698, 667, 735, 680, 623, 652, 679, 651, 678, 600, 663, 681, 653, 626, 649, 607, 652, 644, 644, 597, 598, 604, 600, 622, 645, 657, 608, 623, 614, 632, 613, 653, 604, 633, 642, 610, 633, 629, 572, 642, 604, 613, 679, 616, 594, 674, 653, 636, 655, 693, 662, 656, 628, 690, 629, 615, 652, 609, 652, 603, 687, 627, 638, 652, 638, 605, 585, 660, 654, 652, 638, 634, 591, 622, 636, 676, 610, 571, 622, 647, 609, 622, 623, 643, 588, 631, 596, 615, 616, 648, 646, 623, 666, 642, 633, 641, 634, 627, 713, 668, 628, 671, 691, 685, 684, 713, 697, 717, 687, 710, 675, 696, 706, 644, 668, 712, 680, 665, 693, 686, 657, 694, 668, 692, 680, 688, 741, 714, 691, 717, 720, 684, 654, 650, 673, 685, 662, 655, 625, 664, 701, 673, 643, 664, 616, 648, 651, 659, 658, 642, 592, 600, 639, 623, 626, 626, 703, 604, 606, 600, 597, 651, 638, 653, 617, 680, 669, 613, 653, 591, 611, 670, 630, 620, 587, 633, 625, 575, 616, 604, 651, 631, 597, 622, 692, 675, 629, 639, 645, 646, 603, 660, 634, 629, 609, 600, 592, 626, 640, 635, 587, 649, 652, 610, 646, 644, 658, 646, 683, 630, 617, 659, 643, 592, 662, 616, 605, 656, 606, 633, 629, 642, 648, 613, 551, 658, 627, 649, 700, 627, 629, 636, 671, 637, 620, 654, 658, 620, 589, 650, 652, 610, 668, 625, 614, 641, 606, 632, 632, 627, 612, 654, 578, 696, 613, 605, 643, 660, 651, 652, 658, 676, 656, 642, 654, 659, 635, 665, 631, 608, 635, 654, 641, 679, 641, 673, 699, 661, 724, 669, 681, 685, 703, 690, 665, 689, 708, 745, 760, 695, 697, 733, 737, 767, 723, 774, 729, 742, 768, 765, 705, 826, 783, 794, 803, 792, 812, 786, 820, 844, 762, 816, 799, 835, 810, 838, 799, 800, 783, 754, 758, 798, 785, 736, 782, 777, 803, 726, 714, 719, 787, 730, 714, 752, 715, 723, 761, 675, 674, 654, 657, 704, 633, 662, 739, 626, 709, 709, 658, 708, 689, 662, 691, 641, 685, 700, 674, 633, 659, 681, 726, 732, 665, 680, 702, 706, 678, 730, 687, 668, 709, 680, 702, 668, 670, 695, 723, 702, 703, 722, 678, 708, 672, 702, 724, 691, 683, 672, 738, 694, 703, 725, 665, 687, 667, 669, 675, 688, 686, 713, 682, 672, 673, 677, 702, 704, 688, 703, 662, 706, 664, 712, 666, 785, 735, 691, 698, 710, 706, 695, 722, 676, 691, 635, 668, 709, 693, 743, 728, 692, 690, 721, 683, 673, 685, 686, 700, 703, 684, 699, 753, 708, 711, 725, 693, 680, 720, 791, 773, 688, 701, 693, 691, 709, 757, 754, 721, 736, 750, 725, 722, 707, 734, 744, 753, 720, 731, 762, 739, 752, 736, 760, 747, 729, 701, 725, 705, 761, 768, 724, 699, 738, 777, 710, 765, 748, 705, 747, 742, 678, 750, 705, 798, 752, 747, 772, 716, 783, 709, 721, 722, 799, 745, 688, 757, 717, 712, 751, 728, 724, 792, 762, 780, 707, 744, 754, 762, 699, 789, 757, 772, 728, 682, 755, 734, 723, 783, 755, 752, 766, 765, 750, 725, 796, 726, 728, 756, 757, 789, 756, 764, 770, 788, 798, 766, 773, 790, 805, 748, 765, 763, 713, 731, 760, 734, 775, 779, 751, 774, 774, 801, 775, 828, 770, 779, 809, 822, 772, 773, 828, 767, 822, 797, 805, 794, 827, 797, 850, 802, 856, 820, 800, 847, 828, 771, 880, 786, 814, 836, 800, 856, 813, 863, 800, 739, 781, 760, 825, 862, 799, 828, 788, 824, 795, 779, 790, 768, 769, 780, 821, 770, 784, 834, 788, 826, 813, 790, 855, 787, 810, 851, 803, 807, 845, 862, 825, 852, 820, 852, 855, 876, 850, 838, 845, 797, 869, 800, 873, 863, 808, 824, 819, 786, 876, 837, 845, 827, 842, 835, 858, 816, 862, 812, 847, 846, 854, 820, 836, 855, 871, 859, 889, 852, 870, 904, 892, 799, 867, 860, 853, 876, 844, 848, 895, 854, 849, 869, 838, 874, 815, 893, 856, 911, 841, 830, 891, 876, 902, 900, 845, 873, 938, 897, 939, 916, 920, 932, 880, 916, 984, 968, 952, 908, 958, 1025, 936, 1025, 1017, 986, 966, 991, 942, 977, 1035, 1117, 1069, 1024, 1010, 1025, 1040, 1044, 1023, 1023, 1021, 1054, 1055, 1053, 1093, 1044, 995, 1133, 1057, 1044, 1044, 1046, 1048, 1030, 988, 996, 1056, 1036, 961, 986, 995, 1018, 986, 977, 1023, 948, 968, 1016, 975, 954, 1041, 948, 948, 975, 968, 972, 909, 927, 973, 986, 1009, 953, 894, 919, 1005, 994, 915, 935, 963, 955, 945, 912, 949, 964, 997, 935, 1000, 954, 1010, 1029, 997, 1008, 1068, 1051, 996, 984, 1021, 1009, 1029, 1004, 1025, 1003, 984, 1041, 1081, 1009, 1098, 1027, 948, 987, 976, 1082, 1039, 997, 1041, 1049, 1066, 1050, 1039, 1044, 1053, 1049, 1094, 1013, 1065, 1062, 994, 1107, 996, 1056, 1030, 1061, 1057, 1092, 997, 1028, 1067, 1062, 1013, 1033, 1052, 1098, 1104, 1095, 1094, 1141, 1077, 1060, 1159, 1119, 1115, 1086, 1059, 1116, 1088, 1089, 1118, 1114, 1107, 1072, 1150, 1121, 1106, 1149, 1106, 1109, 1120, 1098, 1148, 1105, 1173, 1091, 1129, 1122, 1174, 1108, 1117, 1147, 1139, 1155, 1145, 1140, 1219, 1162, 1160, 1182, 1165, 1140, 1166, 1181, 1173, 1158, 1162, 1213, 1199, 1170, 1234, 1266, 1170, 1263, 1263, 1204, 1182, 1227, 1266, 1268, 1224, 1225, 1215, 1209, 1179, 1295, 1269, 1277, 1236, 1289, 1243, 1238, 1249, 1279, 1289, 1315, 1333, 1241, 1250, 1229, 1289, 1279, 1320, 1238, 1252, 1332, 1262, 1336, 1345, 1250, 1262, 1377, 1325, 1302, 1297, 1370, 1378, 1357, 1333, 1350, 1360, 1319, 1308, 1411, 1330, 1354, 1414, 1359, 1400, 1383, 1439, 1418, 1436, 1398, 1430, 1454, 1426, 1409, 1456, 1409, 1474, 1449, 1485, 1443, 1425, 1439, 1505, 1504, 1471, 1396, 1523, 1468, 1495, 1473, 1537, 1576, 1445, 1525, 1655, 1563, 1516, 1570, 1538, 1525, 1585, 1574, 1637, 1578, 1708, 1607, 1622, 1642, 1610, 1623, 1633, 1647, 1642, 1684, 1736, 1733, 1702, 1629, 1669, 1707, 1775, 1709, 1706, 1740, 1755, 1767, 1814, 1755, 1854, 1802, 1759, 1827, 1784, 1774, 1867, 1848, 1864, 1865, 1892, 1914, 1997, 1908, 1964, 1947, 1984, 1977, 1981, 1953, 1933, 1954, 1960, 1934, 2058, 2018, 2156, 2045, 2025, 2025, 2083, 2038, 2089, 2025, 2073, 2123, 2117, 2153, 2198, 2064, 2101, 2055, 2091, 2189, 2088, 2148, 2081, 2195, 2172, 2294, 2144, 2220, 2197, 2313, 2268, 2224, 2218, 2303, 2248, 2264, 2261, 2329, 2335, 2393, 2381, 2433, 2378, 2449, 2455, 2446, 2534, 2433, 2469, 2466, 2522, 2491, 2588, 2552, 2584, 2737, 2689, 2607, 2610, 2684, 2747, 2827, 2714, 2732, 2772, 2844, 2909, 2798, 2776, 2832, 2753, 2887, 2878, 2949, 2893, 3019, 2820, 2916, 2957, 3053, 3066, 3060, 3059, 3094, 3128, 3126, 3196, 3211, 3155, 3264, 3226, 3327, 3256, 3221, 3285, 3362, 3446, 3471, 3403, 3492, 3413, 3539, 3577, 3592, 3553, 3648, 3636, 3744, 3901, 3660, 3833, 3819, 3714, 3836, 3771, 3917, 3983, 3942, 4015, 3959, 4082, 4102, 4017, 4136, 4076, 4261, 4120, 4268, 4257, 4336, 4300, 4407, 4460, 4342, 4491, 4486, 4531, 4579, 4611, 4669, 4729, 4787, 4766, 4709, 4808, 4802, 4876, 4868, 4962, 4966, 4986, 5175, 5021, 5095, 5188, 5345, 5350, 5364, 5476, 5337, 5581, 5527, 5460, 5647, 5559, 5686, 5681, 5648, 5820, 5898, 5878, 5979, 5901, 6168, 6189, 6313, 6249, 6222, 6484, 6518, 6642, 6644, 6669, 6778, 6750, 6920, 6861, 6899, 7020, 7151, 7081, 7122, 7416, 7303, 7388, 7365, 7679, 7603, 7613, 7842, 7699, 8019, 7973, 8235, 8200, 8281, 8402, 8601, 8460, 8833, 8571, 8692, 9019, 9023, 8969, 9253, 9266, 9322, 9456, 9451, 9524, 9763, 9611, 9908, 9825, 10099, 10333, 10281, 10177, 10679, 10659, 10550, 10984, 10935, 11036, 11385, 11162, 11383, 11618, 11663, 11585, 11871, 12083, 12288, 12329, 12314, 12460, 12725, 12811, 12728, 12895, 13101, 13295, 13215, 13436, 13578, 13882, 13804, 13954, 14118, 14534, 14269, 14492, 14691, 15214, 15143, 15276, 15191, 15473, 15381, 16121, 15926, 16080, 16383, 16369, 16669, 16775, 17005, 17176, 17364, 17506, 17313, 17772, 18018, 18063, 18345, 18645, 18510, 18613, 18666, 19021, 19256, 19262, 19602, 19722, 19837, 20367, 20175, 20382, 20591, 21224, 20954, 21352, 21417, 21818, 21730, 21818, 22236, 22448, 22658, 22872, 22985, 23225, 23345, 23224, 23829, 23597, 24343, 24305, 24894, 24947, 24926, 25157, 25108, 25444, 25758, 26225, 26086, 26377, 26872, 26718, 26907, 27227, 27696, 27550, 28054, 28525, 28777, 28606, 28948, 29245, 30047, 29980, 30402, 30441, 30745, 31019, 31206, 31872, 32073, 32652, 32828, 33135, 33941, 33749, 34397, 34720, 35335, 35516, 36618, 36720, 37062, 37753, 37738, 38391, 38672, 39453, 40147, 40680, 41330, 42148, 42522, 43344, 44168, 44223, 45331, 46043, 46791, 47671, 48333, 49289, 49903, 51222, 51560, 52431, 53736, 54771, 55395, 56635, 57975, 58783, 60063, 60750, 61850, 63949, 64524, 66027, 67355, 68215, 69511, 71452, 73013, 74444, 75571, 76238, 79146, 80068, 81760, 83112, 84831, 86806, 88632, 90280, 91901, 93533, 95441, 97575, 99642, 101866, 103228, 105327, 107246, 109348, 110982, 113256, 114470, 116477, 119976, 121808, 123670, 125575, 127906, 130328, 132476, 134753, 136925, 139384, 141561, 143657, 145857, 148049, 150543, 153260, 154869, 157941, 159987, 162128, 163216, 166002, 167884, 170192, 172410, 174683, 176952, 178989, 180739, 183088, 184708, 187639, 189788, 191423, 192987, 195502, 198045, 199719, 201800, 203411, 204561, 207381, 208405, 210033, 212865, 213959, 215201, 217614, 219259, 221249, 222239, 224177, 225447, 226987, 227702, 229150, 230496, 232469, 233817, 234412, 236205, 236803, 238421, 238962, 240226, 241669, 241824, 242859, 243658, 245650, 246878, 246729, 247924, 248210, 249838, 250762, 251332, 252317, 252520, 253667, 253396, 255385, 254988, 255212, 255936, 255799, 256411, 257605, 257719, 259053, 258208, 259030, 260503, 260067, 259733, 259796, 260924, 260529, 262075, 262557, 262779, 262415, 263262, 263189, 263750, 263286, 265314, 264042, 264191, 263947, 264504, 264273, 265335, 265568, 266235, 266296, 266421, 266333, 266965, 267299, 266914, 267166, 267118, 268350, 267663, 268481, 267895, 268755, 269184, 268584, 268336, 268552, 268570, 269838, 269813, 270625, 269490, 270311, 270829, 270661, 270529, 271254, 270882, 271465, 271017, 270834, 271212, 271413, 271857, 270654, 271473, 271121, 271611, 271897, 271644, 272146, 271307, 272256, 271444, 271757, 271407, 271547, 270708, 271491, 272015, 271209, 272718, 272068, 271375, 271710, 272534, 272797, 274333, 275660, 275904, 276898, 277759, 278410, 279550, 280296, 282327, 283723, 284303, 287093, 288717, 291369, 293479, 296775, 298356, 301099, 304809, 308338, 311443, 313742, 317597, 320110, 324262, 327865, 330656, 335376, 337837, 342973, 345263, 349940, 352960, 356077, 360416, 363829, 365909, 368587, 370809, 373249, 374398, 378233, 378810, 380148, 379176, 379984, 380034, 378243, 377946, 375696, 373009, 371077, 367440, 363704, 358748, 355539, 349671, 342747, 337626, 329740, 322916, 316544, 307674, 298949, 290912, 281870, 272057, 263412, 252135, 243550, 234322, 223598, 214332, 203807, 194059, 183850, 175173, 164878, 156012, 146495, 137792, 129625, 121198, 113402, 106373, 98799, 91440, 84968, 78996, 73211, 67922, 62790, 57697, 53508, 49114, 45713, 42338, 38837, 35803, 32816, 30135, 28336, 26038, 23989, 22505, 21071, 19508, 18114, 16954, 16045, 15068, 13857, 13587, 12614, 12059, 11410, 11164, 10623, 10206, 9783, 9372, 9353, 8887, 8509, 8395, 8072, 7931, 7629, 7300, 7170, 6961, 6916, 6669, 6646, 6267, 6354, 6110, 5962, 5747, 5646, 5451, 5519, 5323, 5179, 5088, 4765, 4766, 4712, 4638, 4377, 4294, 4275, 4118, 3982, 3890, 3945, 3900, 3591, 3550, 3424, 3531, 3305, 3283, 3178, 3084, 2925, 2923, 2899, 2769, 2737, 2674, 2699, 2541, 2485, 2393, 2334, 2243, 2208, 2220, 2141, 2043, 2025, 1928, 1967, 1877, 1818, 1755, 1715, 1631, 1620, 1681, 1596, 1492, 1528, 1487, 1438, 1357, 1397, 1310, 1354, 1289, 1263, 1221, 1178, 1206, 1139, 1187, 1115, 1109, 1054, 1109, 1063, 1034, 1072, 1006, 1009, 921, 983, 979, 929, 931, 914, 908, 832, 866, 881, 855, 806, 812, 828, 827, 795, 792, 740, 806, 761, 732, 746, 734, 725, 725, 705, 701, 720, 713, 645, 679, 656, 657, 655, 629, 649, 629, 604, 625, 641, 641, 539, 612, 599, 578, 579, 551, 567, 551, 563, 555, 537, 522, 537, 567, 524, 551, 536, 520, 542, 523, 489, 501, 515, 547, 516, 458, 473, 456, 446, 478, 475, 475, 485, 482, 492, 471, 436, 455, 431, 464, 455, 423, 438, 401, 441, 447, 416, 432, 442, 432, 407, 425, 433, 404, 409, 380, 406, 401, 386, 396, 385, 400, 417, 428, 406, 386, 372, 365, 333, 360, 379, 363, 372, 363, 364, 385, 393, 384, 370, 357, 369, 385, 351, 354, 351, 342, 350, 335, 355, 352, 344, 337, 365, 351, 310, 332, 363, 334, 345, 303, 317, 346, 311, 325, 301, 275, 334, 312, 332, 316, 319, 307, 290, 332, 290, 299, 316, 297, 314, 277, 327, 324, 321, 301, 300, 304, 301, 291, 300, 301, 258, 290, 270, 282, 292, 283, 265, 280, 311, 250, 310, 256, 285, 298, 282, 318, 256, 315, 276, 274, 289, 241, 277, 251, 270, 272, 252, 266, 269, 268, 272, 265, 285, 244, 246, 258, 263, 258, 239, 254, 255, 245, 231, 235, 223, 251, 246, 247, 239, 252, 232, 253, 248, 222, 237, 246, 214, 250, 264, 233, 255, 269, 254, 266, 242, 214, 243, 208, 256, 273, 286, 272, 257, 246, 249, 247, 275, 255, 253, 280, 285, 257, 259, 305, 289, 269, 270, 281, 249, 276, 274, 289, 285, 286, 276, 270, 269, 275, 260, 264, 274, 243, 273, 232, 240, 238, 241, 248, 236, 205, 202, 191, 193, 175, 202, 183, 175, 189, 155, 163, 153, 131, 157, 114, 141, 120, 118, 120, 126, 117, 105, 102, 98, 99, 91, 116, 95, 89, 94, 85, 92, 82, 104, 94, 90, 84, 77, 82, 85, 75, 87, 83, 81, 87, 73, 61, 66, 89, 73, 68, 83, 82, 75, 67, 80, 77, 91, 80, 70, 76, 82, 68, 73, 76, 73, 68, 64, 69, 61, 72, 63, 65, 78, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 4, 4, 10, 16, 29, 64, 107, 158, 288, 494, 828, 1180, 1837, 2882, 4314, 6147, 9097, 12703, 17768, 24613, 33194, 44596, 58721, 76029, 99131, 126740, 159807, 200691, 248441, 305914, 373841, 452568, 541955, 641280, 750045, 869434, 994871, 1119786, 1247348, 1367476, 1480473, 1578506, 1658468, 1716573, 1744018, 1749673, 1725983, 1684366, 1611891, 1518644, 1409395, 1287358, 1159633, 1029417, 897705, 771894, 653432, 544623, 447022, 360940, 287478, 225601, 173560, 131846, 98989, 73083, 53459, 38381, 27241, 19020, 13170, 9013, 6184, 4128, 2969, 1963, 1390, 982, 758, 531, 440, 372, 290, 303, 250, 240, 195, 195, 211, 215, 175, 125, 110, 116, 106, 81, 75, 68, 60, 103, 182, 200, 236, 223, 237, 265, 288, 465, 737, 1281, 2175, 3788, 6092, 8730, 11426, 13220, 13670, 13768, 13649, 13379, 13310, 13350, 13249, 13101, 12706, 12805, 12720, 12547, 12392, 12502, 12179, 12250, 12118, 12096, 11978, 11907, 11748, 11802, 11670, 11454, 11574, 11498, 11513, 11411, 11321, 11412, 11410, 11363, 11273, 11189, 11384, 11416, 11285, 11499, 11201, 11272, 11032, 11202, 11114, 11134, 10938, 11132, 10996, 10718, 10642, 10517, 10464, 10595, 10320, 10273, 10252, 10203, 10113, 9901, 9880, 9891, 9624, 9707, 9639, 9406, 9649, 9659, 9659, 9434, 9452, 9364, 9542, 9461, 9592, 9515, 9759, 9742, 9701, 9856, 9973, 10089, 10239, 10305, 10555, 11007, 11156, 11447, 11678, 12397, 12818, 13350, 13954, 14970, 15735, 16614, 17816, 18636, 19787, 20934, 21836, 22968, 23626, 24833, 25096, 25777, 25863, 26170, 25824, 25979, 25205, 24363, 23855, 22861, 21646, 20701, 19362, 18306, 17100, 15956, 14900, 14080, 13101, 12261, 11598, 11138, 10650, 10247, 9874, 9781, 9287, 9208, 9316, 9187, 9180, 8997, 9151, 9099, 9128, 9272, 9420, 9429, 9476, 9317, 9421, 9443, 9362, 9310, 9250, 9283, 9034, 9135, 8882, 8629, 8675, 8530, 8340, 8370, 8290, 7975, 7707, 7886, 7709, 7637, 7616, 7537, 7555, 7372, 7304, 7286, 7160, 7213, 7269, 7131, 7349, 7288, 7456, 7251, 7361, 7446, 7463, 7621, 7648, 7417, 7781, 7767, 7848, 7920, 8030, 7875, 8069, 8186, 8184, 8267, 8296, 8321, 8425, 8480, 8448, 8445, 8591, 8642, 8679, 8789, 8542, 8844, 8735, 8793, 8579, 8666, 8856, 8700, 8682, 8660, 8628, 8294, 8422, 8286, 8336, 8282, 8162, 8045, 7948, 7858, 7900, 7704, 7475, 7756, 7436, 7428, 7505, 7456, 7209, 7186, 7141, 7245, 7099, 6976, 7028, 7130, 6914, 6978, 6988, 6993, 6885, 7117, 7230, 7154, 7398, 7582, 7744, 8194, 8516, 8813, 9079, 9917, 10568, 11575, 12589, 13543, 14996, 16614, 18241, 20077, 22570, 24924, 27433, 30425, 33556, 37259, 40277, 44178, 47892, 51473, 55052, 58382, 62534, 65332, 68449, 71107, 73620, 75444, 77938, 79312, 79646, 80515, 81661, 80840, 80208, 79637, 79363, 76947, 76059, 74392, 72141, 70407, 67941, 65879, 63852, 61397, 58759, 55779, 53777, 50352, 47962, 44782, 42798, 40410, 38115, 35243, 33130, 31459, 29783, 28056, 26557, 25892, 25179, 24447, 23963, 23968, 24240, 25020, 25448, 26337, 27424, 28702, 29786, 30725, 32353, 33759, 35103, 36326, 37400, 38431, 38939, 39849, 40340, 40050, 40040, 39823, 39263, 38493, 37355, 36755, 35483, 34458, 32699, 31769, 30424, 28879, 28109, 26426, 25422, 24367, 23787, 22963, 21870, 20931, 20873, 19757, 19593, 19032, 18886, 18711, 18529, 18528, 18811, 19230, 19377, 19922, 20733, 21358, 22615, 23977, 25235, 26780, 28497, 30713, 33190, 34887, 37620, 40406, 43114, 45655, 48212, 51158, 53069, 54997, 57602, 58686, 59788, 60990, 61988, 61031, 60828, 59849, 59179, 57663, 55930, 53934, 51910, 49519, 47047, 44410, 42238, 40155, 37989, 35499, 33355, 31780, 30279, 29523, 28238, 27533, 26751, 26382, 26628, 26617, 27486, 28492, 29988, 31837, 34702, 37563, 41864, 47041, 53122, 60330, 69204, 79658, 91381, 107139, 123914, 144351, 166626, 192553, 222730, 254976, 291033, 332087, 375636, 423283, 473587, 525964, 578263, 633734, 688930, 743175, 795173, 842888, 886490, 927162, 962779, 987298, 1004509, 1015055, 1016175, 1008413, 991796, 966764, 934374, 896107, 850721, 803217, 751100, 695191, 637111, 581120, 525740, 470415, 419694, 372984, 328252, 286899, 251924, 220243, 193167, 169514, 149956, 134179, 121820, 112715, 105688, 101328, 98351, 97117, 96564, 96865, 98310, 99507, 100845, 101677, 102454, 102388, 102591, 101956, 100452, 98162, 95518, 91507, 87606, 83323, 78730, 73172, 67576, 62544, 57181, 51945, 47069, 42121, 37473, 33509, 29405, 25684, 22540, 19677, 17155, 14838, 13002, 11505, 10172, 9045, 7870, 7227, 6531, 5972, 5471, 5255, 4940, 4764, 4488, 4308, 4198, 4065, 3904, 3803, 3794, 3708, 3664, 3686, 3564, 3550, 3561, 3619, 3483, 3610, 3476, 3572, 3713, 3658, 3625, 3773, 3937, 4107, 4184, 4291, 4355, 4621, 4592, 4895, 4951, 5052, 5379, 5582, 5600, 5707, 5801, 6292, 6092, 6236, 6095, 6308, 6385, 6270, 6232, 6171, 6114, 5840, 5707, 5680, 5465, 5389, 5076, 4861, 4783, 4629, 4378, 4245, 4111, 4025, 3856, 3641, 3604, 3460, 3449, 3277, 3321, 3230, 3250, 3117, 3157, 3078, 3011, 3160, 2991, 3028, 3007, 2936, 3029, 2952, 2839, 2905, 2912, 2988, 2984, 2810, 2953, 2921, 2922, 2804, 2880, 2920, 2890, 2800, 2874, 2787, 2870, 2836, 2980, 2843, 2888, 2855, 2859, 2863, 2816, 2855, 2813, 2956, 2828, 3003, 2908, 2876, 2981, 2910, 2906, 3029, 3021, 2960, 2995, 3014, 2996, 2960, 3038, 3094, 3057, 3177, 3180, 3122, 3249, 3169, 3314, 3181, 3328, 3258, 3269, 3301, 3333, 3378, 3317, 3275, 3343, 3246, 3329, 3237, 3239, 3210, 3161, 3083, 3122, 3079, 3078, 3069, 2993, 3062, 2949, 2832, 2932, 2982, 2971, 2885, 2912, 2875, 2743, 2746, 2829, 2939, 2767, 2851, 2877, 2852, 2851, 2723, 2817, 2822, 2734, 2733, 2827, 2765, 2817, 2827, 2844, 2862, 2750, 2831, 2942, 2854, 2873, 2816, 2819, 2763, 2859, 2870, 2848, 2818, 2827, 2826, 2937, 2846, 2760, 2857, 2872, 2886, 2793, 2894, 2850, 2850, 2853, 2904, 2846, 2885, 2847, 2891, 2745, 2972, 2990, 2890, 2873, 2875, 2953, 2890, 2886, 2974, 2807, 2985, 2844, 2921, 2983, 2899, 2929, 3060, 2903, 2887, 2921, 3057, 2984, 3039, 2989, 3069, 3010, 3135, 2961, 2963, 3041, 2980, 2918, 3004, 2945, 3038, 3034, 3073, 3074, 2913, 3097, 3114, 2976, 2987, 3073, 3056, 3103, 3044, 3023, 3142, 2927, 3165, 3132, 3090, 3159, 3147, 3231, 3122, 3236, 3218, 3129, 3199, 3105, 3218, 3125, 3105, 3122, 3081, 3165, 3155, 3027, 3225, 3169, 3071, 3145, 3111, 3092, 3230, 3231, 3113, 3106, 3137, 3187, 3167, 3098, 3058, 3101, 3213, 3166, 3118, 3151, 3167, 3127, 3244, 3202, 3163, 3224, 3255, 3167, 3227, 3257, 3247, 3365, 3285, 3275, 3344, 3361, 3421, 3342, 3459, 3497, 3384, 3541, 3489, 3509, 3600, 3682, 3675, 3781, 3763, 3777, 3752, 3892, 4046, 4101, 4122, 4309, 4380, 4553, 4553, 4788, 4966, 5102, 5535, 5591, 6004, 6508, 7062, 7668, 8407, 9440, 10454, 12092, 13689, 15563, 17969, 20920, 24228, 27997, 32351, 38048, 43653, 50214, 57849, 66725, 76908, 86901, 99465, 112927, 127487, 142702, 159748, 176783, 195443, 214172, 235092, 253430, 273409, 293254, 312534, 330815, 347610, 364479, 378811, 390794, 401689, 408998, 414951, 417769, 416643, 415174, 408392, 401962, 391064, 378985, 363739, 348147, 330463, 311465, 292914, 271956, 251601, 231402, 211001, 192743, 173100, 153637, 137916, 121884, 107418, 94949, 81751, 70709, 60871, 52417, 44725, 38264, 31791, 27454, 22969, 19213, 16764, 14215, 12244, 10523, 9254, 8138, 7215, 6561, 5953, 5587, 5352, 5125, 5270, 4912, 4933, 4898, 5084, 4932, 5103, 5102, 5234, 5390, 5436, 5637, 5799, 5962, 6358, 6510, 6887, 7312, 7786, 8456, 8858, 9433, 10244, 11195, 12269, 13502, 14707, 15873, 17558, 19051, 21120, 22852, 24788, 27362, 29656, 32269, 34860, 36971, 39586, 42216, 44887, 47359, 49608, 52101, 54236, 56055, 57510, 58976, 60040, 60826, 60897, 61515, 60421, 59394, 58974, 57618, 55945, 54374, 52399, 49047, 46831, 44919, 41989, 39667, 36500, 33361, 31045, 28516, 26357, 23630, 21213, 19264, 17244, 15233, 13678, 12182, 10827, 9515, 8522, 7440, 6626, 6086, 5499, 4865, 4319, 4031, 3809, 3530, 3407, 3221, 2910, 2904, 2732, 2676, 2611, 2526, 2454, 2459, 2470, 2501, 2421, 2423, 2408, 2304, 2330, 2314, 2266, 2333, 2295, 2326, 2310, 2334, 2227, 2317, 2286, 2327, 2294, 2250, 2254, 2173, 2265, 2220, 2313, 2288, 2181, 2282, 2298, 2155, 2244, 2298, 2223, 2250, 2247, 2256, 2144, 2329, 2240, 2180, 2241, 2214, 2160, 2298, 2264, 2148, 2333, 2152, 2345, 2284, 2327, 2174, 2292, 2275, 2208, 2282, 2216, 2315, 2232, 2228, 2236, 2146, 2199, 2288, 2242, 2219, 2265, 2219, 2211, 2229, 2205, 2286, 2195, 2256, 2228, 2157, 2154, 2250, 2152, 2212, 2221, 2200, 2225, 2273, 2128, 2194, 2283, 2321, 2301, 2241, 2209, 2235, 2194, 2238, 2174, 2378, 2255, 2318, 2265, 2356, 2282, 2354, 2251, 2175, 2188, 2240, 2259, 2295, 2189, 2251, 2217, 2291, 2331, 2376, 2348, 2296, 2234, 2353, 2420, 2368, 2486, 2500, 2447, 2439, 2599, 2618, 2634, 2724, 2763, 2769, 2816, 2893, 2908, 2947, 3042, 3057, 3158, 3192, 3244, 3224, 3436, 3401, 3438, 3503, 3454, 3496, 3555, 3512, 3517, 3619, 3459, 3583, 3517, 3451, 3376, 3329, 3426, 3358, 3278, 3274, 3209, 3139, 3181, 3145, 3086, 3038, 3162, 3122, 3115, 3032, 3215, 3116, 3098, 3215, 3214, 3238, 3361, 3276, 3501, 3459, 3519, 3648, 3890, 3779, 3839, 3944, 4122, 4023, 4171, 4338, 4272, 4380, 4488, 4407, 4508, 4413, 4430, 4388, 4600, 4485, 4511, 4225, 4445, 4337, 4207, 4104, 4098, 4034, 3967, 3787, 3795, 3632, 3611, 3555, 3370, 3243, 3297, 3187, 3071, 3115, 2952, 2846, 2819, 2845, 2797, 2780, 2654, 2697, 2696, 2709, 2748, 2654, 2703, 2785, 2729, 2720, 2724, 2685, 2822, 2777, 2795, 2740, 2950, 2884, 3005, 3020, 3109, 3043, 3124, 3042, 3162, 3241, 3221, 3239, 3201, 3258, 3379, 3377, 3365, 3252, 3426, 3399, 3391, 3481, 3410, 3344, 3409, 3366, 3440, 3389, 3489, 3365, 3292, 3417, 3264, 3308, 3314, 3178, 3215, 3267, 3265, 3241, 3211, 3354, 3175, 3177, 3222, 3158, 3262, 3266, 3306, 3247, 3274, 3284, 3334, 3381, 3474, 3444, 3550, 3676, 3815, 3880, 4089, 4277, 4426, 4514, 4904, 5096, 5359, 5625, 6123, 6434, 6995, 7371, 7926, 8894, 9421, 10416, 11134, 12201, 13290, 14009, 15484, 16693, 17877, 19530, 20745, 22277, 23449, 25286, 26505, 28297, 29916, 31359, 32544, 34006, 35507, 36969, 37149, 38569, 39211, 40269, 40166, 40198, 40466, 40800, 40446, 40053, 39535, 38945, 38229, 36511, 35887, 34529, 32742, 31775, 29949, 28957, 27043, 25805, 24040, 23053, 21560, 19956, 18455, 17336, 16066, 14792, 13794, 12772, 12025, 11234, 10411, 9557, 8846, 8354, 7909, 7434, 7157, 6748, 6347, 6079, 5880, 5687, 5451, 5410, 5391, 5280, 5099, 5008, 4812, 4918, 4928, 4771, 4826, 4752, 4830, 4798, 4758, 4766, 4743, 4711, 4611, 4697, 4793, 4877, 4868, 4891, 5095, 5137, 5201, 5562, 5613, 5852, 6130, 6243, 6517, 7068, 7111, 7561, 7941, 8443, 8935, 9572, 9978, 10609, 11291, 11666, 12646, 12984, 13797, 14444, 14984, 15733, 16425, 17164, 17437, 18527, 18768, 19264, 19655, 20080, 20479, 20731, 20752, 20872, 21091, 20953, 21224, 20880, 20451, 20254, 19945, 19806, 19002, 18434, 17991, 17690, 16929, 16329, 15657, 15046, 14615, 14002, 13427, 12962, 12348, 12131, 11694, 11116, 10729, 10372, 10086, 9785, 9488, 9261, 9204, 9028, 9022, 9051, 8992, 9099, 9179, 9343, 9256, 9714, 9859, 10269, 10435, 10787, 11637, 11902, 12744, 13688, 14330, 15724, 17065, 18530, 20156, 22468, 24871, 27767, 30707, 34400, 38576, 43196, 48934, 55044, 62311, 69849, 78741, 88673, 99686, 111696, 124904, 139878, 157002, 173505, 192816, 212761, 234746, 259191, 283906, 309502, 336855, 366729, 395503, 425395, 457751, 489041, 521036, 552921, 583472, 613863, 645574, 670842, 697267, 722983, 744804, 766295, 784070, 798330, 810250, 816327, 820568, 820555, 818327, 812781, 802128, 789889, 772894, 752027, 730030, 703823, 679422, 650323, 619079, 587589, 554896, 524272, 490238, 456421, 424980, 392007, 361271, 332800, 302608, 275002, 250017, 224957, 201804, 180523, 161735, 143693, 127991, 113178, 99298, 87825, 77171, 68306, 59981, 52730, 46714, 41566, 36748, 32816, 29582, 26935, 25022, 23284, 21781, 20747, 19835, 19444, 19164, 19142, 18658, 18940, 18929, 19245, 19244, 19461, 20006, 20047, 20433, 20645, 20510, 21055, 21070, 21042, 21325, 21301, 21153, 21035, 20530, 20402, 20156, 19611, 19678, 19020, 18435, 17936, 17353, 16770, 16289, 15715, 15172, 14811, 14260, 13636, 13058, 12699, 12179, 12153, 11472, 11239, 11067, 10613, 10469, 10271, 10385, 9858, 10150, 9964, 10129, 10040, 10471, 10527, 10630, 10905, 11155, 11378, 11774, 12073, 12320, 12375, 12920, 13272, 13677, 13941, 14177, 14700, 14696, 15126, 15668, 15462, 15594, 16014, 15746, 15995, 15931, 16028, 15973, 15915, 15636, 15722, 15315, 15272, 14956, 14566, 14443, 14335, 13839, 13425, 13201, 12901, 12492, 12187, 11947, 11782, 11269, 11175, 10961, 10467, 10232, 10210, 10012, 9725, 9544, 9512, 9239, 9180, 9144, 9014, 8851, 8999, 8992, 8854, 8910, 8784, 8934, 8945, 9115, 9134, 9130, 9185, 9388, 9485, 9649, 9793, 10083, 10238, 10501, 10664, 11165, 11175, 11724, 11748, 12399, 12923, 13504, 14109, 14664, 15137, 16140, 16911, 17854, 18772, 20045, 21299, 22261, 23829, 25747, 27682, 29268, 31826, 34152, 36747, 39406, 42519, 45144, 48940, 52980, 56933, 60950, 65587, 70544, 75367, 80565, 86347, 92356, 98247, 105440, 113219, 120183, 129012, 136531, 146092, 155960, 166375, 176487, 188462, 200695, 214227, 226970, 241801, 257644, 272403, 289226, 307234, 324890, 341803, 361291, 380989, 399384, 418448, 437089, 454947, 475979, 492831, 510654, 525922, 541841, 553716, 565011, 576242, 584871, 591931, 597049, 599096, 601377, 598857, 595949, 590816, 584843, 576229, 564719, 552782, 539365, 526390, 508669, 491729, 474636, 457902, 440218, 421911, 403845, 385830, 368081, 353969, 336874, 319383, 305432, 291874, 278132, 266437, 255272, 245059, 234985, 226869, 220202, 213396, 206796, 201474, 197375, 193932, 191023, 187670, 186998, 185296, 183517, 183095, 183068, 182598, 182890, 183680, 184790, 184531, 185598, 184978, 186439, 185537, 185694, 185435, 184962, 183415, 182648, 179912, 178119, 175807, 172315, 168527, 165122, 161274, 156706, 151390, 145490, 141410, 135913, 129418, 123482, 117884, 111629, 105259, 99408, 93449, 87467, 82164, 76702, 71402, 66513, 61341, 57168, 52845, 48993, 45202, 42217, 38647, 35888, 33750, 31563, 29500, 27622, 26191, 24468, 23524, 22109, 21310, 20443, 19989, 19213, 18814, 18486, 18308, 17766, 17768, 17451, 17605, 17112, 17331, 17123, 16976, 17110, 16726, 16763, 16791, 16630, 16695, 16924, 17001, 17129, 17481, 17963, 18177, 18960, 19312, 20045, 21091, 22244, 23656, 25349, 27235, 29801, 31669, 34691, 38059, 41718, 45892, 50473, 55738, 61636, 67546, 74354, 81871, 89606, 98680, 107361, 117284, 127974, 137789, 148732, 161354, 173471, 185650, 197636, 211821, 223903, 235297, 249029, 260009, 272278, 283813, 294433, 305578, 313800, 322464, 329738, 336705, 340612, 345082, 347056, 348765, 348223, 346596, 343546, 340013, 334282, 328043, 320148, 311692, 302217, 292197, 281577, 269515, 257648, 244673, 232090, 219157, 206511, 192014, 179929, 167617, 155302, 143547, 132739, 121084, 111001, 100626, 91436, 82298, 74123, 66693, 60568, 53631, 47864, 42843, 38096, 33828, 29882, 26436, 23328, 20485, 18369, 15982, 14393, 13030, 11543, 10509, 9563, 8685, 8140, 7370, 7170, 6813, 6611, 6106, 6192, 6075, 6067, 5973, 6082, 6065, 6086, 6173, 6295, 6401, 6659, 6725, 6954, 7117, 7254, 7408, 7585, 7810, 8029, 8111, 8203, 8266, 8329, 8477, 8690, 8727, 8872, 8983, 8955, 8996, 9056, 9166, 9106, 9001, 8912, 8966, 9010, 9013, 8865, 8668, 8765, 8557, 8648, 8526, 8438, 8589, 8581, 8803, 8690, 8839, 9219, 9423, 9877, 10047, 10556, 11078, 11676, 12315, 13042, 14026, 15384, 16391, 18047, 19597, 21294, 23034, 24798, 27226, 29315, 32156, 34387, 37424, 40482, 43582, 47070, 50058, 53736, 57605, 61185, 64819, 67787, 71626, 75855, 79225, 82650, 86623, 89468, 92572, 94778, 97562, 99879, 101597, 103590, 104196, 105721, 106454, 106347, 106384, 105279, 104272, 103246, 102543, 99163, 97149, 94728, 91951, 89319, 86029, 82150, 79174, 75564, 71593, 68388, 64571, 60944, 57667, 54085, 51415, 48127, 44582, 41886, 39444, 36675, 34478, 32074, 30356, 28924, 27093, 25893, 24663, 23833, 23364, 22969, 22447, 22397, 22556, 22796, 22889, 23216, 24090, 24677, 25616, 26636, 27660, 28862, 30309, 31409, 32946, 34849, 36390, 37934, 39986, 41962, 43602, 45928, 48053, 49804, 51688, 54035, 56299, 58390, 60566, 62550, 64340, 66252, 68103, 69782, 71611, 73173, 74695, 76375, 77531, 78786, 79229, 80037, 80653, 81098, 80651, 81102, 80568, 80074, 79671, 78812, 77883, 76544, 75190, 73686, 71862, 69930, 68086, 66039, 63586, 61305, 59062, 56632, 54344, 52005, 49112, 46782, 44428, 42182, 40073, 38055, 35518, 33223, 31131, 29595, 27940, 26175, 24503, 22822, 21519, 20470, 19400, 18144, 16863, 16234, 15390, 14540, 13848, 13341, 12811, 12399, 11899, 11508, 11184, 10765, 10560, 10379, 10288, 10111, 10037, 9776, 9685, 9836, 9671, 9529, 9556, 9543, 9697, 9500, 9576, 9332, 9713, 9486, 9499, 9285, 9317, 9278, 9223, 9084, 9092, 8985, 8829, 8623, 8674, 8343, 8226, 7915, 7751, 7447, 7269, 7102, 6678, 6605, 6393, 6067, 5820, 5784, 5394, 5182, 4982, 4882, 4822, 4461, 4174, 4083, 3953, 3675, 3645, 3527, 3411, 3270, 3228, 3142, 3002, 3038, 2880, 2865, 2747, 2822, 2593, 2626, 2578, 2546, 2483, 2531, 2493, 2408, 2422, 2385, 2430, 2294, 2184, 2323, 2187, 2244, 2188, 2125, 2121, 2134, 2028, 2007, 1958, 1951, 1922, 1965, 1853, 1927, 1822, 1809, 1805, 1790, 1730, 1764, 1676, 1672, 1739, 1716, 1728, 1720, 1695, 1702, 1728, 1683, 1639, 1636, 1637, 1703, 1691, 1653, 1633, 1668, 1672, 1639, 1649, 1702, 1681, 1640, 1665, 1664, 1650, 1697, 1673, 1579, 1651, 1659, 1586, 1573, 1633, 1555, 1559, 1608, 1555, 1545, 1517, 1532, 1532, 1480, 1469, 1476, 1539, 1506, 1448, 1395, 1421, 1499, 1427, 1389, 1383, 1361, 1361, 1388, 1352, 1373, 1426, 1361, 1357, 1404, 1328, 1290, 1284, 1378, 1294, 1323, 1355, 1290, 1326, 1318, 1396, 1238, 1266, 1280, 1290, 1273, 1305, 1262, 1322, 1386, 1286, 1309, 1273, 1300, 1299, 1268, 1364, 1297, 1358, 1277, 1275, 1331, 1313, 1325, 1283, 1335, 1409, 1389, 1424, 1376, 1419, 1398, 1421, 1483, 1389, 1418, 1448, 1477, 1516, 1544, 1515, 1520, 1605, 1567, 1678, 1629, 1684, 1691, 1654, 1695, 1755, 1745, 1754, 1793, 1764, 1818, 1873, 1884, 1861, 1924, 1982, 1980, 2047, 2014, 2063, 2029, 2059, 2090, 2178, 2050, 2096, 2181, 2114, 2172, 2266, 2200, 2246, 2231, 2286, 2216, 2287, 2142, 2354, 2412, 2296, 2450, 2398, 2474, 2391, 2420, 2339, 2485, 2530, 2400, 2512, 2519, 2434, 2429, 2500, 2476, 2506, 2457, 2501, 2395, 2354, 2460, 2320, 2356, 2330, 2447, 2330, 2287, 2314, 2255, 2224, 2179, 2227, 2146, 1979, 2079, 1969, 2009, 1962, 2022, 1913, 1822, 1907, 1870, 1736, 1891, 1742, 1675, 1743, 1780, 1701, 1712, 1705, 1676, 1675, 1606, 1658, 1739, 1547, 1571, 1572, 1599, 1555, 1532, 1608, 1529, 1577, 1572, 1599, 1586, 1567, 1554, 1588, 1524, 1648, 1573, 1610, 1571, 1555, 1627, 1617, 1578, 1662, 1604, 1620, 1596, 1655, 1630, 1671, 1613, 1643, 1632, 1625, 1621, 1616, 1661, 1669, 1637, 1736, 1638, 1735, 1698, 1760, 1731, 1733, 1770, 1790, 1753, 1821, 1798, 1780, 1823, 1822, 1835, 1934, 1890, 1976, 1854, 1930, 1964, 1869, 1946, 1884, 1948, 2024, 1999, 1906, 1989, 2077, 2064, 2031, 1973, 2002, 1981, 1990, 2076, 2072, 1950, 2038, 2047, 1987, 2033, 2078, 2040, 2114, 1996, 2033, 2056, 2070, 2093, 2074, 2092, 2018, 2064, 2040, 2029, 2099, 1962, 2150, 2140, 2114, 2008, 2024, 2026, 2047, 2073, 2084, 2022, 2060, 2091, 2087, 2096, 2051, 2101, 2133, 2016, 2077, 2118, 2111, 2191, 2098, 2158, 2069, 2083, 2139, 2118, 2074, 2117, 2091, 2183, 2213, 2172, 2266, 2150, 2154, 2245, 2231, 2295, 2257, 2239, 2172, 2277, 2292, 2275, 2314, 2292, 2371, 2344, 2351, 2331, 2404, 2414, 2336, 2451, 2412, 2423, 2434, 2473, 2384, 2343, 2405, 2440, 2456, 2402, 2541, 2442, 2430, 2487, 2493, 2514, 2520, 2580, 2589, 2545, 2587, 2664, 2562, 2540, 2665, 2549, 2603, 2678, 2693, 2802, 2688, 2792, 2742, 2787, 2721, 2695, 2646, 2774, 2887, 2870, 2949, 2910, 2994, 2959, 2880, 2962, 3078, 3006, 3055, 2961, 2970, 3141, 3187, 3049, 3259, 3135, 3191, 3066, 3169, 3165, 3326, 3140, 3274, 3204, 3292, 3308, 3296, 3251, 3276, 3387, 3369, 3259, 3374, 3420, 3233, 3424, 3382, 3280, 3323, 3381, 3344, 3310, 3391, 3305, 3333, 3389, 3330, 3477, 3401, 3317, 3387, 3454, 3491, 3428, 3472, 3463, 3519, 3590, 3407, 3559, 3579, 3500, 3465, 3645, 3682, 3651, 3681, 3707, 3748, 3671, 3789, 3804, 3686, 3710, 3828, 3892, 3838, 3965, 4064, 3993, 4080, 4035, 3858, 4024, 4047, 4002, 4140, 4157, 4154, 4069, 4132, 4141, 4216, 4097, 4414, 4289, 4248, 4282, 4429, 4323, 4375, 4451, 4360, 4423, 4390, 4559, 4408, 4544, 4657, 4534, 4498, 4566, 4647, 4598, 4685, 4581, 4566, 4698, 4626, 4620, 4843, 4687, 4788, 4832, 4749, 4853, 4763, 4729, 4804, 4832, 4858, 4938, 4826, 4840, 5012, 4930, 4811, 4927, 4923, 4942, 5004, 4932, 4930, 4956, 4921, 4888, 5005, 4921, 4947, 5034, 4882, 4934, 5196, 5066, 5136, 5091, 5058, 5059, 5051, 5171, 5078, 5036, 5188, 5197, 5342, 5253, 5265, 5405, 5522, 5353, 5516, 5609, 5731, 5712, 5863, 5937, 5900, 6035, 5960, 6226, 6198, 6375, 6510, 6611, 6680, 6824, 7200, 7283, 7474, 7747, 7819, 8349, 8530, 8889, 9245, 9662, 9984, 10660, 11322, 11953, 12425, 13446, 14309, 15039, 16122, 16984, 18440, 19474, 20608, 21927, 23748, 25053, 26911, 28594, 30701, 32418, 34478, 37109, 39130, 41042, 43916, 46411, 48980, 52010, 54747, 57580, 59656, 63080, 65742, 68708, 71248, 74118, 76948, 79423, 82598, 84798, 87172, 89966, 91962, 94734, 96803, 97941, 100070, 102038, 102831, 104502, 104667, 105303, 105586, 105751, 106031, 105758, 104827, 104290, 103853, 102197, 100880, 99160, 97088, 95472, 93247, 90398, 88001, 86183, 82838, 80537, 77436, 74130, 72215, 68721, 65923, 63160, 60145, 56830, 54398, 52106, 49225, 47311, 44362, 42064, 40068, 37948, 35755, 33657, 31989, 31028, 28692, 27393, 25762, 24964, 24066, 22547, 21957, 21142, 20387, 19682, 19127, 18766, 18302, 17750, 17516, 17307, 17169, 17115, 17239, 17242, 16907, 16975, 16938, 17037, 17082, 17308, 17765, 17987, 17889, 18056, 18350, 18391, 18545, 18913, 19352, 19565, 19768, 20116, 20728, 21153, 21127, 21323, 22177, 22262, 22878, 22983, 23566, 24135, 24145, 24757, 25426, 25772, 26191, 26576, 27165, 27549, 28144, 28313, 29114, 29515, 29993, 30820, 31293, 31768, 32228, 33042, 33609, 34266, 35194, 35656, 36095, 36882, 37135, 38043, 38330, 39330, 40230, 40815, 41307, 41932, 42377, 43398, 44150, 44717, 45436, 46076, 46920, 47772, 48399, 49290, 49991, 50752, 51382, 51776, 52582, 53800, 53995, 55198, 55452, 56214, 57160, 57570, 58868, 58970, 59948, 60389, 61096, 61735, 62660, 63243, 64019, 64754, 65136, 65808, 66639, 67532, 68320, 68663, 69084, 69525, 69799, 70887, 71244, 71903, 72720, 74023, 73862, 74542, 74530, 75358, 75888, 76397, 77048, 77468, 77682, 78002, 79055, 79348, 79686, 79684, 80499, 80713, 81133, 81158, 81612, 82048, 82658, 83244, 83079, 84127, 84434, 84378, 83986, 84583, 84887, 85665, 85674, 85817, 86533, 86315, 86766, 87112, 87495, 87845, 87309, 87981, 88472, 88729, 88523, 88949, 88837, 89074, 89150, 89222, 89140, 89918, 89992, 89944, 90931, 90715, 90782, 90760, 91568, 91989, 91884, 91989, 92532, 92974, 92649, 92647, 93766, 93930, 93835, 94093, 94584, 94429, 95380, 95659, 95998, 96009, 96746, 96971, 97617, 97053, 97522, 98572, 98695, 99271, 99247, 99058, 100015, 100238, 101320, 101378, 102270, 102688, 102998, 103908, 103924, 104132, 104888, 106308, 106067, 106555, 107630, 108630, 108797, 109093, 110474, 110998, 111812, 112500, 113903, 114520, 115663, 116809, 117679, 119357, 120993, 122093, 124096, 125157, 126880, 129154, 131826, 133337, 136086, 138828, 142306, 144743, 148478, 152274, 155740, 160255, 164748, 169695, 174869, 180406, 186575, 192745, 198693, 207200, 214120, 221327, 230093, 239461, 248044, 257517, 266900, 277689, 287815, 298611, 310227, 321854, 332905, 345524, 357127, 370350, 382738, 395759, 409252, 421685, 435090, 447290, 460325, 472484, 484462, 497071, 507581, 519965, 528869, 538469, 548388, 556359, 564604, 572483, 577761, 584047, 588583, 591238, 595037, 596872, 597485, 596266, 596223, 591622, 589437, 583014, 577361, 569846, 562031, 551546, 543545, 532550, 519875, 509851, 495718, 481317, 467241, 453254, 437291, 420798, 405980, 391353, 375383, 359285, 342422, 327628, 311407, 296379, 281175, 267176, 252007, 238896, 225656, 212267, 199947, 188658, 177237, 166441, 156064, 146827, 136731, 129540, 120195, 113972, 106248, 100032, 93684, 88948, 83136, 78001, 73220, 69708, 66298, 62392, 59372, 56663, 53827, 50901, 49103, 46668, 45253, 43082, 41692, 40058, 38811, 37855, 36293, 35222, 33931, 33373, 32574, 31541, 31105, 30487, 29825, 29150, 28538, 27954, 27655, 27527, 27143, 26655, 26617, 26117, 25652, 25725, 25471, 24978, 24915, 24409, 24214, 24085, 23833, 23822, 23538, 23530, 23180, 22986, 22827, 22498, 22274, 22540, 22286, 21995, 21737, 21563, 21360, 21157, 21082, 20879, 20739, 20372, 19910, 20071, 19577, 19199, 19206, 18859, 18526, 18470, 18262, 17877, 17381, 17649, 16873, 16884, 16632, 16129, 16154, 16058, 15264, 15462, 15023, 15000, 14671, 14549, 14143, 13917, 13756, 13565, 13572, 13337, 13126, 12998, 12700, 12484, 12438, 12089, 11955, 11691, 11516, 11619, 11161, 11087, 11137, 10821, 10619, 10422, 10241, 10293, 10047, 9858, 9995, 9853, 9554, 9466, 9362, 9146, 9280, 8951, 8795, 8684, 8694, 8422, 8253, 8112, 7863, 7879, 7835, 7641, 7661, 7324, 7206, 7243, 6950, 6820, 6878, 6757, 6647, 6504, 6248, 6129, 6189, 6083, 5964, 5775, 5672, 5544, 5516, 5343, 5322, 5175, 5145, 5019, 4970, 4750, 4730, 4575, 4406, 4496, 4394, 4290, 4122, 4044, 4051, 3986, 3838, 3831, 3633, 3516, 3498, 3475, 3461, 3349, 3273, 3243, 3080, 3171, 3035, 2937, 2930, 2829, 2849, 2784, 2718, 2602, 2658, 2533, 2485, 2511, 2376, 2442, 2415, 2272, 2286, 2170, 2272, 2243, 2090, 2056, 2117, 2189, 2005, 1941, 1960, 1983, 1901, 1918, 1866, 1902, 1819, 1722, 1789, 1749, 1779, 1833, 1801, 1753, 1723, 1756, 1733, 1676, 1704, 1648, 1743, 1606, 1624, 1656, 1642, 1652, 1608, 1684, 1673, 1555, 1636, 1553, 1564, 1597, 1532, 1566, 1567, 1502, 1514, 1506, 1539, 1374, 1410, 1472, 1425, 1478, 1423, 1363, 1349, 1365, 1321, 1283, 1256, 1263, 1252, 1270, 1148, 1217, 1214, 1173, 1226, 1081, 1197, 1139, 1144, 1150, 1114, 1163, 1073, 1101, 1082, 1033, 1114, 1016, 1029, 1088, 1055, 1083, 1055, 1016, 1074, 986, 961, 1047, 1011, 1006, 1015, 1024, 1051, 1036, 1053, 1068, 1113, 1030, 1120, 1068, 1105, 1068, 1019, 1071, 1147, 1101, 1140, 1061, 1122, 1131, 1163, 1037, 1177, 1091, 1121, 1093, 1158, 1072, 1119, 1152, 1154, 1141, 1135, 1046, 1159, 1091, 1130, 1081, 1104, 1157, 1144, 1105, 1094, 1196, 1072, 1102, 1097, 1111, 1088, 1134, 1127, 1160, 1124, 1117, 1204, 1176, 1180, 1222, 1172, 1296, 1209, 1274, 1270, 1302, 1303, 1323, 1318, 1326, 1338, 1375, 1285, 1410, 1420, 1403, 1460, 1493, 1495, 1517, 1494, 1511, 1578, 1548, 1516, 1510, 1579, 1520, 1648, 1614, 1646, 1596, 1537, 1663, 1574, 1490, 1532, 1526, 1492, 1642, 1507, 1571, 1396, 1456, 1497, 1305, 1390, 1357, 1346, 1330, 1293, 1248, 1228, 1194, 1162, 1224, 1134, 1129, 1059, 1120, 1043, 1011, 1027, 971, 989, 945, 964, 969, 916, 917, 908, 901, 911, 883, 869, 857, 922, 830, 870, 912, 955, 904, 952, 974, 993, 999, 994, 998, 1067, 1037, 1093, 1115, 1108, 1181, 1192, 1118, 1227, 1304, 1285, 1362, 1350, 1360, 1355, 1368, 1407, 1483, 1539, 1474, 1560, 1482, 1589, 1614, 1598, 1656, 1642, 1614, 1648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 6, 11, 22, 31, 61, 105, 165, 308, 470, 803, 1249, 1964, 3050, 4399, 6446, 9285, 13051, 18370, 25303, 34315, 45460, 60196, 78404, 101859, 129481, 163079, 204899, 254371, 313352, 382522, 460084, 552230, 652596, 763961, 885654, 1011265, 1140275, 1269510, 1390037, 1503116, 1599868, 1679947, 1730825, 1763056, 1762391, 1739057, 1686982, 1610746, 1515458, 1402818, 1277117, 1145556, 1010390, 875508, 751412, 630230, 524268, 425584, 340555, 267727, 208776, 159026, 118611, 87255, 63615, 45494, 31784, 21919, 14781, 9841, 6505, 4017, 2626, 1698, 1032, 598, 336, 223, 154, 88, 56, 33, 33, 16, 13, 20, 16, 12, 20, 10, 6, 9, 10, 6, 7, 5, 5, 8, 4, 9, 4, 7, 4, 5, 4, 11, 24, 40, 117, 200, 327, 580, 810, 965, 1085, 1084, 1068, 1023, 1069, 1025, 1139, 1028, 987, 946, 1002, 986, 970, 1020, 940, 916, 962, 861, 928, 891, 913, 859, 981, 890, 881, 876, 984, 901, 884, 910, 899, 915, 880, 847, 859, 879, 819, 841, 827, 860, 802, 837, 877, 853, 807, 846, 832, 818, 805, 819, 802, 780, 848, 747, 815, 754, 800, 744, 757, 832, 820, 759, 748, 835, 794, 750, 759, 713, 773, 786, 698, 735, 706, 707, 732, 727, 701, 666, 768, 671, 707, 735, 672, 677, 681, 659, 668, 668, 673, 643, 642, 662, 697, 633, 603, 619, 639, 630, 602, 631, 635, 638, 628, 585, 594, 604, 638, 572, 548, 592, 558, 604, 645, 581, 600, 593, 580, 587, 606, 574, 587, 622, 596, 570, 599, 592, 620, 612, 629, 636, 584, 579, 565, 570, 610, 611, 559, 584, 619, 598, 616, 604, 628, 646, 631, 640, 638, 653, 666, 643, 613, 640, 690, 690, 681, 691, 716, 666, 640, 814, 670, 720, 735, 708, 716, 682, 795, 726, 753, 829, 833, 822, 801, 855, 857, 829, 826, 843, 906, 830, 889, 825, 891, 872, 876, 915, 874, 855, 883, 935, 909, 920, 978, 910, 937, 938, 999, 1057, 1013, 1010, 967, 1117, 1085, 1061, 1114, 1161, 1147, 1137, 1175, 1144, 1124, 1245, 1167, 1212, 1287, 1274, 1239, 1280, 1327, 1314, 1290, 1287, 1401, 1374, 1331, 1413, 1370, 1409, 1437, 1406, 1386, 1429, 1446, 1383, 1466, 1434, 1383, 1425, 1431, 1372, 1383, 1380, 1393, 1442, 1449, 1477, 1424, 1472, 1458, 1513, 1426, 1552, 1449, 1589, 1592, 1694, 1800, 1819, 1853, 1956, 2169, 2258, 2456, 2559, 2762, 3011, 3189, 3421, 3746, 3978, 4248, 4589, 4869, 4918, 5229, 5297, 5603, 5679, 5726, 5753, 5723, 5741, 5718, 5558, 5498, 5501, 5327, 5238, 4981, 4859, 4558, 4358, 4221, 4207, 4029, 3870, 3825, 3580, 3623, 3507, 3428, 3354, 3342, 3273, 3224, 3161, 3170, 3139, 2965, 3069, 2854, 2955, 2920, 2783, 2730, 2701, 2592, 2574, 2462, 2451, 2415, 2361, 2279, 2220, 2214, 2140, 2171, 2101, 2047, 1981, 1842, 1834, 1801, 1797, 1632, 1540, 1592, 1494, 1449, 1426, 1314, 1390, 1334, 1214, 1215, 1167, 1138, 1160, 1121, 1062, 1025, 1004, 1046, 969, 991, 930, 942, 992, 903, 872, 900, 886, 921, 902, 940, 940, 1000, 956, 956, 1023, 1036, 1214, 1184, 1326, 1323, 1380, 1468, 1613, 1683, 1810, 1961, 2002, 2129, 2208, 2327, 2608, 2593, 2746, 2881, 3065, 3105, 3342, 3288, 3401, 3442, 3565, 3765, 3851, 3789, 3871, 4031, 4060, 4205, 4087, 4165, 4293, 4269, 4357, 4385, 4326, 4252, 4373, 4379, 4385, 4273, 4427, 4309, 4103, 4212, 4148, 4087, 4062, 4069, 3997, 3903, 3729, 3633, 3590, 3508, 3422, 3248, 3177, 3038, 3050, 2871, 2847, 2731, 2655, 2496, 2543, 2497, 2386, 2233, 2128, 2090, 2025, 2050, 1905, 1864, 1770, 1685, 1703, 1629, 1677, 1456, 1535, 1407, 1290, 1368, 1322, 1270, 1215, 1112, 1137, 1068, 1043, 996, 938, 880, 943, 893, 832, 847, 883, 784, 793, 800, 761, 747, 755, 727, 753, 756, 759, 725, 709, 736, 733, 692, 696, 725, 686, 707, 710, 729, 722, 746, 823, 792, 819, 900, 926, 918, 1005, 1067, 1198, 1251, 1321, 1408, 1591, 1599, 1813, 1936, 2157, 2157, 2202, 2488, 2615, 2811, 2942, 3013, 3045, 3189, 3348, 3317, 3378, 3361, 3437, 3338, 3278, 3321, 3277, 3139, 3009, 2941, 2893, 2823, 2780, 2702, 2608, 2545, 2542, 2474, 2283, 2330, 2194, 2328, 2256, 2280, 2393, 2454, 2631, 2580, 2579, 2803, 2841, 2940, 3035, 3197, 3340, 3397, 3450, 3561, 3565, 3583, 3675, 3798, 3725, 3741, 3703, 3750, 3708, 3571, 3727, 3528, 3479, 3419, 3409, 3405, 3320, 3466, 3509, 3459, 3546, 3378, 3543, 3474, 3593, 3577, 3584, 3645, 3653, 3560, 3596, 3539, 3577, 3605, 3550, 3494, 3284, 3265, 3196, 3090, 2999, 2955, 2758, 2683, 2497, 2375, 2309, 2177, 2177, 2072, 1972, 1792, 1824, 1688, 1663, 1575, 1580, 1479, 1498, 1435, 1440, 1417, 1361, 1312, 1309, 1336, 1305, 1218, 1265, 1252, 1262, 1264, 1266, 1273, 1247, 1219, 1272, 1366, 1366, 1371, 1422, 1416, 1479, 1545, 1531, 1648, 1721, 1841, 1845, 1975, 2084, 2150, 2211, 2357, 2563, 2674, 2809, 2855, 2895, 2980, 3157, 3204, 3140, 3268, 3351, 3462, 3506, 3354, 3280, 3252, 3184, 3076, 2911, 2876, 2722, 2635, 2404, 2184, 2047, 1977, 1815, 1692, 1544, 1405, 1365, 1213, 1125, 994, 960, 830, 767, 735, 686, 652, 612, 560, 586, 538, 550, 520, 547, 565, 506, 516, 555, 548, 518, 568, 588, 602, 584, 626, 616, 660, 745, 775, 774, 806, 868, 873, 953, 935, 1014, 1153, 1123, 1138, 1281, 1384, 1417, 1472, 1644, 1715, 1838, 1968, 1998, 2070, 2100, 2200, 2317, 2334, 2472, 2556, 2585, 2469, 2526, 2653, 2636, 2605, 2542, 2446, 2459, 2293, 2273, 2185, 2155, 2032, 1892, 1891, 1759, 1581, 1590, 1532, 1522, 1475, 1325, 1261, 1220, 1203, 1153, 1230, 1142, 1175, 1197, 1188, 1215, 1286, 1275, 1325, 1331, 1437, 1386, 1472, 1498, 1528, 1497, 1510, 1526, 1560, 1456, 1504, 1422, 1445, 1481, 1377, 1299, 1427, 1372, 1449, 1414, 1362, 1449, 1408, 1487, 1556, 1577, 1589, 1722, 1750, 1864, 1953, 2068, 2186, 2284, 2364, 2547, 2591, 2739, 2971, 3085, 3011, 3149, 3161, 3309, 3414, 3430, 3569, 3583, 3548, 3532, 3413, 3444, 3324, 3320, 3205, 3060, 3072, 2920, 3065, 2857, 2828, 2762, 2741, 2665, 2619, 2589, 2629, 2539, 2582, 2630, 2658, 2609, 2612, 2596, 2657, 2691, 2686, 2650, 2575, 2731, 2564, 2464, 2455, 2492, 2434, 2500, 2302, 2203, 2248, 2167, 2062, 2075, 1944, 1934, 1930, 1911, 1984, 1890, 1987, 2060, 2007, 2056, 2105, 2264, 2330, 2559, 2499, 2602, 2756, 2884, 2989, 3127, 3268, 3340, 3442, 3652, 3758, 3857, 3907, 4136, 4201, 4197, 4427, 4502, 4548, 4844, 4805, 4976, 5118, 5280, 5365, 5574, 5541, 5701, 5851, 5828, 5868, 5930, 6091, 6076, 6242, 5974, 5858, 6012, 5871, 5836, 5827, 5748, 5640, 5484, 5379, 5152, 5103, 4974, 4871, 4755, 4532, 4309, 4239, 4010, 3867, 3695, 3598, 3384, 3282, 3200, 3057, 2998, 2782, 2743, 2649, 2544, 2589, 2488, 2485, 2505, 2429, 2490, 2513, 2508, 2587, 2661, 2699, 2786, 2883, 2904, 2962, 2984, 3149, 3209, 3194, 3346, 3454, 3448, 3528, 3498, 3539, 3582, 3551, 3555, 3620, 3521, 3590, 3601, 3721, 3605, 3585, 3624, 3770, 3788, 3801, 3964, 3971, 3975, 4362, 4330, 4500, 4830, 4902, 5080, 5388, 5441, 5714, 5902, 5956, 6167, 6260, 6616, 6723, 6699, 6780, 6786, 6795, 6822, 6715, 6619, 6606, 6402, 6464, 6110, 5889, 5815, 5657, 5431, 5348, 5090, 4659, 4571, 4501, 4226, 4118, 3884, 3763, 3550, 3546, 3394, 3395, 3465, 3366, 3304, 3246, 3263, 3372, 3354, 3308, 3368, 3386, 3444, 3527, 3549, 3615, 3717, 3724, 3719, 3680, 3774, 3745, 3861, 3810, 3710, 3851, 3830, 3809, 3734, 3813, 3641, 3613, 3615, 3654, 3576, 3595, 3676, 3633, 3575, 3607, 3704, 3771, 3829, 3798, 3896, 4084, 4311, 4274, 4617, 4649, 5010, 5227, 5337, 5645, 5853, 6139, 6429, 6648, 6827, 7145, 7409, 7781, 7806, 8058, 8319, 8421, 8520, 8623, 8627, 8750, 8694, 8757, 8667, 8664, 8795, 8426, 8267, 7913, 7805, 7661, 7234, 7194, 6767, 6748, 6349, 6044, 5965, 5668, 5490, 5290, 5072, 5035, 4884, 4611, 4569, 4494, 4346, 4177, 4257, 4165, 4067, 4110, 3967, 4091, 3973, 3950, 3886, 3631, 3798, 3797, 3678, 3705, 3584, 3654, 3538, 3465, 3326, 3469, 3400, 3418, 3411, 3286, 3227, 3325, 3463, 3302, 3553, 3536, 3556, 3639, 3906, 3858, 3990, 4083, 4146, 4388, 4411, 4378, 4840, 4742, 4781, 5046, 5170, 5444, 5426, 5466, 5548, 5714, 5816, 6117, 6119, 6428, 6465, 6654, 6753, 7072, 7248, 7354, 7568, 7753, 8116, 8195, 8569, 8760, 9060, 9302, 9477, 9846, 9990, 10174, 10450, 10595, 10842, 10974, 11045, 11098, 11170, 11276, 11142, 11056, 10938, 10907, 10746, 10562, 10647, 10092, 9953, 9678, 9507, 9331, 9088, 8764, 8234, 8021, 7872, 7434, 7231, 7031, 6711, 6303, 6150, 5775, 5737, 5374, 5263, 4892, 4756, 4586, 4471, 4439, 4178, 4078, 4100, 4045, 3984, 4050, 3926, 4196, 4159, 4215, 4329, 4474, 4398, 4630, 4752, 4695, 4948, 5260, 5227, 5396, 5460, 5427, 5563, 5737, 5803, 5820, 5937, 5830, 5962, 5932, 5742, 5769, 5838, 5693, 5589, 5616, 5522, 5596, 5453, 5432, 5493, 5481, 5474, 5606, 5680, 5724, 6005, 5995, 6335, 6517, 7026, 7395, 7794, 7978, 8389, 9012, 9481, 9861, 10486, 10930, 11224, 11500, 11914, 12358, 12828, 12960, 13237, 13455, 13474, 13734, 13748, 13721, 13772, 13310, 13226, 13318, 12965, 12601, 12341, 11773, 11496, 10983, 10606, 10243, 9751, 9343, 8952, 8522, 7962, 7688, 7406, 6899, 6461, 6582, 6336, 5834, 5729, 5726, 5596, 5428, 5350, 5404, 5504, 5467, 5388, 5543, 5485, 5581, 5623, 5708, 5859, 5856, 6048, 6083, 6084, 6421, 6163, 6315, 6256, 6271, 6418, 6353, 6464, 6482, 6324, 6232, 6155, 6038, 6027, 5811, 5781, 5726, 5475, 5572, 5258, 5235, 5220, 5246, 4982, 5047, 5047, 5096, 5140, 5110, 5138, 5356, 5383, 5672, 5766, 5970, 6256, 6606, 6918, 7430, 7526, 7985, 8535, 8982, 9253, 9752, 10318, 10796, 11262, 11867, 11963, 12660, 12986, 13743, 13940, 14033, 14609, 14665, 15379, 15295, 15388, 15488, 15684, 15687, 15665, 15328, 15149, 15001, 15013, 14473, 14134, 13976, 13652, 13222, 12815, 12552, 12068, 11743, 11381, 11070, 10828, 10647, 10128, 9794, 9688, 9436, 9375, 9038, 8950, 8785, 8669, 8613, 8377, 8144, 8314, 8115, 8185, 8062, 8076, 8099, 7821, 7590, 7708, 7540, 7247, 7018, 6967, 6857, 6780, 6498, 6231, 6139, 5985, 5894, 5752, 5568, 5384, 5248, 5098, 4962, 4864, 4715, 4747, 4629, 4452, 4446, 4441, 4283, 4141, 4221, 4117, 4038, 4097, 4057, 4036, 3897, 3858, 3821, 3789, 3710, 3638, 3736, 3788, 3789, 3808, 3967, 3875, 3952, 4078, 4185, 4340, 4517, 4659, 4839, 5106, 5520, 5806, 6053, 6248, 6557, 7198, 7662, 8103, 8415, 8935, 9312, 9755, 10137, 10749, 10972, 11404, 11919, 12374, 12812, 13164, 13287, 13669, 13687, 13861, 13956, 14150, 14029, 13874, 13883, 13733, 13416, 13293, 13211, 12839, 12600, 12348, 11762, 11536, 11068, 10797, 10427, 10135, 9694, 9205, 8806, 8648, 8268, 7979, 7711, 7246, 6891, 6760, 6305, 6097, 5820, 5701, 5509, 5391, 5224, 5040, 5052, 4887, 4826, 4754, 4805, 4611, 4655, 4561, 4701, 4535, 4748, 4823, 4893, 4903, 5006, 5063, 5237, 5196, 5472, 5753, 5719, 5662, 5947, 6070, 6095, 6337, 6417, 6590, 6597, 6661, 6647, 6842, 6897, 6834, 6927, 6879, 6781, 6854, 6851, 6671, 6728, 6639, 6742, 6608, 6340, 6502, 6344, 6405, 6336, 6349, 6608, 6672, 6787, 6762, 6991, 7160, 7531, 7591, 8046, 8553, 8951, 9369, 9781, 10155, 10822, 11341, 12106, 12583, 13065, 13625, 14365, 14993, 15478, 16107, 16666, 16926, 17448, 17982, 18097, 18607, 18581, 18673, 18775, 18688, 18821, 18815, 18720, 18332, 18036, 17770, 17135, 16738, 16252, 15780, 15127, 14480, 13726, 13459, 12739, 12204, 11513, 10827, 10220, 9776, 9262, 8622, 8184, 7636, 7257, 6715, 6466, 5948, 5584, 5392, 4928, 4632, 4469, 4435, 4066, 3827, 3688, 3561, 3471, 3328, 3300, 3258, 3220, 3087, 3053, 2979, 2961, 2901, 2866, 2926, 2874, 2850, 2731, 2699, 2731, 2764, 2714, 2620, 2630, 2692, 2613, 2598, 2646, 2524, 2550, 2582, 2559, 2514, 2567, 2529, 2484, 2528, 2569, 2588, 2560, 2675, 2632, 2659, 2672, 2826, 2853, 2857, 2981, 3090, 3178, 3433, 3462, 3757, 3813, 4123, 4482, 4680, 4843, 5413, 5602, 5849, 6244, 6761, 7015, 7527, 8124, 8566, 8965, 9487, 9964, 10519, 11307, 11454, 12229, 12401, 12811, 13196, 13878, 13887, 14196, 14274, 14568, 14538, 14664, 14759, 14716, 14716, 14418, 14216, 13969, 13851, 13420, 12791, 12643, 12244, 11733, 11478, 10842, 10441, 9870, 9325, 9171, 8498, 8276, 7716, 7295, 6856, 6492, 6156, 5823, 5436, 5128, 4932, 4571, 4479, 4302, 4095, 3819, 3598, 3460, 3402, 3224, 3256, 3137, 3061, 3084, 2896, 2859, 2754, 2775, 2820, 2740, 2699, 2782, 2683, 2758, 2874, 2785, 2822, 2781, 2983, 3029, 2989, 2951, 2980, 3095, 3044, 3210, 3103, 3156, 3280, 3243, 3287, 3357, 3432, 3479, 3413, 3466, 3402, 3434, 3509, 3475, 3460, 3553, 3645, 3595, 3640, 3597, 3628, 3578, 3690, 3780, 3778, 3790, 3842, 4019, 3970, 4132, 4197, 4305, 4477, 4650, 4889, 5032, 5187, 5371, 5798, 6057, 6205, 6701, 6848, 7319, 7529, 7951, 8368, 8597, 9153, 9356, 9853, 10059, 10344, 10622, 10926, 11373, 11615, 11825, 11979, 12112, 12403, 12428, 12543, 12662, 12385, 12515, 12383, 12227, 12252, 11836, 11961, 11452, 11302, 11040, 10879, 10465, 10071, 9916, 9652, 9334, 9058, 8844, 8514, 8297, 7804, 7747, 7336, 7163, 6819, 6523, 6346, 5994, 6148, 5802, 5727, 5462, 5269, 5289, 5103, 4902, 4771, 4777, 4710, 4585, 4785, 4559, 4720, 4616, 4773, 4759, 4866, 4948, 5187, 5243, 5334, 5473, 5697, 5972, 6299, 6351, 6630, 6905, 7019, 7541, 7796, 8098, 8343, 8683, 8753, 9136, 9515, 9704, 9747, 9879, 10012, 10074, 10264, 10164, 10318, 10570, 10455, 10494, 10505, 10312, 10245, 9912, 9782, 9591, 9555, 9203, 8932, 8795, 8732, 8425, 8245, 8072, 7729, 7782, 7549, 7459, 7335, 7180, 7374, 7196, 7310, 7563, 7741, 7896, 8155, 8294, 8483, 9113, 9468, 9988, 10479, 10901, 11389, 11825, 12616, 13181, 13765, 14491, 14944, 15408, 15847, 16313, 16825, 17324, 17899, 18053, 18119, 18387, 18949, 18751, 18831, 18971, 18839, 18652, 18289, 18149, 17798, 17474, 17066, 16490, 15923, 15561, 14838, 14243, 13751, 12855, 12477, 11735, 11278, 10741, 9768, 9519, 8658, 8387, 7923, 7500, 7090, 6753, 6448, 6066, 5922, 5857, 5646, 5573, 5451, 5358, 5237, 5403, 5304, 5457, 5623, 5678, 5907, 6150, 6407, 6462, 6604, 6810, 7087, 7319, 7427, 7751, 7850, 7993, 8157, 8383, 8414, 8672, 8753, 8743, 8697, 8623, 8825, 8657, 8557, 8533, 8462, 8253, 8189, 8025, 7784, 7524, 7492, 7235, 6928, 6827, 6492, 6374, 6125, 5903, 5566, 5396, 5147, 4989, 4921, 4587, 4341, 4202, 4218, 3944, 3907, 3730, 3628, 3520, 3481, 3509, 3455, 3558, 3503, 3560, 3766, 3707, 3867, 3981, 4073, 4277, 4327, 4675, 4978, 5174, 5567, 5663, 6002, 6457, 6766, 6906, 7402, 7733, 8339, 8520, 8889, 9356, 9670, 10110, 10520, 10571, 10935, 11242, 11331, 11735, 11845, 11900, 12063, 12276, 12138, 11823, 11904, 11889, 11823, 11509, 11427, 11139, 10822, 10586, 10264, 9977, 9642, 9279, 8764, 8295, 7867, 7389, 6957, 6687, 6119, 5975, 5402, 5093, 4585, 4368, 3980, 3671, 3296, 3147, 2869, 2641, 2350, 2179, 1977, 1702, 1644, 1447, 1333, 1201, 1139, 1044, 998, 867, 844, 764, 767, 692, 705, 665, 587, 568, 611, 597, 591, 611, 606, 677, 621, 686, 742, 773, 753, 726, 778, 930, 933, 1000, 1066, 1051, 1124, 1155, 1214, 1315, 1426, 1386, 1553, 1646, 1653, 1776, 1883, 1874, 2015, 2040, 2044, 2157, 2151, 2226, 2370, 2422, 2526, 2444, 2527, 2618, 2558, 2682, 2677, 2662, 2646, 2654, 2580, 2691, 2619, 2607, 2558, 2509, 2596, 2474, 2442, 2309, 2227, 2276, 2116, 1991, 1966, 2002, 1932, 1873, 1745, 1704, 1570, 1523, 1472, 1512, 1320, 1302, 1227, 1216, 1183, 1174, 1092, 1050, 971, 1012, 986, 946, 940, 905, 906, 872, 838, 872, 905, 856, 826, 873, 793, 825, 831, 823, 798, 839, 813, 844, 862, 861, 847, 893, 936, 928, 887, 1008, 963, 1022, 1120, 1140, 1163, 1217, 1335, 1340, 1456, 1492, 1624, 1686, 1793, 1932, 2098, 2260, 2335, 2514, 2629, 2818, 2921, 3073, 3279, 3336, 3652, 3697, 3904, 4095, 4197, 4386, 4628, 4638, 4716, 4911, 5071, 5001, 5363, 5332, 5489, 5425, 5509, 5401, 5411, 5410, 5506, 5574, 5391, 5237, 5249, 5204, 5140, 5000, 4945, 4848, 4641, 4518, 4371, 4304, 4181, 4034, 3966, 3725, 3686, 3596, 3341, 3362, 3288, 3146, 3124, 2987, 3057, 2926, 2925, 2801, 2797, 2842, 2768, 2895, 2916, 2893, 2961, 2913, 2972, 3144, 3208, 3222, 3276, 3391, 3484, 3756, 3975, 3984, 4180, 4277, 4320, 4536, 4751, 4861, 5022, 5225, 5495, 5606, 5697, 5846, 6215, 6275, 6502, 6450, 6575, 6750, 6930, 7090, 7127, 7168, 7330, 7320, 7227, 7384, 7354, 7393, 7417, 7399, 7171, 7274, 7063, 6951, 6845, 6751, 6469, 6385, 6355, 6076, 5825, 5633, 5657, 5173, 5050, 4974, 4792, 4449, 4377, 4279, 4081, 3993, 3902, 3636, 3699, 3550, 3465, 3303, 3262, 3287, 3307, 3192, 3197, 3304, 3367, 3399, 3331, 3589, 3563, 3728, 3849, 3947, 4270, 4455, 4543, 4749, 5033, 5213, 5621, 5866, 5998, 6289, 6693, 6889, 7212, 7661, 7706, 8128, 8557, 8728, 8921, 9224, 9630, 9647, 9946, 10043, 10319, 10414, 10699, 10692, 10809, 10981, 10886, 10964, 10784, 10632, 10606, 10194, 10164, 10094, 9937, 9554, 9586, 9168, 8831, 8613, 8331, 8034, 7784, 7257, 7161, 6717, 6367, 6091, 5714, 5516, 5378, 5097, 4792, 4446, 4310, 4242, 4011, 3926, 3761, 3808, 3729, 3646, 3759, 3700, 3864, 4045, 4075, 4089, 4390, 4571, 4781, 5144, 5483, 5638, 6066, 6536, 6898, 7489, 7675, 8150, 8838, 9327, 9605, 10420, 10806, 11517, 11943, 12528, 13111, 13495, 13959, 14534, 15160, 15409, 15837, 16184, 16738, 16998, 17453, 17613, 17574, 17737, 17673, 18149, 18035, 17911, 17854, 17780, 17552, 17567, 17002, 16610, 16318, 16278, 15948, 15412, 14969, 14553, 14223, 13637, 13272, 12837, 12262, 11926, 11675, 11016, 10829, 10388, 10189, 9835, 9525, 9406, 9036, 8823, 8876, 8459, 8377, 8244, 8221, 8141, 8092, 7992, 7765, 7708, 7964, 7645, 7674, 7590, 7559, 7396, 7668, 7375, 7273, 7129, 7097, 6786, 6818, 6566, 6423, 6171, 6115, 5861, 5630, 5356, 5091, 5008, 4665, 4461, 4227, 4006, 3900, 3566, 3503, 3250, 3001, 2806, 2560, 2389, 2222, 2047, 1918, 1837, 1616, 1532, 1457, 1266, 1226, 1154, 1131, 1021, 928, 851, 877, 833, 825, 740, 785, 678, 735, 778, 781, 755, 886, 856, 918, 994, 1040, 1135, 1281, 1287, 1417, 1611, 1762, 1958, 2074, 2258, 2401, 2742, 3018, 3229, 3658, 3929, 4310, 4639, 5026, 5501, 5946, 6332, 6797, 7146, 7582, 8258, 8972, 9695, 10209, 10968, 11428, 11746, 12567, 13182, 13850, 14191, 14809, 15363, 15931, 16556, 17036, 17520, 18085, 18144, 18542, 18964, 19204, 19494, 19350, 19696, 20072, 19761, 19634, 19398, 19372, 19225, 18840, 18659, 18045, 17702, 17030, 16899, 16291, 15704, 15060, 14531, 14196, 13618, 12887, 12370, 11776, 10954, 10491, 9957, 9186, 8722, 8310, 7609, 7194, 6662, 6191, 5712, 5242, 4907, 4588, 4204, 3918, 3703, 3223, 2947, 2778, 2473, 2387, 2214, 1923, 1771, 1688, 1451, 1386, 1231, 1197, 1125, 1018, 916, 862, 773, 767, 711, 651, 627, 614, 556, 546, 503, 525, 481, 476, 455, 441, 434, 388, 383, 390, 375, 474, 441, 442, 471, 442, 468, 493, 473, 495, 524, 529, 539, 544, 591, 577, 566, 668, 674, 694, 713, 800, 792, 873, 941, 1027, 1021, 1045, 1107, 1202, 1353, 1353, 1433, 1448, 1627, 1681, 1884, 2015, 2114, 2204, 2400, 2574, 2845, 2961, 3214, 3363, 3710, 3902, 4284, 4417, 4826, 5078, 5397, 5803, 6229, 6568, 6995, 7591, 7836, 8342, 8825, 9365, 9881, 10292, 11054, 11481, 11814, 12435, 12879, 13505, 13794, 14492, 14976, 15429, 16000, 16202, 16530, 16807, 17234, 17506, 17755, 18158, 18251, 18414, 18488, 18523, 18285, 18744, 18344, 18135, 18259, 17634, 17505, 17200, 16790, 16499, 16007, 15603, 14984, 14542, 14209, 13608, 13150, 12622, 11842, 11265, 10950, 10148, 9697, 9090, 8563, 8012, 7700, 7014, 6703, 6197, 5906, 5325, 5015, 4766, 4461, 4158, 3900, 3645, 3334, 3166, 2948, 2885, 2639, 2578, 2447, 2244, 2218, 2059, 2014, 1910, 1846, 1806, 1743, 1616, 1626, 1645, 1612, 1577, 1551, 1511, 1483, 1515, 1394, 1435, 1397, 1351, 1302, 1262, 1264, 1236, 1156, 1171, 1111, 1105, 1048, 1021, 941, 912, 924, 868, 900, 825, 785, 748, 703, 668, 672, 663, 617, 622, 608, 572, 585, 582, 599, 528, 504, 526, 532, 558, 543, 530, 542, 525, 552, 586, 617, 608, 676, 686, 692, 708, 788, 767, 817, 914, 898, 903, 1007, 971, 1007, 1154, 1111, 1168, 1150, 1192, 1231, 1332, 1339, 1387, 1432, 1396, 1497, 1539, 1548, 1559, 1615, 1644, 1692, 1736, 1747, 1785, 1807, 1949, 1840, 1934, 2021, 1974, 2063, 2119, 2257, 2153, 2234, 2262, 2297, 2347, 2508, 2447, 2533, 2627, 2599, 2713, 2762, 2791, 2926, 2861, 2951, 2899, 3129, 3055, 3115, 3202, 3085, 3213, 3293, 3231, 3213, 3307, 3295, 3264, 3242, 3118, 3101, 3047, 3066, 3012, 2858, 2996, 2757, 2792, 2704, 2647, 2550, 2452, 2443, 2300, 2126, 2149, 2134, 2025, 1888, 1849, 1747, 1703, 1688, 1650, 1530, 1472, 1519, 1405, 1369, 1356, 1284, 1237, 1231, 1156, 1201, 1168, 1165, 1110, 1174, 1086, 1060, 1067, 1064, 1124, 1075, 1111, 1064, 1017, 1126, 1113, 1090, 1107, 1115, 1134, 1131, 1157, 1098, 1111, 1113, 1135, 1164, 1123, 1145, 1127, 1155, 1223, 1257, 1282, 1201, 1264, 1191, 1202, 1287, 1307, 1334, 1343, 1358, 1340, 1337, 1450, 1481, 1503, 1514, 1553, 1498, 1618, 1560, 1693, 1663, 1831, 1844, 1853, 1866, 1905, 1927, 2055, 2076, 2054, 2159, 2216, 2214, 2298, 2354, 2393, 2416, 2438, 2462, 2572, 2562, 2608, 2668, 2696, 2677, 2782, 2760, 2783, 2739, 2808, 2712, 2890, 2813, 2831, 2822, 2962, 2890, 2946, 2808, 2941, 2847, 2949, 2858, 2875, 2948, 2931, 2997, 2875, 2947, 2859, 2971, 2943, 2967, 3099, 3104, 3051, 3094, 3099, 3154, 3299, 3186, 3372, 3376, 3511, 3589, 3641, 3745, 3735, 3736, 3869, 3901, 4023, 4162, 4254, 4184, 4269, 4312, 4479, 4656, 4516, 4622, 4702, 4751, 4931, 4759, 4985, 4926, 4948, 4943, 4953, 5016, 5033, 4968, 4939, 5120, 5035, 4957, 4903, 4886, 4766, 4799, 4643, 4664, 4689, 4525, 4426, 4442, 4470, 4360, 4196, 4316, 4325, 4057, 4189, 3998, 4067, 4152, 3934, 4043, 3874, 3933, 3837, 3847, 3861, 3826, 3784, 3729, 3865, 3722, 3826, 3800, 3757, 3794, 3740, 3844, 3755, 3807, 3917, 3765, 3792, 3843, 3793, 3793, 3929, 3967, 4000, 3872, 3928, 4007, 3857, 3998, 3965, 3938, 3995, 3813, 4030, 3993, 4063, 3959, 3937, 4174, 3947, 3963, 4025, 4012, 4101, 4039, 4140, 4202, 4149, 4366, 4251, 4187, 4404, 4427, 4455, 4555, 4663, 4740, 4784, 4951, 5188, 5334, 5267, 5435, 5608, 5753, 5992, 6233, 6417, 6771, 6897, 7155, 7386, 7754, 8028, 8220, 8460, 8964, 9295, 9588, 10045, 10484, 10868, 11173, 11602, 11847, 12453, 12751, 13123, 13458, 13810, 14314, 14387, 14941, 15600, 15739, 15966, 16652, 16655, 17065, 17317, 17676, 17656, 17687, 17854, 17805, 18099, 18359, 18494, 18218, 18064, 18312, 18076, 18177, 17775, 17589, 17300, 17139, 16677, 16397, 16153, 15948, 15449, 14955, 14393, 14069, 13852, 13030, 12745, 12325, 11634, 11408, 10691, 10162, 9592, 9147, 8630, 8096, 7701, 7304, 6798, 6499, 6037, 5507, 5270, 4793, 4573, 4168, 3795, 3562, 3283, 2988, 2923, 2571, 2406, 2120, 2048, 1840, 1708, 1518, 1432, 1313, 1160, 1136, 1003, 937, 889, 794, 750, 739, 664, 604, 550, 549, 504, 497, 493, 456, 440, 431, 382, 355, 353, 347, 333, 305, 309, 312, 273, 241, 295, 291, 276, 236, 260, 250, 228, 222, 233, 245, 238, 207, 209, 217, 202, 199, 222, 187, 216, 220, 186, 186, 199, 163, 177, 158, 169, 160, 160, 138, 153, 133, 148, 145, 151, 157, 102, 116, 131, 114, 140, 134, 111, 128, 120, 115, 119, 115, 104, 105, 118, 119, 118, 111, 101, 92, 87, 92, 79, 101, 93, 85, 90, 85, 82, 76, 107, 84, 87, 88, 69, 83, 93, 67, 69, 64, 67, 77, 75, 60, 76, 61, 67, 67, 70, 78, 63, 50, 59, 63, 53, 62, 74, 51, 53, 62, 54, 56, 48, 51, 46, 50, 46, 52, 48, 52, 39, 54, 51, 52, 37, 44, 57, 52, 38, 40, 40, 42, 25, 28, 39, 28, 42, 38, 39, 45, 37, 33, 29, 32, 38, 36, 39, 27, 37, 42, 31, 32, 31, 34, 39, 28, 35, 36, 33, 29, 37, 19, 34, 32, 26, 25, 22, 21, 27, 21, 24, 26, 22, 21, 22, 31, 18, 23, 20, 26, 19, 22, 19, 18, 23, 17, 17, 22, 14, 22, 22, 14, 23, 14, 20, 25, 15, 17, 16, 16, 18, 23, 23, 18, 22, 14, 14, 14, 19, 14, 9, 26, 16, 21, 17, 10, 18, 13, 18, 18, 23, 16, 9, 12, 11, 21, 18, 16, 11, 13, 12, 14, 17, 13, 7, 11, 13, 28, 10, 14, 19, 14, 8, 8, 14, 9, 17, 20, 13, 14, 19, 7, 18, 12, 6, 10, 12, 12, 13, 12, 14, 12, 7, 12, 6, 15, 12, 13, 9, 11, 14, 16, 12, 13, 14, 10, 14, 12, 12, 7, 13, 11, 20, 13, 17, 8, 5, 10, 11, 15, 15, 16, 8, 3, 11, 14, 12, 11, 15, 11, 7, 10, 16, 6, 8, 7, 7, 3, 13, 9, 8, 10, 15, 11, 9, 9, 11, 12, 10, 5, 10, 9, 9, 9, 12, 9, 11, 9, 12, 13, 13, 13, 14, 8, 8, 7, 11, 14, 19, 13, 9, 11, 17, 9, 10, 15, 13, 17, 12, 14, 19, 17, 15, 10, 18, 12, 16, 15, 23, 18, 11, 22, 17, 13, 18, 15, 13, 18, 14, 14, 22, 15, 17, 9, 12, 13, 15, 14, 19, 16, 11, 10, 13, 15, 4, 7, 13, 10, 8, 14, 11, 7, 7, 8, 6, 7, 10, 8, 7, 11, 7, 6, 7, 7, 5, 3, 10, 2, 7, 4, 8, 6, 6, 5, 7, 7, 5, 3, 1, 6, 4, 3, 3, 2, 2, 9, 4, 6, 8, 5, 7, 4, 4, 6, 3, 5, 10, 2, 7, 5, 5, 5, 1, 4, 4, 4, 2, 0, 0, 1, 0, 1, 1, 0, 0, 0, 2, -1, -1, -1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 1, 2, 3, 0, 0, 0, 0, 1, 0, 0, 1, 0, -1, -1, 60, 0, 0, 60, 60, 24, 7, 30, 1, 90, 90, 2, 2, 40, 0, 1, 1, 2, 2, 4, 4, 8, 1, 1, 4, 1, 1, 7, 5, 1, 5, 7, 4, 1, 4, 1, 4, 64, 512, 640, 1, 4, 64, 480, 512, 1, 2, 3, 4, 32, 96, 480, 32, 96, 480, 1, 1, 2, 2, 4, 4, 8, 1, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 1, 8, 2, 4, 4, 4, 5, 5, 7, 9, 0, 0, 3, 0, 3, 0, 3, 5, 10, 37, 38, 100, 100, 8, 1, 50, 50, 255, -1, 3, 0, 1, 1, 0, 2, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 2, 0, 0, 1, 1, 0, 0, 8, 1, 8, 1, 1, 1, 8, 8, 1, 1, 8, 8, 0, 0, 2, 3, 256, 256, 10, 3, 8, 3, 8, 400, 10, 10, 3, 20, 0, 0, 3, 255, 3, 0, 128, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 2, 77, 77, 2, 256, 256, 640, 480, 1, -8000, -2, -1, 0, 1, 2, 1, 1, 2, 1, 1, 8000, 0, 1, 2, 3, 4, 5, 2, 1, 1, 2, 1, 1, 8000, 1, 2, 10, 0, 8, 4, 255, 0, 0, 1, 400, 400, 0, 3, 20, 800, 800, 8, 1, 2, 2, 100, 350, 1, 255, 1, 0, 0, 1, 1, 5, 1, 4, 64, 512, 640, 1, 4, 64, 480, 512, 1, 2, 3, 4, 100, 100, 9, 1, 1, 2, 4, 16, 64, 512, 640, 1, 2, 4, 16, 64, 512, 640, -1, 100, 100, -1, 512, 512, 3, 5, 5, 100, 100, 5, 5, 1, 0, 0, 4, 5, 100, 100, 5, 5, 1, 0, 300, 400, 500, 0, 1, 1, 3, 10, 3, 0, 1, 64, 128, 0, 0, 0, 0, 1, 1, -1, 0, 1, 0, 360, 640, 480, 1, 0, 50, 0, 640, 480, 100, 255, 0, 512, 512, 1, 128, 7, 7, 96, 40, 96, 40, 8, 8, 1, 255, 0, 39, 7, 7, 7, 7, 3, 7, 7, 0, 128, 40, 40, 1, 255, 30, 6, 30, 4, 4, 4, 7, 7, 0, 0, 0, 7, 7, 0, 800, 800, 8, 1, 10, 800, 800, 8, 1, -1, 20, 0, 255, 1, 2, 3, 1, 5, 2, 3, 2, 5, 2, 2, 0, 1, 400, 400, 390, 255, 0, 1, 800, 800, 8, 1, 400, 400, 200, 255, -1, 100, 100, 20, 255, -1, 0, 128, 255, 2, 8, 3, 255, 0, 0, 0, 255, 0, 0, 2, 3, 0, 0, 1, 0, 0, 1, 0, 0, 17, 0, 0, 17, 0, 0, 17, 2, 1, 1, 17, 2, 2, 3, 0, 0, 0, 1, 0, 1, 2, 2, 5, 7, 7, 5, 7, 5, 1, 7, 5, 0, 0, 0, 0, 0, 1, 8, 3, 255, 0, 0, 100, 100, 8, 1, 100, 100, 100, 77, 0, 0, 10, 10, 0, 8, 1, 32, 32, 0, 512, 32, 0, 512, 32, 32, 32, 32, 32, 0, 1, 10, 10, 1, 8, 1, 10, 0, 5, 0, 4, 1, 1, 0, 2, 1, 10, 5, 9, 6, 8, 1, 13, 5, 1, 13, 5, 10, 10, 200, 200, 10, 1, 180, 50, 50, 10, 0, 0, 1, 180, 100, 0, 0, 0, 0, 1, 3, 10, 10, 400, 400, 255, 0, 255, 2, 255, 2, 640, 480, 1, 20, 10, 30, 10, 11, 256, 256, 1, 1, 1, 1, 1, 1, 1, 1, 640, 480, 1, -8000, -2, -1, 0, 1, 2, 1, 1, 2, 1, 1, 8000, 0, 1, 8, 0, 4, 8, 255, 0, 0, 640, 480, 1, 480, 640, 100, 480, 640, 100, 128, 0, 255, 0, 255, 0, 5, 5, 97, 12, 1, 1, 2, 3, 4, 0, 97, 2, 97, 2, 3, 97, 2, 97, 2, 3, 24, 0, 24, 1, 24, 1, 0, 6, 4, 6, 4, 24, 1, 1, 12, 1, 128, 128, 1, 16, 16, 7, 9, 4, 1, 16, 1, 16, 0, 512, 0, 512, 8, 1, 2, 7, 7, 100, 7, 7, 100, 0, 0, 255, 7, 7, 100, 500, 1, 1, 2, 3, 0, 0, 1, 2, 255, 255, 255, 2, 100, 1, 0, 0, 0, 50, 2, 0, 255, 255, 255, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 255, 1, 11, 1, 11, 1, 0, 0, 10, 1, 128, 128, 1, 0, 8, 1, 8, 1, 42, 255, 0, 8, 1, 50, 200, 3, 1, 2, 13, 2, 13, 1, 2, 13, 4, 2, 13, 4, 2, 13, 2, 13, 2, 11, 17, 1, 8, 1, 7, 2, 3, 4, 7, 9, 2, 1, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0, 2, 3, 7, 13, 2, 3, 7, 13, 0, 0, 0, 1, 1, 0, 1, 1, 5, 7, 2, 13, 2, 13, 3, 7, 9, 2, 1, 8, 7, 9, 2, 1, 8, 640, 480, 640, 480, 7, 8, 1, 6, 1, 6, 10, 1000, 10, 10, 10, 10, 1, 4, 3, 3, 3, 1, 0, 0, 1, 1, 0, 1, 2, 0, 1, 256, 1, 0, 0, 1, 1, 0, 299, 1, 8, 2, 0, 999, 0, 2, 0, 0, 512, 512, 16, 2, 512, 512, 512, 512, 0, 0, 512, 512, 16, 2, 512, 512, 512, 512, 2, 1, 0, 640, 480, 1, 640, 480, 1, 20, 10, 64000, 1024, 1024, 1, 64000, 1024, 1024, 1, 4, 0, 1, 2, 3, 256, 0, 255, 1, 0, 180, 0, 180, 1, 0, 1, 0, 2, 1, 2, 1, 3, 3, 1, 0, 640, 480, 1, 0, 640, 20, 0, 480, 255, 1, 0, 480, 20, 0, 640, 255, 1, 3, 3, 1, 4, 0, 2, 1, 2, 0, 0, 1, 1, 2, 2, 0, 0, 640, 480, 1, 640, 480, 1, 640, 480, 1, 640, 480, 1, 4, 4095, 4096, 4097, 4100, 256, 8, 1, 256, 8, 1, 7, 1, 3, 1, 3, 3, 2, 1, 3, 2, 1, 2, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 3, 3, 3, 3, 500, 500, 0, 1, 200, 0, 0, 1, 3, 3, 100, 156, 256, 256, 0, 3, 0, 0, 0, -1, 10, 0, 1000, 1000, 1000, 1000, 0, 0, 0, 0, 10, 10, 10, 0, 0, 10, 8, 3, 8, 1, 4, 0, 4, 2, 1, 1, 2, 2, 4, 2, 2, 0, 2, 0, 2, 3, 4, 2, 3, 4, 4, 3, 1, 1, 1, 1, 1, 2, 0, 3, 0, 3, 1, 0, 3, 2, 0, 0, 4, 0, 1, 0, 5, 3, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 2, 1, 1, 4, 2, 2, 3, 7, 4, 3, 0, 3, -1, 0, 1, 2, 0, 0, 1, 2, 7, 360, 640, 360, 640, 4, 640, 0, 0, 360, 640, 4, 640, 0, 0, 640, 360, 1, 4, 640, 0, 0, 360, 640, 360, 640, 3, 21, 2, 1000, 0, 640, 40, 1, 1, 1, 320, 30, 255, 640, 0, 1, 40, 0, 0, 40, 0, 640, 1, 0, 0, 8, 4, 0, 0, 1, 2, 3, 97, 255, 256, 257, 947, 1, 1, 0, 1, 0, 7, 1, 1, 10, 1, 1, 1, 1, 2, 3, 0, 0, 1, 1, 0, 0, 1, 2, 48, 2, 48, 1, 10, 0, 1024, 1024, 1, 0, 256, 128, 30, 1, 256, 0, 255, 1, 1000, 0, 1, 64, 64, 0, 0, 0, 0, 1, 1, 1, 1, 100, 100, 100, 100, 100, 100, 1, 2, 3, 4, 0, 2, 1, 1, 2, 0, 3, 3, 0, 0, 3, 2, 1, 0, 0, 4, 1, 1, 2, 4, 13, 64, 1000, 1, 2, 4, 13, 64, 1000, 5, 1, 2, 3, 4, 8, 1, 2, 3, 4, 8, 1, -1, 1, 30, 1, 1, 0, 0, 0, 0, 50, 1, 2, 3, 1, 2, 3, 100, 1, 2, 3, 1, 2, 3, 50, 1, 2, 3, 100, 1, 2, 3, 100, 100, -1, 50, 0, 20, 1000, 10, 512, 10, 512, 1, 2, 3, 4, 1, 11, 2, 11, 1, 2, 1, 1, 1, 2, 3, 6, 12, 0, 1, 3, 1, 1, 3, 0, 1, 1, 3, 1, 2, 1, 3, -1, 1, 3, -1, 1, 3, 0, 255, 5, 8, 3, 0, 1, 1, 100, 2, 1, 1, 255, 0, 0, -1, 8, 1, 255, 1, 180, 60, 0, 0, 1000, 1000, -1000, 1000, 0, 255, 0, 5, 5, -1, -1, 30, 1, 3, 0, 1, 2, 0, 2, 0, 0, 1, 1, 1, 0, 1, 8, 6, 3, 15, 0, 3, 3, 4, 1, 0, 0, 1, 1, 0, 3, 3, 0, 3, 3, 640, 480, 1, 640, 480, 1, 1, 3, 15, 0, 3, 1, 3, 3, 3, 3, 4, 1, 3, 3, 4, 1, 3, 3, 3, 3, 3, 4, 3, 4, 1, 1, 1, 1, 0, 2, 0, 1, 2, 1, 0, 2, 0, 1, 2, 1, 3, 3, 3, 3, 30, -1, 0, 1, 1, 1, 2, 3, 4, 641, 481, 1, 0, 0, 1, 1, 100, 1, 1, 639, 479, 0, 0, 639, 479, 100, 0, 40, 100, 0, 1, 40, 0, 32, 32, 7, 7, 0, 0, 0, 0, 1024, 1024, 8, 1, 1024, 1024, 8, 1, 0, 0, 512, 1024, 512, 255, 512, 0, 512, 1024, 255, 0, 16, 1024, 16, 255, 16, 0, 16, 1024, 255, 0, 0, 255, 320, 400, 640, 480, 1024, 768, 8, 1, 8, 1, 0, 0, 2, 1, 1, 128, 128, 1, 0, 1, 1, 1, 1, 2, 1, 2, 1, 3, 4, 7, 20, 7, 7, 3, 3, 1, 49, 1, 2, 13, 13, 1, 11, 12, 11, 12, 0, 7, 8, 9, 7, 8, 9, 1, 100, 100, -100, 0, 500, 0, 0, 0, 99, 0, 100, 100, -100, 0, -200, 0, 1, 3, 5, 7, 1, 1, 1, 1, 6, 0, 1, 1, 8, 8, 8, 8, 1, 1, 10, 10, 0, 1, 1, 1, 10, 10, 10, 0, 0, 1, 1, 100, 2, 1, 1, 0, 0, 4, 4, 1, 7, 7, 5, 1, 5, 100, 5, 95, 10, 2, 3, 0, 0, 0, 0, 1, 1, 0, 2, 2, 1, 0, 3, 1, 1, 4, 1, 2, 5, 0, 1, 0, 1, 0, 0, 0, 1, 1, 3, 3, 5, 7, 1, 3, -1, 3, 5, 7, 1, 3, 0, 3, 5, 7, 2, 1, 1, 3, 12, 1, 3, 3, 5, 7, 1, 3, 1, 3, 3, 4, 5, 1, 3, 0, 1, 2, 1, 3, 0, 3, 4, 5, 2, 1, 1, 2, 5, 1, 32, 128, 0, 32, 4, 1, 256, 32, 1, 256, 32, 3, 0, -8, 1, 1, 3, 2, -2, -1, 0, 1, 2, 4, 2, 3, 1111638029, 64, 64, 45, 3, 64, 64, 1, 1, 127, 20, 20, 255, 0, 0, 100, 100, 50, 50, 1, 1, 0, 0, 0, -16, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 60, 60, 503, 61, 100, 1000, 10000, 21, 21, 0, 304, 401, 403, 503, 500, 1, 0, 0, 100, 97, -5, 1, 0, -5, 1, 0, 0, 0, 0, 0, 4096, 64, 0, 0, 0, 0, 0, 0, 0, 20, 1, 1, 5, 10, -2, 10, 1, 1, 4, 0, 3, 4, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 5, 0, 404, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 3, 50, 2, 500000, 0, 0, 0, 0, 0, 0, 0, 4, 1, 2, 1, 2, 1, 1, 2, 1, -1, 10, 25, 4, 1, 2, -1, 10, 25, -1, 3, 10, 65, 1, -1, 10, 25, -1, 3, 10, 65, 2, -1, 10, 25, -1, 3, 10, 65, 1, 30, 85, 200, -1, 1, 101, 102, 105, 105, 102, -1, -1, -1, -1, 5, 5, 240, 170, -1, 280, 400, 0, 0, 400, 1, 4, 1, 2, 1, 1, 40, 30, -1, 10, 10, 10, -1, 38, 8, 150, 20, -1, 38, 60, -1, 38, 80, -1, 38, 100, -1, 40, 180, -1, 40, 200, -1, 40, 220, -1, 1, 1, 50, 38, 120, 150, -1, 1, 40, 240, 1, 3, 1, 3, 1, 3, 800, 400, 0, 0, 1, 60, 60, 24, 30, 1, 4, 0, 1, 1, 4, 1, 0, 1, 1, 0, 1, 2, 0, 1, 0, 1, 30, 59, 3, 60, 1, 4, 2, 58, 3, 60, 1, 4, 2, 24, 55, 3, 24, 1, 4, 2, 3, 20, 1, 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 50, 100, 2, 1, 2, 1, 1, 1, 0, 0, 1, 0, 0, 0, 2, 0, 2, 2, -1, 0, 0, 2, 0, 1, 2, 10, 1000, 10, -1, 1, -1, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 420, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3072, -1, 1, 0, 0, 1, 2, 0, 0, 0, 0, 1024, 0, 1025, 0, 10, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 32768, 512, 0, 0, 0, 0, 0, 65535, 1, 0, 0, 0, 9123, 9125, 1, 1, 0, -1, 0, 0, 0, 99, 0, -1, -1, -1, 512, 1, 0, 512, 1, -1, 0, 0, 0, 1, 0, 0, 200, 0, 0, 1024, 1024, 2000, 4680, 2, 10, 0, 0, 10, 10, 2, 5, 0, 1, 0, 0, 1, 2, 1, 1, 8192, 8192, 0, 0, 1, 5000, 5, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 5, 1, 1, 0, 1, 0, 0, 1, 2, 2, 5, 0, 1, 2, 2, 6, 2, 4, 8, 4, 4, 8, 8, 12, 16, 4, 8, 8, 8, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 3, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 60, 2, 2, 3, 0, 1, 2, 2, 2, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 3, 3, 2, 5, 0, 1, 1, 1, 3, 0, -1, 0, 1, -1, 1, 3, 0, 3, 5, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 3, 0, 0, -1, 0, 1, 0, -1, 0, 1, 2, 1, 1, 0, 1, 1, -1, -1, 1, 1, 1, 0, 4, 8, 0, 50, 500, 5000000, 1, 2, 8, 0, -1, 0, 1, -1, 0, 1, -1, 1, -1, 0, 1, 0, -1, -1, -1, 1, 1, 1, 0, 1, 0, 0, 1, 2, 2, 1, 1, 0, 0, 2, 16, 2, 16, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 0, 10, 10, 50, 1, 3, 1, 0, 0, 0, 0, 0, 5, 25, 50, 75, 95, 4, 2, 2, 0, 3, 1, 5000, 5000, 0, -1, -1, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, -4, 0, 8, 4, 8, 0, 8, 1, 1, 0, 0, 5000, 0, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1, 0, 0, 0, 0, 1, -1, 0, -1, 1, -1, 0, 1, 1, -1, -1, 1, -1, 0, 1, 1, -1, -1, -1, 0, 1, 0, 2, 2, 2, 0, 3, 50, 0, 2, 2, 1, 1, 2, 50, 0, 2, 2, 1, 1, 2, 2, 2, 2, 0, 50, 3, 0, 1, 2, 2, 1, 0, 2, 2, 0, 3, 0, 1, 2, 2, 0, 2, 1, 2, 1, 2, 20, 10, 10, 0, 100, -1, 2, -1, 2, -1, -1, 1, 1, 4, 1, 1, 0, 1, 2, 3, 3, 4, 0, 1, 0, 1, 2, -1, -1, 4, 3, -2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 3, 1, 2, 3, 0, 1, 1, 2, 2, 2, 3, 2, 3, 0, 0, 0, 0, 0, 640, 480, 0, 0, 10, 2, 0, 1, 0, 2, 2, 2, 3, 0, -1, -2, 0, 60, 1, 1, 0, 0, 0, 0, 200, 3, 3, 6, 3, 6, 64, 0, 0, 0, 0, 1, 100, 10, 3, 3, 0, 256, 0, 0, 0, 4, 0, 10, 0, 10, 3, 1000, 10000, 200, 4, 0, 0, 0, 0, 0, 2, 5, 0, 7, 3, 2, 12, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 1, 1, 0, 10, 1, 0, 8, 1, 2, 60, 0, 1, 2, 3, 3, 0, 3, 0, 40960, 33261, 33188, -1, 1, 2, 3, -12, 1, 2, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 2, -3, -3, 11, 11, 33188, 33261, 40960, 1, 2, 1, 1, 1, 0, 57344, 57344, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 4, 1, 3, 3, 1, 3, 1, 4, 1, 1, 1, 1, 4, 1, 2, 3, 3, 1, 2, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 400, 409, 401, 400, 400, -1, 404, 400, 409, 404, 0, 0, 400, 50000000, 72000, 0, 0, 400, 0, 0, 0, 0, 0, 0, -1, 1, -1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, -1, 7, 3, 1, 12, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 20, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 3, 4, 0, 1, 1, 1, 1, 0, 0], "float": [37.444, 617.166, 617.166, 45.0, 3.0, 11.545, 45.0, 3.0, 11.545, 11.545, 45.0, 3.0, 11.545, 45.0, 3.0, 34.5, 34.5, 1.666, 75.0, 4.0, 4.5, 51.5, 29.0, 30.333, 45.0, 32.0, 5.5, 311.46, 0.6, 24.16, 341.19, 0.66, 26.46, 97010.8, 0.36, 583.77, 116412.96, 0.44, 700.53, 0.0, 1e-10, 2.0, 2.0, 5.0, 2.0, 5.0, 0.001, 5.0, 5.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.001, 0.03012013, 0.6, 0.5, 0.75, 0.5, 1.5, 0.75, 0.8, 0.75, 1.25, 2.5, 2.0, -96.8016128540039, 29.7633724212646, -95.3631439208984, 32.78205871582, 1e-05, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 5.0, 5.0, 0.1, 1e-06, 1e-09, 1e-05, 1e-09, 1.0, 1e-09, 0.1, 0.05, 0.23, 0.05, 0.23, 0.5, 0.17, -95.363151, 29.763374, -95.448601, 29.713803, 3.5, 72.0, 1.125, 72.0, 6.0, 6.0, 5.5, 0.3, 0.3, 0.3, 0.2, 0.3, 0.3, 0.4, 0.7, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 100.0, 0.0, 1.0, 0.05, 1.0, 1.0, 0.007, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 17.48, 1.0, 1.0, 0.0, 0.0, 0.0086, 0.12, 0.5, 3.0, 0.5, 0.1, 0.5, 0.0003, 0.9, 0.0, 0.5, 0.5, 1.0, 1e-08, 1.0, 1e-08, 2.0, 1e-08, 2.5, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.9, 0.2, 3.18, 0.0, 90000000.0, 1.0, 0.9, 2.0, 1.0, 3.0, 0.3, 0.0, 3.0, 0.3, 0.0, 1e-08, 1.5, 1e-08, 2.0, 1e-08, 2.5, 0.0, 0.5, 1.1, 0.5, 0.5, 1.1, 0.5, 1.0, 2.0, 2.0, 4.0, 4.0, 20.0, 20.0, 20.0, 20.0, 2.0, 0.005, 2.0, 0.0, 1.0, 10000000.0, 0.0, 3.0, 0.3, 4.0, 0.0, 1.0, 0.25, 2.0, 0.25, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 3.5, 2.5, 3.5, 0.5, 5.0, 1.8, 1.0, 2.0, 0.5, 0.0, 0.1, 0.1, 500000000.0, 0.0, 0.6, 0.0, 3.0, 6.4, 15.774, 0.0, 2.0, 1.1, 1.1, 510.996, 2.5, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.1, 0.5, 0.01, 2.0, 0.25, 0.7, 0.3, 0.5, 1e-08, 2.0, 0.25, 0.0, 0.7, 0.3, 0.5, 0.7, 0.0, 0.3, 0.5, 2.0, 1.0, 1.0, 0.0, 0.001, 1.0, 1.0, 1.0, 0.0, 1e-08, 0.8, 0.8, 100.0, 1.0, 0.6, 20.0, 0.6, 0.5, 100.0, 1.1, 0.3, 5.0, 5.0, 2.0, 0.001, 0.001, 0.001, 1.0, 0.01, 0.01, 0.03, 255.0, 2.3, 0.0, 1.0, 0.01, 0.0, 0.0, 1.0, 2.0, 0.0, 360.0, 0.0, 10.0, 1.0, 1.0, 0.0, 0.01, 0.01, 0.1, 0.01, 0.01, 0.01, 0.1, 0.01, 0.1, 0.1, 1.0, 0.0, 1.0, 0.0, 1e-06, 320.0, 240.0, 320.0, 320.0, 1.0, 0.1, -1.0, 1.0, -1.0, 1.0, -100.0, 100.0, 50.0, 4.0, 54.0, 200.0, 1000.0, 0.5, 2.0, 2.3, 2.4, 3.0, 37.1786, 2.4, 10000000.0, 1000000000.0, 2.4, 7.0, 7.0, 7.0, 0.0, 0.04, 0.1, 0.1, 1.0, 1.0, 1.0, 0.108, 0.5, 0.5, 0.5, 0.5, 1e-05, 1000.0, 0.1, 0.001, 0.1, 0.01, 0.01, 0.01, 0.01, 0.04, 0.01, 0.01, 1e-06, 1e-06, 1.5, 2.5, 3.5, 1.0, -0.5, -0.1, 0.1, 0.5, 0.5, 0.7370523437688349, 0.6428259145136734, 0.1567738743689836, 1.0, 1.0, 0.0, 0.0, 0.0, 0.1, -0.02, -0.05, 0.04, 0.02, 0.1, 0.1, 1.0, 0.0, 1.0, 0.0, 10.0, 100.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1e-05, 1.0, 100.0, 1.0, 0.0, 0.5, 1.0, 0.0, 0.5, 0.1, 0.5, 1.0, 1.0, 1.0, 10.0, 887.2057, 0.6, 1.0, 2.0, 0.6, 1.0, 10.0, 50.0, 100.0, 200.0, 100.0, 1e-08, 5.0, 0.0, 2.0, 5.0, 0.0, 2.0, 1.0, 0.1, 5.0, 2.0, 2.0, 2.0, 0.0, 0.002597943, 16.7, -0.5, 0.0, 5.0, 100.0, 1.0, 0.1, 887.2057, 1.0, 2.0, 3.0, 2.0, 2.0, -1.0, 2.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, -1.0, -4.0, 1.0, 10.0, 7.0, 2.0, 3.0, 1.0, 1.5, 0.75, 0.25, 0.01, 0.01, -1.3, 0.4, 2.0, -0.0, 0.2, 1.0, 1e-07, 1e-05, -0.5, 0.0, 0.1, -0.02, -0.05, 0.04, 0.02, 0.1, 0.002, 0.2, 0.3, 0.0, 1.0, 0.0, 0.2], "bool": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "unicode": ["067232959", "067232959", "Sams Teach Yourself Django in 24 Hours", "067232959", "Sams Teach Yourself Django in 24 Hours", "067232959", "Sams Teach Yourself Django in 24 Hours", "The Definitive Guide to Django: Web Development Done Right", "The Definitive Guide to Django: Web Development Done Right", "Python Web Development with Django", "The Definitive Guide to Django: Web Development Done Right", "013790395", "Artificial Intelligence: A Modern Approach", "Morgan Kaufmann", "Prentice Hall", "Apress", "Jonno's House of Books", "Sams", "Morgan Kaufmann", "Prentice Hall", "Apress", "Jonno's House of Books", "Sams", "Jonno's House of Books", "Artificial Intelligence: A Modern Approach", "Prentice Hall", "Peter Norvig", "Practical Django Projects", "Apress", "James Bennett", "Python Web Development with Django", "Prentice Hall", "Jeffrey Forcier", "Sams Teach Yourself Django in 24 Hours", "Sams", "Brad Dayley", "Adrian Holovaty", "Adrian Holovaty", "Adrian Holovaty", "Artificial Intelligence: A Modern Approach", "Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp", "Practical Django Projects", "Python Web Development with Django", "Sams Teach Yourself Django in 24 Hours", "The Definitive Guide to Django: Web Development Done Right", "Artificial Intelligence: A Modern Approach", "Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp", "Artificial Intelligence: A Modern Approach", "Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp", "<time class=\"timesince\" datetime=\"%s\">%s</time>", "<span class=\"shipit-count\"><img src=\"%s\" width=\"9\" height=\"8\" alt=\"%s\" title=\"%s\" /> %s</span>", "<img src=\"%s\" width=\"%s\" height=\"%s\" alt=\"%s\" title=\"%s\" />", "\u00bb", "\u00bb To Me", "<div title=\"%s\"><b>&raquo;</b></div>", "<img src=\"%s\" width=\"%s\" height=\"%s\" alt=\"%s\" title=\"%s\" />", "<span class=\"%s\">[%s] </span>", "%s", "All Outgoing Review Requests", "All My Review Requests", "Incoming Review Requests to Me", "Incoming Review Requests to %s", "All Incoming Review Requests to My Groups", "Starred Review Requests", "All Incoming Review Requests", "", "<Organization: %s (id: %s)>", "Mock model", "Mock models", "Mock model", "Mock models", "Mock model", "Mock models", "<SearchResult: haystack.mockmodel (pk='1')>", "<SearchResult: haystack.mockmodel (pk='1')>", "<SearchResult: haystack.mockmodel (pk='1')>", "Mock model", "Mock models", "", "", "1", "1", "0", "test", "on", "1", "0", "0", "", "x", "1", "1", "0", "x", "John Steinbeck", "Vladimir Mayakovsky", "Brooklyn Bridge", "Giordanos", "Chicago", "Joe Perry", "Joe Perry", "Jack Berry", "Joe Perry", "54", "55", "Giordanos", "Chicago", "Product with this Slug already exists.", "12.00", "12.00", "Price with this Price and Quantity already exists.", "Test Repo", "Revision with this Repository and Revision already exists.", "Red Vipers", "Please correct the duplicate data for slug.", "Please correct the duplicate data for price and quantity, which must be unique.", "Please correct the duplicate data for title.", "Please correct the duplicate values below.", "Please correct the duplicate data for title which must be unique for the date in posted.", "Please correct the duplicate values below.", "Please correct the duplicate data for slug which must be unique for the year in posted.", "Please correct the duplicate data for subtitle which must be unique for the month in posted.", "Leave blank for USA.", "{0}, {1}  {2}", "\n", ", ", "\n", "%s (%s)", "\n", "%s: %s (%s)", "%s: %s", " ", "c/o %s", "\n", ", ", "%s: %s", "{0}, #{1}", "\n", "Addresses in prison", "%s: %s", "%s: %s, %s", "Volume %s Number %s", "%s: %s", "%s: %s", "%s: %s, %s", "%Y-%m-%d", "<a href=\"%s\"><img src=\"%s\"></a>", "<a href=\"%s\"><img src=\"%s\"></a>", "<tr><th>%(label)s", "<td>%(errors)s%(field)s%(help_text)s</td>", "<tr><td colspan=\"2\">%s</td></tr>", "<br />%s", "GA Engine stop criteria depending on stop flag file.", "Function run every generation printing erorr and time stats", "Custom genome initializer with constraints ported from C++.", "Custom mutation operator adhering to the constraints.", "Custom crossover operator adhering to the constraints.", "", "", " ", "A public G+ post", "%s...", "\n <entry>\n  <title>{title}</title>\n  <link href=\"{permalink}\" rel=\"alternate\" />\n  <updated>{postatomdate}</updated>\n  <published>{postatompubdate}</published>\n  <id>tag:plus.google.com,{postdate}:/{id}/</id>\n  <summary type=\"html\">{summary}</summary>\n </entry>\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\" xml:lang=\"en\">\n <title>{author} - Google+ Public Posts</title>\n <link href=\"https://plus.google.com/{userid}\" rel=\"alternate\" />\n <link href=\"{requesturi}\" rel=\"self\" />\n <id>https://plus.google.com/{userid}</id>\n <updated>{lastupdate}</updated>\n <author>\n  <name>{author}</name>\n </author>\n{entrycontent}\n</feed>\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>No Public Items Found for {userid}</title>\n  <link href=\"https://plus.google.com/{userid}\" rel=\"alternate\"></link>\n  <link href=\"{requesturi}\" rel=\"self\"></link>\n  <id>https://plus.google.com/{userid}</id>\n  <updated>{lastupdate}</updated>\n  <entry>\n    <title>No Public Items Found</title>\n    <link href=\"http://plus.google.com/{userid}\"/>\n    <id>https://plus.google.com/{userid}</id>\n    <updated>{lastupdate}</updated>\n    <published>{lastupdate}</published>\n    <summary>Google+ user {userid}  has not made any posts public.</summary>\n  </entry>\n</feed>\n", "\\", "\\", "http://%s%s", "yes", "no", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "other", "", "", "", "", "", "yes", "yes", "no", "yes", "no", "yes", "yes", "\u0101", "potato", "\u0101", "potato", "potato", "\u0101", "\u0101", "\u0101", "http://www.w3.org/1999/xhtml", "\u0101", "http://www.w3.org/1999/xhtml", "\u0101", "http://www.w3.org/1999/xhtml", "span", "\u0101", "potato", "http://www.w3.org/1999/xhtml", "span", "potato", "\u0101", "http://www.w3.org/1999/xhtml", "\u0101", "\u0101", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>\u03b2</html>", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>&gt;</html>", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>&beta;</html>", "%s.date_field is required.", "No %s available", "No %s available", "Invalid date string '%s' given format '%s'"], "str": ["datetime", "pickle", "decimal", "Decimal", "operator", "attrgetter", "django.core.exceptions", "FieldError", "django.db.models", "Count", "Max", "Avg", "Sum", "StdDev", "Variance", "F", "Q", "django.test", "TestCase", "Approximate", "skipUnlessDBFeature", "models", "Author", "Book", "Publisher", "Clues", "Entries", "HardbackBook", "AggregationTests", "TestCase", "assertObjectAttrs", "kwargs", "self", "obj", "attr", "value", "iteritems", "kwargs", "assertEqual", "self", "getattr", "obj", "attr", "value", "test_aggregates_in_where_clause", "self", "\n        Regression test for #12822: DatabaseError: aggregates not allowed in\n        WHERE clause\n\n        Tests that the subselect works and returns results equivalent to a\n        query with the IDs listed.\n\n        Before the corresponding fix for this bug, this test passed in 1.1 and\n        failed in 1.2-beta (trunk).\n        ", "qs", "annotate", "values", "objects", "Book", "contact", "Max", "id", "qs", "values_list", "order_by", "qs", "contact", "id__max", "flat", "True", "books", "order_by", "objects", "Book", "id", "qs1", "filter", "books", "id__in", "qs", "qs2", "filter", "books", "id__in", "list", "qs", "assertEqual", "self", "list", "qs1", "list", "qs2", "test_aggregates_in_where_clause_pre_eval", "self", "\n        Regression test for #12822: DatabaseError: aggregates not allowed in\n        WHERE clause\n\n        Same as the above test, but evaluates the queryset for the subquery\n        before it's used as a subquery.\n\n        Before the corresponding fix for this bug, this test failed in both\n        1.1 and 1.2-beta (trunk).\n        ", "qs", "annotate", "values", "objects", "Book", "contact", "Max", "id", "qs", "values_list", "order_by", "qs", "contact", "id__max", "flat", "True", "list", "qs", "books", "order_by", "objects", "Book", "id", "qs1", "filter", "books", "id__in", "qs", "qs2", "filter", "books", "id__in", "list", "qs", "assertEqual", "self", "list", "qs1", "list", "qs2", "test_annotate_with_extra", "self", "\n        Regression test for #11916: Extra params + aggregation creates\n        incorrect SQL.\n        ", "shortest_book_sql", "\n        SELECT name\n        FROM aggregation_regress_book b\n        WHERE b.publisher_id = aggregation_regress_publisher.id\n        ORDER BY b.pages\n        LIMIT 1\n        ", "qs", "annotate", "extra", "objects", "Publisher", "select", "name_of_shortest_book", "shortest_book_sql", "total_books", "Count", "book", "list", "qs", "skipUnlessDBFeature", "supports_subqueries_in_group_by", "test_aggregate", "self", "assertEqual", "self", "aggregate", "order_by", "objects", "Author", "name", "Avg", "age", "age__avg", "Approximate", "places", "assertEqual", "self", "aggregate", "objects", "Book", "Sum", "pages", "pages__sum", "assertEqual", "self", "aggregate", "objects", "Book", "Sum", "pages", "Avg", "pages", "pages__sum", "pages__avg", "Approximate", "places", "assertEqual", "self", "aggregate", "values", "objects", "Book", "Sum", "pages", "Avg", "pages", "pages__sum", "pages__avg", "Approximate", "places", "assertEqual", "self", "aggregate", "extra", "objects", "Book", "select", "price_per_page", "price / pages", "Sum", "pages", "pages__sum", "test_annotation", "self", "obj", "get", "extra", "annotate", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "manufacture_cost", "price * .5", "pk", "assertObjectAttrs", "self", "obj", "contact_id", "id", "isbn", "mean_auth_age", "name", "Sams Teach Yourself Django in 24 Hours", "pages", "price", "Decimal", "23.09", "pubdate", "date", "datetime", "publisher_id", "rating", "assertTrue", "self", "manufacture_cost", "obj", "manufacture_cost", "obj", "Decimal", "11.545", "obj", "get", "annotate", "extra", "objects", "Book", "select", "manufacture_cost", "price * .5", "mean_auth_age", "Avg", "authors__age", "pk", "assertObjectAttrs", "self", "obj", "contact_id", "id", "isbn", "mean_auth_age", "name", "pages", "price", "Decimal", "23.09", "pubdate", "date", "datetime", "publisher_id", "rating", "assertTrue", "self", "manufacture_cost", "obj", "manufacture_cost", "obj", "Decimal", "11.545", "obj", "get", "values", "extra", "annotate", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "manufacture_cost", "price * .5", "pk", "manufacture_cost", "obj", "manufacture_cost", "assertTrue", "self", "manufacture_cost", "manufacture_cost", "Decimal", "11.545", "obj", "manufacture_cost", "assertEqual", "self", "obj", "contact_id", "id", "isbn", "mean_auth_age", "name", "pages", "price", "pubdate", "publisher_id", "rating", "Decimal", "23.09", "date", "datetime", "obj", "get", "extra", "annotate", "values", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "manufacture_cost", "price * .5", "pk", "manufacture_cost", "obj", "manufacture_cost", "assertTrue", "self", "manufacture_cost", "manufacture_cost", "Decimal", "11.545", "obj", "manufacture_cost", "assertEqual", "self", "obj", "contact_id", "id", "isbn", "mean_auth_age", "name", "pages", "price", "pubdate", "publisher_id", "rating", "Decimal", "23.09", "date", "datetime", "obj", "get", "values", "extra", "annotate", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "price_per_page", "price / pages", "name", "pk", "assertEqual", "self", "obj", "name", "obj", "get", "values", "extra", "annotate", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "price_per_page", "price / pages", "name", "mean_auth_age", "pk", "assertEqual", "self", "obj", "mean_auth_age", "name", "qs", "filter", "values", "annotate", "objects", "Book", "n_authors", "Count", "authors", "name", "n_authors__gt", "assertQuerysetEqual", "self", "qs", "name", "b", "b", "obj", "get", "extra", "annotate", "values", "objects", "Book", "name", "mean_auth_age", "Avg", "authors__age", "select", "price_per_page", "price / pages", "pk", "assertEqual", "self", "obj", "mean_auth_age", "name", "assertEqual", "self", "len", "values", "annotate", "objects", "Author", "Avg", "friends__age", "qs", "annotate", "order_by", "annotate", "values", "objects", "Book", "price", "oldest", "Max", "authors__age", "oldest", "price", "Max", "publisher__num_awards", "assertQuerysetEqual", "self", "qs", "price", "oldest", "publisher__num_awards__max", "Decimal", "30", "price", "oldest", "publisher__num_awards__max", "Decimal", "29.69", "price", "oldest", "publisher__num_awards__max", "Decimal", "23.09", "price", "oldest", "publisher__num_awards__max", "Decimal", "75", "price", "oldest", "publisher__num_awards__max", "Decimal", "82.8", "b", "b", "test_aggrate_annotation", "self", "vals", "aggregate", "annotate", "all", "objects", "Book", "num_authors", "Count", "authors__id", "Max", "pages", "Max", "price", "Sum", "num_authors", "Avg", "num_authors", "assertEqual", "self", "vals", "num_authors__sum", "num_authors__avg", "pages__max", "price__max", "Approximate", "places", "Decimal", "82.80", "test_field_error", "self", "assertRaises", "self", "FieldError", "aggregate", "all", "objects", "Book", "num_authors", "Count", "foo", "assertRaises", "self", "FieldError", "annotate", "all", "objects", "Book", "num_authors", "Count", "foo", "assertRaises", "self", "FieldError", "aggregate", "annotate", "all", "objects", "Book", "num_authors", "Count", "authors__id", "Max", "foo", "test_more", "self", "assertEqual", "self", "count", "annotate", "objects", "Book", "num_authors", "Count", "authors", "vals", "aggregate", "annotate", "objects", "Book", "num_authors", "Count", "authors", "Max", "num_authors", "assertEqual", "self", "vals", "num_authors__max", "vals", "aggregate", "annotate", "objects", "Publisher", "avg_price", "Avg", "book__price", "Max", "avg_price", "assertEqual", "self", "vals", "avg_price__max", "vals", "aggregate", "objects", "Book", "number", "Max", "pages", "select", "Max", "pages", "assertEqual", "self", "vals", "number", "select", "obj", "values", "annotate", "select_related", "objects", "Book", "publisher", "num_authors", "Count", "authors", "assertEqual", "self", "obj", "contact_id", "id", "isbn", "name", "num_authors", "pages", "price", "pubdate", "publisher_id", "rating", "Decimal", "82.8", "date", "datetime", "assertEqual", "self", "len", "annotate", "objects", "Book", "num_authors", "Count", "authors", "assertEqual", "self", "len", "filter", "annotate", "objects", "Book", "num_authors", "Count", "authors", "num_authors__gt", "assertEqual", "self", "len", "exclude", "annotate", "objects", "Book", "num_authors", "Count", "authors", "num_authors__gt", "assertEqual", "self", "len", "exclude", "filter", "annotate", "objects", "Book", "num_authors", "Count", "authors", "num_authors__lt", "num_authors__lt", "assertEqual", "self", "len", "filter", "exclude", "annotate", "objects", "Book", "num_authors", "Count", "authors", "num_authors__lt", "num_authors__lt", "test_aggregate_fexpr", "self", "qs", "values", "order_by", "filter", "annotate", "objects", "Publisher", "num_books", "Count", "book", "num_books__lt", "F", "num_awards", "name", "name", "num_books", "num_awards", "assertQuerysetEqual", "self", "qs", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "p", "p", "qs", "values", "order_by", "exclude", "annotate", "objects", "Publisher", "num_books", "Count", "book", "num_books__lt", "F", "num_awards", "name", "name", "num_books", "num_awards", "assertQuerysetEqual", "self", "qs", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "p", "p", "qs", "values", "order_by", "filter", "annotate", "objects", "Publisher", "num_books", "Count", "book", "num_awards__gt", "F", "num_books", "name", "name", "num_books", "num_awards", "assertQuerysetEqual", "self", "qs", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "p", "p", "qs", "values", "order_by", "exclude", "annotate", "objects", "Publisher", "num_books", "Count", "book", "num_books__lt", "F", "num_awards", "name", "name", "num_books", "num_awards", "assertQuerysetEqual", "self", "qs", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "num_books", "name", "num_awards", "p", "p", "test_db_col_table", "self", "qs", "annotate", "values", "objects", "Clues", "EntryID__Entry", "Appearances", "Count", "EntryID", "Distinct_Clues", "Count", "Clue", "distinct", "True", "assertQuerysetEqual", "self", "qs", "qs", "annotate", "objects", "Entries", "clue_count", "Count", "clues__ID", "assertQuerysetEqual", "self", "qs", "test_empty", "self", "assertEqual", "self", "count", "filter", "objects", "Book", "id__in", "vals", "aggregate", "filter", "objects", "Book", "id__in", "num_authors", "Count", "authors", "avg_authors", "Avg", "authors", "max_authors", "Max", "authors", "max_price", "Max", "price", "max_rating", "Max", "rating", "assertEqual", "self", "vals", "max_authors", "max_rating", "num_authors", "avg_authors", "max_price", "None", "None", "None", "None", "qs", "values", "annotate", "filter", "objects", "Publisher", "pk", "num_authors", "Count", "book__authors", "avg_authors", "Avg", "book__authors", "max_authors", "Max", "book__authors", "max_price", "Max", "book__price", "max_rating", "Max", "book__rating", "assertQuerysetEqual", "self", "qs", "max_authors", "name", "num_awards", "max_price", "num_authors", "max_rating", "id", "avg_authors", "None", "None", "None", "None", "p", "p", "test_more_more", "self", "assertQuerysetEqual", "self", "order_by", "annotate", "objects", "Book", "num_authors", "Count", "authors", "publisher__name", "name", "Practical Django Projects", "The Definitive Guide to Django: Web Development Done Right", "Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp", "Artificial Intelligence: A Modern Approach", "Python Web Development with Django", "Sams Teach Yourself Django in 24 Hours", "b", "name", "b", "qs", "annotate", "select_related", "filter", "objects", "Book", "rating__lt", "Avg", "authors__age", "assertQuerysetEqual", "self", "qs", "Approximate", "places", "b", "name", "b", "authors__age__avg", "b", "name", "publisher", "b", "name", "contact", "b", "qs", "order_by", "annotate", "values", "extra", "objects", "Book", "select", "pub", "publisher_id", "pub", "Count", "id", "pub", "assertQuerysetEqual", "self", "qs", "pub", "id__count", "pub", "id__count", "pub", "id__count", "pub", "id__count", "b", "b", "qs", "order_by", "annotate", "values", "extra", "objects", "Book", "select", "pub", "foo", "publisher_id", "pages", "pub", "Count", "id", "pub", "assertQuerysetEqual", "self", "qs", "pub", "id__count", "pub", "id__count", "pub", "id__count", "pub", "id__count", "b", "b", "ids", "order_by", "filter", "annotate", "filter", "objects", "Book", "pages__gt", "n_authors", "Count", "authors", "n_authors__gt", "n_authors", "assertQuerysetEqual", "self", "filter", "objects", "Book", "id__in", "ids", "Python Web Development with Django", "b", "name", "b", "test_duplicate_alias", "self", "assertRaises", "self", "ValueError", "annotate", "all", "objects", "Book", "Avg", "authors__age", "authors__age__avg", "Avg", "authors__age", "test_field_name_conflict", "self", "assertRaises", "self", "ValueError", "annotate", "objects", "Author", "age", "Avg", "friends__age", "test_m2m_name_conflict", "self", "assertRaises", "self", "ValueError", "annotate", "objects", "Author", "friends", "Count", "friends", "test_values_queryset_non_conflict", "self", "results", "order_by", "annotate", "values", "objects", "Author", "name", "age", "Count", "book_contact_set", "name", "assertEqual", "self", "len", "results", "assertEqual", "self", "results", "name", "assertEqual", "self", "results", "age", "results", "order_by", "annotate", "values", "objects", "Author", "name", "age", "Avg", "friends__age", "name", "assertEqual", "self", "len", "results", "assertEqual", "self", "results", "name", "assertEqual", "self", "results", "age", "results", "order_by", "annotate", "values", "objects", "Author", "name", "friends", "Count", "friends", "name", "assertEqual", "self", "len", "results", "assertEqual", "self", "results", "name", "assertEqual", "self", "results", "friends", "test_reverse_relation_name_conflict", "self", "assertRaises", "self", "ValueError", "annotate", "objects", "Author", "book_contact_set", "Avg", "friends__age", "test_pickle", "self", "qs", "annotate", "objects", "Book", "num_authors", "Count", "authors", "dumps", "pickle", "qs", "query", "as_sql", "get_compiler", "query", "qs", "db", "qs", "qs2", "loads", "pickle", "dumps", "pickle", "qs", "assertEqual", "self", "as_sql", "get_compiler", "query", "qs2", "db", "qs2", "query", "test_more_more_more", "self", "books", "all", "objects", "Book", "aggregate", "books", "Avg", "authors__age", "assertQuerysetEqual", "self", "all", "books", "b", "name", "b", "qs", "dates", "filter", "annotate", "objects", "Book", "num_authors", "Count", "authors", "num_authors", "pubdate", "day", "assertQuerysetEqual", "self", "qs", "datetime", "datetime", "datetime", "datetime", "b", "b", "qs", "values", "order_by", "extra", "annotate", "objects", "Book", "mean_auth_age", "Avg", "authors__age", "select", "sheets", "(pages + %s) / %s", "select_params", "sheets", "sheets", "assertQuerysetEqual", "self", "qs", "b", "int", "b", "sheets", "assertEqual", "self", "count", "annotate", "values", "objects", "Book", "publisher", "Count", "publisher", "assertEqual", "self", "count", "values", "annotate", "objects", "Book", "Count", "publisher", "publisher", "publishers", "filter", "objects", "Publisher", "id__in", "assertEqual", "self", "sorted", "name", "p", "p", "publishers", "Apress", "Sams", "publishers", "annotate", "publishers", "n_books", "Count", "book", "assertEqual", "self", "n_books", "publishers", "assertEqual", "self", "sorted", "name", "p", "p", "publishers", "Apress", "Sams", "books", "filter", "objects", "Book", "publisher__in", "publishers", "assertQuerysetEqual", "self", "books", "Practical Django Projects", "Sams Teach Yourself Django in 24 Hours", "The Definitive Guide to Django: Web Development Done Right", "b", "name", "b", "assertEqual", "self", "sorted", "name", "p", "p", "publishers", "Apress", "Sams", "assertEqual", "self", "aggregate", "objects", "HardbackBook", "n_pages", "Sum", "book_ptr__pages", "n_pages", "assertEqual", "self", "aggregate", "objects", "HardbackBook", "n_pages", "Sum", "pages", "n_pages", "qs", "values", "annotate", "objects", "HardbackBook", "n_authors", "Count", "book_ptr__authors", "name", "n_authors", "assertQuerysetEqual", "self", "qs", "n_authors", "name", "n_authors", "name", "h", "h", "qs", "values", "annotate", "objects", "HardbackBook", "n_authors", "Count", "authors", "name", "n_authors", "assertQuerysetEqual", "self", "qs", "n_authors", "name", "n_authors", "name", "h", "h", "assertRaises", "self", "FieldError", "annotate", "annotate", "objects", "Book", "mean_age", "Avg", "authors__age", "Avg", "mean_age", "test_empty_filter_count", "self", "assertEqual", "self", "count", "annotate", "filter", "objects", "Author", "id__in", "Count", "friends", "test_empty_filter_aggregate", "self", "assertEqual", "self", "aggregate", "annotate", "filter", "objects", "Author", "id__in", "Count", "friends", "Count", "pk", "pk__count", "None", "test_annotate_and_join", "self", "assertEqual", "self", "count", "exclude", "annotate", "objects", "Author", "c", "Count", "friends__name", "friends__name", "Joe", "count", "objects", "Author", "test_f_expression_annotation", "self", "qs", "values_list", "filter", "annotate", "values", "objects", "Book", "name", "n_authors", "Count", "authors", "pages__lt", "F", "n_authors", "pk", "assertQuerysetEqual", "self", "filter", "objects", "Book", "pk__in", "qs", "Python Web Development with Django", "attrgetter", "name", "test_values_annotate_values", "self", "qs", "values_list", "annotate", "values", "objects", "Book", "name", "n_authors", "Count", "authors", "pk", "flat", "True", "assertEqual", "self", "list", "qs", "list", "values_list", "objects", "Book", "pk", "flat", "True", "test_having_group_by", "self", "qs", "values_list", "filter", "annotate", "values_list", "objects", "Book", "name", "n_authors", "Count", "authors", "pages__gt", "F", "n_authors", "name", "flat", "True", "assertEqual", "self", "list", "qs", "list", "values_list", "objects", "Book", "name", "flat", "True", "test_annotation_disjunction", "self", "qs", "filter", "annotate", "objects", "Book", "n_authors", "Count", "authors", "Q", "n_authors", "Q", "name", "Python Web Development with Django", "assertQuerysetEqual", "self", "qs", "Artificial Intelligence: A Modern Approach", "Python Web Development with Django", "The Definitive Guide to Django: Web Development Done Right", "attrgetter", "name", "qs", "filter", "annotate", "objects", "Book", "n_authors", "Count", "authors", "Q", "name", "The Definitive Guide to Django: Web Development Done Right", "Q", "name", "Artificial Intelligence: A Modern Approach", "Q", "n_authors", "assertQuerysetEqual", "self", "qs", "The Definitive Guide to Django: Web Development Done Right", "attrgetter", "name", "qs", "order_by", "filter", "annotate", "objects", "Publisher", "rating_sum", "Sum", "book__rating", "book_count", "Count", "book", "Q", "rating_sum__gt", "Q", "rating_sum__isnull", "True", "pk", "assertQuerysetEqual", "self", "qs", "Apress", "Prentice Hall", "Jonno's House of Books", "attrgetter", "name", "qs", "order_by", "filter", "annotate", "objects", "Publisher", "rating_sum", "Sum", "book__rating", "book_count", "Count", "book", "Q", "pk__lt", "F", "book_count", "Q", "rating_sum", "None", "pk", "assertQuerysetEqual", "self", "qs", "Apress", "Jonno's House of Books", "attrgetter", "name", "test_quoting_aggregate_order_by", "self", "qs", "order_by", "annotate", "filter", "objects", "Book", "name", "Python Web Development with Django", "authorCount", "Count", "authors", "authorCount", "assertQuerysetEqual", "self", "qs", "Python Web Development with Django", "b", "name", "b", "authorCount", "b", "test_stddev", "self", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "pages", "pages__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "rating", "rating__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "price", "price__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "pages", "sample", "True", "pages__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "rating", "sample", "True", "rating__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "StdDev", "price", "sample", "True", "price__stddev", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "pages", "pages__variance", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "rating", "rating__variance", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "price", "price__variance", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "pages", "sample", "True", "pages__variance", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "rating", "sample", "True", "rating__variance", "Approximate", "assertEqual", "self", "aggregate", "objects", "Book", "Variance", "price", "sample", "True", "price__variance", "Approximate", "skipUnlessDBFeature", "supports_stddev", "tempfile", "os", "cStringIO", "StringIO", "twisted.python", "log", "twisted.application", "service", "twisted.internet", "defer", "protocol", "error", "reactor", "twisted.internet.task", "LoopingCall", "buildbot", "util", "buildbot.interfaces", "IChangeSource", "buildbot.changes.changes", "Change", "_MTProtocol", "ProcessProtocol", "protocol", "__init__", "self", "deferred", "cmdline", "cmdline", "self", "cmdline", "deferred", "self", "deferred", "s", "self", "StringIO", "errReceived", "self", "text", "msg", "log", "stderr: %s", "text", "outReceived", "self", "text", "msg", "log", "stdout: %s", "text", "write", "s", "self", "text", "processEnded", "self", "reason", "msg", "log", "Command %r exited with value %s", "cmdline", "self", "reason", "isinstance", "value", "reason", "ProcessDone", "error", "callback", "deferred", "self", "getvalue", "s", "self", "errback", "deferred", "self", "reason", "Monotone", "All methods of this class return a Deferred.", "__init__", "self", "bin", "db", "bin", "self", "bin", "db", "self", "db", "_run_monotone", "self", "args", "d", "Deferred", "defer", "cmdline", "bin", "self", "--db=", "db", "self", "tuple", "args", "p", "_MTProtocol", "d", "cmdline", "msg", "log", "Running command: %r", "cmdline", "msg", "log", "wd: %s", "getcwd", "os", "spawnProcess", "reactor", "p", "bin", "self", "cmdline", "d", "_process_revision_list", "self", "output", "output", "split", "strip", "output", "\n", "get_interface_version", "self", "d", "_run_monotone", "self", "automate", "interface_version", "addCallback", "d", "_process_interface_version", "self", "d", "_process_interface_version", "self", "output", "tuple", "map", "int", "split", "strip", "output", ".", "db_init", "self", "_run_monotone", "self", "db", "init", "db_migrate", "self", "_run_monotone", "self", "db", "migrate", "pull", "self", "server", "pattern", "_run_monotone", "self", "pull", "server", "pattern", "get_revision", "self", "rid", "_run_monotone", "self", "cat", "revision", "rid", "get_heads", "self", "branch", "rcfile", "", "cmd", "automate", "heads", "branch", "rcfile", "cmd", "--rcfile=", "rcfile", "d", "_run_monotone", "self", "cmd", "addCallback", "d", "_process_revision_list", "self", "d", "erase_ancestors", "self", "revs", "d", "_run_monotone", "self", "automate", "erase_ancestors", "revs", "addCallback", "d", "_process_revision_list", "self", "d", "ancestry_difference", "self", "new_rev", "old_revs", "d", "_run_monotone", "self", "automate", "ancestry_difference", "new_rev", "old_revs", "addCallback", "d", "_process_revision_list", "self", "d", "descendents", "self", "rev", "d", "_run_monotone", "self", "automate", "descendents", "rev", "addCallback", "d", "_process_revision_list", "self", "d", "log", "self", "rev", "depth", "None", "depth", "None", "depth_arg", "--last=%i", "depth", "depth_arg", "_run_monotone", "self", "log", "-r", "rev", "depth_arg", "MonotoneSource", "Service", "service", "ComparableMixin", "util", "This source will poll a monotone server for changes and submit them to\n    the change master.\n\n    @param server_addr: monotone server specification (host:portno)\n\n    @param branch: monotone branch to watch\n\n    @param trusted_keys: list of keys whose code you trust\n\n    @param db_path: path to monotone database to pull into\n\n    @param pollinterval: interval in seconds between polls, defaults to 10 minutes\n    @param monotone_exec: path to monotone executable, defaults to \"monotone\"\n    ", "__implements__", "IChangeSource", "__implements__", "Service", "service", "compare_attrs", "server_addr", "trusted_keys", "db_path", "pollinterval", "branch", "monotone_exec", "parent", "None", "done_revisions", "last_revision", "None", "loop", "None", "d", "None", "tmpfile", "None", "monotone", "None", "volatile", "loop", "d", "tmpfile", "monotone", "__init__", "self", "server_addr", "branch", "trusted_keys", "db_path", "pollinterval", "monotone_exec", "monotone", "server_addr", "self", "server_addr", "branch", "self", "branch", "trusted_keys", "self", "trusted_keys", "db_path", "self", "db_path", "pollinterval", "self", "pollinterval", "monotone_exec", "self", "monotone_exec", "monotone", "self", "Monotone", "monotone_exec", "self", "db_path", "self", "startService", "self", "loop", "self", "LoopingCall", "start_poll", "self", "start", "loop", "self", "pollinterval", "self", "startService", "Service", "service", "self", "stopService", "self", "stop", "loop", "self", "stopService", "Service", "service", "self", "describe", "self", "monotone_source %s %s", "server_addr", "self", "branch", "self", "start_poll", "self", "d", "self", "None", "msg", "log", "last poll still in progress, skipping next poll", "msg", "log", "starting poll", "d", "self", "_maybe_init_db", "self", "addCallback", "d", "self", "_do_netsync", "self", "addCallback", "d", "self", "_get_changes", "self", "addErrback", "d", "self", "_handle_error", "self", "_handle_error", "self", "failure", "err", "log", "failure", "d", "self", "None", "_maybe_init_db", "self", "exists", "path", "os", "db_path", "self", "msg", "log", "init'ing db", "db_init", "monotone", "self", "msg", "log", "db already exists, migrating", "db_migrate", "monotone", "self", "_do_netsync", "self", "output", "pull", "monotone", "self", "server_addr", "self", "branch", "self", "_get_changes", "self", "output", "d", "_get_new_head", "self", "addCallback", "d", "_process_new_head", "self", "d", "_get_new_head", "self", "rcfile", "function get_revision_cert_trust(signers, id, name, val)\n                      local trusted_signers = { %s }\n                      local ts_table = {}\n                      for k, v in pairs(trusted_signers) do ts_table[v] = 1 end\n                      for k, v in pairs(signers) do\n                        if ts_table[v] then\n                          return true\n                        end\n                      end\n                      return false\n                    end\n        ", "trusted_list", "join", ", ", "\"", "key", "\"", "key", "trusted_keys", "self", "tmpfile_name", "mktemp", "tempfile", "f", "open", "tmpfile_name", "w", "write", "f", "rcfile", "trusted_list", "close", "f", "d", "get_heads", "monotone", "self", "branch", "self", "tmpfile_name", "addCallback", "d", "_find_new_head", "self", "tmpfile_name", "d", "_find_new_head", "self", "new_heads", "tmpfile_name", "unlink", "os", "tmpfile_name", "last_revision", "self", "None", "d", "descendents", "monotone", "self", "last_revision", "self", "d", "succeed", "defer", "new_heads", "addCallback", "d", "_pick_new_head", "self", "new_heads", "d", "_pick_new_head", "self", "old_head_descendents", "new_heads", "r", "new_heads", "r", "old_head_descendents", "r", "None", "_process_new_head", "self", "new_head", "new_head", "None", "msg", "log", "No new head", "d", "self", "None", "None", "d", "_simplify_revisions", "self", "addCallback", "d", "_get_new_revisions", "self", "new_head", "addCallback", "d", "_add_changes_for_revisions", "self", "addCallback", "d", "_finish_changes", "self", "new_head", "d", "_simplify_revisions", "self", "d", "erase_ancestors", "monotone", "self", "done_revisions", "self", "addCallback", "d", "_reset_done_revisions", "self", "d", "_reset_done_revisions", "self", "new_done_revisions", "done_revisions", "self", "new_done_revisions", "None", "_get_new_revisions", "self", "blah", "new_head", "done_revisions", "self", "ancestry_difference", "monotone", "self", "new_head", "done_revisions", "self", "succeed", "defer", "new_head", "_add_changes_for_revisions", "self", "revs", "d", "succeed", "defer", "None", "rid", "revs", "addCallback", "d", "_add_change_for_revision", "self", "rid", "d", "_add_change_for_revision", "self", "blah", "rid", "d", "log", "monotone", "self", "rid", "addCallback", "d", "_add_change_from_log", "self", "rid", "d", "_add_change_from_log", "self", "log", "rid", "d", "get_revision", "monotone", "self", "rid", "addCallback", "d", "_add_change_from_log_and_revision", "self", "log", "rid", "d", "_add_change_from_log_and_revision", "self", "revision", "log", "rid", "pieces", "split", "revision", "\"", "files", "i", "range", "len", "pieces", "i", "append", "files", "pieces", "i", "author", "unknown author", "pieces", "split", "log", "\n", "p", "pieces", "startswith", "p", "Author:", "author", "split", "p", "addChange", "parent", "self", "Change", "author", "files", "log", "revision", "rid", "_finish_changes", "self", "blah", "new_head", "append", "done_revisions", "self", "new_head", "last_revision", "self", "new_head", "d", "self", "None", "threading", "logging", "socket", "select", "Settings", "EventLoop", "ProxyClient", "ProxyServer", "Thread", "threading", "docstring for Server", "__init__", "self", "hostname", "port", "outHost", "outPort", "adminLoop", "latency", "debug", "logging", "Initializing Server", "__init__", "Thread", "threading", "self", "name", "ServerThread-%d", "port", "setDaemon", "self", "True", "hostname", "self", "hostname", "port", "self", "port", "adminLoop", "self", "adminLoop", "latency", "self", "latency", "threads", "self", "in_select", "self", "outPort", "self", "outPort", "outHost", "self", "outHost", "MAXCONNECTIONS", "self", "setHandlers", "self", "connIndex", "self", "run", "self", "docstring for run", "running", "self", "True", "createServer", "self", "debug", "logging", "Server started", "running", "self", "inbound", "outbound", "error", "select", "select", "in_select", "self", "TIMEOUT", "Settings", "sock", "inbound", "onSelectTCP", "self", "sock", "isEmpty", "adminLoop", "self", "dispatchMessage", "adminLoop", "self", "getMessage", "adminLoop", "self", "sock", "th", "iteritems", "threads", "self", "join", "th", "close", "socket", "self", "debug", "logging", "Server stopped", "createServer", "self", " create a TCP server ", "debug", "logging", "Bind port %d on %s", "port", "self", "hostname", "self", "socket", "self", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM", "socket", "setsockopt", "socket", "self", "SOL_SOCKET", "socket", "SO_REUSEADDR", "socket", "bind", "socket", "self", "hostname", "self", "port", "self", "listen", "socket", "self", "MAXCONNECTIONS", "self", "isServer", "self", "True", "append", "in_select", "self", "socket", "self", "onSelectTCP", "self", "sock", " select TCP ", "debug", "logging", "Processing inbounce connection on port %d", "port", "self", "isServer", "self", "sock", "socket", "self", "cnx", "addr", "accept", "sock", "threads", "self", "cnx", "ProxyClient", "ProxyClient", "cnx", "outHost", "self", "outPort", "self", "adminLoop", "self", "%d-%d", "port", "self", "connIndex", "self", "latency", "self", "connIndex", "self", "connIndex", "self", "start", "threads", "self", "cnx", "setHandlers", "self", " attach handlers to events ", "attachHandler", "adminLoop", "self", "ADM_QUIT_PROGRAM", "Settings", "onQuit", "self", "attachHandler", "adminLoop", "self", "THREAD_CLOSE", "Settings", "onProxyClose", "self", "onQuit", "self", "data", " ADM_QUIT_PROGRAM handler ", "running", "self", "False", "debug", "logging", "Closing Server", "onProxyClose", "self", "data", "join", "threads", "self", "data", "imageops", "numpy", "asfarray", "dot", "argmin", "zeros", "numpy", "average", "sort", "trace", "numpy.linalg", "svd", "eigh", "math", "sqrt", "pickle", "shutil", "rmtree", "os", "mkdir", "os.path", "isdir", "join", "normpath", "os", "listdir", "DirectoryParser", "__init__", "self", "directoryName", "directoryName", "self", "directoryName", "parseDirectory", "self", "extension", "isdir", "directoryName", "self", "imagefilenameslist", "sorted", "normpath", "join", "directoryName", "self", "fname", "fname", "listdir", "directoryName", "self", "endswith", "lower", "fname", ".", "extension", "imagefilenameslist", "ImageError", "Exception", "DirError", "Exception", "NoMatchError", "Exception", "FaceBundle", "__init__", "self", "imglist", "wd", "ht", "adjfaces", "fspace", "avgvals", "evals", "imglist", "self", "imglist", "wd", "self", "wd", "ht", "self", "ht", "adjfaces", "self", "adjfaces", "eigenfaces", "self", "fspace", "avgvals", "self", "avgvals", "evals", "self", "evals", "FaceRec", "validateSelectedImage", "self", "imgname", "selectimg", "XImage", "imageops", "imgname", "selectwdth", "_width", "selectimg", "selectht", "_height", "selectimg", "selectwdth", "wd", "bundle", "self", "selectht", "ht", "bundle", "self", "ImageError", "select image of matching dimensions !", "selectimg", "findMatchingImage", "self", "imagename", "selectedfacesnum", "thresholdvalue", "selectimg", "validateSelectedImage", "self", "imagename", "inputfacepixels", "_pixellist", "selectimg", "inputface", "asfarray", "inputfacepixels", "pixlistmax", "max", "inputface", "inputfacen", "inputface", "pixlistmax", "inputface", "inputfacen", "avgvals", "bundle", "self", "usub", "eigenfaces", "bundle", "self", "selectedfacesnum", "input_wk", "transpose", "dot", "usub", "transpose", "inputface", "dist", "sum", "weights", "self", "input_wk", "axis", "idx", "argmin", "dist", "mindist", "sqrt", "dist", "idx", "result", "", "mindist", "mindist", "mindist:", "mindist", "mindist", "thresholdvalue", "result", "imglist", "bundle", "self", "idx", "try reconstruction", "reconstructFaces", "self", "selectedfacesnum", "mindist", "result", "doCalculations", "self", "dir", "imglist", "selectednumeigenfaces", "createFaceBundle", "self", "imglist", "egfaces", "eigenfaces", "bundle", "self", "adjfaces", "adjfaces", "bundle", "self", "weights", "self", "calculateWeights", "self", "egfaces", "adjfaces", "selectednumeigenfaces", "cachefile", "join", "dir", "saveddata.cache", "f2", "open", "cachefile", "w", "dump", "pickle", "bundle", "self", "f2", "close", "f2", "validateDirectory", "self", "imgfilenameslist", "len", "imgfilenameslist", "folder empty!", "DirError", "folder empty!", "imgfilelist", "z", "imgfilenameslist", "img", "XImage", "imageops", "z", "append", "imgfilelist", "img", "sampleimg", "imgfilelist", "imgwdth", "_width", "sampleimg", "imght", "_height", "sampleimg", "x", "imgfilelist", "newwdth", "_width", "x", "newht", "_height", "x", "newwdth", "imgwdth", "newht", "imght", "DirError", "select folder with all images of equal dimensions !", "imgfilelist", "calculateWeights", "self", "eigenfaces", "adjfaces", "selectedfacesnum", "usub", "eigenfaces", "selectedfacesnum", "wts", "transpose", "dot", "usub", "transpose", "adjfaces", "wts", "createFaceBundle", "self", "imglist", "imgfilelist", "validateDirectory", "self", "imglist", "img", "imgfilelist", "imgwdth", "_width", "img", "imght", "_height", "img", "numpixels", "imgwdth", "imght", "numimgs", "len", "imgfilelist", "facemat", "zeros", "numimgs", "numpixels", "i", "range", "numimgs", "pixarray", "asfarray", "_pixellist", "imgfilelist", "i", "pixarraymax", "max", "pixarray", "pixarrayn", "pixarray", "pixarraymax", "facemat", "i", "pixarrayn", "avgvals", "average", "facemat", "axis", "adjfaces", "facemat", "avgvals", "adjfaces_tr", "transpose", "adjfaces", "L", "dot", "adjfaces", "adjfaces_tr", "evals1", "evects1", "eigh", "L", "reversedevalueorder", "argsort", "evals1", "evects", "evects1", "reversedevalueorder", "evals", "sort", "evals1", "u", "dot", "adjfaces_tr", "evects", "u", "transpose", "u", "i", "range", "numimgs", "ui", "u", "i", "shape", "ui", "imght", "imgwdth", "norm", "trace", "dot", "transpose", "ui", "ui", "u", "i", "u", "i", "norm", "bundle", "self", "FaceBundle", "imglist", "imgwdth", "imght", "adjfaces", "u", "avgvals", "evals", "createEigenimages", "self", "u", "reconstructFaces", "self", "selectedfacesnum", "recondir", "../reconfaces", "newwt", "zeros", "shape", "weights", "self", "eigenfaces", "eigenfaces", "bundle", "self", "usub", "eigenfaces", "selectedfacesnum", "evals", "evals", "bundle", "self", "evalssub", "evals", "selectedfacesnum", "i", "range", "len", "weights", "self", "j", "range", "len", "evalssub", "newwt", "i", "j", "weights", "self", "i", "j", "evalssub", "j", "phinew", "dot", "newwt", "usub", "xnew", "phinew", "avgvals", "bundle", "self", "isdir", "recondir", "rmtree", "recondir", "True", "Exception", "inst", "problem removing dir :", "message", "inst", "mkdir", "recondir", "made:", "recondir", "numimgs", "len", "imglist", "bundle", "self", "x", "range", "numimgs", "imgname", "recondir", "/reconphi", "str", "x", ".png", "imgdata", "phinew", "x", "make_image", "imageops", "imgdata", "imgname", "wd", "bundle", "self", "ht", "bundle", "self", "True", "x", "range", "numimgs", "filename", "recondir", "/reconx", "str", "x", ".png", "imgdata", "xnew", "x", "make_image", "imageops", "imgdata", "filename", "wd", "bundle", "self", "ht", "bundle", "self", "True", "createEigenimages", "self", "eigenspace", "egndir", "../eigenfaces", "isdir", "egndir", "rmtree", "egndir", "True", "Exception", "inst", "problem removing dir :", "message", "inst", "mkdir", "egndir", "numimgs", "len", "imglist", "bundle", "self", "x", "range", "numimgs", "imgname", "egndir", "/eigenface", "str", "x", ".png", "make_image", "imageops", "eigenspace", "x", "imgname", "wd", "bundle", "self", "ht", "bundle", "self", "checkCache", "self", "dir", "imglist", "selectedfacesnum", "cachefile", "join", "dir", "saveddata.cache", "cache_changed", "True", "f", "open", "cachefile", "IOError", "no cache file found", "doCalculations", "self", "dir", "imglist", "selectedfacesnum", "bundle", "self", "load", "pickle", "f", "oldlist", "imglist", "bundle", "self", "imglist", "oldlist", "both sets same", "cache_changed", "False", "eigenfaces", "eigenfaces", "bundle", "self", "adjfaces", "adjfaces", "bundle", "self", "weights", "self", "calculateWeights", "self", "eigenfaces", "adjfaces", "selectedfacesnum", "cache_changed", "folder changed!!", "doCalculations", "self", "dir", "imglist", "selectedfacesnum", "close", "f", "isValid", "self", "selectedNumberOfEigenFaces", "numberOfImageFiles", "selectedNumberOfEigenFaces", "numberOfImageFiles", "selectedNumberOfEigenFaces", "True", "False", "hashlib", "os", "cgi", "re", "logging", "ricoraweb.model.profpage", "ProfilePage", "ricoraweb.model.news", "News", "_hasvalue", "val", "val", "None", "len", "val", "cache", "f", "helper", "args", "kw", "self", "name", "__cache_of_", "__name__", "f", "hasattr", "self", "name", "getattr", "self", "name", "val", "f", "self", "args", "kw", "setattr", "self", "name", "val", "val", "helper", "cacheprop", "f", "property", "cache", "f", "MemberDirFormat", "", "TrueExprs", "set", "true", "True", "TRUE", "Yes", "yes", "YES", "1", "True", "FalseExprs", "set", "false", "False", "FALSE", "No", "no", "NO", "0", "False", "None", "Member", "Exception: this class contains not \"member\" element but \"ricora\" element ", "__init__", "self", "elem", "studentid", "path", "elem", "None", "studentid", "None", "TypeError", "studentid", "self", "studentid", "elem", "self", "elem", "path", "self", "path", "profile_filepath", "self", "format", "MemberDirFormat", "studentid", "self", "studentid", "self", "property", "hashid", "self", "src", "studentid", "self", "hexdigest", "md5", "hashlib", "encode", "src", "cacheprop", "check", "self", "out", "strict", "False", "passed", "isvalid", "self", "out", "passed", "error", "out", "????????????????????????????", "result", "_check_children", "self", "out", "result", "warn", "out", "???????????????????????????????????", "info", "out", "Validation passed.", "strict", "passed", "passed", "result", "passed", "_check_children", "self", "out", "result", "True", "isvalid", "aboutme", "self", "out", "result", "False", "news", "self", "n", "news", "self", "isvalid", "n", "out", "result", "False", "result", "isvalid", "self", "out", "None", "e", "elem", "self", "iv", "aboutme", "e", "None", "_hasvalue", "name", "aboutme", "e", "iv", "out", "None", "warn", "out", "???????/ricora/aboutme/name??????? at /ricora/aboutme/name", "iv", "name", "self", "n", "name", "aboutme", "self", "n", "None", "XmlFormatException", "Name?????????", "Ricora", "n", "property", "aboutme", "self", "aboutme", "elem", "self", "None", "AboutMe", "aboutme", "elem", "self", "self", "cacheprop", "news", "self", "news", "elem", "self", "None", "create", "News", "post", "news", "elem", "self", "self", "cacheprop", "find_file", "self", "path", "rel", "join", "path", "os", "dirname", "path", "os", "path", "self", "path", "abspath", "path", "os", "rel", "logger", "self", "_logger", "self", "AttributeError", "_logger", "self", "getChild", "getLoggerClass", "logging", "member", "studentid", "self", "_logger", "self", "property", "__str__", "self", "format", "<Member id:{0}({1}) name:{2}>", "studentid", "self", "hashid", "self", "name", "self", "__repr__", "self", "format", "<ricoraweb.model.member.Member id:{0}({1}) name:{2} at {3}>", "studentid", "self", "hashid", "self", "name", "self", "hex", "id", "self", "AboutMe", "__init__", "self", "elem", "member", "elem", "self", "elem", "belongsto", "self", "member", "name", "self", "name", "elem", "self", "property", "dept", "self", "dept", "elem", "self", "property", "comment", "self", "comment", "elem", "self", "None", "text", "comment", "elem", "self", "property", "grade", "self", "grade", "elem", "self", "property", "twitter", "self", "twitter", "elem", "self", "None", "Twitter", "twitter", "elem", "self", "cacheprop", "hatena", "self", "hatena", "elem", "self", "None", "Hatena", "hatena", "elem", "self", "cacheprop", "profimage", "self", "value", "profimage", "elem", "self", "profileimage", "elem", "self", "value", "None", "ProfileImage", "value", "belongsto", "self", "cacheprop", "profpage", "self", "profilepage", "elem", "self", "None", "ProfilePage", "profilepage", "elem", "self", "belongsto", "self", "cacheprop", "isvalid", "self", "out", "None", "result", "_check_children", "self", "out", "result", "_check_children", "self", "out", "values", "filter", "x", "x", "None", "twitter", "self", "hatena", "self", "profimage", "self", "profpage", "self", "result", "True", "v", "values", "isvalid", "v", "out", "result", "False", "result", "Twitter", "__init__", "self", "elem", "elem", "self", "elem", "isvalid", "self", "out", "None", "has_id", "elem", "self", "None", "_hasvalue", "id", "elem", "self", "has_id", "out", "None", "warn", "out", "ID????????? at /aboutme/twitter", "has_id", "_extract_id", "self", "v", "id", "elem", "self", "_hasvalue", "v", "None", "startswith", "v", "@", "v", "v", "url", "self", "format", "http://twitter.com/{0}", "_extract_id", "self", "property", "id", "self", "@", "_extract_id", "self", "property", "Hatena", "__init__", "self", "elem", "elem", "self", "elem", "diary_url", "self", "format", "http://d.hatena.ne.jp/{0}", "id", "elem", "self", "property", "diary_enabled", "self", "linkdiary", "elem", "self", "TrueExprs", "property", "isvalid", "self", "out", "None", "True", "ProfileImage", "__init__", "self", "elem", "member", "elem", "self", "elem", "belongsto", "self", "member", "isvalid", "self", "out", "None", "hasvalue", "bool", "_url_direct", "self", "_url_twitter", "self", "_url_facebook", "self", "valid_url", "_url_direct_issafety", "self", "out", "None", "hasvalue", "warn", "out", "??????????????URL???????Twitter????Facebook?ID????????????? at /ricora/aboutme/profimage", "valid_url", "warn", "out", "?????URL??????????????http, https, ftp?200??????????????? at /ricora/aboutme/profimage/@url", "hasvalue", "valid_url", "path", "self", "path", "elem", "self", "None", "member_dir", "belongsto", "self", "path", "elem", "self", "None", "property", "alt", "self", "alt", "elem", "self", "property", "url", "self", "_url_direct", "self", "_url_facebook", "self", "_url_twitter", "self", "property", "_url_direct_issafety", "self", "val", "url", "elem", "self", "len", "val", "bool", "match", "HTTP_EXPR", "val", "match", "FTP_EXPR", "val", "TypeError", "True", "cache", "_url_direct", "self", "_url_direct_issafety", "self", "None", "url", "elem", "self", "cacheprop", "_url_twitter", "self", "src", "twitter", "elem", "self", "src", "None", "None", "val", "escape", "cgi", "src", "format", "http://api.twitter.com/1/users/profile_image/{0}?size=bigger", "val", "cacheprop", "_url_facebook", "self", "src", "facebook", "elem", "self", "src", "None", "None", "val", "escape", "cgi", "src", "format", "http://graph.facebook.com/{0}/picture?type=large", "val", "cacheprop", "Admin", "__init__", "self", "Exception", "Not implemented", "LinkInvoke", "__init__", "self", "Exception", "Not implemented", "Project", "__init__", "self", "Exception", "Not implemented", "HTTP_EXPR", "compile", "re", "replace", "\n\\b(?:https?|shttp)://(?:(?:[-_.!~*'()a-zA-Z0-9;:&=+$,]|%[0-9A-Fa-f\n][0-9A-Fa-f])*@)?(?:(?:[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?\\.)\n*[a-zA-Z](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?\\.?|[0-9]+\\.[0-9]+\\.[0-9]+\\.\n[0-9]+)(?::[0-9]*)?(?:/(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f]\n[0-9A-Fa-f])*(?:;(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-\nFa-f])*)*(?:/(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f\n])*(?:;(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*)*)\n*)?(?:\\?(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])\n*)?(?:#(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*\n)?\n", "\n", "", "FTP_EXPR", "compile", "re", "replace", "\n\\bftp://(?:(?:[-_.!~*'()a-zA-Z0-9;&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*\n(?::(?:[-_.!~*'()a-zA-Z0-9;&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*)?@)?(?\n:(?:[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?\\.)*[a-zA-Z](?:[-a-zA-\nZ0-9]*[a-zA-Z0-9])?\\.?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(?::[0-9]*)?\n(?:/(?:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*(?:/(?\n:[-_.!~*'()a-zA-Z0-9:@&=+$,]|%[0-9A-Fa-f][0-9A-Fa-f])*)*(?:;type=[\nAIDaid])?)?(?:\\?(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9\nA-Fa-f])*)?(?:#(?:[-_.!~*'()a-zA-Z0-9;/?:@&=+$,]|%[0-9A-Fa-f][0-9A\n-Fa-f])*)?\n", "\n", "", "logging", "multiprocessing", "scipy", "signal", "scipy.io.wavfile", "itertools", "numpy", "gc", "logger", "getLogger", "logging", "__name__", "remove_channel", "samples", "samples", "_do_filter", "args", "samples", "fir_window", "args", "filtered_samples", "lfilter", "signal", "scipy", "fir_window", "samples", "filtered_samples", "band_pass_filter", "samples", "samplerate", "low_hz", "high_hz", "taps", "cutoff_low", "float", "low_hz", "cutoff_high", "float", "high_hz", "nyquist", "samplerate", "fir_window", "firwin", "signal", "taps", "cutoff", "cutoff_low", "nyquist", "cutoff_high", "nyquist", "pass_zero", "False", "window", "blackman", "samples_list", "array_split", "numpy", "samples", "cpu_count", "multiprocessing", "worker_pool", "Pool", "multiprocessing", "processes", "cpu_count", "multiprocessing", "results", "map", "worker_pool", "_do_filter", "izip", "itertools", "samples_list", "repeat", "itertools", "fir_window", "filtered_samples", "astype", "concatenate", "numpy", "results", "dtype", "samples", "Filtered samples len ", "len", "filtered_samples", "filtered_samples", "normalize_volume", "samples", "samples", "max", "numpy", "abs", "numpy", "samples", "axis", "samples", "downsample", "samples", "samplerate", "max_frequency", "q", "samplerate", "q", "max_frequency", "q", "debug", "logger", "[DECIMATE] Found decimation factor: %s (%s -> %s)", "q", "samplerate", "samplerate", "q", "decimated_samples", "astype", "decimate", "signal", "samples", "q", "dtype", "samples", "decimated_samples", "samplerate", "q", "pygame", "gameEngine", "config", "math", "hud", "random", "world", "pygame.locals", "*", "init", "mixer", "pygame", "clock", "None", "keysDown", "ships", "ammos", "removables", "set", "explosions", "explosion_sound", "Sound", "mixer", "pygame", "sound/Blast-SoundBible.com-2068539061.ogg", "fire1_sound", "Sound", "mixer", "pygame", "sound/fire1.ogg", "fire2_sound", "Sound", "mixer", "pygame", "sound/fire2.ogg", "count", "player", "None", "screen", "None", "bg_surface", "Surface", "pygame", "resolution", "config", "ship_surface", "load", "image", "pygame", "graphics/s1.png", "writeHStoFile", "score", "f", "open", "hiscore.txt", "w", "write", "f", "str", "score", "readHSfromFile", "f", "open", "hiscore.txt", "r", "score", "readline", "f", "int", "score", "score", "startGame", "screen", "cleanup", "world", "screen", "world", "screen", "player", "world", "addShip", "world", "append", "ships", "player", "world", "i", "range", "x", "random", "random", "y", "x", "random", "random", "append", "ships", "addShip", "x", "y", "ships", "world", "clock", "world", "Clock", "time", "pygame", "run", "world", "count", "count", "readHSfromFile", "writeHStoFile", "count", "cleanup", "world", "cleanup", "keysDown", "ships", "ammos", "removables", "set", "player", "None", "screen", "None", "mixer", "None", "count", "update", "ship", "ships", "update", "ship", "False", "add", "removables", "ship", "remove", "ships", "ship", "_settings", "player", "target", "ship", "_settings", "player", "target", "None", "ship", "player", "temp", "update", "_ai", "ship", "temp", "None", "append", "ammos", "temp", "play", "fire2_sound", "generateShield", "ship", "generateEnergy", "ship", "ammo", "ammos", "update", "ammo", "False", "add", "removables", "ammo", "remove", "ammos", "ammo", "explosion", "explosions", "update", "explosion", "False", "remove", "explosions", "explosion", "collide", "temp_s", "set", "temp_a", "set", "ammo", "ammos", "ship", "ships", "checkCollision", "gameEngine", "ammo", "ship", "True", "collide", "ammo", "False", "add", "temp_a", "ammo", "collide", "ship", "False", "add", "temp_s", "ship", "i", "temp_a", "remove", "ammos", "i", "add", "removables", "i", "explosion_sound", "None", "play", "explosion_sound", "i", "temp_s", "remove", "ships", "i", "add", "removables", "i", "i", "player", "GameOver", "count", "world", "len", "ships", "SpawnMore", "", "drawAndClearRemovables", "xx", "playerRadiusFromCenter", "config", "cos", "math", "shipAngle", "player", "radians", "math", "yy", "playerRadiusFromCenter", "config", "sin", "math", "shipAngle", "player", "radians", "math", "r", "removables", "circle", "draw", "pygame", "screen", "getRelativeLocation", "r", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "radius", "r", "clear", "removables", "run", "done", "False", "done", "tick", "clock", "fps", "config", "update", "world", "temp", "collide", "world", "temp", "SpawnMore", "x", "random", "random", "y", "random", "random", "append", "ships", "addShip", "x", "y", "temp", "GameOver", "done", "True", "drawBG", "world", "get_width", "bg_surface", "x", "player", "get_height", "bg_surface", "y", "player", "drawAndClearRemovables", "world", "drawObjects", "world", "drawHUD", "world", "clear", "removables", "event", "get", "event", "pygame", "type", "event", "KEYDOWN", "append", "keysDown", "key", "event", "type", "event", "KEYUP", "key", "event", "keysDown", "remove", "keysDown", "key", "event", "type", "event", "QUIT", "done", "True", "key", "keysDown", "action", "player", "key", "done", "True", "done", "True", "action", "player", "key", "done", "key", "K_UP", "thrust", "player", "key", "K_DOWN", "speedDown", "player", "key", "K_LEFT", "decreaseAngle", "player", "key", "K_RIGHT", "increaseAngle", "player", "key", "K_SPACE", "depleteEnergy", "player", "True", "append", "ammos", "shoot", "player", "play", "fire1_sound", "key", "K_t", "setTarget", "_ai", "player", "key", "K_ESCAPE", "True", "False", "addShip", "xy", "data", "acceleration", "currentAngle", "newAngle", "x", "y", "turningSpeed", "currentSpeed", "maxSpeed", "radius", "mass", "engineForce", "ttl", "all_objects", "ai_target", "target", "distance_to_target", "ai_actions", "angle_to_target", "xy", "xy", "radians", "math", "ships", "none", "None", "None", "Ship", "gameEngine", "data", "ships", "drawBG", "location", "flip", "display", "pygame", "fill", "screen", "world", "blit", "screen", "world", "bg_surface", "location", "drawHUD", "xx", "playerRadiusFromCenter", "config", "cos", "math", "shipAngle", "player", "radians", "math", "yy", "playerRadiusFromCenter", "config", "sin", "math", "shipAngle", "player", "radians", "math", "drawStats", "hud", "screen", "player", "_settings", "player", "target", "_settings", "player", "target", "None", "drawLines", "hud", "screen", "getRelativeLocation", "player", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "shipAngle", "player", "getRelativeLocation", "_settings", "player", "target", "xy", "player", "drawLines", "hud", "screen", "getRelativeLocation", "player", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "shipAngle", "player", "None", "drawSpeedLine", "hud", "screen", "player", "drawObjects", "xx", "playerRadiusFromCenter", "config", "cos", "math", "shipAngle", "player", "radians", "math", "yy", "playerRadiusFromCenter", "config", "sin", "math", "shipAngle", "player", "radians", "math", "ship", "ships", "temp_s", "copy", "ship_surface", "zoom", "float", "radius", "ship", "float", "get_height", "temp_s", "temp_s", "rotozoom", "transform", "pygame", "temp_s", "degrees", "math", "shipAngle", "ship", "zoom", "circle", "draw", "pygame", "screen", "getRelativeLocation", "ship", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "radius", "ship", "blit", "screen", "world", "temp_s", "getRelativeLocation", "ship", "xy", "player", "resolution", "config", "xx", "get_width", "temp_s", "resolution", "config", "yy", "get_height", "temp_s", "ammo", "ammos", "circle", "draw", "pygame", "screen", "getRelativeLocation", "ammo", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "radius", "ammo", "r", "removables", "circle", "draw", "pygame", "screen", "getRelativeLocation", "r", "xy", "player", "resolution", "config", "xx", "resolution", "config", "yy", "radius", "r", "csv", "reversion", "django.utils.translation", "ugettext", "_", "django.shortcuts", "render", "django.core.urlresolvers", "reverse", "django.db", "transaction", "django.contrib.auth.decorators", "login_required", "permission_required", "user_passes_test", "modoboa.lib", "events", "modoboa.lib.exceptions", "ModoboaException", "Conflict", "modoboa.core.models", "User", "modoboa.extensions.admin.models", "Domain", "DomainAlias", "Alias", "modoboa.extensions.admin.forms", "ImportIdentitiesForm", "ImportDataForm", "import_domain", "user", "row", "formopts", "Specific code for domains import", "dom", "Domain", "from_csv", "dom", "user", "row", "commit_on_success", "transaction", "import_domainalias", "user", "row", "formopts", "Specific code for domain aliases import", "domalias", "DomainAlias", "from_csv", "domalias", "user", "row", "commit_on_success", "transaction", "import_domains", "request", "method", "request", "POST", "importdata", "request", "helptext", "_", "Provide a CSV file where lines respect one of the following formats:\n<ul>\n  <li><em>domain; name; quota; enabled</em></li>\n  <li><em>domainalias; name; targeted domain; enabled</em></li>\n  %s\n</ul>\n<p>The first element of each line is mandatory and must be equal to one of the previous values.</p>\n<p>You can use a different character as separator.</p>\n", "join", "", "unicode", "hlp", "hlp", "raiseQueryEvent", "events", "ExtraDomainImportHelp", "ctx", "dict", "title", "_", "Import domains", "action_label", "_", "Import", "action_classes", "submit", "action", "reverse", "import_domains", "formid", "importform", "enctype", "multipart/form-data", "target", "import_target", "helptext", "helptext", "form", "ImportDataForm", "render", "request", "admin/importform.html", "ctx", "login_required", "permission_required", "admin.add_domain", "commit_on_success", "transaction", "import_account", "user", "row", "formopts", "Specific code for accounts import", "account", "User", "from_csv", "account", "user", "row", "formopts", "crypt_password", "commit_on_success", "transaction", "_import_alias", "kwargs", "user", "row", "Specific code for aliases import", "alias", "Alias", "from_csv", "alias", "user", "row", "kwargs", "commit_on_success", "transaction", "import_alias", "user", "row", "formopts", "_import_alias", "user", "row", "expected_elements", "import_forward", "user", "row", "formopts", "_import_alias", "user", "row", "expected_elements", "import_dlist", "user", "row", "formopts", "_import_alias", "user", "row", "importdata", "request", "formclass", "ImportDataForm", "Generic import function\n\n    As the process of importing data from a CSV file is the same\n    whatever the type, we do a maximum of the work here.\n\n    :param request: a ``Request`` instance\n    :param typ: a string indicating the object type being imported\n    :return: a ``Response`` instance\n    ", "error", "None", "form", "formclass", "POST", "request", "FILES", "request", "is_valid", "form", "reader", "reader", "csv", "FILES", "request", "sourcefile", "delimiter", "cleaned_data", "form", "sepchar", "Error", "csv", "inst", "error", "str", "inst", "error", "None", "cpt", "row", "reader", "row", "fct", "globals", "import_%s", "strip", "row", "KeyError", "fct", "raiseQueryEvent", "events", "ImportObject", "strip", "row", "fct", "fct", "fct", "fct", "user", "request", "row", "cleaned_data", "form", "Conflict", "cleaned_data", "form", "continue_if_exists", "Conflict", "_", "Object already exists: %s", "join", "cleaned_data", "form", "sepchar", "row", "cpt", "msg", "_", "%d objects imported successfully", "cpt", "render", "request", "admin/import_done.html", "status", "msg", "ok", "msg", "ModoboaException", "e", "error", "str", "e", "render", "request", "admin/import_done.html", "status", "msg", "ko", "error", "create_revision", "reversion", "import_identities", "request", "method", "request", "POST", "importdata", "request", "ImportIdentitiesForm", "helptext", "_", "Provide a CSV file where lines respect one of the following formats:\n<ul>\n<li><em>account; loginname; password; first name; last name; enabled; group; address; quota; [, domain, ...]</em></li>\n<li><em>alias; address; enabled; internal recipient</em></li>\n<li><em>forward; address; enabled; external recipient</em></li>\n<li><em>dlist; address; enabled; recipient; recipient; ...</em></li>\n</ul>\n<p>The first element of each line is mandatory and must be equal to one of the previous values.</p>\n\n<p>You can use a different character as separator.</p>\n", "ctx", "dict", "title", "_", "Import identities", "action_label", "_", "Import", "action_classes", "submit", "action", "reverse", "import_identities", "formid", "importform", "enctype", "multipart/form-data", "target", "import_target", "form", "ImportIdentitiesForm", "helptext", "helptext", "render", "request", "admin/importform.html", "ctx", "login_required", "user_passes_test", "u", "has_perm", "u", "core.add_user", "has_perm", "u", "admin.add_alias", "uuid", "gzip", "shutil", "tempfile", "urllib", "os", "tarfile", "logging", "random", "time", "subprocess", "Popen", "PIPE", "STDOUT", "datetime", "datetime", "django.db", "IntegrityError", "django.utils.translation", "ugettext", "_", "django.conf", "settings", "django.core.urlresolvers", "reverse", "django.contrib.sites.models", "Site", "debian.deb822", "Packages", "Sources", "debian.changelog", "Changelog", "ImportError", "debian_bundle.deb822", "Packages", "Sources", "debian_bundle.changelog", "Changelog", "create_build_task_param", "spec", "irgsh.data", "Specification", "BuildSpecification", "irgsh.data", "Distribution", "BuildDistribution", "spec_id", "id", "spec", "build_spec", "BuildSpecification", "source", "spec", "source_type", "spec", "source_opts", "spec", "orig", "spec", "values_list", "all", "extraorig_set", "spec", "orig", "flat", "True", "dist", "distribution", "spec", "build_dist", "BuildDistribution", "name", "dist", "mirror", "dist", "dist", "dist", "components", "dist", "extra", "dist", "spec_id", "build_spec", "build_dist", "get_package_description", "text", "lines", "splitlines", "text", "len", "lines", "None", "None", "desc", "lines", "long_desc", "None", "long_list", "line", "lines", "line", "strip", "line", "line", ".", "line", "", "append", "long_list", "line", "len", "long_list", "long_desc", "join", "\n", "long_list", "desc", "long_desc", "get_package_info", "packages", "models", "Package", "SOURCE", "BINARY", "items", "name", "None", "priority", "None", "section", "None", "info", "packages", "pkg", "has_key", "info", "Source", "pkg", "name", "info", "Source", "pkg", "type", "SOURCE", "name", "info", "Source", "priority", "get", "info", "Priority", "None", "section", "get", "info", "Section", "None", "has_key", "info", "Package", "pkg", "name", "info", "Package", "pkg", "type", "BINARY", "pkg", "architecture", "info", "Architecture", "desc", "long_desc", "None", "None", "has_key", "info", "Description", "desc", "long_desc", "get_package_description", "info", "Description", "pkg", "desc", "desc", "pkg", "long_desc", "long_desc", "append", "items", "pkg", "KeyError", "result", "name", "priority", "section", "packages", "name", "priority", "section", "items", "result", "validate_packages", "packages", "models", "Package", "SOURCE", "BINARY", "has_source", "any", "pkg", "type", "SOURCE", "pkg", "packages", "has_binary", "any", "pkg", "type", "BINARY", "pkg", "packages", "has_source", "has_binary", "store_package_info", "spec", "info", "models", "Package", "BINARY", "data", "info", "packages", "pkg", "Package", "specification", "pkg", "spec", "name", "pkg", "data", "name", "type", "pkg", "data", "type", "description", "pkg", "data", "desc", "long_description", "pkg", "data", "long_desc", "type", "pkg", "BINARY", "architecture", "pkg", "data", "architecture", "save", "pkg", "IntegrityError", "build_source_opts", "source_type", "source_opts", "models", "TARBALL", "BZR", "source_opts", "None", "source_opts", "", "source_opts", "strip", "source_opts", "source_type", "TARBALL", "None", "source_type", "BZR", "\n        valid opts:\n        - tag=a-tag\n        - rev=a-rev\n        ", "source_opts", "", "None", "key", "value", "split", "source_opts", "=", "key", "str", "strip", "key", "value", "str", "strip", "value", "key", "tag", "rev", "key", "value", "ValueError", "ValueError", "_", "Invalid source options for Bazaar", "SpecInit", "object", "\n    Prepare and distribute specification\n    ", "__init__", "self", "spec", "spec_id", "self", "id", "spec", "spec", "self", "spec", "description_sent", "self", "False", "distributed", "self", "False", "source_name", "self", "None", "orig_name", "self", "None", "log", "self", "getLogger", "logging", "irgsh_web.specinit", "start", "self", "models", "Specification", "irgsh.source.error", "SourcePackageBuilderException", "debug", "log", "self", "[%s] Initializing specification", "spec_id", "self", "set_status", "self", "init", "self", "files", "download", "self", "distribute", "self", "upload", "self", "files", "StandardError", "e", "error", "log", "self", "[%s] Error! %s", "spec_id", "self", "e", "add_log", "spec", "self", "Specification initialization failed: %s", "str", "e", "current_status", "status", "get", "objects", "Specification", "pk", "spec_id", "self", "current_status", "set_status", "self", "init", "self", "target", "self", "join", "path", "os", "DOWNLOAD_TARGET", "settings", "str", "spec_id", "self", "exists", "path", "os", "target", "self", "makedirs", "os", "target", "self", "debug", "log", "self", "[%s] Resource directory: %s", "spec_id", "self", "target", "self", "download", "self", "irgsh.source", "SourcePackageBuilder", "spec", "spec", "self", "srcpkg", "SourcePackageBuilder", "source", "spec", "source_type", "spec", "source_opts", "spec", "orig", "spec", "values_list", "all", "extraorig_set", "spec", "orig", "flat", "True", "orig_path", "None", "logger", "None", "build_dir", "mkdtemp", "tempfile", "-irgsh-build", "source_dir", "mkdtemp", "tempfile", "-irgsh-build-source", "logdir", "dirname", "path", "os", "source_log_path", "spec", "self", "exists", "path", "os", "logdir", "makedirs", "os", "logdir", "logname", "join", "path", "os", "logdir", "source.log", "logger", "open", "logname", "wb", "add_log", "spec", "_", "Downloading source code", "debug", "log", "self", "[%s] Downloading source code", "spec_id", "self", "set_status", "self", "dsc", "self", "build", "srcpkg", "build_dir", "logger", "add_log", "spec", "_", "Source code downloaded", "debug", "log", "self", "[%s] Source code downloaded", "spec_id", "self", "dsc_file", "join", "path", "os", "build_dir", "dsc", "self", "source", "join", "path", "os", "source_dir", "source", "cmd", "dpkg-source -x %s %s", "dsc_file", "source", "write", "logger", "# Extracting source package\n", "write", "logger", "# Command: %s\n", "cmd", "flush", "logger", "p", "Popen", "split", "cmd", "stdout", "logger", "stderr", "STDOUT", "communicate", "p", "write", "logger", "\n", "changelog", "join", "path", "os", "source", "debian", "changelog", "control", "join", "path", "os", "source", "debian", "control", "send_description", "self", "changelog", "control", "write", "logger", "# Copying source files:\n", "src", "Sources", "open", "dsc_file", "files", "dsc", "self", "info", "name", "info", "src", "Files", "fname", "files", "write", "logger", "# - %s\n", "basename", "path", "os", "fname", "target", "join", "path", "os", "target", "self", "fname", "exists", "path", "os", "target", "unlink", "os", "target", "move", "shutil", "join", "path", "os", "build_dir", "fname", "target", "chmod", "os", "target", "files", "StandardError", "e", "write", "logger", "# Exception happened: %s: %s", "type", "e", "str", "e", "rmtree", "shutil", "build_dir", "rmtree", "shutil", "source_dir", "logger", "None", "close", "logger", "logger", "open", "logname", "rb", "gzlogname", "join", "path", "os", "logdir", "source.log.gz", "gz", "open", "gzip", "gzlogname", "wb", "write", "gz", "read", "logger", "close", "gz", "close", "logger", "unlink", "os", "logname", "send_description", "self", "changelog", "control", "\n        Send package description to the manager\n\n        Depending on the response, this will determine whether\n        this specification is allowed to proceed or not.\n        ", "manager", "description_sent", "self", "debug", "log", "self", "[%s] Sending description", "spec_id", "self", "tmpdir", "mkdtemp", "tempfile", "gzchangelog", "join", "path", "os", "tmpdir", "changelog.gz", "gzcontrol", "join", "path", "os", "tmpdir", "control.gz", "gz", "GzipFile", "gzip", "gzchangelog", "wb", "write", "gz", "read", "open", "changelog", "rb", "close", "gz", "gz", "GzipFile", "gzip", "gzcontrol", "wb", "write", "gz", "read", "open", "control", "rb", "close", "gz", "res", "send_spec_description", "manager", "id", "spec", "self", "gzchangelog", "gzcontrol", "res", "status", "ok", "debug", "log", "self", "[%s] Package is rejected: %s", "spec_id", "self", "res", "ValueError", "_", "Package rejected: %(msg)s", "msg", "res", "msg", "debug", "log", "self", "[%s] Package is accepted: %s", "spec_id", "self", "res", "package", "description_sent", "self", "True", "rmtree", "shutil", "tmpdir", "get_archs", "self", "spec", "\n        List all architectures associated to this specification\n        ", "models", "BINARY", "available_archs", "all", "architectures", "repo", "distribution", "spec", "is_arch_independent", "spec", "available_archs", "archs", "set", "packages", "filter", "content", "spec", "type", "BINARY", "package", "packages", "archs", "archs", "set", "split", "architecture", "package", "any", "archs", "available_archs", "arch", "arch", "available_archs", "name", "arch", "archs", "distribute", "self", "\n        Distribute specification to builders\n        ", "debug", "log", "self", "[%s] Distributing tasks", "spec_id", "self", "celery.task.sets", "subtask", "models", "BuildTask", "irgsh_node.tasks", "BuildPackage", "irgsh.data", "Specification", "BuildSpecification", "irgsh.data", "Distribution", "BuildDistribution", "distributed", "self", "spec", "spec", "self", "spec_id", "spec_id", "self", "task_name", "name", "BuildPackage", "args", "create_build_task_param", "spec", "path", "reverse", "build_spec_source", "args", "spec_id", "self", "dsc", "self", "url_dsc", "http://%s%s", "domain", "get_current", "objects", "Site", "path", "build_spec", "BuildSpecification", "url_dsc", "dsc", "dist", "distribution", "spec", "build_dist", "BuildDistribution", "name", "dist", "mirror", "dist", "dist", "dist", "components", "dist", "extra", "dist", "args", "spec_id", "self", "build_spec", "build_dist", "kwargs", "None", "spec_id", "s", "d", "args", "subtasks", "archs", "get_archs", "self", "spec", "len", "archs", "ValueError", "_", "No suitable builders found.", "arch", "archs", "task", "BuildTask", "specification", "task", "spec", "architecture", "task", "arch", "save", "task", "routing_key", "builder.%s", "name", "arch", "opts", "exchange", "exchange_type", "routing_key", "task_id", "builder", "topic", "routing_key", "task_id", "task", "s", "subtask", "task_name", "args", "kwargs", "opts", "append", "subtasks", "s", "set_status", "self", "add_log", "spec", "self", "_", "Distributing build tasks to %(archs)s", "archs", "join", " ", "name", "arch", "arch", "archs", "s", "subtasks", "apply_async", "s", "distributed", "self", "True", "set_status", "self", "status", "models", "Specification", "updates", "status", "updated", "status", "now", "datetime", "status", "updates", "finished", "updates", "updated", "update", "filter", "objects", "Specification", "pk", "id", "spec", "self", "updates", "upload", "self", "files", "debug", "log", "self", "[%s] Scheduling source package upload", "spec_id", "self", "tasks", "UploadSource", "apply_async", "UploadSource", "args", "spec_id", "self", "files", "rebuild_repo", "spec", "celery.task.sets", "subtask", "models", "BuildTask", "irgsh_repo.tasks", "RebuildRepo", "package", "package", "spec", "dist", "repo", "distribution", "spec", "pkgdist", "get", "packagedistribution_set", "package", "distribution", "dist", "tasks", "select_related", "filter", "filter", "objects", "BuildTask", "specification", "spec", "status", "task_arch_list", "task_id", "task", "name", "architecture", "task", "task", "tasks", "task_name", "name", "RebuildRepo", "args", "id", "spec", "name", "package", "version", "spec", "name", "dist", "name", "component", "pkgdist", "task_arch_list", "section", "spec", "priority", "spec", "kwargs", "None", "opts", "exchange", "exchange_type", "routing_key", "repo", "direct", "repo", "s", "subtask", "task_name", "args", "kwargs", "opts", "apply_async", "s", "make_canonical", "cert_subject", "\n    Create canonical version of a certificate subject\n    ", "strip", "cert_subject", "verify_certificate", "cert_subject", "\n    Verify a certificate subject\n    ", "models", "Builder", "Worker", "cert_subject", "make_canonical", "cert_subject", "workers", "filter", "objects", "Worker", "active", "True", "cert_subject", "cert_subject", "len", "workers", "True", "builders", "filter", "objects", "Builder", "active", "True", "cert_subject", "cert_subject", "len", "builders", "ping_workers", "celery.task.control", "broadcast", "broadcast", "report_alive", "cancel_other_tasks", "spec", "exception", "celery.task.control", "revoke", "models", "BuildTask", "tasks", "exclude", "filter", "objects", "BuildTask", "specification", "spec", "pk", "id", "exception", "task", "tasks", "now", "now", "datetime", "total", "update", "filter", "filter", "objects", "BuildTask", "pk", "id", "task", "status__gte", "status", "updated", "now", "finished", "now", "total", "add_log", "spec", "_", "Task %(cancelled_task_id)s is cancelled by task %(task_id)s", "cancelled_task_id", "task_id", "task_id", "task", "task_id", "exception", "revoke", "task_id", "task", "sys", "django.core.management.color", "color_style", "django.utils.itercompat", "is_iterable", "any", "NameError", "django.utils.itercompat", "any", "ModelErrorCollection", "__init__", "self", "outfile", "stdout", "sys", "errors", "self", "outfile", "self", "outfile", "style", "self", "color_style", "add", "self", "context", "error", "append", "errors", "self", "context", "error", "write", "outfile", "self", "ERROR", "style", "self", "%s: %s\n", "context", "error", "get_validation_errors", "outfile", "app", "None", "\n    Validates all models that are part of the specified app. If no app name is provided,\n    validates all models of all installed apps. Writes errors, if any, to outfile.\n    Returns number of errors.\n    ", "django.conf", "settings", "django.db", "models", "connection", "django.db.models.loading", "get_app_errors", "django.db.models.fields.related", "RelatedObject", "django.db.models.deletion", "SET_NULL", "SET_DEFAULT", "e", "ModelErrorCollection", "outfile", "app_name", "error", "items", "get_app_errors", "add", "e", "app_name", "error", "cls", "get_models", "models", "app", "opts", "_meta", "cls", "f", "local_fields", "opts", "name", "f", "id", "primary_key", "f", "name", "pk", "opts", "id", "add", "e", "opts", "\"%s\": You can't use \"id\" as a field name, because each model automatically gets an \"id\" field if none of the fields have primary_key=True. You need to either remove/rename your \"id\" field or add primary_key=True to a field.", "name", "f", "endswith", "name", "f", "_", "add", "e", "opts", "\"%s\": Field names cannot end with underscores, because this would lead to ambiguous queryset filters.", "name", "f", "isinstance", "f", "CharField", "models", "max_length", "int", "max_length", "f", "max_length", "add", "e", "opts", "\"%s\": CharFields require a \"max_length\" attribute that is a positive integer.", "name", "f", "ValueError", "TypeError", "add", "e", "opts", "\"%s\": CharFields require a \"max_length\" attribute that is a positive integer.", "name", "f", "isinstance", "f", "DecimalField", "models", "decimalp_ok", "mdigits_ok", "False", "False", "decimalp_msg", "\"%s\": DecimalFields require a \"decimal_places\" attribute that is a non-negative integer.", "decimal_places", "int", "decimal_places", "f", "decimal_places", "add", "e", "opts", "decimalp_msg", "name", "f", "decimalp_ok", "True", "ValueError", "TypeError", "add", "e", "opts", "decimalp_msg", "name", "f", "mdigits_msg", "\"%s\": DecimalFields require a \"max_digits\" attribute that is a positive integer.", "max_digits", "int", "max_digits", "f", "max_digits", "add", "e", "opts", "mdigits_msg", "name", "f", "mdigits_ok", "True", "ValueError", "TypeError", "add", "e", "opts", "mdigits_msg", "name", "f", "invalid_values_msg", "\"%s\": DecimalFields require a \"max_digits\" attribute value that is greater than the value of the \"decimal_places\" attribute.", "decimalp_ok", "mdigits_ok", "decimal_places", "max_digits", "add", "e", "opts", "invalid_values_msg", "name", "f", "isinstance", "f", "FileField", "models", "upload_to", "f", "add", "e", "opts", "\"%s\": FileFields require an \"upload_to\" attribute.", "name", "f", "isinstance", "f", "ImageField", "models", "PIL", "Image", "ImportError", "Image", "ImportError", "add", "e", "opts", "\"%s\": To use ImageFields, you need to install the Python Imaging Library. Get it at http://www.pythonware.com/products/pil/ .", "name", "f", "isinstance", "f", "BooleanField", "models", "getattr", "f", "null", "False", "add", "e", "opts", "\"%s\": BooleanFields do not accept null values. Use a NullBooleanField instead.", "name", "f", "choices", "f", "isinstance", "choices", "f", "basestring", "is_iterable", "choices", "f", "add", "e", "opts", "\"%s\": \"choices\" should be iterable (e.g., a tuple or list).", "name", "f", "c", "choices", "f", "isinstance", "c", "list", "tuple", "len", "c", "add", "e", "opts", "\"%s\": \"choices\" should be a sequence of two-tuples.", "name", "f", "db_index", "f", "None", "True", "False", "add", "e", "opts", "\"%s\": \"db_index\" should be either None, True or False.", "name", "f", "validate_field", "validation", "connection", "e", "opts", "f", "rel", "f", "hasattr", "rel", "f", "on_delete", "on_delete", "rel", "f", "SET_NULL", "null", "f", "add", "e", "opts", "'%s' specifies on_delete=SET_NULL, but cannot be null.", "name", "f", "on_delete", "rel", "f", "SET_DEFAULT", "has_default", "f", "add", "e", "opts", "'%s' specifies on_delete=SET_DEFAULT, but has no default value.", "name", "f", "rel", "f", "to", "rel", "f", "get_models", "models", "add", "e", "opts", "'%s' has a relation with model %s, which has either not been installed or is abstract.", "name", "f", "to", "rel", "f", "isinstance", "to", "rel", "f", "str", "unicode", "unique", "get_field", "_meta", "to", "rel", "f", "field_name", "rel", "f", "add", "e", "opts", "Field '%s' under model '%s' must have a unique=True constraint.", "field_name", "rel", "f", "__name__", "to", "rel", "f", "rel_opts", "_meta", "to", "rel", "f", "rel_name", "get_accessor_name", "RelatedObject", "to", "rel", "f", "cls", "f", "rel_query_name", "related_query_name", "f", "is_hidden", "rel", "f", "r", "fields", "rel_opts", "name", "r", "rel_name", "add", "e", "opts", "Accessor for field '%s' clashes with field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for field '%s' clashes with field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "r", "local_many_to_many", "rel_opts", "name", "r", "rel_name", "add", "e", "opts", "Accessor for field '%s' clashes with m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for field '%s' clashes with m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "r", "get_all_related_many_to_many_objects", "rel_opts", "get_accessor_name", "r", "rel_name", "add", "e", "opts", "Accessor for field '%s' clashes with related m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "get_accessor_name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for field '%s' clashes with related m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "r", "get_all_related_objects", "rel_opts", "field", "r", "f", "get_accessor_name", "r", "rel_name", "add", "e", "opts", "Accessor for field '%s' clashes with related field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "get_accessor_name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for field '%s' clashes with related field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "seen_intermediary_signatures", "i", "f", "enumerate", "local_many_to_many", "opts", "to", "rel", "f", "get_models", "models", "add", "e", "opts", "'%s' has an m2m relation with model %s, which has either not been installed or is abstract.", "name", "f", "to", "rel", "f", "isinstance", "to", "rel", "f", "str", "unicode", "unique", "f", "add", "e", "opts", "ManyToManyFields cannot be unique.  Remove the unique argument on '%s'.", "name", "f", "through", "rel", "f", "None", "isinstance", "through", "rel", "f", "basestring", "from_model", "to_model", "cls", "to", "rel", "f", "from_model", "to_model", "symmetrical", "rel", "f", "auto_created", "_meta", "through", "rel", "f", "add", "e", "opts", "Many-to-many fields with intermediate tables cannot be symmetrical.", "seen_from", "seen_to", "seen_self", "False", "False", "inter_field", "fields", "_meta", "through", "rel", "f", "rel_to", "getattr", "rel", "inter_field", "to", "None", "from_model", "to_model", "rel_to", "from_model", "seen_self", "seen_self", "add", "e", "opts", "Intermediary model %s has more than two foreign keys to %s, which is ambiguous and is not permitted.", "object_name", "_meta", "through", "rel", "f", "object_name", "_meta", "from_model", "rel_to", "from_model", "seen_from", "add", "e", "opts", "Intermediary model %s has more than one foreign key to %s, which is ambiguous and is not permitted.", "object_name", "_meta", "through", "rel", "f", "object_name", "_meta", "from_model", "seen_from", "True", "rel_to", "to_model", "seen_to", "add", "e", "opts", "Intermediary model %s has more than one foreign key to %s, which is ambiguous and is not permitted.", "object_name", "_meta", "through", "rel", "f", "object_name", "_meta", "rel_to", "seen_to", "True", "through", "rel", "f", "get_models", "models", "include_auto_created", "True", "add", "e", "opts", "'%s' specifies an m2m relation through model %s, which has not been installed.", "name", "f", "through", "rel", "f", "signature", "to", "rel", "f", "cls", "through", "rel", "f", "signature", "seen_intermediary_signatures", "add", "e", "opts", "The model %s has two manually-defined m2m relations through the model %s, which is not permitted. Please consider using an extra field on your intermediary model instead.", "object_name", "_meta", "cls", "object_name", "_meta", "through", "rel", "f", "append", "seen_intermediary_signatures", "signature", "auto_created", "_meta", "through", "rel", "f", "seen_related_fk", "seen_this_fk", "False", "False", "field", "fields", "_meta", "through", "rel", "f", "rel", "field", "seen_related_fk", "to", "rel", "field", "to", "rel", "f", "seen_related_fk", "True", "to", "rel", "field", "cls", "seen_this_fk", "True", "seen_related_fk", "seen_this_fk", "add", "e", "opts", "'%s' is a manually-defined m2m relation through model %s, which does not have foreign keys to %s and %s", "name", "f", "object_name", "_meta", "through", "rel", "f", "object_name", "_meta", "to", "rel", "f", "object_name", "_meta", "cls", "isinstance", "through", "rel", "f", "basestring", "add", "e", "opts", "'%s' specifies an m2m relation through model %s, which has not been installed", "name", "f", "through", "rel", "f", "rel_opts", "_meta", "to", "rel", "f", "rel_name", "get_accessor_name", "RelatedObject", "to", "rel", "f", "cls", "f", "rel_query_name", "related_query_name", "f", "rel_name", "None", "r", "fields", "rel_opts", "name", "r", "rel_name", "add", "e", "opts", "Accessor for m2m field '%s' clashes with field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for m2m field '%s' clashes with field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "r", "local_many_to_many", "rel_opts", "name", "r", "rel_name", "add", "e", "opts", "Accessor for m2m field '%s' clashes with m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for m2m field '%s' clashes with m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "name", "r", "name", "f", "r", "get_all_related_many_to_many_objects", "rel_opts", "field", "r", "f", "get_accessor_name", "r", "rel_name", "add", "e", "opts", "Accessor for m2m field '%s' clashes with related m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "get_accessor_name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for m2m field '%s' clashes with related m2m field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "r", "get_all_related_objects", "rel_opts", "get_accessor_name", "r", "rel_name", "add", "e", "opts", "Accessor for m2m field '%s' clashes with related field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "get_accessor_name", "r", "rel_query_name", "add", "e", "opts", "Reverse query name for m2m field '%s' clashes with related field '%s.%s'. Add a related_name argument to the definition for '%s'.", "name", "f", "object_name", "rel_opts", "get_accessor_name", "r", "name", "f", "ordering", "opts", "field_name", "ordering", "opts", "field_name", "?", "startswith", "field_name", "-", "field_name", "field_name", "order_with_respect_to", "opts", "field_name", "_order", "__", "field_name", "get_field", "opts", "field_name", "many_to_many", "False", "FieldDoesNotExist", "models", "add", "e", "opts", "\"ordering\" refers to \"%s\", a field that doesn't exist.", "field_name", "ut", "unique_together", "opts", "field_name", "ut", "f", "get_field", "opts", "field_name", "many_to_many", "True", "FieldDoesNotExist", "models", "add", "e", "opts", "\"unique_together\" refers to %s, a field that doesn't exist. Check your syntax.", "field_name", "isinstance", "rel", "f", "ManyToManyRel", "models", "add", "e", "opts", "\"unique_together\" refers to %s. ManyToManyFields are not supported in unique_together.", "name", "f", "f", "local_fields", "opts", "add", "e", "opts", "\"unique_together\" refers to %s. This is not in the same model as the unique_together statement.", "name", "f", "len", "errors", "e", "os", "decimal", "Decimal", "django.utils", "unittest", "django.utils.copycompat", "copy", "django.contrib.gis.gdal", "DataSource", "django.contrib.gis.tests.utils", "mysql", "django.contrib.gis.utils.layermapping", "LayerMapping", "LayerMapError", "InvalidDecimal", "MissingForeignKey", "models", "City", "County", "CountyFeat", "Interstate", "ICity1", "ICity2", "State", "city_mapping", "co_mapping", "cofeat_mapping", "inter_mapping", "shp_path", "realpath", "path", "os", "join", "path", "os", "dirname", "path", "os", "__file__", "..", "data", "city_shp", "join", "path", "os", "shp_path", "cities", "cities.shp", "co_shp", "join", "path", "os", "shp_path", "counties", "counties.shp", "inter_shp", "join", "path", "os", "shp_path", "interstates", "interstates.shp", "NAMES", "Bexar", "Galveston", "Harris", "Honolulu", "Pueblo", "NUMS", "STATES", "Texas", "Texas", "Texas", "Hawaii", "Colorado", "LayerMapTest", "TestCase", "unittest", "test01_init", "self", "Testing LayerMapping initialization.", "bad1", "copy", "city_mapping", "bad1", "foobar", "FooField", "bad2", "copy", "city_mapping", "bad2", "name", "Nombre", "bad3", "copy", "city_mapping", "bad3", "point", "CURVE", "bad_map", "bad1", "bad2", "bad3", "lm", "LayerMapping", "City", "city_shp", "bad_map", "LayerMapError", "fail", "self", "Expected a LayerMapError.", "lm", "LayerMapping", "City", "city_shp", "city_mapping", "encoding", "foobar", "LookupError", "fail", "self", "Expected a LookupError", "test02_simple_layermap", "self", "Test LayerMapping import of a simple point shapefile.", "lm", "LayerMapping", "City", "city_shp", "city_mapping", "save", "lm", "assertEqual", "self", "count", "objects", "City", "ds", "DataSource", "city_shp", "layer", "ds", "feat", "layer", "city", "get", "objects", "City", "name", "value", "feat", "Name", "assertEqual", "self", "value", "feat", "Population", "population", "city", "assertEqual", "self", "Decimal", "str", "feat", "Density", "density", "city", "assertEqual", "self", "value", "feat", "Created", "dt", "city", "pnt1", "pnt2", "geom", "feat", "point", "city", "assertAlmostEqual", "self", "x", "pnt1", "x", "pnt2", "assertAlmostEqual", "self", "y", "pnt1", "y", "pnt2", "test03_layermap_strict", "self", "Testing the `strict` keyword, and import of a LineString shapefile.", "lm", "LayerMapping", "Interstate", "inter_shp", "inter_mapping", "save", "lm", "silent", "True", "strict", "True", "InvalidDecimal", "mysql", "delete", "all", "objects", "Interstate", "fail", "self", "Should have failed on strict import with invalid decimal values.", "lm", "LayerMapping", "Interstate", "inter_shp", "inter_mapping", "save", "lm", "silent", "True", "assertEqual", "self", "count", "objects", "Interstate", "ds", "DataSource", "inter_shp", "valid_feats", "ds", "feat", "valid_feats", "istate", "get", "objects", "Interstate", "name", "value", "feat", "Name", "fid", "feat", "assertEqual", "self", "Decimal", "str", "feat", "Length", "length", "istate", "fid", "feat", "assertAlmostEqual", "self", "get", "feat", "Length", "float", "length", "istate", "p1", "p2", "zip", "geom", "feat", "path", "istate", "assertAlmostEqual", "self", "p1", "p2", "assertAlmostEqual", "self", "p1", "p2", "county_helper", "self", "county_feat", "True", "Helper function for ensuring the integrity of the mapped County models.", "name", "n", "st", "zip", "NAMES", "NUMS", "STATES", "c", "get", "objects", "County", "name", "name", "assertEqual", "self", "n", "len", "mpoly", "c", "assertEqual", "self", "st", "name", "state", "c", "county_feat", "qs", "filter", "objects", "CountyFeat", "name", "name", "assertEqual", "self", "n", "count", "qs", "test04_layermap_unique_multigeometry_fk", "self", "Testing the `unique`, and `transform`, geometry collection conversion, and ForeignKey mappings.", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "source_srs", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "source_srs", "NAD83", "arg", "name", "name", "mpoly", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "unique", "arg", "fail", "self", "No exception should be raised for proper use of keywords.", "e", "arg", "TypeError", "ValueError", "foobar", "ValueError", "name", "mpolygon", "assertRaises", "self", "e", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "unique", "arg", "mysql", "assertRaises", "self", "LayerMapError", "LayerMapping", "County", "co_shp", "co_mapping", "bad_fk_map1", "copy", "co_mapping", "bad_fk_map1", "state", "name", "bad_fk_map2", "copy", "co_mapping", "bad_fk_map2", "state", "nombre", "State", "assertRaises", "self", "TypeError", "LayerMapping", "County", "co_shp", "bad_fk_map1", "transform", "False", "assertRaises", "self", "LayerMapError", "LayerMapping", "County", "co_shp", "bad_fk_map2", "transform", "False", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "unique", "name", "assertRaises", "self", "MissingForeignKey", "save", "lm", "silent", "True", "strict", "True", "co", "hi", "tx", "State", "name", "Colorado", "State", "name", "Hawaii", "State", "name", "Texas", "save", "co", "save", "hi", "save", "tx", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "unique", "name", "save", "lm", "silent", "True", "strict", "True", "lm", "LayerMapping", "CountyFeat", "co_shp", "cofeat_mapping", "transform", "False", "save", "lm", "silent", "True", "strict", "True", "county_helper", "self", "test05_test_fid_range_step", "self", "Tests the `fid_range` keyword and the `step` keyword of .save().", "clear_counties", "delete", "all", "objects", "County", "lm", "LayerMapping", "County", "co_shp", "co_mapping", "transform", "False", "unique", "name", "clear_counties", "bad_ranges", "foo", "co_shp", "bad", "bad_ranges", "assertRaises", "self", "TypeError", "save", "lm", "fid_range", "bad", "fr", "assertRaises", "self", "LayerMapError", "save", "lm", "fid_range", "fr", "step", "save", "lm", "fid_range", "fr", "qs", "all", "objects", "County", "assertEqual", "self", "count", "qs", "assertEqual", "self", "Galveston", "name", "qs", "clear_counties", "save", "lm", "fid_range", "slice", "None", "silent", "True", "strict", "True", "save", "lm", "fid_range", "slice", "None", "silent", "True", "strict", "True", "qs", "order_by", "objects", "County", "name", "assertEqual", "self", "count", "qs", "hi", "co", "tuple", "qs", "hi_idx", "co_idx", "tuple", "map", "index", "NAMES", "Honolulu", "Pueblo", "assertEqual", "self", "Pueblo", "name", "co", "assertEqual", "self", "NUMS", "co_idx", "len", "mpoly", "co", "assertEqual", "self", "Honolulu", "name", "hi", "assertEqual", "self", "NUMS", "hi_idx", "len", "mpoly", "hi", "st", "clear_counties", "save", "lm", "step", "st", "strict", "True", "county_helper", "self", "county_feat", "False", "test06_model_inheritance", "self", "Tests LayerMapping on inherited models.  See #12093.", "icity_mapping", "name", "population", "density", "point", "dt", "Name", "Population", "Density", "POINT", "Created", "lm1", "LayerMapping", "ICity1", "city_shp", "icity_mapping", "save", "lm1", "lm2", "LayerMapping", "ICity2", "city_shp", "icity_mapping", "save", "lm2", "assertEqual", "self", "count", "objects", "ICity1", "assertEqual", "self", "count", "objects", "ICity2", "suite", "s", "TestSuite", "unittest", "addTest", "s", "makeSuite", "unittest", "LayerMapTest", "s", "pytz", "logging", "django.contrib.auth.models", "User", "django.contrib.staticfiles.templatetags.staticfiles", "static", "django.http", "Http404", "django.template.defaultfilters", "date", "django.utils.datastructures", "SortedDict", "django.utils.html", "conditional_escape", "django.utils.translation", "ugettext_lazy", "_", "djblets.datagrid.grids", "Column", "DateTimeColumn", "DataGrid", "djblets.util.templatetags.djblets_utils", "ageid", "reviewboard.accounts.models", "Profile", "reviewboard.reviews.models", "Group", "ReviewRequest", "reviewboard.reviews.templatetags.reviewtags", "render_star", "reviewboard.site.urlresolvers", "local_site_reverse", "DateTimeSinceColumn", "DateTimeColumn", "A column that displays how long it has been since a date/time.\n\n    These columns will dynamically update as the page is shown, so that the\n    number of minutes, hours, days, etc. ago is correct.\n    ", "render_data", "self", "obj", "date", "getattr", "obj", "field_name", "self", "c", "render_data", "super", "DateTimeSinceColumn", "self", "obj", "StarColumn", "Column", "\n    A column used to indicate whether the object is \"starred\" or watched.\n    The star is interactive, allowing the user to star or unstar the object.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "image_url", "self", "static", "rb/images/star_on.png", "image_width", "self", "image_height", "self", "image_alt", "self", "_", "Starred", "detailed_label", "self", "_", "Starred", "shrink", "self", "True", "all_starred", "self", "render_data", "self", "obj", "starred", "obj", "get", "all_starred", "self", "id", "obj", "False", "render_star", "user", "request", "datagrid", "self", "obj", "ReviewGroupStarColumn", "StarColumn", "\n    A specialization of StarColumn that augments the SQL query to include\n    the starred calculation for review groups.\n    ", "augment_queryset", "self", "queryset", "user", "user", "request", "datagrid", "self", "is_anonymous", "user", "queryset", "profile", "get_profile", "user", "DoesNotExist", "Profile", "queryset", "pks", "values_list", "filter", "starred_groups", "profile", "pk__in", "id_list", "datagrid", "self", "pk", "flat", "True", "all_starred", "self", "pk", "pks", "all_starred", "self", "pk", "True", "queryset", "ReviewRequestStarColumn", "StarColumn", "\n    A specialization of StarColumn that augments the SQL query to include\n    the starred calculation for review requests.\n    ", "augment_queryset", "self", "queryset", "user", "user", "request", "datagrid", "self", "is_anonymous", "user", "queryset", "profile", "get_profile", "user", "DoesNotExist", "Profile", "queryset", "pks", "values_list", "filter", "starred_review_requests", "profile", "pk__in", "id_list", "datagrid", "self", "pk", "flat", "True", "all_starred", "self", "pk", "pks", "all_starred", "self", "pk", "True", "queryset", "ShipItColumn", "Column", "\n    A column used to indicate whether someone has marked this review request\n    as \"Ship It!\"\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "image_url", "self", "static", "rb/images/shipit.png", "image_width", "self", "image_height", "self", "image_alt", "self", "_", "Ship It!", "detailed_label", "self", "_", "Ship It!", "db_field", "self", "shipit_count", "sortable", "self", "True", "shrink", "self", "True", "render_data", "self", "review_request", "shipit_count", "review_request", "static", "rb/images/shipit_checkmark.png", "image_alt", "self", "image_alt", "self", "shipit_count", "review_request", "", "MyCommentsColumn", "Column", "\n    A column meant to represent the status of the logged-in user's\n    comments on the review.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "image_url", "self", "static", "rb/images/comment-draft-small.png", "image_width", "self", "image_height", "self", "image_alt", "self", "_", "My Comments", "detailed_label", "self", "_", "My Comments", "shrink", "self", "True", "augment_queryset", "self", "queryset", "user", "user", "request", "datagrid", "self", "is_anonymous", "user", "queryset", "query_dict", "user_id", "str", "id", "user", "extra", "queryset", "select", "mycomments_my_reviews", "mycomments_private_reviews", "mycomments_shipit_reviews", "\n                SELECT COUNT(1)\n                  FROM reviews_review\n                  WHERE reviews_review.user_id = %(user_id)s\n                    AND reviews_review.review_request_id =\n                        reviews_reviewrequest.id\n            ", "query_dict", "\n                SELECT COUNT(1)\n                  FROM reviews_review\n                  WHERE reviews_review.user_id = %(user_id)s\n                    AND reviews_review.review_request_id =\n                        reviews_reviewrequest.id\n                    AND NOT reviews_review.public\n            ", "query_dict", "\n                SELECT COUNT(1)\n                  FROM reviews_review\n                  WHERE reviews_review.user_id = %(user_id)s\n                    AND reviews_review.review_request_id =\n                        reviews_reviewrequest.id\n                    AND reviews_review.ship_it\n            ", "query_dict", "render_data", "self", "review_request", "user", "user", "request", "datagrid", "self", "is_anonymous", "user", "mycomments_my_reviews", "review_request", "", "image_url", "None", "image_alt", "None", "mycomments_private_reviews", "review_request", "image_url", "image_url", "self", "image_alt", "_", "Comments drafted", "mycomments_shipit_reviews", "review_request", "image_url", "static", "rb/images/comment-shipit-small.png", "image_alt", "_", "Comments published. Ship it!", "image_url", "static", "rb/images/comment-small.png", "image_alt", "_", "Comments published", "image_url", "image_width", "self", "image_height", "self", "image_alt", "image_alt", "ToMeColumn", "Column", "\n    A column used to indicate whether the current logged-in user is targeted\n    by the review request.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "label", "self", "detailed_label", "self", "shrink", "self", "True", "render_data", "self", "review_request", "user", "user", "request", "datagrid", "self", "is_authenticated", "user", "exists", "filter", "target_people", "review_request", "pk", "pk", "user", "detailed_label", "self", "", "NewUpdatesColumn", "Column", "\n    A column used to indicate whether the review request has any new updates\n    since the user last saw it.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "image_url", "self", "static", "rb/images/convo.png", "image_width", "self", "image_height", "self", "image_alt", "self", "New Updates", "detailed_label", "self", "New Updates", "shrink", "self", "True", "render_data", "self", "review_request", "new_review_count", "review_request", "image_url", "self", "image_width", "self", "image_height", "self", "image_alt", "self", "image_alt", "self", "", "SummaryColumn", "Column", "\n    A column used to display a summary of the review request, along with\n    labels indicating if it's a draft or if it's submitted.\n    ", "__init__", "args", "kwargs", "self", "label", "_", "Summary", "__init__", "Column", "self", "label", "label", "args", "kwargs", "sortable", "self", "True", "augment_queryset", "self", "queryset", "user", "user", "request", "datagrid", "self", "is_anonymous", "user", "queryset", "extra", "queryset", "select", "draft_summary", "\n                SELECT reviews_reviewrequestdraft.summary\n                  FROM reviews_reviewrequestdraft\n                  WHERE reviews_reviewrequestdraft.review_request_id =\n                        reviews_reviewrequest.id\n            ", "render_data", "self", "review_request", "summary", "conditional_escape", "summary", "review_request", "labels", "summary", "summary", "&nbsp;<i>%s</i>", "_", "No Summary", "submitter_id", "review_request", "id", "user", "request", "datagrid", "self", "draft_summary", "review_request", "None", "summary", "conditional_escape", "draft_summary", "review_request", "update", "labels", "_", "Draft", "label-draft", "public", "review_request", "status", "review_request", "PENDING_REVIEW", "ReviewRequest", "update", "labels", "_", "Draft", "label-draft", "status", "review_request", "SUBMITTED", "ReviewRequest", "update", "labels", "_", "Submitted", "label-submitted", "status", "review_request", "DISCARDED", "ReviewRequest", "update", "labels", "_", "Discarded", "label-discarded", "display_data", "", "label", "labels", "display_data", "labels", "label", "label", "display_data", "summary", "display_data", "SubmitterColumn", "Column", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "_", "Submitter", "db_field", "submitter__username", "shrink", "True", "sortable", "True", "link", "True", "args", "kwargs", "augment_queryset", "self", "queryset", "select_related", "queryset", "submitter", "RepositoryColumn", "Column", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "_", "Repository", "db_field", "repository__name", "shrink", "True", "sortable", "True", "link", "False", "css_class", "repository-column", "args", "kwargs", "augment_queryset", "self", "queryset", "select_related", "queryset", "repository", "render_data", "self", "obj", "render_data", "super", "RepositoryColumn", "self", "obj", "", "PendingCountColumn", "Column", "\n    A column used to show the pending number of review requests for a\n    group or user.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "render_data", "self", "obj", "str", "count", "filter", "getattr", "obj", "field_name", "self", "public", "True", "status", "P", "PeopleColumn", "Column", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "label", "self", "_", "People", "detailed_label", "self", "_", "Target People", "sortable", "self", "False", "shrink", "self", "False", "render_data", "self", "review_request", "people", "all", "target_people", "review_request", "reduce", "a", "d", "a", "username", "d", " ", "people", "", "GroupsColumn", "Column", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "label", "self", "_", "Groups", "detailed_label", "self", "_", "Target Groups", "sortable", "self", "False", "shrink", "self", "False", "render_data", "self", "review_request", "groups", "all", "target_groups", "review_request", "reduce", "a", "d", "a", "name", "d", " ", "groups", "", "GroupMemberCountColumn", "Column", "\n    A column used to show the number of users that registered for a group.\n    ", "__init__", "args", "kwargs", "self", "__init__", "Column", "self", "args", "kwargs", "link", "self", "True", "link_func", "self", "link_to_object", "self", "render_data", "self", "group", "str", "count", "users", "group", "link_to_object", "self", "group", "value", "local_site_reverse", "group_members", "request", "request", "datagrid", "self", "args", "name", "group", "ReviewCountColumn", "Column", "\n    A column showing the number of reviews for a review request.\n    ", "__init__", "args", "kwargs", "self", "label", "detailed_label", "_", "Reviews", "_", "Number of Reviews", "__init__", "Column", "self", "label", "label", "detailed_label", "detailed_label", "kwargs", "kwargs", "shrink", "self", "True", "link", "self", "True", "link_func", "self", "link_to_object", "self", "render_data", "self", "review_request", "str", "publicreviewcount_count", "review_request", "augment_queryset", "self", "queryset", "extra", "queryset", "select", "publicreviewcount_count", "\n                SELECT COUNT(*)\n                  FROM reviews_review\n                  WHERE reviews_review.public\n                    AND reviews_review.base_reply_to_id is NULL\n                    AND reviews_review.review_request_id =\n                        reviews_reviewrequest.id\n            ", "link_to_object", "self", "review_request", "value", "%s#last-review", "get_absolute_url", "review_request", "DiffUpdatedColumn", "DateTimeColumn", "A column indicating the date and time the diff was last updated.", "__init__", "args", "kwargs", "self", "__init__", "super", "DiffUpdatedColumn", "self", "_", "Diff Updated", "db_field", "diffset_history__last_diff_updated", "field_name", "last_diff_updated", "sortable", "True", "link", "False", "args", "kwargs", "augment_queryset", "self", "queryset", "select_related", "queryset", "diffset_history", "render_data", "self", "obj", "last_diff_updated", "diffset_history", "obj", "render_data", "super", "DiffUpdatedColumn", "self", "diffset_history", "obj", "", "DiffUpdatedSinceColumn", "DateTimeSinceColumn", "A column indicating the elapsed time since the diff was last updated.", "__init__", "args", "kwargs", "self", "__init__", "super", "DiffUpdatedSinceColumn", "self", "_", "Diff Updated", "db_field", "diffset_history__last_diff_updated", "field_name", "last_diff_updated", "sortable", "True", "link", "False", "args", "kwargs", "augment_queryset", "self", "queryset", "select_related", "queryset", "diffset_history", "render_data", "self", "obj", "last_diff_updated", "diffset_history", "obj", "render_data", "DateTimeSinceColumn", "self", "diffset_history", "obj", "", "BugsColumn", "Column", "__init__", "args", "kwargs", "self", "__init__", "super", "BugsColumn", "self", "_", "Bugs", "link", "False", "shrink", "True", "sortable", "False", "css_class", "bugs", "args", "kwargs", "augment_queryset", "self", "queryset", "select_related", "queryset", "repository", "render_data", "self", "review_request", "bugs", "get_bug_list", "review_request", "repository", "repository", "review_request", "repository", "bug_tracker", "repository", "join", ", ", "<a href=\"%s\">%s</a>", "bug_tracker", "repository", "bug", "bug", "bug", "bugs", "TypeError", "warning", "logging", "Invalid bug tracker format when rendering bugs column: %s", "bug_tracker", "repository", "join", ", ", "bugs", "ReviewRequestDataGrid", "DataGrid", "\n    A datagrid that displays a list of review requests.\n\n    This datagrid accepts the show_submitted parameter in the URL, allowing\n    submitted review requests to be filtered out or displayed.\n    ", "my_comments", "MyCommentsColumn", "star", "ReviewRequestStarColumn", "ship_it", "ShipItColumn", "summary", "SummaryColumn", "expand", "True", "link", "True", "css_class", "summary", "submitter", "SubmitterColumn", "branch", "Column", "_", "Branch", "db_field", "branch", "shrink", "True", "sortable", "True", "link", "False", "bugs_closed", "BugsColumn", "repository", "RepositoryColumn", "time_added", "DateTimeColumn", "_", "Posted", "detailed_label", "_", "Posted Time", "format", "F jS, Y, P", "shrink", "True", "css_class", "r", "ageid", "time_added", "r", "last_updated", "DateTimeColumn", "_", "Last Updated", "format", "F jS, Y, P", "shrink", "True", "db_field", "last_updated", "field_name", "last_updated", "css_class", "r", "ageid", "last_updated", "r", "diff_updated", "DiffUpdatedColumn", "format", "F jS, Y, P", "shrink", "True", "css_class", "r", "ageid", "last_diff_updated", "diffset_history", "r", "time_added_since", "DateTimeSinceColumn", "_", "Posted", "detailed_label", "_", "Posted Time (Relative)", "field_name", "time_added", "shrink", "True", "css_class", "r", "ageid", "time_added", "r", "last_updated_since", "DateTimeSinceColumn", "_", "Last Updated", "detailed_label", "_", "Last Updated (Relative)", "shrink", "True", "db_field", "last_updated", "field_name", "last_updated", "css_class", "r", "ageid", "last_updated", "r", "diff_updated_since", "DiffUpdatedSinceColumn", "detailed_label", "_", "Diff Updated (Relative)", "shrink", "True", "css_class", "r", "ageid", "last_diff_updated", "diffset_history", "r", "review_count", "ReviewCountColumn", "target_groups", "GroupsColumn", "target_people", "PeopleColumn", "to_me", "ToMeColumn", "review_id", "Column", "_", "Review ID", "shrink", "True", "sortable", "True", "link", "True", "__init__", "args", "kwargs", "self", "local_site", "self", "pop", "kwargs", "local_site", "None", "local_site", "self", "review_id_field", "local_id", "review_id_field", "pk", "review_id", "self", "Column", "_", "Review ID", "field_name", "review_id_field", "shrink", "True", "sortable", "True", "link", "True", "__init__", "DataGrid", "self", "args", "kwargs", "listview_template", "self", "reviews/review_request_listview.html", "profile_sort_field", "self", "sort_review_request_columns", "profile_columns_field", "self", "review_request_columns", "show_submitted", "self", "True", "submitter_url_name", "self", "user", "default_sort", "self", "-last_updated", "default_columns", "self", "star", "summary", "submitter", "time_added", "last_updated_since", "user", "user", "request", "self", "is_authenticated", "user", "timezone", "self", "timezone", "pytz", "timezone", "get_profile", "user", "timezone", "time_added", "self", "timezone", "self", "timezone", "last_updated", "self", "timezone", "self", "timezone", "diff_updated", "self", "timezone", "self", "load_extra_state", "self", "profile", "profile", "show_submitted", "self", "show_submitted", "profile", "show_submitted", "self", "int", "get", "GET", "request", "self", "show_submitted", "show_submitted", "self", "ValueError", "show_submitted", "self", "queryset", "self", "exclude", "queryset", "self", "status", "D", "queryset", "self", "filter", "queryset", "self", "status", "P", "queryset", "self", "filter", "queryset", "self", "local_site", "local_site", "self", "profile", "show_submitted", "self", "show_submitted", "profile", "show_submitted", "profile", "show_submitted", "self", "True", "False", "post_process_queryset", "self", "queryset", "q", "with_counts", "queryset", "user", "request", "self", "post_process_queryset", "super", "ReviewRequestDataGrid", "self", "q", "link_to_object", "self", "obj", "value", "value", "isinstance", "value", "User", "local_site_reverse", "user", "request", "request", "self", "args", "value", "get_absolute_url", "obj", "DashboardDataGrid", "ReviewRequestDataGrid", "\n    A version of the ReviewRequestDataGrid that displays additional fields\n    useful in the dashboard. It also displays a different set of data\n    depending on the view that was passed.\n    ", "new_updates", "NewUpdatesColumn", "my_comments", "MyCommentsColumn", "__init__", "args", "kwargs", "self", "local_site", "get", "kwargs", "local_site", "None", "__init__", "ReviewRequestDataGrid", "self", "args", "kwargs", "listview_template", "self", "datagrid/listview.html", "profile_sort_field", "self", "sort_dashboard_columns", "profile_columns_field", "self", "dashboard_columns", "default_view", "self", "incoming", "show_submitted", "self", "False", "default_sort", "self", "-last_updated", "default_columns", "self", "new_updates", "star", "summary", "submitter", "time_added", "last_updated_since", "counts", "self", "group", "get", "GET", "request", "self", "group", "None", "view", "get", "GET", "request", "self", "view", "None", "extra_query", "view", "append", "extra_query", "view=%s", "view", "group", "append", "extra_query", "group=%s", "group", "extra_context", "self", "extra_query", "join", "&", "extra_query", "local_site", "self", "local_site", "load_extra_state", "self", "profile", "group", "get", "GET", "request", "self", "group", "", "view", "get", "GET", "request", "self", "view", "default_view", "self", "user", "user", "request", "self", "view", "outgoing", "queryset", "self", "from_user", "objects", "ReviewRequest", "user", "user", "local_site", "local_site", "self", "title", "self", "_", "view", "mine", "queryset", "self", "from_user", "objects", "ReviewRequest", "user", "user", "None", "local_site", "local_site", "self", "title", "self", "_", "view", "to-me", "queryset", "self", "to_user_directly", "objects", "ReviewRequest", "user", "user", "local_site", "local_site", "self", "title", "self", "_", "view", "to-group", "group", "", "has_groups", "exists", "filter", "objects", "Group", "name", "group", "local_site", "local_site", "self", "has_groups", "Http404", "queryset", "self", "to_group", "objects", "ReviewRequest", "group", "local_site", "self", "user", "title", "self", "_", "group", "queryset", "self", "to_user_groups", "objects", "ReviewRequest", "user", "user", "local_site", "local_site", "self", "title", "self", "_", "view", "starred", "profile", "get_profile", "user", "queryset", "self", "public", "starred_review_requests", "profile", "user", "local_site", "local_site", "self", "title", "self", "_", "view", "incoming", "queryset", "self", "to_user", "objects", "ReviewRequest", "user", "user", "local_site", "local_site", "self", "title", "self", "_", "Http404", "counts", "self", "get_sidebar_counts", "user", "local_site", "self", "False", "SubmitterDataGrid", "DataGrid", "\n    A datagrid showing a list of submitters.\n    ", "username", "Column", "_", "Username", "link", "True", "sortable", "True", "fullname", "Column", "_", "Full Name", "field_name", "get_full_name", "link", "True", "expand", "True", "pending_count", "PendingCountColumn", "_", "Pending Reviews", "field_name", "directed_review_requests", "shrink", "True", "__init__", "self", "request", "queryset", "title", "local_site", "filter", "objects", "User", "is_active", "True", "_", "All submitters", "None", "local_site", "qs", "filter", "queryset", "local_site", "local_site", "qs", "queryset", "__init__", "DataGrid", "self", "request", "qs", "title", "default_sort", "self", "username", "profile_sort_field", "self", "sort_submitter_columns", "profile_columns_field", "self", "submitter_columns", "default_columns", "self", "username", "fullname", "pending_count", "link_to_object", "self", "obj", "value", "local_site_reverse", "user", "request", "request", "self", "args", "username", "obj", "GroupDataGrid", "DataGrid", "\n    A datagrid showing a list of review groups.\n    ", "star", "ReviewGroupStarColumn", "name", "Column", "_", "Group ID", "link", "True", "sortable", "True", "displayname", "Column", "_", "Group Name", "field_name", "display_name", "link", "True", "expand", "True", "pending_count", "PendingCountColumn", "_", "Pending Reviews", "field_name", "review_requests", "link", "True", "shrink", "True", "member_count", "GroupMemberCountColumn", "_", "Members", "field_name", "members", "shrink", "True", "__init__", "args", "kwargs", "self", "request", "title", "_", "All groups", "local_site", "pop", "kwargs", "local_site", "None", "queryset", "accessible", "objects", "Group", "user", "request", "local_site", "local_site", "__init__", "DataGrid", "self", "request", "queryset", "queryset", "title", "title", "args", "kwargs", "profile_sort_field", "self", "sort_group_columns", "profile_columns_field", "self", "group_columns", "default_sort", "self", "name", "default_columns", "self", "star", "name", "displayname", "pending_count", "link_to_object", "obj", "value", "get_absolute_url", "obj", "staticmethod", "WatchedGroupDataGrid", "GroupDataGrid", "\n    A special version of GroupDataGrid that shows a list of watched groups,\n    linking to a dashboard view of them. This is meant for display in the\n    dashboard.\n    ", "__init__", "args", "kwargs", "self", "request", "title", "_", "Watched groups", "local_site", "pop", "kwargs", "local_site", "None", "__init__", "GroupDataGrid", "self", "request", "title", "title", "args", "kwargs", "user", "user", "request", "profile", "get_profile", "user", "queryset", "self", "all", "starred_groups", "profile", "queryset", "self", "filter", "queryset", "self", "local_site", "local_site", "counts", "self", "get_sidebar_counts", "user", "local_site", "link_to_object", "self", "group", "value", ".?view=to-group&group=%s", "name", "group", "get_sidebar_counts", "user", "local_site", "Returns counts used for the Dashboard sidebar.", "profile", "get_profile", "user", "site_profile", "is_new", "get_or_create", "site_profiles", "get_profile", "user", "local_site", "local_site", "user", "user", "profile", "profile", "is_new", "save", "site_profile", "counts", "outgoing", "incoming", "to-me", "starred", "mine", "groups", "starred_groups", "pending_outgoing_request_count", "site_profile", "total_incoming_request_count", "site_profile", "direct_incoming_request_count", "site_profile", "starred_public_request_count", "site_profile", "total_outgoing_request_count", "site_profile", "SortedDict", "SortedDict", "group", "order_by", "filter", "objects", "Group", "users", "user", "local_site", "local_site", "name", "counts", "groups", "name", "group", "incoming_request_count", "group", "group", "order_by", "filter", "objects", "Group", "starred_by", "profile", "local_site", "local_site", "name", "counts", "starred_groups", "name", "group", "incoming_request_count", "group", "counts", "colander", "urllib", "urlencode", "venusian", "lxml", "etree", "html", "builder", "persistent", "Persistent", "pyramid.httpexceptions", "WSGIHTTPException", "HTTPFound", "pyramid.registry", "predvalseq", "Deferred", "pyramid.request", "Request", "pyramid.router", "Router", "pyramid.security", "has_permission", "substanced.schema", "Schema", "substanced.interfaces", "IFolder", "substanced.folder", "Folder", "substanced.form", "FormView", "substanced.property", "PropertySheet", "substanced.sdi", "mgmt_view", "substanced.sdi", "MANAGE_ROUTE_NAME", "repoze.xmliter.utils", "getHTMLSerializer", "inspect", "pyramid.config.views", "viewdefaults", "pyramid.config.util", "action_method", "pyramid.interfaces", "IView", "Tile", "Persistent", "__init__", "self", "_type", "_type", "self", "_type", "get_properties", "self", "getattr", "self", "data", "set_properties", "self", "struct", "data", "self", "struct", "persistent_tile", "view", "render_tile", "request", "hasattr", "request", "tile_data", "data", "tile_data", "request", "name", "pop", "data", "name", "name", "get", "GET", "request", "name", "name", "None", "ValueError", "Tile name must be specified", "__tiles__", "context", "request", "tile", "get", "context", "request", "__tiles__", "name", "tile", "None", "data", "get_properties", "tile", "TypeError", "view", "request", "data", "render_tile", "tile", "object", " Use as a decorator for a tile view.  Accepts a name and a colander schema. ", "venusian", "venusian", "__init__", "settings", "self", "update", "__dict__", "self", "settings", "__call__", "self", "wrapped", "settings", "copy", "__dict__", "self", "callback", "context", "name", "ob", "config", "with_package", "config", "context", "module", "info", "add_tile", "config", "ob", "settings", "info", "attach", "venusian", "self", "wrapped", "callback", "category", "pyramid_tiles", "wrapped", "add_tile", "predicates", "config", "view", "name", "schema", "permission", "request_type", "request_method", "request_param", "containment", "attr", "renderer", "wrapper", "xhr", "accept", "header", "path_info", "custom_predicates", "context", "decorator", "mapper", "http_cache", "match_param", "tab_title", "tab_condition", "None", "", "Schema", "colander", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "view", "maybe_dotted", "config", "view", "context", "maybe_dotted", "config", "context", "containment", "maybe_dotted", "config", "containment", "mapper", "maybe_dotted", "config", "mapper", "decorator", "maybe_dotted", "config", "decorator", "name", "tile:", "name", "view", "persistent_tile", "view", "pvals", "copy", "predicates", "update", "pvals", "dict", "xhr", "xhr", "request_method", "request_method", "path_info", "path_info", "request_param", "request_param", "header", "header", "accept", "accept", "containment", "containment", "request_type", "request_type", "match_param", "match_param", "custom", "predvalseq", "custom_predicates", "predlist", "get_predlist", "config", "view", "view_discrim_func", "order", "preds", "phash", "make", "predlist", "config", "pvals", "view", "context", "name", "None", "phash", "view_discriminator", "Deferred", "view_discrim_func", "isclass", "inspect", "view", "attr", "view_desc", "method %r of %s", "attr", "object_description", "config", "view", "view_desc", "object_description", "config", "view", "add_view", "config", "view", "view", "name", "name", "permission", "permission", "request_method", "request_method", "request_param", "request_param", "containment", "containment", "attr", "attr", "renderer", "renderer", "wrapper", "wrapper", "xhr", "xhr", "accept", "accept", "header", "header", "path_info", "path_info", "custom_predicates", "custom_predicates", "context", "context", "decorator", "decorator", "mapper", "mapper", "http_cache", "http_cache", "match_param", "match_param", "request_type", "request_type", "predicates", "discriminator", "tile", "name", "intr", "introspectable", "config", "tiles", "discriminator", "view_desc", "tile", "intr", "schema", "schema", "relate", "intr", "views", "view_discriminator", "action", "config", "discriminator", "introspectables", "intr", "viewdefaults", "action_method", "TILE_XPATH", "XPath", "etree", "/html/body//tile", "append_text", "element", "text", "text", "text", "element", "text", "element", "", "text", "append_tail", "element", "text", "text", "tail", "element", "tail", "element", "", "text", "replace_content_with_children", "element", "wrapper", "parent", "getparent", "element", "index", "index", "parent", "element", "index", "previous", "None", "previous", "parent", "index", "wrapper", "None", "children", "index", "append_text", "parent", "text", "wrapper", "append_tail", "previous", "text", "wrapper", "children", "getchildren", "wrapper", "remove", "parent", "element", "children", "index", "append_text", "parent", "tail", "element", "append_tail", "previous", "tail", "element", "append_tail", "children", "tail", "element", "reverse", "children", "child", "children", "insert", "parent", "index", "child", "tile_render_tween_factory", "handler", "registry", "tile_render_tween", "request", "response", "handler", "request", "content_type", "response", "text/html", "isinstance", "response", "WSGIHTTPException", "prepare", "response", "environ", "request", "serializer", "getHTMLSerializer", "app_iter", "response", "tree", "tree", "serializer", "head_node", "find", "getroot", "tree", "head", "tile_node", "TILE_XPATH", "tree", "serializer", "tile_path", "get", "attrib", "tile_node", "path", "tile_type", "get", "attrib", "tile_node", "type", "tile_path", "tile_type", "tile_path", "/", "path", "/tile:", "tile_type", "path", "join", "/", "tile_path", "tile:", "tile_type", "tile_path", "path", "tile_path", "tile_type", "path", "resource_path", "request", "context", "request", "tile:", "tile_type", "Exception", "Tile must have a path or type", "subrequest", "blank", "Request", "path", "registry", "subrequest", "registry", "tile_data", "dict", "attrib", "tile_node", "tile_data", "innerHTML", "text", "tile_node", "", "join", "", "tostring", "html", "child", "child", "iterchildren", "tile_node", "tile_path", "edit_url", "route_path", "request", "MANAGE_ROUTE_NAME", "edit_tile", "traverse", "tile_path", "edit_url", "mgmt_path", "request", "context", "request", "edit_tile", "edit_url", "?", "urlencode", "tile_data", "tile_data", "type", "tile_data", "subrequest", "tile_data", "tile_response", "handler", "subrequest", "tile_tree", "tree", "getHTMLSerializer", "app_iter", "tile_response", "tile_root", "getroot", "tile_tree", "tile_body", "find", "tile_root", "body", "has_permission", "Edit tile", "context", "subrequest", "request", "edit_link", "a", "E", "builder", "", "href", "edit_url", "append", "edit_link", "Entity", "etree", "#9997", "append", "tile_body", "edit_link", "tile_head", "find", "tile_root", "head", "tile_head", "None", "child", "tile_head", "append", "head_node", "child", "tile_tree", "None", "replace_content_with_children", "tile_node", "tile_body", "app_iter", "response", "serialize", "serializer", "response", "tile_render_tween", "TilePropertiesView", "FormView", "buttons", "save", "__init__", "self", "request", "request", "self", "request", "context", "self", "context", "request", "intr", "get", "introspector", "registry", "request", "tiles", "tile", "_type", "context", "self", "schema", "self", "intr", "schema", "save_success", "self", "appstruct", "set_properties", "context", "self", "appstruct", "HTTPFound", "mgmt_path", "request", "self", "context", "self", "@@properties", "show", "self", "form", "appstruct", "get_properties", "context", "self", "form", "render", "form", "appstruct", "appstruct", "mgmt_view", "context", "Tile", "name", "properties", "renderer", "substanced.sdi:templates/form.pt", "tab_title", "Properties", "permission", "sdi.edit-properties", "tab_condition", "False", "AddTileView", "FormView", "title", "Add Tile", "__call__", "self", "__tiles__", "context", "request", "self", "add", "context", "request", "self", "__tiles__", "Folder", "send_events", "False", "tiles", "context", "request", "self", "__tiles__", "tile_name", "pop", "GET", "request", "self", "name", "tile_name", "tiles", "tile", "tiles", "tile_name", "tile_type", "pop", "GET", "request", "self", "type", "tiles", "tile_name", "tile", "Tile", "tile_type", "set_properties", "tile", "dict", "GET", "request", "self", "HTTPFound", "mgmt_path", "request", "self", "tile", "@@properties", "mgmt_view", "context", "IFolder", "name", "edit_tile", "tab_title", "Edit Tile", "permission", "sdi.add-content", "renderer", "substanced.sdi:templates/form.pt", "tab_condition", "False", "includeme", "config", "add_content_type", "config", "tile", "Tile", "add_view", "edit_tile", "add_directive", "config", "add_tile", "add_tile", "add_tween", "config", "pyramid_tiles.tile_render_tween_factory", "over", "MAIN", "scan", "config", "__all__", "Tile", "tile", "json", "urllib", "urllib2", "constants", "logging", "ecl_tools.utils", "Objectifier", "logger", "getLogger", "logging", "__name__", "GoogleCall", "object", "__init__", "self", "path_components", "token", "name", "None", "None", "token", "self", "token", "path_components", "self", "path_components", "version", "getattr", "constants", "GOOGLE_%s_VERSION", "upper", "name", "None", "data", "name", "version", "name", "version", "version", "base", "self", "GOOGLE_API_BASE", "constants", "data", "name", "geocode", "base", "self", "https://maps.googleapis.com/maps/geo", "name", "places", "base", "self", "https://maps.googleapis.com/maps/api/place/", "name", "maps", "base", "self", "https://maps.googleapis.com/maps/api/", "name", "shopping", "base", "self", "https://www.googleapis.com/shopping/search/v1/", "name", "analytics", "base", "self", "https://www.googleapis.com/analytics/v3/data/ga", "name", "prediction", "base", "self", "format", "https://www.googleapis.com/prediction/{}/", "GOOGLE_PREDICTION_VERSION", "constants", "name", "self", "name", "__getattr__", "self", "k", "append", "path_components", "self", "quote", "urllib", "k", "GoogleCall", "path_components", "self", "token", "token", "self", "name", "name", "self", "__getitem__", "self", "k", "append", "path_components", "self", "quote", "urllib", "k", "GoogleCall", "path_components", "self", "token", "token", "self", "name", "name", "self", "__call__", "kwargs", "self", "method", "data", "GET", "None", "path", "join", "/", "path_components", "self", "headers", "Content-Type", "application/json", "token", "self", "headers", "Authorization", "OAuth ", "token", "self", "ignore_key", "get", "kwargs", "ignore_key", "False", "ignore_key", "kwargs", "key", "GOOGLE_API_KEY", "constants", "url", "base", "self", "path", "len", "kwargs", "url", "?", "urlencode", "urllib", "kwargs", "debug", "logger", "url", "data", "encoded_data", "dumps", "json", "data", "request", "Request", "urllib2", "url", "encoded_data", "headers", "headers", "request", "Request", "urllib2", "url", "headers", "headers", "get_method", "request", "method", "response", "urlopen", "urllib2", "request", "HTTPError", "urllib2", "e", "e", "Objectifier", "load", "json", "response", "Google", "object", "__init__", "self", "token", "refresh_token", "redirect_uri", "None", "None", "GOOGLE_OAUTH_REDIRECT", "constants", "token", "self", "token", "refresh_token", "self", "refresh_token", "redirect_uri", "self", "redirect_uri", "key", "self", "GOOGLE_OAUTH_KEY", "constants", "secret", "self", "GOOGLE_OAUTH_SECRET", "constants", "readonly", "self", "False", "geo", "self", " https://maps.googleapis.com/maps/geo?output=json&q=34.02062,-118.39713&sensor=false&key=XXX ", "name", "self", "geocode", "self", "property", "analytics", "self", "name", "self", "analytics", "self", "property", "prediction", "self", "name", "self", "prediction", "self", "property", "moderator", "self", "name", "self", "moderator", "self", "property", "books", "self", "name", "self", "books", "self", "property", "tasks", "self", "readonly", "False", "name", "self", "tasks", "readonly", "self", "readonly", "self", "property", "latitude", "self", "name", "self", "latitude", "self", "property", "maps", "self", " https://maps.googleapis.com/maps/api/geocode/json?latlng=34.02062,-118.39713&sensor=false ", "name", "self", "maps", "self", "property", "site_verification", "self", "name", "self", "siteVerification", "self", "property", "url_shortener", "self", "name", "self", "urlshortener", "self", "property", "custom_search", "self", " https://code.google.com/apis/customsearch/v1/reference.html ", "name", "self", "customsearch", "self", "property", "shopping", "self", " http://code.google.com/apis/shopping/search/v1/reference-overview.html ", "name", "self", "shopping", "self", "property", "buzz", "self", " http://code.google.com/apis/buzz/v1/using_rest.html\n        TODO: Implement readonly and photo scopes ", "name", "self", "buzz", "self", "property", "__getitem__", "self", "k", "k", "quote", "urllib", "k", "GoogleCall", "k", "token", "token", "self", "name", "name", "self", "__getattr__", "self", "k", "k", "quote", "urllib", "k", "GoogleCall", "k", "token", "token", "self", "name", "name", "self", "__call__", "kwargs", "self", "method", "data", "GET", "None", "GoogleCall", "token", "token", "self", "name", "name", "self", "method", "data", "kwargs", "generate_oauth_dialog_url", "self", "state", "None", "scope", "https://www.googleapis.com/auth/", "name", "self", "readonly", "self", "scope", ".readonly", "params", "client_id", "redirect_uri", "scope", "response_type", "key", "self", "redirect_uri", "self", "scope", "code", "state", "params", "state", "state", "encoded_params", "urlencode", "urllib", "params", "GOOGLE_OAUTH_ENDPOINT", "constants", "?", "encoded_params", "generate_access_token", "self", "code", "refresh_token", "None", "None", "params", "client_id", "client_secret", "redirect_uri", "key", "self", "secret", "self", "redirect_uri", "self", "code", "params", "code", "code", "params", "grant_type", "authorization_code", "refresh_token", "params", "refresh_token", "refresh_token", "params", "grant_type", "refresh_token", "encoded_params", "urlencode", "urllib", "params", "request", "Request", "urllib2", "GOOGLE_OAUTH_TOKEN_ENDPOINT", "constants", "encoded_params", "response", "urlopen", "urllib2", "request", "data", "load", "json", "response", "token", "self", "data", "access_token", "refresh_token", "self", "data", "refresh_token", "data", "sys", "os", "re", "filefilter", "inlineStyles", "compile", "re", "(<style[^<>]*>)(.*)</style>", "IGNORECASE", "re", "DOTALL", "re", "scssImport", "compile", "re", "@import\\s+([\\'\"])/*((?:\\\\.|(?!\\1).)+?)\\.s?css\\1;", "IGNORECASE", "re", "parseImport", "f", "m", "cssPath", "findFile", "filefilter", "f", "group", "m", ".css", "scssPath", "findFile", "filefilter", "f", "group", "m", ".scss", "cssPath", "None", "scssPath", "None", "/* Neither the .scss or the .css file was found. */", "/* .scss file found but corresponding .css file not found */", "handle", "open", "cssPath", "r", "encoding", "utf8", "content", "strip", "read", "handle", "close", "handle", "content", "parseStyle", "f", "m", "group", "m", "sub", "scssImport", "x", "parseImport", "f", "x", "group", "m", "</style>", "process", "f", "content", "sub", "inlineStyles", "x", "parseStyle", "f", "x", "content", "warnings", "zope.deprecation", "deprecated", "zope.interface", "implementer", "zope.interface.interfaces", "IInterface", "repoze.lru", "lru_cache", "pyramid.interfaces", "IResourceURL", "IRequestFactory", "ITraverser", "VH_ROOT_KEY", "catch_warnings", "warnings", "filterwarnings", "warnings", "ignore", "pyramid.interfaces", "IContextURL", "pyramid.compat", "PY3", "native_", "text_", "ascii_native_", "text_type", "binary_type", "is_nonstr_iter", "decode_path_info", "unquote_bytes_to_wsgi", "pyramid.encode", "url_quote", "pyramid.exceptions", "URLDecodeError", "pyramid.location", "lineage", "pyramid.threadlocal", "get_current_registry", "empty", "text_", "", "find_root", "resource", " Find the root node in the resource tree to which ``resource``\n    belongs. Note that ``resource`` should be :term:`location`-aware.\n    Note that the root resource is available in the request object by\n    accessing the ``request.root`` attribute.\n    ", "location", "lineage", "resource", "__parent__", "location", "None", "resource", "location", "resource", "find_resource", "resource", "path", " Given a resource object and a string or tuple representing a path\n    (such as the return value of :func:`pyramid.traversal.resource_path` or\n    :func:`pyramid.traversal.resource_path_tuple`), return a resource in this\n    application's resource tree at the specified path.  The resource passed\n    in *must* be :term:`location`-aware.  If the path cannot be resolved (if\n    the respective node in the resource tree does not exist), a\n    :exc:`KeyError` will be raised.\n\n    This function is the logical inverse of\n    :func:`pyramid.traversal.resource_path` and\n    :func:`pyramid.traversal.resource_path_tuple`; it can resolve any\n    path string or tuple generated by either of those functions.\n\n    Rules for passing a *string* as the ``path`` argument: if the\n    first character in the path string is the ``/``\n    character, the path is considered absolute and the resource tree\n    traversal will start at the root resource.  If the first character\n    of the path string is *not* the ``/`` character, the path is\n    considered relative and resource tree traversal will begin at the resource\n    object supplied to the function as the ``resource`` argument.  If an\n    empty string is passed as ``path``, the ``resource`` passed in will\n    be returned.  Resource path strings must be escaped in the following\n    manner: each Unicode path segment must be encoded as UTF-8 and as\n    each path segment must escaped via Python's :mod:`urllib.quote`.\n    For example, ``/path/to%20the/La%20Pe%C3%B1a`` (absolute) or\n    ``to%20the/La%20Pe%C3%B1a`` (relative).  The\n    :func:`pyramid.traversal.resource_path` function generates strings\n    which follow these rules (albeit only absolute ones).\n\n    Rules for passing *text* (Unicode) as the ``path`` argument are the same\n    as those for a string.  In particular, the text may not have any nonascii\n    characters in it.\n\n    Rules for passing a *tuple* as the ``path`` argument: if the first\n    element in the path tuple is the empty string (for example ``('',\n    'a', 'b', 'c')``, the path is considered absolute and the resource tree\n    traversal will start at the resource tree root object.  If the first\n    element in the path tuple is not the empty string (for example\n    ``('a', 'b', 'c')``), the path is considered relative and resource tree\n    traversal will begin at the resource object supplied to the function\n    as the ``resource`` argument.  If an empty sequence is passed as\n    ``path``, the ``resource`` passed in itself will be returned.  No\n    URL-quoting or UTF-8-encoding of individual path segments within\n    the tuple is required (each segment may be any string or unicode\n    object representing a resource name).  Resource path tuples generated by\n    :func:`pyramid.traversal.resource_path_tuple` can always be\n    resolved by ``find_resource``.\n\n    .. note:: For backwards compatibility purposes, this function can also\n       be imported as :func:`pyramid.traversal.find_model`, although doing so\n       will emit a deprecation warning.\n    ", "isinstance", "path", "text_type", "path", "ascii_native_", "path", "D", "traverse", "resource", "path", "view_name", "D", "view_name", "context", "D", "context", "view_name", "KeyError", "%r has no subelement %s", "context", "view_name", "context", "find_model", "find_resource", "find_interface", "resource", "class_or_interface", "\n    Return the first resource found in the :term:`lineage` of ``resource``\n    which, a) if ``class_or_interface`` is a Python class object, is an\n    instance of the class or any subclass of that class or b) if\n    ``class_or_interface`` is a :term:`interface`, provides the specified\n    interface.  Return ``None`` if no resource providing ``interface_or_class``\n    can be found in the lineage.  The ``resource`` passed in *must* be\n    :term:`location`-aware.\n    ", "providedBy", "IInterface", "class_or_interface", "test", "providedBy", "class_or_interface", "test", "arg", "isinstance", "arg", "class_or_interface", "location", "lineage", "resource", "test", "location", "location", "resource_path", "elements", "resource", " Return a string object representing the absolute physical path of the\n    resource object based on its position in the resource tree, e.g\n    ``/foo/bar``.  Any positional arguments passed in as ``elements`` will be\n    appended as path segments to the end of the resource path.  For instance,\n    if the resource's path is ``/foo/bar`` and ``elements`` equals ``('a',\n    'b')``, the returned string will be ``/foo/bar/a/b``.  The first\n    character in the string will always be the ``/`` character (a leading\n    ``/`` character in a path string represents that the path is absolute).\n\n    Resource path strings returned will be escaped in the following\n    manner: each unicode path segment will be encoded as UTF-8 and\n    each path segment will be escaped via Python's :mod:`urllib.quote`.\n    For example, ``/path/to%20the/La%20Pe%C3%B1a``.\n\n    This function is a logical inverse of\n    :mod:`pyramid.traversal.find_resource`: it can be used to generate\n    path references that can later be resolved via that function.\n\n    The ``resource`` passed in *must* be :term:`location`-aware.\n\n    .. note::\n\n       Each segment in the path string returned will use the ``__name__``\n       attribute of the resource it represents within the resource tree.  Each\n       of these segments *should* be a unicode or string object (as per the\n       contract of :term:`location`-awareness).  However, no conversion or\n       safety checking of resource names is performed.  For instance, if one of\n       the resources in your tree has a ``__name__`` which (by error) is a\n       dictionary, the :func:`pyramid.traversal.resource_path` function will\n       attempt to append it to a string and it will cause a\n       :exc:`pyramid.exceptions.URLDecodeError`.\n\n    .. note::\n\n       The :term:`root` resource *must* have a ``__name__`` attribute with a\n       value of either ``None`` or the empty string for paths to be generated\n       properly.  If the root resource has a non-null ``__name__`` attribute,\n       its name will be prepended to the generated path rather than a single\n       leading '/' character.\n\n    .. note::\n\n       For backwards compatibility purposes, this function can also\n       be imported as ``model_path``, although doing so will cause\n       a deprecation warning to be emitted.\n    ", "_join_path_tuple", "resource_path_tuple", "resource", "elements", "model_path", "resource_path", "traverse", "resource", "path", "Given a resource object as ``resource`` and a string or tuple\n    representing a path as ``path`` (such as the return value of\n    :func:`pyramid.traversal.resource_path` or\n    :func:`pyramid.traversal.resource_path_tuple` or the value of\n    ``request.environ['PATH_INFO']``), return a dictionary with the\n    keys ``context``, ``root``, ``view_name``, ``subpath``,\n    ``traversed``, ``virtual_root``, and ``virtual_root_path``.\n\n    A definition of each value in the returned dictionary:\n\n    - ``context``: The :term:`context` (a :term:`resource` object) found\n      via traversal or url dispatch.  If the ``path`` passed in is the\n      empty string, the value of the ``resource`` argument passed to this\n      function is returned.\n\n    - ``root``: The resource object at which :term:`traversal` begins.\n      If the ``resource`` passed in was found via url dispatch or if the\n      ``path`` passed in was relative (non-absolute), the value of the\n      ``resource`` argument passed to this function is returned.\n\n    - ``view_name``: The :term:`view name` found during\n      :term:`traversal` or :term:`url dispatch`; if the ``resource`` was\n      found via traversal, this is usually a representation of the\n      path segment which directly follows the path to the ``context``\n      in the ``path``.  The ``view_name`` will be a Unicode object or\n      the empty string.  The ``view_name`` will be the empty string if\n      there is no element which follows the ``context`` path.  An\n      example: if the path passed is ``/foo/bar``, and a resource\n      object is found at ``/foo`` (but not at ``/foo/bar``), the 'view\n      name' will be ``u'bar'``.  If the ``resource`` was found via\n      urldispatch, the view_name will be the name the route found was\n      registered with.\n\n    - ``subpath``: For a ``resource`` found via :term:`traversal`, this\n      is a sequence of path segments found in the ``path`` that follow\n      the ``view_name`` (if any).  Each of these items is a Unicode\n      object.  If no path segments follow the ``view_name``, the\n      subpath will be the empty sequence.  An example: if the path\n      passed is ``/foo/bar/baz/buz``, and a resource object is found at\n      ``/foo`` (but not ``/foo/bar``), the 'view name' will be\n      ``u'bar'`` and the :term:`subpath` will be ``[u'baz', u'buz']``.\n      For a ``resource`` found via url dispatch, the subpath will be a\n      sequence of values discerned from ``*subpath`` in the route\n      pattern matched or the empty sequence.\n\n    - ``traversed``: The sequence of path elements traversed from the\n      root to find the ``context`` object during :term:`traversal`.\n      Each of these items is a Unicode object.  If no path segments\n      were traversed to find the ``context`` object (e.g. if the\n      ``path`` provided is the empty string), the ``traversed`` value\n      will be the empty sequence.  If the ``resource`` is a resource found\n      via :term:`url dispatch`, traversed will be None.\n\n    - ``virtual_root``: A resource object representing the 'virtual' root\n      of the resource tree being traversed during :term:`traversal`.\n      See :ref:`vhosting_chapter` for a definition of the virtual root\n      object.  If no virtual hosting is in effect, and the ``path``\n      passed in was absolute, the ``virtual_root`` will be the\n      *physical* root resource object (the object at which :term:`traversal`\n      begins).  If the ``resource`` passed in was found via :term:`URL\n      dispatch` or if the ``path`` passed in was relative, the\n      ``virtual_root`` will always equal the ``root`` object (the\n      resource passed in).\n\n    - ``virtual_root_path`` -- If :term:`traversal` was used to find\n      the ``resource``, this will be the sequence of path elements\n      traversed to find the ``virtual_root`` resource.  Each of these\n      items is a Unicode object.  If no path segments were traversed\n      to find the ``virtual_root`` resource (e.g. if virtual hosting is\n      not in effect), the ``traversed`` value will be the empty list.\n      If url dispatch was used to find the ``resource``, this will be\n      ``None``.\n\n    If the path cannot be resolved, a :exc:`KeyError` will be raised.\n\n    Rules for passing a *string* as the ``path`` argument: if the\n    first character in the path string is the with the ``/``\n    character, the path will considered absolute and the resource tree\n    traversal will start at the root resource.  If the first character\n    of the path string is *not* the ``/`` character, the path is\n    considered relative and resource tree traversal will begin at the resource\n    object supplied to the function as the ``resource`` argument.  If an\n    empty string is passed as ``path``, the ``resource`` passed in will\n    be returned.  Resource path strings must be escaped in the following\n    manner: each Unicode path segment must be encoded as UTF-8 and\n    each path segment must escaped via Python's :mod:`urllib.quote`.\n    For example, ``/path/to%20the/La%20Pe%C3%B1a`` (absolute) or\n    ``to%20the/La%20Pe%C3%B1a`` (relative).  The\n    :func:`pyramid.traversal.resource_path` function generates strings\n    which follow these rules (albeit only absolute ones).\n\n    Rules for passing a *tuple* as the ``path`` argument: if the first\n    element in the path tuple is the empty string (for example ``('',\n    'a', 'b', 'c')``, the path is considered absolute and the resource tree\n    traversal will start at the resource tree root object.  If the first\n    element in the path tuple is not the empty string (for example\n    ``('a', 'b', 'c')``), the path is considered relative and resource tree\n    traversal will begin at the resource object supplied to the function\n    as the ``resource`` argument.  If an empty sequence is passed as\n    ``path``, the ``resource`` passed in itself will be returned.  No\n    URL-quoting or UTF-8-encoding of individual path segments within\n    the tuple is required (each segment may be any string or unicode\n    object representing a resource name).\n\n    Explanation of the conversion of ``path`` segment values to\n    Unicode during traversal: Each segment is URL-unquoted, and\n    decoded into Unicode. Each segment is assumed to be encoded using\n    the UTF-8 encoding (or a subset, such as ASCII); a\n    :exc:`pyramid.exceptions.URLDecodeError` is raised if a segment\n    cannot be decoded.  If a segment name is empty or if it is ``.``,\n    it is ignored.  If a segment name is ``..``, the previous segment\n    is deleted, and the ``..`` is ignored.  As a result of this\n    process, the return values ``view_name``, each element in the\n    ``subpath``, each element in ``traversed``, and each element in\n    the ``virtual_root_path`` will be Unicode as opposed to a string,\n    and will be URL-decoded.\n    ", "is_nonstr_iter", "path", "path", "path", "_join_path_tuple", "tuple", "path", "path", "", "path", "ascii_native_", "path", "path", "path", "/", "resource", "find_root", "resource", "reg", "get_current_registry", "request_factory", "queryUtility", "reg", "IRequestFactory", "request_factory", "None", "pyramid.request", "Request", "request_factory", "Request", "request", "blank", "request_factory", "path", "registry", "request", "reg", "traverser", "queryAdapter", "reg", "resource", "ITraverser", "traverser", "None", "traverser", "ResourceTreeTraverser", "resource", "traverser", "request", "resource_path_tuple", "elements", "resource", "\n    Return a tuple representing the absolute physical path of the\n    ``resource`` object based on its position in a resource tree, e.g\n    ``('', 'foo', 'bar')``.  Any positional arguments passed in as\n    ``elements`` will be appended as elements in the tuple\n    representing the resource path.  For instance, if the resource's\n    path is ``('', 'foo', 'bar')`` and elements equals ``('a', 'b')``,\n    the returned tuple will be ``('', 'foo', 'bar', 'a', 'b')``.  The\n    first element of this tuple will always be the empty string (a\n    leading empty string element in a path tuple represents that the\n    path is absolute).\n\n    This function is a logical inverse of\n    :func:`pyramid.traversal.find_resource`: it can be used to\n    generate path references that can later be resolved by that function.\n\n    The ``resource`` passed in *must* be :term:`location`-aware.\n\n    .. note::\n\n       Each segment in the path tuple returned will equal the ``__name__``\n       attribute of the resource it represents within the resource tree.  Each\n       of these segments *should* be a unicode or string object (as per the\n       contract of :term:`location`-awareness).  However, no conversion or\n       safety checking of resource names is performed.  For instance, if one of\n       the resources in your tree has a ``__name__`` which (by error) is a\n       dictionary, that dictionary will be placed in the path tuple; no warning\n       or error will be given.\n\n    .. note::\n\n       The :term:`root` resource *must* have a ``__name__`` attribute with a\n       value of either ``None`` or the empty string for path tuples to be\n       generated properly.  If the root resource has a non-null ``__name__``\n       attribute, its name will be the first element in the generated path tuple\n       rather than the empty string.\n\n    .. note::\n\n       For backwards compatibility purposes, this function can also be imported\n       as ``model_path_tuple``, although doing so will cause a deprecation\n       warning to be emitted.\n    ", "tuple", "_resource_path_list", "resource", "elements", "model_path_tuple", "resource_path_tuple", "_resource_path_list", "elements", "resource", " Implementation detail shared by resource_path and resource_path_tuple", "path", "__name__", "loc", "", "loc", "lineage", "resource", "reverse", "path", "extend", "path", "elements", "path", "_model_path_list", "_resource_path_list", "virtual_root", "resource", "request", "\n    Provided any :term:`resource` and a :term:`request` object, return\n    the resource object representing the :term:`virtual root` of the\n    current :term:`request`.  Using a virtual root in a\n    :term:`traversal` -based :app:`Pyramid` application permits\n    rooting, for example, the resource at the traversal path ``/cms`` at\n    ``http://example.com/`` instead of rooting it at\n    ``http://example.com/cms/``.\n\n    If the ``resource`` passed in is a context obtained via\n    :term:`traversal`, and if the ``HTTP_X_VHM_ROOT`` key is in the\n    WSGI environment, the value of this key will be treated as a\n    'virtual root path': the :func:`pyramid.traversal.find_resource`\n    API will be used to find the virtual root resource using this path;\n    if the resource is found, it will be returned.  If the\n    ``HTTP_X_VHM_ROOT`` key is is not present in the WSGI environment,\n    the physical :term:`root` of the resource tree will be returned instead.\n\n    Virtual roots are not useful at all in applications that use\n    :term:`URL dispatch`. Contexts obtained via URL dispatch don't\n    really support being virtually rooted (each URL dispatch context\n    is both its own physical and virtual root).  However if this API\n    is called with a ``resource`` argument which is a context obtained\n    via URL dispatch, the resource passed in will be returned\n    unconditionally.", "reg", "registry", "request", "AttributeError", "reg", "get_current_registry", "urlgenerator", "queryMultiAdapter", "reg", "resource", "request", "IContextURL", "urlgenerator", "None", "urlgenerator", "TraversalContextURL", "resource", "request", "virtual_root", "urlgenerator", "traversal_path", "path", " Variant of :func:`pyramid.traversal.traversal_path_info` suitable for\n    decoding paths that are URL-encoded.\n\n    If this function is passed a Unicode object instead of a sequence of\n    bytes as ``path``, that Unicode object *must* directly encodeable to\n    ASCII.  For example, u'/foo' will work but u'/<unprintable unicode>' (a\n    Unicode object with characters that cannot be encoded to ascii) will\n    not. A :exc:`UnicodeEncodeError` will be raised if the Unicode cannot be\n    encoded directly to ASCII.\n    ", "isinstance", "path", "text_type", "path", "encode", "path", "ascii", "path", "unquote_bytes_to_wsgi", "path", "traversal_path_info", "path", "traversal_path_info", "path", " Given``path``, return a tuple representing that path which can be\n    used to traverse a resource tree.  ``path`` is assumed to be an\n    already-URL-decoded ``str`` type as if it had come to us from an upstream\n    WSGI server as the ``PATH_INFO`` environ variable.\n\n    The ``path`` is first decoded to from its WSGI representation to Unicode;\n    it is decoded differently depending on platform:\n\n    - On Python 2, ``path`` is decoded to Unicode from bytes using the UTF-8\n      decoding directly; a :exc:`pyramid.exc.URLDecodeError` is raised if a the\n      URL cannot be decoded.\n\n    - On Python 3, as per the PEP 3333 spec, ``path`` is first encoded to\n      bytes using the Latin-1 encoding; the resulting set of bytes is\n      subsequently decoded to text using the UTF-8 encoding; a\n      :exc:`pyramid.exc.URLDecodeError` is raised if a the URL cannot be\n      decoded.\n\n    The ``path`` is split on slashes, creating a list of segments.  If a\n    segment name is empty or if it is ``.``, it is ignored.  If a segment\n    name is ``..``, the previous segment is deleted, and the ``..`` is\n    ignored.\n\n    Examples:\n\n    ``/``\n\n        ()\n\n    ``/foo/bar/baz``\n\n        (u'foo', u'bar', u'baz')\n\n    ``foo/bar/baz``\n\n        (u'foo', u'bar', u'baz')\n\n    ``/foo/bar/baz/``\n\n        (u'foo', u'bar', u'baz')\n\n    ``/foo//bar//baz/``\n\n        (u'foo', u'bar', u'baz')\n\n    ``/foo/bar/baz/..``\n\n        (u'foo', u'bar')\n\n    ``/my%20archives/hello``\n\n        (u'my archives', u'hello')\n\n    ``/archives/La%20Pe%C3%B1a``\n\n        (u'archives', u'<unprintable unicode>')\n\n    .. note::\n\n      This function does not generate the same type of tuples that\n      :func:`pyramid.traversal.resource_path_tuple` does.  In particular, the\n      leading empty string is not present in the tuple it returns, unlike tuples\n      returned by :func:`pyramid.traversal.resource_path_tuple`.  As a result,\n      tuples generated by ``traversal_path`` are not resolveable by the\n      :func:`pyramid.traversal.find_resource` API.  ``traversal_path`` is a\n      function mostly used by the internals of :app:`Pyramid` and by people\n      writing their own traversal machinery, as opposed to users writing\n      applications in :app:`Pyramid`.\n    ", "path", "decode_path_info", "path", "UnicodeDecodeError", "e", "URLDecodeError", "encoding", "e", "object", "e", "start", "e", "end", "e", "reason", "e", "split_path_info", "path", "lru_cache", "split_path_info", "path", "path", "strip", "path", "/", "clean", "segment", "split", "path", "/", "segment", "segment", ".", "segment", "..", "clean", "clean", "append", "clean", "segment", "tuple", "clean", "lru_cache", "_segment_cache", "quote_path_segment_doc", " Return a quoted representation of a 'path segment' (such as\nthe string ``__name__`` attribute of a resource) as a string.  If the\n``segment`` passed in is a unicode object, it is converted to a\nUTF-8 string, then it is URL-quoted using Python's\n``urllib.quote``.  If the ``segment`` passed in is a string, it is\nURL-quoted using Python's :mod:`urllib.quote`.  If the segment\npassed in is not a string or unicode object, an error will be\nraised.  The return value of ``quote_path_segment`` is always a\nstring, never Unicode.\n\nYou may pass a string of characters that need not be encoded as\nthe ``safe`` argument to this function.  This corresponds to the\n``safe`` argument to :mod:`urllib.quote`.\n\n.. note::\n\n   The return value for each segment passed to this\n   function is cached in a module-scope dictionary for\n   speed: the cached version is returned when possible\n   rather than recomputing the quoted version.  No cache\n   emptying is ever done for the lifetime of an\n   application, however.  If you pass arbitrary\n   user-supplied strings to this function (as opposed to\n   some bounded set of values from a 'working set' known to\n   your application), it may become a memory leak.\n", "PY3", "quote_path_segment", "segment", "safe", "", " %s ", "quote_path_segment_doc", "_segment_cache", "segment", "safe", "KeyError", "__class__", "segment", "text_type", "binary_type", "segment", "str", "segment", "result", "url_quote", "native_", "segment", "utf-8", "safe", "_segment_cache", "segment", "safe", "result", "result", "quote_path_segment", "segment", "safe", "", " %s ", "quote_path_segment_doc", "_segment_cache", "segment", "safe", "KeyError", "__class__", "segment", "text_type", "result", "url_quote", "encode", "segment", "utf-8", "safe", "result", "url_quote", "str", "segment", "safe", "_segment_cache", "segment", "safe", "result", "result", "ResourceTreeTraverser", "object", " A resource tree traverser that should be used (for speed) when\n    every resource in the tree supplies a ``__name__`` and\n    ``__parent__`` attribute (ie. every resource in the tree is\n    :term:`location` aware) .", "VIEW_SELECTOR", "@@", "__init__", "self", "root", "root", "self", "root", "__call__", "self", "request", "environ", "environ", "request", "AttributeError", "environ", "request", "depwarn", "Passing an environ dictionary directly to a traverser is deprecated in Pyramid 1.1.  Pass a request object instead.", "warn", "warnings", "depwarn", "DeprecationWarning", "bfg.routes.matchdict", "environ", "matchdict", "environ", "bfg.routes.matchdict", "path", "get", "matchdict", "traverse", "/", "/", "is_nonstr_iter", "path", "path", "join", "/", "path", "/", "subpath", "get", "matchdict", "subpath", "is_nonstr_iter", "subpath", "subpath", "split_path_info", "subpath", "subpath", "path", "decode_path_info", "environ", "PATH_INFO", "/", "KeyError", "path", "/", "UnicodeDecodeError", "e", "URLDecodeError", "encoding", "e", "object", "e", "start", "e", "end", "e", "reason", "e", "VH_ROOT_KEY", "environ", "vroot_path", "decode_path_info", "environ", "VH_ROOT_KEY", "vroot_tuple", "split_path_info", "vroot_path", "vpath", "vroot_path", "path", "vroot_idx", "len", "vroot_tuple", "vroot_tuple", "vpath", "path", "vroot_idx", "root", "root", "self", "ob", "vroot", "root", "vpath", "/", "vpath_tuple", "i", "view_selector", "VIEW_SELECTOR", "self", "vpath_tuple", "split_path_info", "vpath", "segment", "vpath_tuple", "segment", "view_selector", "context", "view_name", "subpath", "traversed", "virtual_root", "virtual_root_path", "root", "ob", "segment", "vpath_tuple", "i", "vpath_tuple", "vroot_idx", "i", "vroot", "vroot_tuple", "root", "getitem", "__getitem__", "ob", "AttributeError", "context", "view_name", "subpath", "traversed", "virtual_root", "virtual_root_path", "root", "ob", "segment", "vpath_tuple", "i", "vpath_tuple", "vroot_idx", "i", "vroot", "vroot_tuple", "root", "next", "getitem", "segment", "KeyError", "context", "view_name", "subpath", "traversed", "virtual_root", "virtual_root_path", "root", "ob", "segment", "vpath_tuple", "i", "vpath_tuple", "vroot_idx", "i", "vroot", "vroot_tuple", "root", "i", "vroot_idx", "vroot", "next", "ob", "next", "i", "context", "view_name", "subpath", "traversed", "virtual_root", "virtual_root_path", "root", "ob", "empty", "subpath", "vpath_tuple", "vroot", "vroot_tuple", "root", "implementer", "ITraverser", "ModelGraphTraverser", "ResourceTreeTraverser", "ResourceURL", "object", "vroot_varname", "VH_ROOT_KEY", "__init__", "self", "resource", "request", "physical_path", "resource_path", "resource", "physical_path", "/", "physical_path", "physical_path", "/", "virtual_path", "physical_path", "environ", "environ", "request", "vroot_path", "get", "environ", "vroot_varname", "self", "vroot_path", "None", "startswith", "physical_path", "vroot_path", "virtual_path", "physical_path", "len", "vroot_path", "virtual_path", "self", "virtual_path", "physical_path", "self", "physical_path", "resource", "self", "resource", "context", "self", "resource", "request", "self", "request", "virtual_root", "self", "environ", "environ", "request", "self", "vroot_varname", "vroot_varname", "self", "vroot_varname", "environ", "find_resource", "context", "self", "environ", "vroot_varname", "root", "request", "self", "AttributeError", "find_root", "context", "self", "__call__", "self", " Generate a URL based on the :term:`lineage` of a :term:`resource`\n        object that is ``self.context``.  If any resource in the context\n        lineage has a Unicode name, it will be converted to a UTF-8 string\n        before being attached to the URL.  If a ``HTTP_X_VHM_ROOT`` key is\n        present in the WSGI environment, its value will be treated as a\n        'virtual root path': the path of the URL generated by this will be\n        left-stripped of this virtual root path value.\n        ", "local_url", "getattr", "context", "self", "__resource_url__", "None", "local_url", "None", "result", "local_url", "request", "self", "virtual_path", "physical_path", "virtual_path", "self", "physical_path", "self", "result", "None", "result", "app_url", "application_url", "request", "self", "app_url", "virtual_path", "self", "implementer", "IResourceURL", "IContextURL", "TraversalContextURL", "ResourceURL", "deprecated", "TraversalContextURL", "As of Pyramid 1.3 the, \"pyramid.traversal.TraversalContextURL\" class is scheduled to be removed.   Use the \"pyramid.config.Configurator.add_resource_url_adapter\" method to register a class that implements \"pyramid.interfaces.IResourceURL\" instead. See the \"What's new In Pyramid 1.3\" document for a further description.", "_join_path_tuple", "tuple", "tuple", "join", "/", "quote_path_segment", "x", "x", "tuple", "/", "lru_cache", "DefaultRootFactory", "__parent__", "None", "__name__", "None", "__init__", "self", "request", "matchdict", "matchdict", "request", "matchdict", "None", "update", "__dict__", "self", "matchdict", "sys", "pickle", "os", "multiprocessing", "Pool", "numpy", "np", "PyML", "*", "PyML", "SparseDataSet", "feat_sel", "rank_feat", "train_test", "ds_path", "data", "SparseDataSet", "ds_path", "g", "c", "fold", "attachKernel", "data", "gaussian", "gamma", "g", "s", "SVM", "C", "c", "r", "cv", "s", "data", "numFolds", "fold", "o", "open", "ds_path", ".pkl", "wb", "dump", "pickle", "r", "o", "close", "o", "ds_path", "__name__", "__main__", "ds_ps", "/tmp/ecnoded_dir/", "dss", "listdir", "os", "ds_ps", "dss", "ds_ps", "p", "p", "dss", "pool", "Pool", "map", "pool", "train_test", "dss", "os", "google.appengine.ext", "webapp", "google.appengine.ext.webapp", "template", "google.appengine.api", "users", "google.appengine.ext.webapp.util", "login_required", "google.appengine.api", "channel", "django.utils", "simplejson", "src.board", "Board", "src", "create_channel", "src", "get_other_player_channel_key", "src", "get_user_dump", "MainPage", "RequestHandler", "webapp", "get", "self", "board_id", "get", "request", "self", "board", "token", "", "other_player", "", "user", "get_current_user", "users", "logout_url", "create_logout_url", "users", "/", "board_dimention", "", "board_id", "board", "get_by_id", "Board", "int", "board_id", "board", "board_dimention", "dimension", "board", "may_join", "board", "user", "token", "create_channel", "str", "id", "key", "board", "user_id", "user", "other_player", "player1", "board", "key", "get_other_player_channel_key", "board", "user", "send_message", "channel", "key", "dumps", "simplejson", "type", "user", "join", "get_user_dump", "user", "format", "dict", "redirect", "self", "/", "redirect", "self", "/", "path", "join", "path", "os", "templates", "pvk.html", "write", "out", "response", "self", "render", "template", "path", "token", "board_id", "me_user", "board_dimention", "logout_url", "other_player", "token", "board_id", "get_user_dump", "user", "board_dimention", "logout_url", "get_user_dump", "other_player", "login_required", "os", "sys", "re", "time", "xappy", "sensible.loginit", "logger", "scripts.timing", "print_timing", "books", "conf", "configure", "log", "logger", "__name__", "num_sort_regex", "compile", "re", "\\d+", "zero_fill", "matchobj", "zfill", "group", "matchobj", "sortable", "title", "title", "sortabletitle", "strip", "lower", "title", "sortabletitle", "sub", "num_sort_regex", "zero_fill", "sortabletitle", "sortabletitle", "sortabletitle", "sortabletitle", "", "indexer_connection", "index_path", "None", "index_path", "index_path", "configure", "indexer", "IndexerConnection", "xappy", "index_path", "add_field_action", "indexer", "searchable_text", "INDEX_FREETEXT", "FieldActions", "xappy", "nopos", "True", "add_field_action", "indexer", "author", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "type", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "alpha", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "language", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "genre", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "sortable_title", "SORTABLE", "FieldActions", "xappy", "add_field_action", "indexer", "hidden", "INDEX_EXACT", "FieldActions", "xappy", "add_field_action", "indexer", "title", "STORE_CONTENT", "FieldActions", "xappy", "add_field_action", "indexer", "alpha", "STORE_CONTENT", "FieldActions", "xappy", "add_field_action", "indexer", "language", "STORE_CONTENT", "FieldActions", "xappy", "add_field_action", "indexer", "genre", "STORE_CONTENT", "FieldActions", "xappy", "add_field_action", "indexer", "type", "STORE_CONTENT", "FieldActions", "xappy", "add_field_action", "indexer", "searchable_text", "STORE_CONTENT", "FieldActions", "xappy", "indexer", "Indexer", "object", "type", "", "fields", "__init__", "self", "resource", "resource", "self", "resource", "doc", "self", "UnprocessedDocument", "xappy", "debug", "log", "indexing %s - %s", "type", "self", "resource", "self", "get", "obj", "klass", "__name__", "__class__", "obj", "indexer", "get", "globals", "%sIndexer", "klass", "None", "indexer", "None", "KeyError", "Indexer for object %s not found.", "klass", "indexer", "staticmethod", "document", "self", "id", "doc", "self", "url", "resource", "self", "append", "fields", "doc", "self", "Field", "xappy", "type", "type", "self", "field", "fields", "self", "value", "getattr", "resource", "self", "field", "value", "append", "fields", "doc", "self", "Field", "xappy", "field", "value", "add", "self", "doc", "self", "append", "self", "field", "value", "value", "append", "fields", "doc", "self", "Field", "xappy", "field", "value", "BookIndexer", "Indexer", "type", "Book", "fields", "title", "alpha", "author", "language", "genre", "add", "self", "append", "self", "sortable_title", "sortable", "title", "resource", "self", "append", "self", "searchable_text", "title", "resource", "self", "SectionIndexer", "Indexer", "type", "Section", "add", "self", "hidden", "hidden", "resource", "self", "1", "0", "append", "fields", "doc", "self", "Field", "xappy", "hidden", "hidden", "hidden", "0", "title", "title", "resource", "self", "append", "self", "title", "title", "append", "self", "sortable_title", "sortable", "title", "append", "self", "searchable_text", "astext", "resource", "self", "append", "self", "author", "author", "book", "resource", "self", "append", "self", "language", "language", "book", "resource", "self", "append", "self", "genre", "genre", "resource", "self", "index_books", "index_path", "ids", "connection", "indexer_connection", "index_path", "bookid", "ids", "book", "get_book", "books", "bookid", "doc", "document", "BookIndexer", "book", "replace", "connection", "doc", "indexed book:", "bookid", "flush", "connection", "close", "connection", "print_timing", "index_all", "bookid", "index_path", "connection", "indexer_connection", "index_path", "book", "get_book", "books", "bookid", "obj", "walk", "book", "indexer", "get", "Indexer", "obj", "doc", "document", "indexer", "obj", "replace", "connection", "doc", "flush", "connection", "close", "connection", "print_timing", "index", "kw", "bookid", "index_path", "configure", "kw", "index_all", "bookid", "index_path", "__name__", "__main__", "n", "len", "argv", "sys", "bookid", "", "n", "bookid", "argv", "sys", "bookid", "index", "bookid", "logging", "django.shortcuts", "render_to_response", "django.template.context", "RequestContext", "django.utils", "simplejson", "django.utils.html", "escape", "django.utils.safestring", "mark_safe", "mimeparse", "reviewboard.attachments.mimetypes", "score_match", "reviewboard.diffviewer.models", "DiffSet", "reviewboard.reviews.models", "FileAttachmentComment", "_file_attachment_review_uis", "ReviewUI", "object", "model", "None", "comment_model", "None", "allow_inline", "False", "template_name", "None", "object_key", "obj", "__init__", "self", "review_request", "obj", "review_request", "self", "review_request", "obj", "self", "obj", "render_to_response", "self", "request", "get", "GET", "request", "inline", "False", "base_template_name", "reviews/ui/base_inline.html", "base_template_name", "reviews/ui/base.html", "request", "self", "request", "draft", "get_draft", "review_request", "self", "user", "request", "review_request_details", "draft", "review_request", "self", "review", "get_pending_review", "review_request", "self", "user", "request", "repository_id", "review_request", "self", "diffset_count", "count", "filter", "objects", "DiffSet", "history__pk", "diffset_history_id", "review_request", "self", "diffset_count", "render_to_response", "template_name", "self", "RequestContext", "request", "base_template", "caption", "comments", "draft", "has_diffs", "review_request_details", "review_request", "review", "review_ui", "object_key", "self", "base_template_name", "get_caption", "self", "draft", "get_comments", "self", "draft", "draft", "diffset", "draft", "diffset_count", "review_request_details", "review_request", "self", "review", "self", "obj", "self", "get_extra_context", "self", "request", "get_comments", "self", "get_comments", "obj", "self", "get_caption", "self", "draft", "None", "draft", "draft_caption", "obj", "self", "draft_caption", "obj", "self", "caption", "obj", "self", "get_comment_thumbnail", "self", "comment", "Returns the thumbnail (as HTML) for a comment.\n\n        If this ReviewUI can render comments with a contextual thumbnail,\n        it should return HTML representing that comment. Otherwise, return\n        None in order to use the fallback.\n        ", "None", "get_extra_context", "self", "request", "get_comments_json", "self", "Returns a JSON-serialized representation of comments for a template.\n\n        The result of this can be used directly in a template to provide\n        comments to JavaScript functions.\n        ", "mark_safe", "dumps", "simplejson", "serialize_comments", "self", "get_comments", "self", "serialize_comments", "self", "comments", "Serializes the comments for the review UI target.\n\n        By default, this will return a list of serialized comments,\n        but it can be overridden to return other list or dictionary-based\n        representations, such as comments grouped by an identifier or region.\n        These representations must be serializable into JSON.\n        ", "serialize_comment", "self", "comment", "comment", "comments", "serialize_comment", "self", "comment", "Serializes a comment.\n\n        This will provide information on the comment that may be useful\n        to the JavaScript code.\n\n        Subclasses that want to add additional data should generally\n        augment the result of this function and not replace it.\n        ", "review", "get_review", "comment", "user", "user", "request", "self", "comment_id", "text", "user", "url", "localdraft", "review_id", "review_request_id", "issue_opened", "issue_status", "pk", "comment", "escape", "text", "comment", "username", "name", "username", "user", "review", "get_full_name", "user", "review", "username", "user", "review", "get_review_url", "comment", "user", "review", "user", "public", "review", "pk", "review", "review_request_id", "review", "issue_opened", "comment", "issue_status_to_string", "comment", "issue_status", "comment", "FileAttachmentReviewUI", "ReviewUI", "comment_class", "FileAttachmentComment", "object_key", "file", "supported_mimetypes", "serialize_comment", "self", "comment", "data", "serialize_comment", "super", "FileAttachmentReviewUI", "self", "comment", "update", "data", "extra_data", "comment", "data", "get_best_handler", "cls", "mimetype", "Returns the handler and score that that best fit the mimetype.", "best_score", "best_fit", "None", "review_ui", "_file_attachment_review_uis", "mt", "supported_mimetypes", "review_ui", "score", "score_match", "parse_mime_type", "mimeparse", "mt", "mimetype", "score", "best_score", "best_score", "score", "best_fit", "review_ui", "ValueError", "best_score", "best_fit", "classmethod", "for_type", "cls", "attachment", "Returns the handler that is the best fit for provided mimetype.", "mimetype", "attachment", "mimetype", "parse_mime_type", "mimeparse", "mimetype", "attachment", "score", "handler", "get_best_handler", "cls", "mimetype", "handler", "handler", "get_review_request", "attachment", "attachment", "Exception", "e", "error", "logging", "Unable to load review UI for %s: %s", "attachment", "e", "exc_info", "None", "classmethod", "register_ui", "review_ui", "Registers a review UI class.\n\n    This will register a review UI. Review Board will use it to\n    display a UI when reviewing a supported file attachment.\n\n    Only FileAttachmentReviewUI subclasses are supported.\n    ", "issubclass", "review_ui", "FileAttachmentReviewUI", "TypeError", "Only FileAttachmentReviewUI subclasses can be registered", "append", "_file_attachment_review_uis", "review_ui", "unregister_ui", "review_ui", "Unregisters a review UI class.\n\n    This will unregister a previously registered review UI.\n\n    Only FileAttachmentReviewUI subclasses are supported. The class must\n    have been registered beforehand or a ValueError will be thrown.\n    ", "issubclass", "review_ui", "FileAttachmentReviewUI", "TypeError", "Only FileAttachmentReviewUI subclasses can be unregistered", "remove", "_file_attachment_review_uis", "review_ui", "ValueError", "error", "logging", "Failed to unregister missing review UI %r", "review_ui", "ValueError", "This review UI was not previously registered", "hungarian", "members", "enums", "methods", "functions", "accessors", "ctors", "dtor", "formalchemy", "formalchemy", "helpers", "fa_h", "ckan.lib.helpers", "h", "pylons.i18n", "_", "ungettext", "N_", "gettext", "builder", "FormBuilder", "sqlalchemy.util", "OrderedDict", "ckan.model", "model", "common", "common", "ExtrasField", "PackageNameField", "ckan.lib.helpers", "literal", "__all__", "get_group_dict", "edit_group_dict", "PackagesField", "ConfiguredField", "common", "get_configured", "self", "with_renderer", "PackagesField", "self", "name", "self", "PackageEditRenderer", "self", "PackagesField", "Field", "formalchemy", "sync", "self", "is_readonly", "self", "_update_packages", "self", "_update_packages", "self", "group", "model", "self", "packages", "_deserialize", "self", "packages", "group", "packages", "PackageEditRenderer", "FieldRenderer", "fields", "formalchemy", "deserialize", "self", "value", "params", "self", "name", "self", "isinstance", "value", "list", "pkg_list", "value", "isinstance", "value", "unicode", "str", "packages_as_string", "unicode", "value", "packages_as_string", "replace", "packages_as_string", ",", " ", "pkg_list", "split", "packages_as_string", "packages", "get", "Package", "model", "pkg_ref", "pkg_ref", "pkg_list", "packages", "PackagesRenderer", "FieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "kwargs", "class", "autocomplete", "kwargs", "data-autocomplete-url", "url_for", "h", "controller", "package", "action", "autocomplete", "id", "None", "html", "text_field", "fa_h", "name", "self", "kwargs", "html", "build_group_form", "is_admin", "with_packages", "False", "False", "builder", "FormBuilder", "Group", "model", "set_field_text", "builder", "name", "_", "Name", "literal", "<strong>Unique identifier</strong> for group.<br/>2+ chars, lowercase, using only 'a-z0-9' and '-_'<p></p>", "set_field_option", "builder", "name", "validate", "group_name_validator", "common", "set_field_option", "builder", "description", "textarea", "size", "60x15", "add_field", "builder", "ExtrasField", "extras", "hidden_label", "True", "displayed_fields", "name", "title", "description", "is_admin", "set_field_option", "builder", "state", "dropdown", "options", "all", "State", "model", "append", "displayed_fields", "state", "with_packages", "add_field", "builder", "PackagesField", "packages", "append", "displayed_fields", "packages", "set_displayed_fields", "builder", "OrderedDict", "_", "Details", "displayed_fields", "_", "Extras", "extras", "set_label_prettifier", "builder", "prettify", "common", "builder", "fieldsets", "get_group_fieldset", "combined", "is_admin", "False", "False", "fs_name", "group_fs", "is_admin", "fs_name", "_admin", "combined", "fs_name", "_combined", "fs_name", "fieldsets", "fieldsets", "fs_name", "get_fieldset", "build_group_form", "is_admin", "is_admin", "with_packages", "combined", "fieldsets", "fs_name", "get_package_group_fieldset", "new_package_group_fs", "fieldsets", "builder", "FormBuilder", "Member", "model", "add_field", "builder", "PackageNameField", "package_name", "set_field_option", "builder", "package_name", "with_renderer", "PackagesRenderer", "set_field_text", "builder", "package_name", "_", "Package", "set_displayed_fields", "builder", "_", "Add packages", "package_name", "focus_field", "False", "fieldsets", "new_package_group_fs", "get_fieldset", "builder", "fieldsets", "new_package_group_fs", "get_group_dict", "group", "None", "indict", "group", "fs", "bind", "get_group_fieldset", "group", "fs", "get_group_fieldset", "exclude", "-id", "-roles", "-created", "field", "values", "_fields", "fs", "filter", "x", "endswith", "name", "renderer", "field", "x", "exclude", "value", "renderer", "field", "indict", "name", "renderer", "field", "value", "renderer", "field", "indict", "name", "renderer", "field", "endswith", "name", "renderer", "field", "-packages", "indict", "name", "renderer", "field", "group", "name", "pkg", "pkg", "packages", "group", "indict", "edit_group_dict", "_dict", "changed_items", "id", "", "prefix", "Group-%s-", "id", "key", "value", "items", "changed_items", "key", "startswith", "key", "prefix", "key", "prefix", "key", "has_key", "_dict", "key", "_dict", "key", "value", "_dict", "os", "sys", "time", "yaml", "numpy.numarray", "na", "pylab", "*", "matplotlib.backends.backend_agg", "FigureCanvasAgg", "paths", "colors", "font", "fontsize", "color", "black", "getMean", "data", "_out", "_pointCount", "_delta", "_pointCount", "_pos", "xrange", "len", "data", "_from", "_pos", "_delta", "_to", "_pos", "_delta", "_from", "_from", "_to", "len", "data", "_to", "len", "data", "_items", "data", "_from", "_to", "append", "_out", "mean", "_items", "_out", "drawWithAvg", "pl", "time", "data", "legend", "color", "plot", "pl", "time", "data", ",", "label", "legend", "color", "color", "plot", "pl", "time", "getMean", "data", "label", "legend", " average", "color", "color", "drawGraph", "data", "outFname", "_time", "_best", "_world", "_fig", "Figure", "figsize", "_ax", "add_subplot", "_fig", "_timeNames", "iterNo", "worldIterNo_average", "_bestNames", "curBest", "curBestPheromone_average", "_worldNames", "worldAmount", "worldAmount_average", "_getVal", "dict", "names", "_name", "names", "has_key", "dict", "_name", "dict", "_name", "Exception", ":(", "_hist", "data", "pheromoneHistory", "append", "_time", "_getVal", "_hist", "_timeNames", "append", "_best", "_getVal", "_hist", "_bestNames", "append", "_world", "_getVal", "_hist", "_worldNames", "drawWithAvg", "_ax", "_time", "_best", "Best", "color1", "colors", "drawWithAvg", "_ax", "_time", "_world", "World", "color2", "colors", "legend", "_ax", "shadow", "True", "loc", "set_xlabel", "_ax", "solutions found", "font", "set_ylabel", "_ax", "pheromone", "font", "_canvas", "FigureCanvasAgg", "_fig", "print_figure", "_canvas", "outFname", "dpi", "__name__", "__main__", "_name", "argv", "sys", "_inFname", "join", "path", "os", "dataDir", "paths", "_name", ".stat.yaml", "isfile", "path", "os", "_inFname", "file '%s' not found", "_inFname", "exit", "_outDir", "join", "path", "os", "imgDir", "paths", "plots", "_outFile", "join", "path", "os", "_outDir", "_name", ".png", "isfile", "path", "os", "_outFile", "_inS", "stat", "os", "_inFname", "_outS", "stat", "os", "_outFile", "_inTime", "max", "st_mtime", "_inS", "st_ctime", "_inS", "_outTime", "min", "st_mtime", "_outS", "st_ctime", "_outS", "_inTime", "_outTime", "exit", "_data", "load", "yaml", "file", "_inFname", "drawGraph", "_data", "_outFile", "maya.cmds", "mc", "copy", "copy", "logging", "basicConfig", "logging", "log", "getLogger", "logging", "__name__", "setLevel", "log", "INFO", "logging", "Red9.core", "Red9_Meta", "r9Meta", "Red9.core", "Red9_General", "r9General", "cgm.lib", "search", "attributes", "geoTypes", "nurbsSurface", "mesh", "poly", "subdiv", "simplePuppetReturn", "catch", "ls", "mc", "type", "network", "returnList", "catch", "o", "catch", "doGetAttr", "attributes", "o", "mClass", "cgmPuppet", "cgmMorpheusPuppet", "append", "returnList", "o", "returnList", "Timer", "r9General", "getGeo", "self", "\n    Returns geo in a puppets geo folder, ALL geo to be used by a puppet should be in there\n    ", "geo", "o", "getAllChildren", "geoGroup", "masterNull", "self", "returnObjectType", "search", "o", "geoTypes", "buff", "ls", "mc", "o", "long", "True", "append", "geo", "buff", "geo", "Timer", "r9General", "getModules", "self", "\n    Get the modules of a puppet in a usable format:\n    \n    i_modules(dict){indexed to name}\n    \n    ", "i_modules", "self", "getChildMetaNodes", "self", "mAttrs", "moduleChildren", "i_modules", "self", "Timer", "r9General", "getModuleFromDict", "self", "checkDict", "\n    Pass a check dict of attrsibutes and arguments. If that module is found, it returns it.\n    \n    checkDict = {'moduleType':'torso',etc}\n    ", "type", "checkDict", "dict", "Arg must be dictionary", "i_m", "moduleChildren", "self", "matchBuffer", "key", "keys", "checkDict", "hasAttr", "i_m", "key", "doGetAttr", "attributes", "mNode", "i_m", "key", "get", "checkDict", "key", "matchBuffer", "matchBuffer", "len", "keys", "checkDict", "debug", "log", "Found Morpheus Module: '%s'", "getShortName", "i_m", "i_m", "False", "Timer", "r9General", "getState", "self", "i_modules", "moduleChildren", "self", "i_modules", "warning", "log", "'%s' has no modules", "cgmName", "self", "False", "l_states", "i_m", "i_modules", "append", "l_states", "getState", "i_m", "info", "log", "'%s' states: %s", "getShortName", "self", "l_states", "min", "l_states", "Timer", "r9General", "getOrderedModules", "self", " \n    Returns ordered modules of a character\n    \n    Stores:\n    self.orderedModules(list)       \n    \n    Returns:\n    self.orderedModules(list)\n    \n    from cgm.core.rigger import PuppetFactory as pFactory\n    reload(pFactory)\n    from cgm.core import cgm_PuppetMeta as cgmPM\n    p = cgmPM.cgmPuppet(name='Morpheus')\n    \n    ", "l_orderedParentModules", "moduleRoots", "i_m", "moduleChildren", "self", "debug", "log", "%s.moduleParent: %s", "getShortName", "i_m", "getMessage", "i_m", "moduleParent", "debug", "log", "%s.modulePuppet: %s", "getShortName", "i_m", "getMessage", "i_m", "modulePuppet", "getMessage", "i_m", "modulePuppet", "mNode", "self", "getMessage", "i_m", "moduleParent", "info", "log", "Root found: %s", "getShortName", "i_m", "append", "moduleRoots", "i_m", "l_childrenList", "copy", "copy", "moduleChildren", "self", "moduleRoots", "critical", "log", "No module root found!", "False", "i_m", "moduleRoots", "remove", "l_childrenList", "i_m", "append", "l_orderedParentModules", "i_m", "cnt", "len", "l_childrenList", "cnt", "cnt", "cnt", "error", "log", "max count", "i_Parent", "l_orderedParentModules", "i_child", "l_childrenList", "debug", "log", "i_child: %s", "getShortName", "i_Parent", "moduleParent", "i_child", "i_Parent", "debug", "log", "Match found!", "append", "l_orderedParentModules", "i_child", "remove", "l_childrenList", "i_child", "l_orderedParentModules", "Timer", "r9General", "getOrderedParentModules", "self", " \n    Returns ordered list of parent modules of a character\n    \n    Stores:\n    self.moduleChildren(dict)\n    self.orderedParentModules(list)       \n    self.rootModules(list)\n    \n    Returns:\n    self.orderedParentModules(list)\n    \n    THIS IS STILL NOT DOING ANYTHING NECESSARY\n    ", "d_moduleParents", "l_orderedParentModules", "moduleRoots", "d_moduleChildren", "i_m", "moduleChildren", "self", "debug", "log", "%s.moduleParent: %s", "getShortName", "i_m", "getMessage", "i_m", "moduleParent", "debug", "log", "%s.modulePuppet: %s", "getShortName", "i_m", "getMessage", "i_m", "modulePuppet", "getMessage", "i_m", "modulePuppet", "getMessage", "i_m", "moduleParent", "info", "log", "Root found: %s", "getShortName", "i_m", "append", "moduleRoots", "i_m", "append", "l_orderedParentModules", "i_m", "getMessage", "i_m", "moduleChildren", "info", "log", "Parent found: %s", "getShortName", "i_m", "d_moduleChildren", "i_m", "moduleChildren", "i_m", "getMessage", "i_m", "moduleParent", "d_moduleParents", "i_m", "moduleParent", "i_m", "l_childrenList", "copy", "copy", "moduleChildren", "self", "moduleRoots", "critical", "log", "No module root found!", "False", "i_m", "moduleRoots", "remove", "l_childrenList", "i_m", "info", "log", "l_childrenList: %s", "l_childrenList", "cnt", "len", "l_childrenList", "cnt", "cnt", "error", "log", "max count", "i_Parent", "l_orderedParentModules", "i_child", "l_childrenList", "debug", "log", "i_child: %s", "getShortName", "i_Parent", "cnt", "moduleParent", "i_child", "i_Parent", "info", "log", "Match found!", "append", "l_orderedParentModules", "i_child", "remove", "l_childrenList", "i_child", "\n    #Process the childdren looking for parents as children and so on and so forth, appending them as it finds them\n    while len(d_moduleChildrenCull)>0 and cnt < 100:#While we still have a cull list\n        if cnt == 99:\n            log.error('max count')\n        for i_Parent in l_orderedParentModules:#for each ordered parent module we've found (starting with root)\n            log.debug(\"i_Parent: %s\"%i_Parent.getShortName())\n            for i_checkParent in d_moduleChildrenCull.keys():#for each module with children\n                log.debug(\"i_checkParent: %s\"%i_Parent.getShortName())                \n                cnt +=1\n                #if the check parent has a parent and the parent of the check parent is the ordered parent, store it and pop\n                log.info(\"i_Parent: %s\"%i_Parent.getShortName())                \n                log.info(i_checkParent.moduleParent)\n                if i_checkParent in d_moduleParents.keys() and i_checkParent.moduleParent == [i_Parent]:\n                    log.info('Match found!')\n                    l_orderedParentModules.append(i_checkParent)\n                    d_moduleChildrenCull.pop(i_checkParent)\n                    ", "l_orderedParentModules", "\n    while len(moduleChildrenD)>0 and cnt < 100:\n    for module in self.orderedParentModules:\n        print module\n        for child in moduleChildrenD.keys():\n            cnt +=1\n            if child in moduleParents.keys() and moduleParents[child] == module:\n                self.orderedParentModules.append(child)\n                moduleChildrenD.pop(child)\n    ", "Timer", "r9General", "unittest", "solar.sim.wxamps", "WxAmpsDevice", "solar.types", "*", "solar.sim", "*", "scipy.integrate", "utils", "compare", "persist", "numpy", "np", "os.path", "TestWxAmps", "TestCase", "unittest", "setUp", "self", "dev", "self", "WxAmpsDevice", "wxamps", "join", "path", "os", "dirname", "path", "os", "__file__", "data", "CdTe_Gloeckler.dev", "optical", "SimpleOpticalParameters", "illum", "IlluminationParameters", "take_eqe", "illum", "params", "self", "SimulationParameters", "optical", "illum", "check_device", "self", "file", "dev", "WxAmpsDevice", "wxamps", "join", "path", "os", "dirname", "path", "os", "__file__", "data", "file", "solve", "dev", "params", "self", "front", "get_eqe", "dev", "reverse", "dev", "solve", "dev", "params", "self", "back", "get_eqe", "dev", "front", "back", "test_front", "self", "solve", "dev", "self", "params", "self", "eqe", "get_eqe", "dev", "self", "CompareArrayWithReference", "compare", "self", "eqe", "cdte-front-eqe.csv", "test_back", "self", "reverse", "dev", "self", "solve", "dev", "self", "params", "self", "eqe", "get_eqe", "dev", "self", "CompareArrayWithReference", "compare", "self", "eqe", "cdte-back-eqe.csv", "test_graded_cigs", "self", "front", "back", "check_device", "self", "Cigs_Graded.dev", "CompareArrayWithReference", "compare", "self", "front", "cigs-graded-front.csv", "test_ungraded_cigs", "self", "front", "back", "check_device", "self", "Cigs_Ungraded.dev", "CompareArrayWithReference", "compare", "self", "front", "cigs-ungraded-front.csv", "test_combined", "self", "\n\t\tSimulate the eqe of the device with a back reflector as the simulated transmission\n\t\tof the device multiplied by the back eqe + the front eqe.  This should test how well\n\t\tour optical model maps onto the one used by wxamps.\n\t\t", "optical", "SimpleOpticalParameters", "illum", "IlluminationParameters", "take_eqe", "illum", "params", "SimulationParameters", "optical", "illum", "solve", "dev", "self", "params", "front", "get_eqe", "dev", "self", "reverse", "dev", "self", "solve", "dev", "self", "params", "back", "get_eqe", "dev", "self", "reverse", "dev", "self", "optical", "SimpleOpticalParameters", "params", "SimulationParameters", "optical", "illum", "solve", "dev", "self", "params", "comb", "get_eqe", "dev", "self", "stack", "optical_stack", "dev", "self", "prepend_layer", "stack", "OpticalFilm", "OpticalMaterial", "float", "n", "material", "layers", "stack", "inf", "np", "add_layer", "stack", "OpticalFilm", "OpticalMaterial", "float", "n", "material", "layers", "stack", "inf", "np", "trans", "transmission", "stack", "front", "simulated", "front", "back", "trans", "diff", "comb", "simulated", "diff", "diff", "normed_diff", "sqrt", "np", "trapz", "integrate", "scipy", "diff", "comb", "total", "trapz", "integrate", "scipy", "back", "back", "assertLess", "self", "normed_diff", "total", "datetime", "flask", "current_app", "app", "flaskext.mongoengine", "Document", "mongoengine", "StringField", "EmbeddedDocumentField", "DictField", "BooleanField", "pymongo.objectid", "ObjectId", "semaphore.core.settings.models", "Settings", "Permissions", "config", "Organization", "Document", "\n\tRepresents an organization in Semaphore\n\t", "name", "StringField", "required", "True", "settings", "Settings", "required", "True", "permissions", "Permissions", "required", "True", "active", "BooleanField", "__repr__", "self", "name", "self", "id", "self", "__str__", "self", "__repr__", "self", "get_organization", "cls", "id", "\n\t\tReturns an organization by ID\n\t\t", "first", "objects", "cls", "__raw__", "_id", "active", "ObjectId", "id", "True", "classmethod", "MODELS", "Organization", "copy", "re", "__version__", "logging", "basicConfig", "logging", "log", "getLogger", "logging", "__name__", "setLevel", "log", "INFO", "logging", "maya.cmds", "mc", "Red9.core", "Red9_Meta", "r9Meta", "Red9.core", "Red9_General", "r9General", "cgm.core", "cgm_Meta", "cgmMeta", "cgm.lib", "modules", "cgmMath", "curves", "lists", "distance", "locators", "constraints", "attributes", "position", "search", "logic", "reload", "attributes", "reload", "constraints", "cgm.core.lib", "nameTools", "cgm.core.classes", "DraggerContextFactory", "dragFactory", "reload", "dragFactory", "go", "object", "__init__", "kws", "self", "module", "forceNew", "loadTemplatePose", "tryTemplateUpdate", "True", "True", "False", "\n        To do:\n        Add rotation order settting\n        Add module parent check to make sure parent is templated to be able to move forward, or to constrain\n        Add any other piece meal data necessary\n        Add a cleaner to force a rebuild\n        ", "debug", "log", ">>> TemplateFactory.go.__init__", "isModule", "module", "Not a module", "m", "self", "module", "info", "log", "loadTemplatePose: %s", "loadTemplatePose", "tryTemplateUpdate", "info", "log", "Trying template update...", "updateTemplate", "module", "kws", "loadTemplatePose", "info", "log", "Trying loadTemplatePose...", "loadTemplatePose", "m", "self", "isTemplated", "module", "forceNew", "deleteTemplate", "module", "warning", "log", "'%s' has already been templated", "getShortName", "module", "cls", "self", "TemplateFactory.go", "moduleNullData", "self", "returnUserAttrsToDict", "attributes", "mNode", "m", "self", "templateNull", "self", "getMessage", "m", "self", "templateNull", "False", "i_templateNull", "self", "templateNull", "m", "self", "rigNull", "self", "getMessage", "m", "self", "rigNull", "False", "moduleParent", "self", "get", "moduleNullData", "self", "moduleParent", "moduleColors", "self", "getModuleColors", "m", "self", "l_coreNames", "self", "value", "i_coreNames", "m", "self", "corePosList", "self", "templateStarterData", "i_templateNull", "self", "foundDirections", "self", "False", "len", "l_coreNames", "self", "len", "corePosList", "self", "coreNames length and corePosList doesn't match", "partName", "self", "getPartNameBase", "m", "self", "partType", "self", "moduleType", "m", "self", "False", "direction", "self", "None", "hasAttr", "m", "self", "cgmDirection", "direction", "self", "cgmDirection", "m", "self", "None", "templateNullData", "self", "returnUserAttrsToDict", "attributes", "templateNull", "self", "curveDegree", "self", "curveDegree", "i_templateNull", "self", "rollOverride", "self", "rollOverride", "i_templateNull", "self", "debug", "log", "Module: %s", "getShortName", "m", "self", "debug", "log", "moduleNullData: %s", "moduleNullData", "self", "debug", "log", "partType: %s", "partType", "self", "debug", "log", "direction: %s", "direction", "self", "debug", "log", "colors: %s", "moduleColors", "self", "debug", "log", "coreNames: %s", "l_coreNames", "self", "debug", "log", "corePosList: %s", "corePosList", "self", "mClass", "m", "self", "cgmLimb", "debug", "log", "mode: cgmLimb Template", "doMakeLimbTemplate", "self", "doTagChildren", "self", "NotImplementedError", "haven't implemented '%s' templatizing yet", "mClass", "m", "self", "loadTemplatePose", "loadTemplatePose", "m", "self", "Timer", "r9General", "doTagChildren", "self", "obj", "getAllChildren", "i_templateNull", "self", "i_obj", "cgmNode", "cgmMeta", "obj", "doStore", "i_obj", "templateOwner", "templateNull", "self", "StandardError", "error", "warning", "log", "error", "Timer", "r9General", "returnModuleBaseSize", "self", "debug", "log", ">>> returnModuleSize", "size", "getState", "self", "error", "log", "'%s' has not been sized. Cannot find base size", "getShortName", "self", "False", "getMessage", "self", "moduleParent", "getMessage", "self", "modulePuppet", "debug", "log", "Sizing from modulePuppet", "size", "getMessage", "self", "moduleParent", "debug", "log", "Sizing from moduleParent", "i_templateNull", "templateNull", "self", "i_parent", "moduleParent", "self", "parentState", "getState", "i_parent", "isTemplated", "i_parent", "debug", "log", "Parent has been templated...", "nameCount", "len", "value", "l_coreNames", "self", "parentTemplateObjects", "getMessage", "templateNull", "i_parent", "controlObjects", "debug", "log", "parentTemplateObjects: %s", "parentTemplateObjects", "debug", "log", "firstPos: %s", "templateStarterData", "i_templateNull", "closestObj", "returnClosestObjectFromPos", "distance", "templateStarterData", "i_templateNull", "parentTemplateObjects", "debug", "log", "closestObj: %s", "closestObj", "boundingBoxSize", "returnBoundingBoxSize", "distance", "closestObj", "True", "info", "log", "bbSize = %s", "max", "boundingBoxSize", "size", "max", "boundingBoxSize", "moduleType", "i_parent", "clavicle", "size", "moduleType", "self", "clavicle", "size", "moduleType", "self", "head", "size", "moduleType", "self", "neck", "size", "moduleType", "self", "leg", "size", "moduleType", "self", "finger", "thumb", "size", "debug", "log", "Parent has not been templated...", "size", "Timer", "r9General", "constrainToParentModule", "self", "\n    Pass a module class. Constrains template root to parent's closest template object\n    ", "debug", "log", ">>> constrainToParentModule", "isTemplated", "self", "error", "log", "Must be template state to contrainToParentModule: '%s' ", "getShortName", "self", "False", "getMessage", "self", "moduleParent", "False", "debug", "log", "looking for moduleParent info", "i_templateNull", "templateNull", "self", "i_parent", "moduleParent", "self", "parentState", "getState", "i_parent", "isTemplated", "i_parent", "debug", "log", "Parent has been templated...", "parentTemplateObjects", "getMessage", "templateNull", "i_parent", "controlObjects", "debug", "log", "parentTemplateObjects: %s", "parentTemplateObjects", "closestObj", "returnClosestObject", "distance", "getMessage", "i_templateNull", "root", "parentTemplateObjects", "debug", "log", "closestObj: %s", "closestObj", "index", "parentTemplateObjects", "closestObj", "info", "log", "Use root for parent object", "closestObj", "mNode", "root", "templateNull", "i_parent", "debug", "log", "closestObj: %s", "closestObj", "l_constraints", "getConstraintsTo", "cgmObject", "cgmMeta", "parent", "root", "i_templateNull", "isConstrainedBy", "cgmObject", "cgmMeta", "parent", "root", "i_templateNull", "closestObj", "debug", "log", "Already constrained!", "True", "l_constraints", "delete", "mc", "l_constraints", "doConstraintObjectGroup", "constraints", "closestObj", "group", "parent", "root", "i_templateNull", "constraintTypes", "point", "debug", "log", "Parent has not been templated...", "False", "Timer", "r9General", "doMakeLimbTemplate", "self", "\n    Self should be a TemplateFactory.go\n    ", "\n    returnList = []\n    templObjNameList = []\n    templHandleList = []\n    ", "debug", "log", ">>> doMakeLimbTemplate", "cls", "self", "TemplateFactory.go", "Not a TemlateFactory.go instance!", "doCurveDegree", "getGoodCurveDegree", "self", "doCurveDegree", "ValueError", "Curve degree didn't query", "size", "returnModuleBaseSize", "m", "self", "lastCountSizeMatch", "len", "corePosList", "self", "templHandleList", "i_controlObjects", "self", "i_locs", "self", "i", "pos", "enumerate", "corePosList", "self", "i", "sizeMultiplier", "i", "lastCountSizeMatch", "sizeMultiplier", "sizeMultiplier", "i_obj", "cgmObject", "cgmMeta", "createControlCurve", "curves", "sphere", "size", "sizeMultiplier", "addAttr", "i_obj", "mClass", "cgmObject", "lock", "True", "setCurveColorByName", "curves", "mNode", "i_obj", "moduleColors", "self", "addAttr", "i_obj", "cgmName", "value", "str", "l_coreNames", "self", "i", "attrType", "string", "lock", "True", "direction", "self", "None", "addAttr", "i_obj", "cgmDirection", "value", "direction", "self", "attrType", "string", "lock", "True", "addAttr", "i_obj", "cgmType", "value", "templateObject", "attrType", "string", "lock", "True", "doName", "i_obj", "move", "mc", "pos", "pos", "pos", "mNode", "i_obj", "a", "True", "parent", "i_obj", "templateNull", "self", "i_loc", "doLoc", "i_obj", "addAttr", "i_loc", "mClass", "cgmObject", "lock", "True", "addAttr", "i_loc", "cgmName", "value", "getShortName", "m", "self", "attrType", "string", "lock", "True", "addAttr", "i_loc", "cgmType", "value", "templateCurveLoc", "attrType", "string", "lock", "True", "v", "i_loc", "False", "doName", "i_loc", "append", "i_locs", "self", "i_loc", "connectChildNode", "i_obj", "mNode", "i_loc", "curveLoc", "owner", "parent", "i_loc", "templateNull", "self", "pointConstraint", "mc", "mNode", "i_obj", "mNode", "i_loc", "maintainOffset", "False", "append", "templHandleList", "mNode", "i_obj", "append", "i_controlObjects", "self", "i_obj", "i_crv", "cgmObject", "cgmMeta", "curve", "mc", "d", "doCurveDegree", "p", "corePosList", "self", "os", "True", "addAttr", "i_crv", "mClass", "cgmObject", "lock", "True", "addAttr", "i_crv", "cgmName", "value", "str", "getShortName", "m", "self", "attrType", "string", "lock", "True", "direction", "self", "None", "addAttr", "i_crv", "cgmDirection", "value", "direction", "self", "attrType", "string", "lock", "True", "addAttr", "i_crv", "cgmType", "value", "templateCurve", "attrType", "string", "lock", "True", "setCurveColorByName", "curves", "mNode", "i_crv", "moduleColors", "self", "parent", "i_crv", "templateNull", "self", "doName", "i_crv", "setDrawingOverrideSettings", "i_crv", "overrideEnabled", "overrideDisplayType", "True", "i", "i_obj", "enumerate", "i_controlObjects", "self", "connectAttr", "mc", "mNode", "curveLoc", "i_obj", ".translate", "%s%s%i%s", "mNode", "i_crv", ".controlPoints[", "i", "]", "f", "True", "foundDirections", "self", "returnGeneralDirections", "self", "templHandleList", "debug", "log", "directions: %s", "foundDirections", "self", "rootSize", "returnBoundingBoxSizeToAverage", "distance", "templHandleList", "True", "i_rootControl", "cgmObject", "cgmMeta", "createControlCurve", "curves", "cube", "rootSize", "addAttr", "i_rootControl", "mClass", "cgmObject", "lock", "True", "setCurveColorByName", "curves", "mNode", "i_rootControl", "moduleColors", "self", "addAttr", "i_rootControl", "cgmName", "value", "str", "getShortName", "m", "self", "attrType", "string", "lock", "True", "addAttr", "i_rootControl", "cgmType", "value", "templateRoot", "attrType", "string", "lock", "True", "direction", "self", "None", "addAttr", "i_rootControl", "cgmDirection", "value", "direction", "self", "attrType", "string", "lock", "True", "doName", "i_rootControl", "moduleType", "m", "self", "clavicle", "movePointSnap", "position", "mNode", "i_rootControl", "templHandleList", "movePointSnap", "position", "mNode", "i_rootControl", "templHandleList", "debug", "log", "templHandleList: %s", "templHandleList", "moduleType", "m", "self", "foot", "len", "templHandleList", "info", "log", "setting up constraints...", "constBuffer", "aimConstraint", "mc", "templHandleList", "mNode", "i_rootControl", "maintainOffset", "False", "weight", "aimVector", "upVector", "worldUpVector", "worldUpVector", "self", "worldUpType", "vector", "delete", "mc", "constBuffer", "getMessage", "m", "self", "moduleParent", "helper", "mNode", "helper", "controlObjects", "templateNull", "moduleParent", "m", "self", "helper", "info", "log", "helper: %s", "helper", "constBuffer", "orientConstraint", "mc", "helper", "mNode", "i_rootControl", "maintainOffset", "False", "delete", "mc", "constBuffer", "parent", "i_rootControl", "templateNull", "self", "doGroup", "i_rootControl", "maintain", "True", "curve", "i_templateNull", "self", "mNode", "i_crv", "root", "i_templateNull", "self", "mNode", "i_rootControl", "controlObjects", "i_templateNull", "self", "templHandleList", "i_rootControl", "self", "i_rootControl", " Make our Orientation Helpers ", "doCreateOrientationHelpers", "self", "doParentControlObjects", "m", "self", "True", "Timer", "r9General", "doCreateOrientationHelpers", "self", " \n    ", "debug", "log", ">>> addOrientationHelpers", "cls", "self", "TemplateFactory.go", "Not a TemlateFactory.go instance!", "objExists", "mc", "mNode", "m", "self", "module no longer exists", "helperObjects", "helperObjectGroups", "returnBuffer", "root", "getMessage", "i_templateNull", "self", "root", "objects", "getMessage", "i_templateNull", "self", "controlObjects", "debug", "log", "root", "debug", "log", "objects", "debug", "log", "foundDirections", "self", "orientRootSize", "returnBoundingBoxSizeToAverage", "distance", "root", "True", "i_orientRootControl", "cgmObject", "cgmMeta", "createControlCurve", "curves", "circleArrow1", "orientRootSize", "addAttr", "i_orientRootControl", "mClass", "cgmObject", "lock", "True", "setCurveColorByName", "curves", "mNode", "i_orientRootControl", "moduleColors", "self", "addAttr", "i_orientRootControl", "cgmName", "value", "str", "getShortName", "m", "self", "attrType", "string", "lock", "True", "addAttr", "i_orientRootControl", "cgmType", "value", "templateOrientRoot", "attrType", "string", "lock", "True", "doName", "i_orientRootControl", "connectParent", "i_orientRootControl", "templateNull", "self", "orientRootHelper", "owner", "moveParentSnap", "position", "mNode", "i_orientRootControl", "root", "parent", "i_orientRootControl", "root", "doGroup", "i_orientRootControl", "maintain", "True", "pointConstraint", "mc", "objects", "parent", "i_orientRootControl", "maintainOffset", "False", "aimConstraint", "mc", "objects", "parent", "i_orientRootControl", "maintainOffset", "True", "weight", "aimVector", "upVector", "worldUpObject", "root", "worldUpType", "objectRotation", "doSetLockHideKeyableAttr", "attributes", "mNode", "i_orientRootControl", "True", "False", "False", "tx", "ty", "tz", "rx", "ry", "sx", "sy", "sz", "v", "i_orientHelpers", "self", "len", "objects", "i_obj", "cgmObject", "cgmMeta", "objects", "moveOrientSnap", "position", "objects", "root", "i", "obj", "enumerate", "objects", "debug", "log", "on %s", "ls", "mc", "obj", "shortNames", "True", "size", "returnBoundingBoxSizeToAverage", "distance", "obj", "True", "i_obj", "cgmObject", "cgmMeta", "createControlCurve", "curves", "circleArrow2Axis", "size", "addAttr", "i_obj", "mClass", "cgmObject", "lock", "True", "setCurveColorByName", "curves", "mNode", "i_obj", "moduleColors", "self", "doCopyNameTagsFromObject", "i_obj", "obj", "doStore", "i_obj", "cgmType", "templateOrientHelper", "True", "doName", "i_obj", "connectParent", "i_obj", "obj", "helper", "owner", "append", "i_orientHelpers", "self", "i_obj", "debug", "log", "owner", "i_obj", "movePointSnap", "position", "mNode", "i_obj", "obj", "i", "len", "objects", "constBuffer", "aimConstraint", "mc", "objects", "i", "mNode", "i_obj", "maintainOffset", "False", "weight", "aimVector", "upVector", "worldUpVector", "foundDirections", "self", "worldUpType", "vector", "constBuffer", "aimConstraint", "mc", "objects", "mNode", "i_obj", "maintainOffset", "False", "weight", "aimVector", "upVector", "worldUpVector", "foundDirections", "self", "worldUpType", "vector", "constBuffer", "delete", "mc", "constBuffer", "parent", "i_obj", "obj", "doGroup", "i_obj", "maintain", "True", "i", "len", "objects", "aimConstraint", "mc", "objects", "i", "parent", "i_obj", "maintainOffset", "False", "weight", "aimVector", "upVector", "worldUpVector", "worldUpObject", "mNode", "i_orientRootControl", "worldUpType", "objectrotation", "constBuffer", "aimConstraint", "mc", "objects", "parent", "i_obj", "maintainOffset", "False", "weight", "aimVector", "upVector", "worldUpObject", "mNode", "i_orientRootControl", "worldUpType", "objectrotation", "obj", "objects", "doSetLockHideKeyableAttr", "attributes", "mNode", "i_obj", "True", "False", "False", "tx", "ty", "tz", "ry", "sx", "sy", "sz", "v", "doSetLockHideKeyableAttr", "attributes", "mNode", "i_obj", "True", "False", "False", "tx", "ty", "tz", "rx", "ry", "sx", "sy", "sz", "v", "bufferList", "o", "i_orientHelpers", "self", "append", "bufferList", "mNode", "o", "orientHelpers", "i_templateNull", "self", "bufferList", "i_orientRootHelper", "self", "i_orientRootControl", "debug", "log", "orientRootHelper: [%s]", "getShortName", "orientRootHelper", "i_templateNull", "self", "debug", "log", "orientHelpers: %s", "getMessage", "i_templateNull", "self", "orientHelpers", "True", "Timer", "r9General", "doParentControlObjects", "self", "\n    Needs instanced module\n    ", "info", "log", ">>> doParentControlObjects", "i_templateNull", "templateNull", "self", "i_root", "root", "i_templateNull", "i_controlObjects", "controlObjects", "i_templateNull", "i_obj", "i_controlObjects", "parent", "i_obj", "mNode", "i_root", "doGroup", "i_controlObjects", "maintain", "True", "doGroup", "i_controlObjects", "maintain", "True", "debug", "log", "getMessage", "i_templateNull", "controlObjects", "False", "moduleType", "self", "foot", "constraintGroups", "doLimbSegmentListParentConstraint", "constraints", "getMessage", "i_templateNull", "controlObjects", "False", "i_obj", "i_controlObjects", "i_parent", "cgmObject", "cgmMeta", "parent", "i_obj", "addAttr", "i_parent", "mClass", "cgmObject", "lock", "True", "addAttr", "i_obj", "owner", "mNode", "i_parent", "attrType", "messageSimple", "lock", "True", "Timer", "r9General", "updateTemplate", "kws", "self", "saveTemplatePose", "False", "\n    Function to update a skeleton if it's been resized\n    ", "isSized", "self", "warning", "log", "'%s' not sized. Can't update", "getShortName", "self", "False", "isTemplated", "self", "warning", "log", "'%s' not templated. Can't update", "getShortName", "self", "False", "saveTemplatePose", "storeTemplatePose", "self", "i_templateNull", "templateNull", "self", "corePosList", "templateStarterData", "i_templateNull", "i_root", "root", "i_templateNull", "i_controlObjects", "controlObjects", "i_templateNull", "isVectorEquivalent", "cgmMath", "translate", "controlObjects", "i_templateNull", "StandardError", "updateTemplate: doesn't currently support having a moved first template object", "False", "xform", "mc", "parent", "i_root", "translation", "corePosList", "worldSpace", "True", "i", "i_obj", "enumerate", "i_controlObjects", "info", "log", "getShortName", "i_obj", "objConstraints", "returnObjectConstraints", "constraints", "parent", "i_obj", "objConstraints", "delete", "mc", "objConstraints", "buffer", "returnParentsFromObjectToParent", "search", "mNode", "i_obj", "mNode", "i_root", "parent", "i_obj", "False", "buffer", "delete", "mc", "buffer", "xform", "mc", "mNode", "i_obj", "translation", "corePosList", "i", "worldSpace", "True", "buffer", "returnParentsFromObjectToParent", "search", "mNode", "i_controlObjects", "mNode", "i_root", "parent", "i_controlObjects", "False", "buffer", "delete", "mc", "buffer", "doParentControlObjects", "self", "loadTemplatePose", "self", "True", "Timer", "r9General", "getGoodCurveDegree", "self", "debug", "log", ">>> getGoodCurveDegree", "doCurveDegree", "curveDegree", "i_templateNull", "self", "ValueError", "Failed to get module curve degree", "doCurveDegree", "doCurveDegree", "len", "corePosList", "self", "doCurveDegree", "doCurveDegree", "doCurveDegree", "False", "returnGeneralDirections", "self", "objList", "\n    Get general direction of a list of objects in a module\n    ", "debug", "log", ">>> returnGeneralDirections", "generalDirection", "self", "returnHorizontalOrVertical", "logic", "objList", "generalDirection", "self", "vertical", "leg", "moduleType", "m", "self", "worldUpVector", "self", "generalDirection", "self", "vertical", "leg", "moduleType", "m", "self", "worldUpVector", "self", "worldUpVector", "self", "generalDirection", "self", "worldUpVector", "self", "Timer", "r9General", "logging", "warnings", "django", "django.conf", "settings", "django.conf.urls.defaults", "patterns", "url", "django.core.exceptions", "ObjectDoesNotExist", "MultipleObjectsReturned", "ValidationError", "django.core.urlresolvers", "NoReverseMatch", "reverse", "resolve", "Resolver404", "get_script_prefix", "django.db", "transaction", "django.db.models.sql.constants", "QUERY_TERMS", "LOOKUP_SEP", "django.http", "HttpResponse", "HttpResponseNotFound", "django.utils.cache", "patch_cache_control", "tastypie.authentication", "Authentication", "tastypie.authorization", "ReadOnlyAuthorization", "tastypie.bundle", "Bundle", "tastypie.cache", "NoCache", "tastypie.constants", "ALL", "ALL_WITH_RELATIONS", "tastypie.exceptions", "NotFound", "BadRequest", "InvalidFilterError", "HydrationError", "InvalidSortError", "ImmediateHttpResponse", "tastypie", "fields", "tastypie", "http", "tastypie.paginator", "Paginator", "tastypie.serializers", "Serializer", "tastypie.throttle", "BaseThrottle", "tastypie.utils", "is_valid_jsonp_callback_value", "dict_strip_unicode_keys", "trailing_slash", "tastypie.utils.mime", "determine_format", "build_content_type", "tastypie.validation", "Validation", "set", "NameError", "sets", "Set", "set", "django.utils.copycompat", "deepcopy", "ImportError", "copy", "deepcopy", "django.views.decorators.csrf", "csrf_exempt", "ImportError", "csrf_exempt", "func", "func", "ResourceOptions", "object", "\n    A configuration class for ``Resource``.\n\n    Provides sane defaults and the logic needed to augment these settings with\n    the internal ``class Meta`` used on ``Resource`` subclasses.\n    ", "serializer", "Serializer", "authentication", "Authentication", "authorization", "ReadOnlyAuthorization", "cache", "NoCache", "throttle", "BaseThrottle", "validation", "Validation", "paginator_class", "Paginator", "allowed_methods", "get", "post", "put", "delete", "patch", "list_allowed_methods", "None", "detail_allowed_methods", "None", "limit", "getattr", "settings", "API_LIMIT_PER_PAGE", "api_name", "None", "resource_name", "None", "urlconf_namespace", "None", "default_format", "application/json", "filtering", "ordering", "object_class", "None", "queryset", "None", "fields", "excludes", "include_resource_uri", "True", "include_absolute_url", "False", "always_return_data", "False", "__new__", "cls", "meta", "None", "overrides", "meta", "override_name", "dir", "meta", "startswith", "override_name", "_", "overrides", "override_name", "getattr", "meta", "override_name", "allowed_methods", "get", "overrides", "allowed_methods", "get", "post", "put", "delete", "patch", "get", "overrides", "list_allowed_methods", "None", "None", "overrides", "list_allowed_methods", "allowed_methods", "get", "overrides", "detail_allowed_methods", "None", "None", "overrides", "detail_allowed_methods", "allowed_methods", "__new__", "object", "type", "ResourceOptions", "cls", "overrides", "DeclarativeMetaclass", "type", "__new__", "cls", "name", "bases", "attrs", "attrs", "base_fields", "declared_fields", "parents", "b", "b", "bases", "issubclass", "b", "Resource", "reverse", "parents", "p", "parents", "parent_fields", "getattr", "p", "base_fields", "field_name", "field_object", "items", "parent_fields", "attrs", "base_fields", "field_name", "deepcopy", "field_object", "NameError", "field_name", "obj", "items", "attrs", "hasattr", "obj", "dehydrated_type", "field", "pop", "attrs", "field_name", "declared_fields", "field_name", "field", "update", "attrs", "base_fields", "declared_fields", "attrs", "declared_fields", "declared_fields", "new_class", "__new__", "super", "DeclarativeMetaclass", "cls", "cls", "name", "bases", "attrs", "opts", "getattr", "new_class", "Meta", "None", "_meta", "new_class", "ResourceOptions", "opts", "getattr", "_meta", "new_class", "resource_name", "None", "class_name", "__name__", "new_class", "name_bits", "bit", "bit", "split", "class_name", "Resource", "bit", "resource_name", "lower", "join", "", "name_bits", "resource_name", "_meta", "new_class", "resource_name", "getattr", "_meta", "new_class", "include_resource_uri", "True", "resource_uri", "base_fields", "new_class", "base_fields", "new_class", "resource_uri", "CharField", "fields", "readonly", "True", "resource_uri", "base_fields", "new_class", "resource_uri", "attrs", "base_fields", "new_class", "resource_uri", "field_name", "field_object", "items", "base_fields", "new_class", "hasattr", "field_object", "contribute_to_class", "contribute_to_class", "field_object", "new_class", "field_name", "new_class", "Resource", "object", "\n    Handles the data, request dispatch and responding to requests.\n\n    Serialization/deserialization is handled \"at the edges\" (i.e. at the\n    beginning/end of the request/response cycle) so that everything internally\n    is Python data structures.\n\n    This class tries to be non-model specific, so it can be hooked up to other\n    data sources, such as search results, files, other data, etc.\n    ", "__metaclass__", "DeclarativeMetaclass", "__init__", "self", "api_name", "None", "fields", "self", "deepcopy", "base_fields", "self", "api_name", "None", "api_name", "_meta", "self", "api_name", "__getattr__", "self", "name", "name", "fields", "self", "fields", "self", "name", "AttributeError", "name", "wrap_view", "self", "view", "\n        Wraps methods so they can be called in a more functional way as well\n        as handling exceptions better.\n\n        Note that if ``BadRequest`` or an exception with a ``response`` attr\n        are seen, there is special handling to either present a message back\n        to the user or return the response traveling with the exception.\n        ", "wrapper", "args", "kwargs", "request", "callback", "getattr", "self", "view", "response", "callback", "request", "args", "kwargs", "is_ajax", "request", "patch_cache_control", "response", "no_cache", "True", "response", "BadRequest", "ApiFieldError", "fields", "e", "HttpBadRequest", "http", "args", "e", "ValidationError", "e", "HttpBadRequest", "http", "join", ", ", "messages", "e", "Exception", "e", "hasattr", "e", "response", "response", "e", "DEBUG", "settings", "getattr", "settings", "TASTYPIE_FULL_DEBUG", "False", "_handle_500", "self", "request", "e", "csrf_exempt", "wrapper", "_handle_500", "self", "request", "exception", "traceback", "sys", "the_trace", "join", "\n", "format_exception", "traceback", "exc_info", "sys", "response_class", "HttpApplicationError", "http", "isinstance", "exception", "NotFound", "ObjectDoesNotExist", "response_class", "HttpResponseNotFound", "DEBUG", "settings", "data", "error_message", "traceback", "unicode", "exception", "the_trace", "desired_format", "determine_format", "self", "request", "serialized", "serialize", "self", "request", "data", "desired_format", "response_class", "content", "serialized", "content_type", "build_content_type", "desired_format", "isinstance", "exception", "NotFound", "ObjectDoesNotExist", "log", "getLogger", "logging", "django.request.tastypie", "error", "log", "Internal Server Error: %s", "path", "request", "exc_info", "exc_info", "sys", "extra", "status_code", "request", "request", "VERSION", "django", "getattr", "settings", "SEND_BROKEN_LINK_EMAILS", "False", "django.core.mail", "mail_admins", "subject", "Error (%s IP): %s", "get", "META", "request", "REMOTE_ADDR", "INTERNAL_IPS", "settings", "internal", "EXTERNAL", "path", "request", "request_repr", "repr", "request", "request_repr", "Request repr() unavailable", "message", "%s\n\n%s", "the_trace", "request_repr", "mail_admins", "subject", "message", "fail_silently", "True", "data", "error_message", "getattr", "settings", "TASTYPIE_CANNED_ERROR", "Sorry, this request could not be processed. Please try again later.", "desired_format", "determine_format", "self", "request", "serialized", "serialize", "self", "request", "data", "desired_format", "response_class", "content", "serialized", "content_type", "build_content_type", "desired_format", "_build_reverse_url", "self", "name", "args", "kwargs", "None", "None", "\n        A convenience hook for overriding how URLs are built.\n\n        See ``NamespacedModelResource._build_reverse_url`` for an example.\n        ", "reverse", "name", "args", "args", "kwargs", "kwargs", "base_urls", "self", "\n        The standard URLs this ``Resource`` should respond to.\n        ", "url", "^(?P<resource_name>%s)%s$", "resource_name", "_meta", "self", "trailing_slash", "wrap_view", "self", "dispatch_list", "name", "api_dispatch_list", "url", "^(?P<resource_name>%s)/schema%s$", "resource_name", "_meta", "self", "trailing_slash", "wrap_view", "self", "get_schema", "name", "api_get_schema", "url", "^(?P<resource_name>%s)/set/(?P<pk_list>\\w[\\w/;-]*)/$", "resource_name", "_meta", "self", "wrap_view", "self", "get_multiple", "name", "api_get_multiple", "url", "^(?P<resource_name>%s)/(?P<pk>\\w[\\w/-]*)%s$", "resource_name", "_meta", "self", "trailing_slash", "wrap_view", "self", "dispatch_detail", "name", "api_dispatch_detail", "override_urls", "self", "\n        A hook for adding your own URLs or overriding the default URLs.\n        ", "urls", "self", "\n        The endpoints this ``Resource`` responds to.\n\n        Mostly a standard URLconf, this is suitable for either automatic use\n        when registered with an ``Api`` class or for including directly in\n        a URLconf should you choose to.\n        ", "urls", "override_urls", "self", "base_urls", "self", "urlpatterns", "patterns", "", "urls", "urlpatterns", "property", "determine_format", "self", "request", "\n        Used to determine the desired format.\n\n        Largely relies on ``tastypie.utils.mime.determine_format`` but here\n        as a point of extension.\n        ", "determine_format", "request", "serializer", "_meta", "self", "default_format", "default_format", "_meta", "self", "serialize", "self", "request", "data", "format", "options", "None", "\n        Given a request, data and a desired format, produces a serialized\n        version suitable for transfer over the wire.\n\n        Mostly a hook, this uses the ``Serializer`` from ``Resource._meta``.\n        ", "options", "options", "text/javascript", "format", "callback", "get", "GET", "request", "callback", "callback", "is_valid_jsonp_callback_value", "callback", "BadRequest", "JSONP callback name is invalid.", "options", "callback", "callback", "serialize", "serializer", "_meta", "self", "data", "format", "options", "deserialize", "self", "request", "data", "format", "application/json", "\n        Given a request, data and a format, deserializes the given data.\n\n        It relies on the request properly sending a ``CONTENT_TYPE`` header,\n        falling back to ``application/json`` if not provided.\n\n        Mostly a hook, this uses the ``Serializer`` from ``Resource._meta``.\n        ", "deserialized", "deserialize", "serializer", "_meta", "self", "data", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "deserialized", "alter_list_data_to_serialize", "self", "request", "data", "\n        A hook to alter list data just before it gets serialized & sent to the user.\n\n        Useful for restructuring/renaming aspects of the what's going to be\n        sent.\n\n        Should accommodate for a list of objects, generally also including\n        meta data.\n        ", "data", "alter_detail_data_to_serialize", "self", "request", "data", "\n        A hook to alter detail data just before it gets serialized & sent to the user.\n\n        Useful for restructuring/renaming aspects of the what's going to be\n        sent.\n\n        Should accommodate for receiving a single bundle of data.\n        ", "data", "alter_deserialized_list_data", "self", "request", "data", "\n        A hook to alter list data just after it has been received from the user &\n        gets deserialized.\n\n        Useful for altering the user data before any hydration is applied.\n        ", "data", "alter_deserialized_detail_data", "self", "request", "data", "\n        A hook to alter detail data just after it has been received from the user &\n        gets deserialized.\n\n        Useful for altering the user data before any hydration is applied.\n        ", "data", "dispatch_list", "kwargs", "self", "request", "\n        A view for handling the various HTTP methods (GET/POST/PUT/DELETE) over\n        the entire list of resources.\n\n        Relies on ``Resource.dispatch`` for the heavy-lifting.\n        ", "dispatch", "self", "list", "request", "kwargs", "dispatch_detail", "kwargs", "self", "request", "\n        A view for handling the various HTTP methods (GET/POST/PUT/DELETE) on\n        a single resource.\n\n        Relies on ``Resource.dispatch`` for the heavy-lifting.\n        ", "dispatch", "self", "detail", "request", "kwargs", "dispatch", "kwargs", "self", "request_type", "request", "\n        Handles the common operations (allowed HTTP method, authentication,\n        throttling, method lookup) surrounding most CRUD interactions.\n        ", "allowed_methods", "getattr", "_meta", "self", "%s_allowed_methods", "request_type", "None", "request_method", "method_check", "self", "request", "allowed", "allowed_methods", "method", "getattr", "self", "%s_%s", "request_method", "request_type", "None", "method", "None", "ImmediateHttpResponse", "response", "HttpNotImplemented", "http", "is_authenticated", "self", "request", "is_authorized", "self", "request", "throttle_check", "self", "request", "request", "convert_post_to_put", "request", "response", "method", "request", "kwargs", "log_throttled_access", "self", "request", "isinstance", "response", "HttpResponse", "HttpNoContent", "http", "response", "remove_api_resource_names", "self", "url_dict", "\n        Given a dictionary of regex matches from a URLconf, removes\n        ``api_name`` and/or ``resource_name`` if found.\n\n        This is useful for converting URLconf matches into something suitable\n        for data lookup. For example::\n\n            Model.objects.filter(**self.remove_api_resource_names(matches))\n        ", "kwargs_subset", "copy", "url_dict", "key", "api_name", "resource_name", "kwargs_subset", "key", "KeyError", "kwargs_subset", "method_check", "self", "request", "allowed", "None", "\n        Ensures that the HTTP method used on the request is allowed to be\n        handled by the resource.\n\n        Takes an ``allowed`` parameter, which should be a list of lowercase\n        HTTP methods to check against. Usually, this looks like::\n\n            # The most generic lookup.\n            self.method_check(request, self._meta.allowed_methods)\n\n            # A lookup against what's allowed for list-type methods.\n            self.method_check(request, self._meta.list_allowed_methods)\n\n            # A useful check when creating a new endpoint that only handles\n            # GET.\n            self.method_check(request, ['get'])\n        ", "allowed", "None", "allowed", "request_method", "lower", "method", "request", "request_method", "options", "allows", "join", ",", "map", "upper", "str", "allowed", "response", "HttpResponse", "allows", "response", "Allow", "allows", "ImmediateHttpResponse", "response", "response", "request_method", "allowed", "ImmediateHttpResponse", "response", "HttpMethodNotAllowed", "http", "request_method", "is_authorized", "self", "request", "object", "None", "\n        Handles checking of permissions to see if the user has authorization\n        to GET, POST, PUT, or DELETE this resource.  If ``object`` is provided,\n        the authorization backend can apply additional row-level permissions\n        checking.\n        ", "auth_result", "is_authorized", "authorization", "_meta", "self", "request", "object", "isinstance", "auth_result", "HttpResponse", "ImmediateHttpResponse", "response", "auth_result", "auth_result", "True", "ImmediateHttpResponse", "response", "HttpUnauthorized", "http", "is_authenticated", "self", "request", "\n        Handles checking if the user is authenticated and dealing with\n        unauthenticated users.\n\n        Mostly a hook, this uses class assigned to ``authentication`` from\n        ``Resource._meta``.\n        ", "auth_result", "is_authenticated", "authentication", "_meta", "self", "request", "isinstance", "auth_result", "HttpResponse", "ImmediateHttpResponse", "response", "auth_result", "auth_result", "True", "ImmediateHttpResponse", "response", "HttpUnauthorized", "http", "throttle_check", "self", "request", "\n        Handles checking if the user should be throttled.\n\n        Mostly a hook, this uses class assigned to ``throttle`` from\n        ``Resource._meta``.\n        ", "identifier", "get_identifier", "authentication", "_meta", "self", "request", "should_be_throttled", "throttle", "_meta", "self", "identifier", "ImmediateHttpResponse", "response", "HttpForbidden", "http", "log_throttled_access", "self", "request", "\n        Handles the recording of the user's access for throttling purposes.\n\n        Mostly a hook, this uses class assigned to ``throttle`` from\n        ``Resource._meta``.\n        ", "request_method", "lower", "method", "request", "accessed", "throttle", "_meta", "self", "get_identifier", "authentication", "_meta", "self", "request", "url", "get_full_path", "request", "request_method", "request_method", "build_bundle", "self", "obj", "data", "request", "None", "None", "None", "\n        Given either an object, a data dictionary or both, builds a ``Bundle``\n        for use throughout the ``dehydrate/hydrate`` cycle.\n\n        If no object is provided, an empty object from\n        ``Resource._meta.object_class`` is created so that attempts to access\n        ``bundle.obj`` do not fail.\n        ", "obj", "None", "obj", "object_class", "_meta", "self", "Bundle", "obj", "obj", "data", "data", "request", "request", "build_filters", "self", "filters", "None", "\n        Allows for the filtering of applicable objects.\n\n        This needs to be implemented at the user level.'\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "filters", "apply_sorting", "self", "obj_list", "options", "None", "\n        Allows for the sorting of objects being returned.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "obj_list", "get_resource_uri", "self", "bundle_or_obj", "\n        This needs to be implemented at the user level.\n\n        A ``return reverse(\"api_dispatch_detail\", kwargs={'resource_name':\n        self.resource_name, 'pk': object.id})`` should be all that would\n        be needed.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "get_resource_list_uri", "self", "\n        Returns a URL specific to this resource's list endpoint.\n        ", "kwargs", "resource_name", "resource_name", "_meta", "self", "api_name", "_meta", "self", "None", "kwargs", "api_name", "api_name", "_meta", "self", "_build_reverse_url", "self", "api_dispatch_list", "kwargs", "kwargs", "NoReverseMatch", "None", "get_via_uri", "self", "uri", "request", "None", "\n        This pulls apart the salient bits of the URI and populates the\n        resource via a ``obj_get``.\n\n        Optionally accepts a ``request``.\n\n        If you need custom behavior based on other portions of the URI,\n        simply override this method.\n        ", "prefix", "get_script_prefix", "chomped_uri", "uri", "prefix", "startswith", "chomped_uri", "prefix", "chomped_uri", "chomped_uri", "len", "prefix", "view", "args", "kwargs", "resolve", "chomped_uri", "Resolver404", "NotFound", "The URL provided '%s' was not a link to a valid resource.", "uri", "obj_get", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "full_dehydrate", "self", "bundle", "\n        Given a bundle with an object instance, extract the information from it\n        to populate the resource.\n        ", "field_name", "field_object", "items", "fields", "self", "getattr", "field_object", "dehydrated_type", "None", "related", "api_name", "field_object", "api_name", "_meta", "self", "resource_name", "field_object", "resource_name", "_meta", "self", "data", "bundle", "field_name", "dehydrate", "field_object", "bundle", "method", "getattr", "self", "dehydrate_%s", "field_name", "None", "method", "data", "bundle", "field_name", "method", "bundle", "bundle", "dehydrate", "self", "bundle", "bundle", "dehydrate", "self", "bundle", "\n        A hook to allow a final manipulation of data once all fields/methods\n        have built out the dehydrated data.\n\n        Useful if you need to access more than one dehydrated field or want\n        to annotate on additional data.\n\n        Must return the modified bundle.\n        ", "bundle", "full_hydrate", "self", "bundle", "\n        Given a populated bundle, distill it and turn it back into\n        a full-fledged object instance.\n        ", "obj", "bundle", "None", "obj", "bundle", "object_class", "_meta", "self", "bundle", "hydrate", "self", "bundle", "field_name", "field_object", "items", "fields", "self", "readonly", "field_object", "True", "method", "getattr", "self", "hydrate_%s", "field_name", "None", "method", "bundle", "method", "bundle", "attribute", "field_object", "value", "hydrate", "field_object", "bundle", "value", "None", "null", "field_object", "getattr", "field_object", "is_related", "False", "setattr", "obj", "bundle", "attribute", "field_object", "value", "getattr", "field_object", "is_m2m", "False", "value", "None", "setattr", "obj", "bundle", "attribute", "field_object", "obj", "value", "blank", "field_object", "null", "field_object", "setattr", "obj", "bundle", "attribute", "field_object", "value", "bundle", "hydrate", "self", "bundle", "\n        A hook to allow a final manipulation of data once all fields/methods\n        have built out the hydrated data.\n\n        Useful if you need to access more than one hydrated field or want\n        to annotate on additional data.\n\n        Must return the modified bundle.\n        ", "bundle", "hydrate_m2m", "self", "bundle", "\n        Populate the ManyToMany data on the instance.\n        ", "obj", "bundle", "None", "HydrationError", "You must call 'full_hydrate' before attempting to run 'hydrate_m2m' on %r.", "self", "field_name", "field_object", "items", "fields", "self", "getattr", "field_object", "is_m2m", "False", "attribute", "field_object", "data", "bundle", "field_name", "hydrate_m2m", "field_object", "bundle", "field_name", "field_object", "items", "fields", "self", "getattr", "field_object", "is_m2m", "False", "method", "getattr", "self", "hydrate_%s", "field_name", "None", "method", "method", "bundle", "bundle", "build_schema", "self", "\n        Returns a dictionary of all the fields on the resource and some\n        properties about those fields.\n\n        Used by the ``schema/`` endpoint to describe what will be available.\n        ", "data", "fields", "default_format", "allowed_list_http_methods", "allowed_detail_http_methods", "default_limit", "default_format", "_meta", "self", "list_allowed_methods", "_meta", "self", "detail_allowed_methods", "_meta", "self", "limit", "_meta", "self", "ordering", "_meta", "self", "data", "ordering", "ordering", "_meta", "self", "filtering", "_meta", "self", "data", "filtering", "filtering", "_meta", "self", "field_name", "field_object", "items", "fields", "self", "data", "fields", "field_name", "default", "type", "nullable", "blank", "readonly", "help_text", "unique", "default", "field_object", "dehydrated_type", "field_object", "null", "field_object", "blank", "field_object", "readonly", "field_object", "help_text", "field_object", "unique", "field_object", "data", "dehydrate_resource_uri", "self", "bundle", "\n        For the automatically included ``resource_uri`` field, dehydrate\n        the URI for the given bundle.\n\n        Returns empty string if no URI can be generated.\n        ", "get_resource_uri", "self", "bundle", "NotImplementedError", "", "NoReverseMatch", "", "generate_cache_key", "args", "kwargs", "self", "\n        Creates a unique-enough cache key.\n\n        This is based off the current api_name/resource_name/args/kwargs.\n        ", "smooshed", "key", "value", "items", "kwargs", "append", "smooshed", "%s=%s", "key", "value", "%s:%s:%s:%s", "api_name", "_meta", "self", "resource_name", "_meta", "self", "join", ":", "args", "join", ":", "smooshed", "get_object_list", "self", "request", "\n        A hook to allow making returning the list of available objects.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "apply_authorization_limits", "self", "request", "object_list", "\n        Allows the ``Authorization`` class to further limit the object list.\n        Also a hook to customize per ``Resource``.\n        ", "hasattr", "authorization", "_meta", "self", "apply_limits", "object_list", "apply_limits", "authorization", "_meta", "self", "request", "object_list", "object_list", "can_create", "self", "\n        Checks to ensure ``post`` is within ``allowed_methods``.\n        ", "allowed", "set", "list_allowed_methods", "_meta", "self", "detail_allowed_methods", "_meta", "self", "post", "allowed", "can_update", "self", "\n        Checks to ensure ``put`` is within ``allowed_methods``.\n\n        Used when hydrating related data.\n        ", "allowed", "set", "list_allowed_methods", "_meta", "self", "detail_allowed_methods", "_meta", "self", "put", "allowed", "can_delete", "self", "\n        Checks to ensure ``delete`` is within ``allowed_methods``.\n        ", "allowed", "set", "list_allowed_methods", "_meta", "self", "detail_allowed_methods", "_meta", "self", "delete", "allowed", "apply_filters", "self", "request", "applicable_filters", "\n        A hook to alter how the filters are applied to the object list.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "obj_get_list", "kwargs", "self", "request", "None", "\n        Fetches the list of objects available on the resource.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "cached_obj_get_list", "kwargs", "self", "request", "None", "\n        A version of ``obj_get_list`` that uses the cache as a means to get\n        commonly-accessed data faster.\n        ", "cache_key", "generate_cache_key", "self", "list", "kwargs", "obj_list", "get", "cache", "_meta", "self", "cache_key", "obj_list", "None", "obj_list", "obj_get_list", "self", "request", "request", "kwargs", "set", "cache", "_meta", "self", "cache_key", "obj_list", "obj_list", "obj_get", "kwargs", "self", "request", "None", "\n        Fetches an individual object on the resource.\n\n        This needs to be implemented at the user level. If the object can not\n        be found, this should raise a ``NotFound`` exception.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "cached_obj_get", "kwargs", "self", "request", "None", "\n        A version of ``obj_get`` that uses the cache as a means to get\n        commonly-accessed data faster.\n        ", "cache_key", "generate_cache_key", "self", "detail", "kwargs", "bundle", "get", "cache", "_meta", "self", "cache_key", "bundle", "None", "bundle", "obj_get", "self", "request", "request", "kwargs", "set", "cache", "_meta", "self", "cache_key", "bundle", "bundle", "obj_create", "kwargs", "self", "bundle", "request", "None", "\n        Creates a new object based on the provided data.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "obj_update", "kwargs", "self", "bundle", "request", "None", "\n        Updates an existing object (or creates a new object) based on the\n        provided data.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "obj_delete_list", "kwargs", "self", "request", "None", "\n        Deletes an entire list of objects.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "obj_delete", "kwargs", "self", "request", "None", "\n        Deletes a single object.\n\n        This needs to be implemented at the user level.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "create_response", "response_kwargs", "self", "request", "data", "response_class", "HttpResponse", "\n        Extracts the common \"which-format/serialize/return-response\" cycle.\n\n        Mostly a useful shortcut/hook.\n        ", "desired_format", "determine_format", "self", "request", "serialized", "serialize", "self", "request", "data", "desired_format", "response_class", "content", "serialized", "content_type", "build_content_type", "desired_format", "response_kwargs", "is_valid", "self", "bundle", "request", "None", "\n        Handles checking if the data provided by the user is valid.\n\n        Mostly a hook, this uses class assigned to ``validation`` from\n        ``Resource._meta``.\n\n        If validation fails, an error is raised with the error messages\n        serialized inside it.\n        ", "errors", "is_valid", "validation", "_meta", "self", "bundle", "request", "len", "errors", "request", "desired_format", "determine_format", "self", "request", "desired_format", "default_format", "_meta", "self", "serialized", "serialize", "self", "request", "errors", "desired_format", "response", "HttpBadRequest", "http", "content", "serialized", "content_type", "build_content_type", "desired_format", "ImmediateHttpResponse", "response", "response", "rollback", "self", "bundles", "\n        Given the list of bundles, delete all objects pertaining to those\n        bundles.\n\n        This needs to be implemented at the user level. No exceptions should\n        be raised if possible.\n\n        ``ModelResource`` includes a full working version specific to Django's\n        ``Models``.\n        ", "NotImplementedError", "get_list", "kwargs", "self", "request", "\n        Returns a serialized list of resources.\n\n        Calls ``obj_get_list`` to provide the data, then handles that result\n        set and serializes it.\n\n        Should return a HttpResponse (200 OK).\n        ", "objects", "obj_get_list", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "sorted_objects", "apply_sorting", "self", "objects", "options", "GET", "request", "paginator", "paginator_class", "_meta", "self", "GET", "request", "sorted_objects", "resource_uri", "get_resource_list_uri", "self", "limit", "limit", "_meta", "self", "to_be_serialized", "page", "paginator", "bundles", "build_bundle", "self", "obj", "obj", "request", "request", "obj", "to_be_serialized", "objects", "to_be_serialized", "objects", "full_dehydrate", "self", "bundle", "bundle", "bundles", "to_be_serialized", "alter_list_data_to_serialize", "self", "request", "to_be_serialized", "create_response", "self", "request", "to_be_serialized", "get_detail", "kwargs", "self", "request", "\n        Returns a single serialized resource.\n\n        Calls ``cached_obj_get/obj_get`` to provide the data, then handles that result\n        set and serializes it.\n\n        Should return a HttpResponse (200 OK).\n        ", "obj", "cached_obj_get", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "ObjectDoesNotExist", "HttpNotFound", "http", "MultipleObjectsReturned", "HttpMultipleChoices", "http", "More than one resource is found at this URI.", "bundle", "build_bundle", "self", "obj", "obj", "request", "request", "bundle", "full_dehydrate", "self", "bundle", "bundle", "alter_detail_data_to_serialize", "self", "request", "bundle", "create_response", "self", "request", "bundle", "put_list", "kwargs", "self", "request", "\n        Replaces a collection of resources with another collection.\n\n        Calls ``delete_list`` to clear out the collection then ``obj_create``\n        with the provided the data to create the new collection.\n\n        Return ``HttpNoContent`` (204 No Content) if\n        ``Meta.always_return_data = False`` (default).\n\n        Return ``HttpAccepted`` (202 Accepted) if\n        ``Meta.always_return_data = True``.\n        ", "deserialized", "deserialize", "self", "request", "raw_post_data", "request", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "deserialized", "alter_deserialized_list_data", "self", "request", "deserialized", "objects", "deserialized", "BadRequest", "Invalid data sent.", "obj_delete_list", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "bundles_seen", "object_data", "deserialized", "objects", "bundle", "build_bundle", "self", "data", "dict_strip_unicode_keys", "object_data", "request", "request", "is_valid", "self", "bundle", "request", "ImmediateHttpResponse", "rollback", "self", "bundles_seen", "obj_create", "self", "bundle", "request", "request", "remove_api_resource_names", "self", "kwargs", "append", "bundles_seen", "bundle", "always_return_data", "_meta", "self", "HttpNoContent", "http", "to_be_serialized", "to_be_serialized", "objects", "full_dehydrate", "self", "bundle", "bundle", "bundles_seen", "to_be_serialized", "alter_list_data_to_serialize", "self", "request", "to_be_serialized", "create_response", "self", "request", "to_be_serialized", "response_class", "HttpAccepted", "http", "put_detail", "kwargs", "self", "request", "\n        Either updates an existing resource or creates a new one with the\n        provided data.\n\n        Calls ``obj_update`` with the provided data first, but falls back to\n        ``obj_create`` if the object does not already exist.\n\n        If a new resource is created, return ``HttpCreated`` (201 Created).\n        If ``Meta.always_return_data = True``, there will be a populated body\n        of serialized data.\n\n        If an existing resource is modified and\n        ``Meta.always_return_data = False`` (default), return ``HttpNoContent``\n        (204 No Content).\n        If an existing resource is modified and\n        ``Meta.always_return_data = True``, return ``HttpAccepted`` (202\n        Accepted).\n        ", "deserialized", "deserialize", "self", "request", "raw_post_data", "request", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "deserialized", "alter_deserialized_detail_data", "self", "request", "deserialized", "bundle", "build_bundle", "self", "data", "dict_strip_unicode_keys", "deserialized", "request", "request", "is_valid", "self", "bundle", "request", "updated_bundle", "obj_update", "self", "bundle", "request", "request", "remove_api_resource_names", "self", "kwargs", "always_return_data", "_meta", "self", "HttpNoContent", "http", "updated_bundle", "full_dehydrate", "self", "updated_bundle", "updated_bundle", "alter_detail_data_to_serialize", "self", "request", "updated_bundle", "create_response", "self", "request", "updated_bundle", "response_class", "HttpAccepted", "http", "NotFound", "MultipleObjectsReturned", "updated_bundle", "obj_create", "self", "bundle", "request", "request", "remove_api_resource_names", "self", "kwargs", "location", "get_resource_uri", "self", "updated_bundle", "always_return_data", "_meta", "self", "HttpCreated", "http", "location", "location", "updated_bundle", "full_dehydrate", "self", "updated_bundle", "updated_bundle", "alter_detail_data_to_serialize", "self", "request", "updated_bundle", "create_response", "self", "request", "updated_bundle", "response_class", "HttpCreated", "http", "location", "location", "post_list", "kwargs", "self", "request", "\n        Creates a new resource/object with the provided data.\n\n        Calls ``obj_create`` with the provided data and returns a response\n        with the new resource's location.\n\n        If a new resource is created, return ``HttpCreated`` (201 Created).\n        If ``Meta.always_return_data = True``, there will be a populated body\n        of serialized data.\n        ", "deserialized", "deserialize", "self", "request", "raw_post_data", "request", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "deserialized", "alter_deserialized_detail_data", "self", "request", "deserialized", "bundle", "build_bundle", "self", "data", "dict_strip_unicode_keys", "deserialized", "request", "request", "is_valid", "self", "bundle", "request", "updated_bundle", "obj_create", "self", "bundle", "request", "request", "remove_api_resource_names", "self", "kwargs", "location", "get_resource_uri", "self", "updated_bundle", "always_return_data", "_meta", "self", "HttpCreated", "http", "location", "location", "updated_bundle", "full_dehydrate", "self", "updated_bundle", "updated_bundle", "alter_detail_data_to_serialize", "self", "request", "updated_bundle", "create_response", "self", "request", "updated_bundle", "response_class", "HttpCreated", "http", "location", "location", "post_detail", "kwargs", "self", "request", "\n        Creates a new subcollection of the resource under a resource.\n\n        This is not implemented by default because most people's data models\n        aren't self-referential.\n\n        If a new resource is created, return ``HttpCreated`` (201 Created).\n        ", "HttpNotImplemented", "http", "delete_list", "kwargs", "self", "request", "\n        Destroys a collection of resources/objects.\n\n        Calls ``obj_delete_list``.\n\n        If the resources are deleted, return ``HttpNoContent`` (204 No Content).\n        ", "obj_delete_list", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "HttpNoContent", "http", "delete_detail", "kwargs", "self", "request", "\n        Destroys a single resource/object.\n\n        Calls ``obj_delete``.\n\n        If the resource is deleted, return ``HttpNoContent`` (204 No Content).\n        If the resource did not exist, return ``Http404`` (404 Not Found).\n        ", "obj_delete", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "HttpNoContent", "http", "NotFound", "HttpNotFound", "http", "patch_list", "kwargs", "self", "request", "\n        Updates a collection in-place.\n\n        The exact behavior of ``PATCH`` to a list resource is still the matter of\n        some debate in REST circles, and the ``PATCH`` RFC isn't standard. So the\n        behavior this method implements (described below) is something of a\n        stab in the dark. It's mostly cribbed from GData, with a smattering\n        of ActiveResource-isms and maybe even an original idea or two.\n\n        The ``PATCH`` format is one that's similar to the response returned from\n        a ``GET`` on a list resource::\n\n            {\n              \"objects\": [{object}, {object}, ...],\n              \"deleted_objects\": [\"URI\", \"URI\", \"URI\", ...],\n            }\n\n        For each object in ``objects``:\n\n            * If the dict does not have a ``resource_uri`` key then the item is\n              considered \"new\" and is handled like a ``POST`` to the resource list.\n\n            * If the dict has a ``resource_uri`` key and the ``resource_uri`` refers\n              to an existing resource then the item is a update; it's treated\n              like a ``PATCH`` to the corresponding resource detail.\n\n            * If the dict has a ``resource_uri`` but the resource *doesn't* exist,\n              then this is considered to be a create-via-``PUT``.\n\n        Each entry in ``deleted_objects`` referes to a resource URI of an existing\n        resource to be deleted; each is handled like a ``DELETE`` to the relevent\n        resource.\n\n        In any case:\n\n            * If there's a resource URI it *must* refer to a resource of this\n              type. It's an error to include a URI of a different resource.\n\n            * ``PATCH`` is all or nothing. If a single sub-operation fails, the\n              entire request will fail and all resources will be rolled back.\n        ", "request", "convert_post_to_patch", "request", "deserialized", "deserialize", "self", "request", "raw_post_data", "request", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "objects", "deserialized", "BadRequest", "Invalid data sent.", "len", "deserialized", "objects", "put", "detail_allowed_methods", "_meta", "self", "ImmediateHttpResponse", "response", "HttpMethodNotAllowed", "http", "data", "deserialized", "objects", "resource_uri", "data", "uri", "pop", "data", "resource_uri", "obj", "get_via_uri", "self", "uri", "request", "request", "bundle", "build_bundle", "self", "obj", "obj", "request", "request", "bundle", "full_dehydrate", "self", "bundle", "bundle", "alter_detail_data_to_serialize", "self", "request", "bundle", "update_in_place", "self", "request", "bundle", "data", "ObjectDoesNotExist", "MultipleObjectsReturned", "data", "alter_deserialized_detail_data", "self", "request", "data", "bundle", "build_bundle", "self", "data", "dict_strip_unicode_keys", "data", "pk", "obj", "bundle", "pk", "obj", "is_valid", "self", "bundle", "request", "obj_create", "self", "bundle", "request", "request", "data", "alter_deserialized_detail_data", "self", "request", "data", "bundle", "build_bundle", "self", "data", "dict_strip_unicode_keys", "data", "is_valid", "self", "bundle", "request", "obj_create", "self", "bundle", "request", "request", "len", "get", "deserialized", "deleted_objects", "delete", "detail_allowed_methods", "_meta", "self", "ImmediateHttpResponse", "response", "HttpMethodNotAllowed", "http", "uri", "get", "deserialized", "deleted_objects", "obj", "get_via_uri", "self", "uri", "request", "request", "obj_delete", "self", "request", "request", "_obj", "obj", "HttpAccepted", "http", "patch_detail", "kwargs", "self", "request", "\n        Updates a resource in-place.\n\n        Calls ``obj_update``.\n\n        If the resource is updated, return ``HttpAccepted`` (202 Accepted).\n        If the resource did not exist, return ``HttpNotFound`` (404 Not Found).\n        ", "request", "convert_post_to_patch", "request", "obj", "cached_obj_get", "self", "request", "request", "remove_api_resource_names", "self", "kwargs", "ObjectDoesNotExist", "HttpNotFound", "http", "MultipleObjectsReturned", "HttpMultipleChoices", "http", "More than one resource is found at this URI.", "bundle", "build_bundle", "self", "obj", "obj", "request", "request", "bundle", "full_dehydrate", "self", "bundle", "bundle", "alter_detail_data_to_serialize", "self", "request", "bundle", "deserialized", "deserialize", "self", "request", "raw_post_data", "request", "format", "get", "META", "request", "CONTENT_TYPE", "application/json", "update_in_place", "self", "request", "bundle", "deserialized", "HttpAccepted", "http", "update_in_place", "self", "request", "original_bundle", "new_data", "\n        Update the object in original_bundle in-place using new_data.\n        ", "update", "data", "original_bundle", "dict_strip_unicode_keys", "new_data", "alter_deserialized_detail_data", "self", "request", "data", "original_bundle", "is_valid", "self", "original_bundle", "request", "obj_update", "self", "original_bundle", "request", "request", "pk", "pk", "obj", "original_bundle", "get_schema", "kwargs", "self", "request", "\n        Returns a serialized form of the schema of the resource.\n\n        Calls ``build_schema`` to generate the data. This method only responds\n        to HTTP GET.\n\n        Should return a HttpResponse (200 OK).\n        ", "method_check", "self", "request", "allowed", "get", "is_authenticated", "self", "request", "throttle_check", "self", "request", "log_throttled_access", "self", "request", "create_response", "self", "request", "build_schema", "self", "get_multiple", "kwargs", "self", "request", "\n        Returns a serialized list of resources based on the identifiers\n        from the URL.\n\n        Calls ``obj_get`` to fetch only the objects requested. This method\n        only responds to HTTP GET.\n\n        Should return a HttpResponse (200 OK).\n        ", "method_check", "self", "request", "allowed", "get", "is_authenticated", "self", "request", "throttle_check", "self", "request", "obj_pks", "split", "get", "kwargs", "pk_list", "", ";", "objects", "not_found", "pk", "obj_pks", "obj", "obj_get", "self", "request", "pk", "pk", "bundle", "build_bundle", "self", "obj", "obj", "request", "request", "bundle", "full_dehydrate", "self", "bundle", "append", "objects", "bundle", "ObjectDoesNotExist", "append", "not_found", "pk", "object_list", "objects", "objects", "len", "not_found", "object_list", "not_found", "not_found", "log_throttled_access", "self", "request", "create_response", "self", "request", "object_list", "ModelDeclarativeMetaclass", "DeclarativeMetaclass", "__new__", "cls", "name", "bases", "attrs", "meta", "get", "attrs", "Meta", "meta", "hasattr", "meta", "queryset", "setattr", "meta", "object_class", "model", "queryset", "meta", "new_class", "__new__", "super", "ModelDeclarativeMetaclass", "cls", "cls", "name", "bases", "attrs", "include_fields", "getattr", "_meta", "new_class", "fields", "excludes", "getattr", "_meta", "new_class", "excludes", "field_names", "keys", "base_fields", "new_class", "field_name", "field_names", "field_name", "resource_uri", "field_name", "declared_fields", "new_class", "len", "include_fields", "field_name", "include_fields", "base_fields", "new_class", "field_name", "len", "excludes", "field_name", "excludes", "base_fields", "new_class", "field_name", "update", "base_fields", "new_class", "get_fields", "new_class", "include_fields", "excludes", "getattr", "_meta", "new_class", "include_absolute_url", "True", "absolute_url", "base_fields", "new_class", "base_fields", "new_class", "absolute_url", "CharField", "fields", "attribute", "get_absolute_url", "readonly", "True", "absolute_url", "base_fields", "new_class", "absolute_url", "attrs", "base_fields", "new_class", "absolute_url", "new_class", "ModelResource", "Resource", "\n    A subclass of ``Resource`` designed to work with Django's ``Models``.\n\n    This class will introspect a given ``Model`` and build a field list based\n    on the fields found on the model (excluding relational fields).\n\n    Given that it is aware of Django's ORM, it also handles the CRUD data\n    operations of the resource.\n    ", "__metaclass__", "ModelDeclarativeMetaclass", "should_skip_field", "cls", "field", "\n        Given a Django model field, return if it should be included in the\n        contributed ApiFields.\n        ", "getattr", "field", "rel", "True", "False", "classmethod", "api_field_from_django_field", "cls", "f", "default", "CharField", "fields", "\n        Returns the field type that would likely be associated with each\n        Django type.\n        ", "result", "default", "get_internal_type", "f", "DateField", "DateTimeField", "result", "DateTimeField", "fields", "get_internal_type", "f", "BooleanField", "NullBooleanField", "result", "BooleanField", "fields", "get_internal_type", "f", "FloatField", "result", "FloatField", "fields", "get_internal_type", "f", "DecimalField", "result", "DecimalField", "fields", "get_internal_type", "f", "IntegerField", "PositiveIntegerField", "PositiveSmallIntegerField", "SmallIntegerField", "result", "IntegerField", "fields", "get_internal_type", "f", "FileField", "ImageField", "result", "FileField", "fields", "get_internal_type", "f", "TimeField", "result", "TimeField", "fields", "result", "classmethod", "get_fields", "cls", "fields", "excludes", "None", "None", "\n        Given any explicit fields to include and fields to exclude, add\n        additional fields based on the associated model.\n        ", "final_fields", "fields", "fields", "excludes", "excludes", "object_class", "_meta", "cls", "final_fields", "f", "fields", "_meta", "object_class", "_meta", "cls", "name", "f", "base_fields", "cls", "fields", "name", "f", "fields", "excludes", "name", "f", "excludes", "should_skip_field", "cls", "f", "api_field_class", "api_field_from_django_field", "cls", "f", "kwargs", "attribute", "help_text", "name", "f", "help_text", "f", "null", "f", "True", "kwargs", "null", "True", "kwargs", "unique", "unique", "f", "null", "f", "blank", "f", "True", "kwargs", "default", "", "get_internal_type", "f", "TextField", "kwargs", "default", "", "has_default", "f", "kwargs", "default", "default", "f", "final_fields", "name", "f", "api_field_class", "kwargs", "instance_name", "final_fields", "name", "f", "name", "f", "final_fields", "classmethod", "check_filtering", "self", "field_name", "filter_type", "filter_bits", "exact", "None", "\n        Given a field name, a optional filter type and an optional list of\n        additional relations, determine if a field can be filtered on.\n\n        If a filter does not meet the needed conditions, it should raise an\n        ``InvalidFilterError``.\n\n        If the filter meets the conditions, a list of attribute names (not\n        field names) will be returned.\n        ", "filter_bits", "None", "filter_bits", "field_name", "filtering", "_meta", "self", "InvalidFilterError", "The '%s' field does not allow filtering.", "field_name", "filtering", "_meta", "self", "field_name", "ALL", "ALL_WITH_RELATIONS", "filter_type", "filtering", "_meta", "self", "field_name", "InvalidFilterError", "'%s' is not an allowed filter on the '%s' field.", "filter_type", "field_name", "attribute", "fields", "self", "field_name", "None", "InvalidFilterError", "The '%s' field has no 'attribute' for searching with.", "field_name", "len", "filter_bits", "getattr", "fields", "self", "field_name", "is_related", "False", "InvalidFilterError", "The '%s' field does not support relations.", "field_name", "filtering", "_meta", "self", "field_name", "ALL_WITH_RELATIONS", "InvalidFilterError", "Lookups are not allowed more than one level deep on the '%s' field.", "field_name", "related_resource", "get_related_resource", "fields", "self", "field_name", "None", "attribute", "fields", "self", "field_name", "check_filtering", "related_resource", "filter_bits", "filter_type", "filter_bits", "attribute", "fields", "self", "field_name", "build_filters", "self", "filters", "None", "\n        Given a dictionary of filters, create the necessary ORM-level filters.\n\n        Keys should be resource fields, **NOT** model fields.\n\n        Valid values are either a list of Django filter types (i.e.\n        ``['startswith', 'exact', 'lte']``), the ``ALL`` constant or the\n        ``ALL_WITH_RELATIONS`` constant.\n        ", "filters", "None", "filters", "qs_filters", "filter_expr", "value", "items", "filters", "filter_bits", "split", "filter_expr", "LOOKUP_SEP", "field_name", "pop", "filter_bits", "filter_type", "exact", "field_name", "fields", "self", "len", "filter_bits", "filter_bits", "keys", "QUERY_TERMS", "filter_type", "pop", "filter_bits", "lookup_bits", "check_filtering", "self", "field_name", "filter_type", "filter_bits", "value", "true", "True", "True", "value", "True", "value", "false", "False", "False", "value", "False", "value", "nil", "none", "None", "None", "value", "None", "filter_type", "in", "range", "len", "value", "hasattr", "filters", "getlist", "value", "getlist", "filters", "filter_expr", "value", "split", "value", ",", "db_field_name", "join", "LOOKUP_SEP", "lookup_bits", "qs_filter", "%s%s%s", "db_field_name", "LOOKUP_SEP", "filter_type", "qs_filters", "qs_filter", "value", "dict_strip_unicode_keys", "qs_filters", "apply_sorting", "self", "obj_list", "options", "None", "\n        Given a dictionary of options, apply some ORM-level sorting to the\n        provided ``QuerySet``.\n\n        Looks for the ``order_by`` key and handles either ascending (just the\n        field name) or descending (the field name with a ``-`` in front).\n\n        The field name should be the resource field, **NOT** model field.\n        ", "options", "None", "options", "parameter_name", "order_by", "order_by", "options", "sort_by", "options", "obj_list", "warn", "warnings", "'sort_by' is a deprecated parameter. Please use 'order_by' instead.", "parameter_name", "sort_by", "order_by_args", "hasattr", "options", "getlist", "order_bits", "getlist", "options", "parameter_name", "order_bits", "get", "options", "parameter_name", "isinstance", "order_bits", "list", "tuple", "order_bits", "order_bits", "order_by", "order_bits", "order_by_bits", "split", "order_by", "LOOKUP_SEP", "field_name", "order_by_bits", "order", "", "startswith", "order_by_bits", "-", "field_name", "order_by_bits", "order", "-", "field_name", "fields", "self", "InvalidSortError", "No matching '%s' field for ordering on.", "field_name", "field_name", "ordering", "_meta", "self", "InvalidSortError", "The '%s' field does not allow ordering.", "field_name", "attribute", "fields", "self", "field_name", "None", "InvalidSortError", "The '%s' field has no 'attribute' for ordering with.", "field_name", "append", "order_by_args", "%s%s", "order", "join", "LOOKUP_SEP", "attribute", "fields", "self", "field_name", "order_by_bits", "order_by", "obj_list", "order_by_args", "apply_filters", "self", "request", "applicable_filters", "\n        An ORM-specific implementation of ``apply_filters``.\n\n        The default simply applies the ``applicable_filters`` as ``**kwargs``,\n        but should make it possible to do more advanced things.\n        ", "filter", "get_object_list", "self", "request", "applicable_filters", "get_object_list", "self", "request", "\n        An ORM-specific implementation of ``get_object_list``.\n\n        Returns a queryset that may have been limited by other overrides.\n        ", "_clone", "queryset", "_meta", "self", "obj_get_list", "kwargs", "self", "request", "None", "\n        A ORM-specific implementation of ``obj_get_list``.\n\n        Takes an optional ``request`` object, whose ``GET`` dictionary can be\n        used to narrow the query.\n        ", "filters", "hasattr", "request", "GET", "filters", "copy", "GET", "request", "update", "filters", "kwargs", "applicable_filters", "build_filters", "self", "filters", "filters", "base_object_list", "apply_filters", "self", "request", "applicable_filters", "apply_authorization_limits", "self", "request", "base_object_list", "ValueError", "BadRequest", "Invalid resource lookup data provided (mismatched type).", "obj_get", "kwargs", "self", "request", "None", "\n        A ORM-specific implementation of ``obj_get``.\n\n        Takes optional ``kwargs``, which are used to narrow the query to find\n        the instance.\n        ", "base_object_list", "filter", "get_object_list", "self", "request", "kwargs", "object_list", "apply_authorization_limits", "self", "request", "base_object_list", "stringified_kwargs", "join", ", ", "%s=%s", "k", "v", "k", "v", "items", "kwargs", "len", "object_list", "DoesNotExist", "object_class", "_meta", "self", "Couldn't find an instance of '%s' which matched '%s'.", "__name__", "object_class", "_meta", "self", "stringified_kwargs", "len", "object_list", "MultipleObjectsReturned", "More than '%s' matched '%s'.", "__name__", "object_class", "_meta", "self", "stringified_kwargs", "object_list", "ValueError", "NotFound", "Invalid resource lookup data provided (mismatched type).", "obj_create", "kwargs", "self", "bundle", "request", "None", "\n        A ORM-specific implementation of ``obj_create``.\n        ", "obj", "bundle", "object_class", "_meta", "self", "key", "value", "items", "kwargs", "setattr", "obj", "bundle", "key", "value", "bundle", "full_hydrate", "self", "bundle", "save_related", "self", "bundle", "save", "obj", "bundle", "m2m_bundle", "hydrate_m2m", "self", "bundle", "save_m2m", "self", "m2m_bundle", "bundle", "obj_update", "kwargs", "self", "bundle", "request", "None", "\n        A ORM-specific implementation of ``obj_update``.\n        ", "obj", "bundle", "pk", "obj", "bundle", "obj", "bundle", "model", "get_object_list", "self", "request", "update", "data", "bundle", "kwargs", "bundle", "full_hydrate", "self", "bundle", "lookup_kwargs", "copy", "kwargs", "update", "lookup_kwargs", "dict", "k", "getattr", "obj", "bundle", "k", "k", "keys", "kwargs", "getattr", "obj", "bundle", "k", "None", "lookup_kwargs", "kwargs", "obj", "bundle", "obj_get", "self", "request", "lookup_kwargs", "ObjectDoesNotExist", "NotFound", "A model instance matching the provided arguments could not be found.", "bundle", "full_hydrate", "self", "bundle", "save_related", "self", "bundle", "save", "obj", "bundle", "m2m_bundle", "hydrate_m2m", "self", "bundle", "save_m2m", "self", "m2m_bundle", "bundle", "obj_delete_list", "kwargs", "self", "request", "None", "\n        A ORM-specific implementation of ``obj_delete_list``.\n\n        Takes optional ``kwargs``, which can be used to narrow the query.\n        ", "base_object_list", "filter", "get_object_list", "self", "request", "kwargs", "authed_object_list", "apply_authorization_limits", "self", "request", "base_object_list", "hasattr", "authed_object_list", "delete", "delete", "authed_object_list", "authed_obj", "authed_object_list", "delete", "authed_obj", "obj_delete", "kwargs", "self", "request", "None", "\n        A ORM-specific implementation of ``obj_delete``.\n\n        Takes optional ``kwargs``, which are used to narrow the query to find\n        the instance.\n        ", "obj", "pop", "kwargs", "_obj", "None", "hasattr", "obj", "delete", "obj", "obj_get", "self", "request", "kwargs", "ObjectDoesNotExist", "NotFound", "A model instance matching the provided arguments could not be found.", "delete", "obj", "patch_list", "kwargs", "self", "request", "\n        An ORM-specific implementation of ``patch_list``.\n\n        Necessary because PATCH should be atomic (all-success or all-fail)\n        and the only way to do this neatly is at the database level.\n        ", "commit_on_success", "transaction", "patch_list", "super", "ModelResource", "self", "request", "kwargs", "rollback", "self", "bundles", "\n        A ORM-specific implementation of ``rollback``.\n\n        Given the list of bundles, delete all models pertaining to those\n        bundles.\n        ", "bundle", "bundles", "obj", "bundle", "getattr", "obj", "bundle", "pk", "None", "delete", "obj", "bundle", "save_related", "self", "bundle", "\n        Handles the saving of related non-M2M data.\n\n        Calling assigning ``child.parent = parent`` & then calling\n        ``Child.save`` isn't good enough to make sure the ``parent``\n        is saved.\n\n        To get around this, we go through all our related fields &\n        call ``save`` on them if they have related, non-M2M data.\n        M2M data is handled by the ``ModelResource.save_m2m`` method.\n        ", "field_name", "field_object", "items", "fields", "self", "getattr", "field_object", "is_related", "False", "getattr", "field_object", "is_m2m", "False", "attribute", "field_object", "blank", "field_object", "related_obj", "getattr", "obj", "bundle", "attribute", "field_object", "ObjectDoesNotExist", "related_obj", "None", "related_obj", "save", "related_obj", "setattr", "obj", "bundle", "attribute", "field_object", "related_obj", "save_m2m", "self", "bundle", "\n        Handles the saving of related M2M data.\n\n        Due to the way Django works, the M2M data must be handled after the\n        main instance, which is why this isn't a part of the main ``save`` bits.\n\n        Currently slightly inefficient in that it will clear out the whole\n        relation and recreate the related data as needed.\n        ", "field_name", "field_object", "items", "fields", "self", "getattr", "field_object", "is_m2m", "False", "attribute", "field_object", "readonly", "field_object", "related_mngr", "getattr", "obj", "bundle", "attribute", "field_object", "hasattr", "related_mngr", "clear", "clear", "related_mngr", "related_objs", "related_bundle", "data", "bundle", "field_name", "save", "obj", "related_bundle", "append", "related_objs", "obj", "related_bundle", "add", "related_mngr", "related_objs", "get_resource_uri", "self", "bundle_or_obj", "\n        Handles generating a resource URI for a single resource.\n\n        Uses the model's ``pk`` in order to create the URI.\n        ", "kwargs", "resource_name", "resource_name", "_meta", "self", "isinstance", "bundle_or_obj", "Bundle", "kwargs", "pk", "pk", "obj", "bundle_or_obj", "kwargs", "pk", "id", "bundle_or_obj", "api_name", "_meta", "self", "None", "kwargs", "api_name", "api_name", "_meta", "self", "_build_reverse_url", "self", "api_dispatch_detail", "kwargs", "kwargs", "NamespacedModelResource", "ModelResource", "\n    A ModelResource subclass that respects Django namespaces.\n    ", "_build_reverse_url", "self", "name", "args", "kwargs", "None", "None", "namespaced", "%s:%s", "urlconf_namespace", "_meta", "self", "name", "reverse", "namespaced", "args", "args", "kwargs", "kwargs", "convert_post_to_VERB", "request", "verb", "\n    Force Django to process the VERB.\n    ", "method", "request", "verb", "hasattr", "request", "_post", "_post", "request", "_files", "request", "method", "request", "POST", "_load_post_and_files", "request", "method", "request", "verb", "AttributeError", "META", "request", "REQUEST_METHOD", "POST", "_load_post_and_files", "request", "META", "request", "REQUEST_METHOD", "verb", "setattr", "request", "verb", "POST", "request", "request", "convert_post_to_put", "request", "convert_post_to_VERB", "request", "verb", "PUT", "convert_post_to_patch", "request", "convert_post_to_VERB", "request", "verb", "PATCH", "datetime", "heapq", "django.contrib.contenttypes.models", "ContentType", "django.http", "HttpResponseRedirect", "django.conf", "settings", "schedule.conf.settings", "CHECK_PERMISSION_FUNC", "EventListManager", "object", "\n    This class is responsible for doing functions on a list of events. It is\n    used to when one has a list of events and wants to access the occurrences\n    from these events in as a group\n    ", "__init__", "self", "events", "events", "self", "events", "occurrences_after", "self", "after", "None", "\n        It is often useful to know what the next occurrence is given a list of\n        events.  This function produces a generator that yields the\n        the most recent occurrence after the date ``after`` from any of the\n        events in ``self.events``\n        ", "schedule.models", "Occurrence", "after", "None", "after", "now", "datetime", "datetime", "occ_replacer", "OccurrenceReplacer", "filter", "objects", "Occurrence", "event__in", "events", "self", "generators", "_occurrences_after_generator", "event", "after", "event", "events", "self", "occurrences", "generator", "generators", "heappush", "heapq", "occurrences", "next", "generator", "generator", "StopIteration", "True", "len", "occurrences", "StopIteration", "generator", "occurrences", "next", "heapreplace", "heapq", "occurrences", "next", "generator", "generator", "StopIteration", "next", "heappop", "heapq", "occurrences", "get_occurrence", "occ_replacer", "next", "OccurrenceReplacer", "object", "\n    When getting a list of occurrences, the last thing that needs to be done\n    before passing it forward is to make sure all of the occurrences that\n    have been stored in the datebase replace, in the list you are returning,\n    the generated ones that are equivalent.  This class makes this easier.\n    ", "__init__", "self", "persisted_occurrences", "lookup", "event_id", "occ", "original_start", "occ", "original_end", "occ", "occ", "occ", "persisted_occurrences", "lookup", "self", "dict", "lookup", "get_occurrence", "self", "occ", "\n        Return a persisted occurrences matching the occ and remove it from lookup since it\n        has already been matched\n        ", "pop", "lookup", "self", "event_id", "occ", "original_start", "occ", "original_end", "occ", "occ", "has_occurrence", "self", "occ", "event_id", "occ", "original_start", "occ", "original_end", "occ", "lookup", "self", "get_additional_occurrences", "self", "start", "end", "\n        Return persisted occurrences which are now in the period\n        ", "occ", "key", "occ", "items", "lookup", "self", "start", "occ", "end", "end", "occ", "start", "cancelled", "occ", "check_event_permissions", "object", "__init__", "self", "f", "f", "self", "f", "__name__", "self", "__name__", "f", "contenttype", "self", "get", "objects", "ContentType", "app_label", "schedule", "model", "event", "__call__", "args", "kwargs", "self", "request", "user", "user", "request", "object_id", "get", "kwargs", "event_id", "None", "obj", "get_object_for_this_type", "contenttype", "self", "pk", "object_id", "DoesNotExist", "model_class", "contenttype", "self", "obj", "None", "allowed", "CHECK_PERMISSION_FUNC", "obj", "user", "allowed", "HttpResponseRedirect", "LOGIN_URL", "settings", "f", "self", "request", "args", "kwargs", "coerce_date_dict", "date_dict", "\n    given a dictionary (presumed to be from request.GET) it returns a tuple\n    that represents a date. It will return from year down to seconds until one\n    is not found.  ie if year, month, and seconds are in the dictionary, only\n    year and month will be returned, the rest will be returned as min. If none\n    of the parts are found return an empty tuple.\n    ", "keys", "year", "month", "day", "hour", "minute", "second", "retVal", "year", "month", "day", "hour", "minute", "second", "modified", "False", "key", "keys", "retVal", "key", "int", "date_dict", "key", "modified", "True", "KeyError", "modified", "retVal", "logging", "datetime", "custom.functions", "*", "custom.core.management.base", "*", "django.conf", "settings", "lxml.html", "*", "app.trackers.tasks", "*", "app.trackers.models", "*", "logger", "getLogger", "logging", "querier", "Command", "CustomBaseCommand", "\n    Django management class for enqueuing the trackers\n    ", "args", "", "help", "enqueue each of the trackers for querying", "process", "args", "options", "self", "\n        Procedure that calls the engine and enqueues the trackers\n        ", "info", "logger", "Enqueuing the trackers. %s trackers to enqueue.", "count", "filter", "objects", "Tracker", "date__lte", "today", "date", "datetime", "exek", "range", "runs", "range", "info", "logger", "Enqueuing trackers.", "trackers", "filter", "objects", "Tracker", "date__lte", "today", "date", "datetime", "tracker", "trackers", "is_working", "tracker", "first_few_tries", "tracker", "info", "logger", "Found a tracker but it isn't working.", "url", "url", "tracker", "country", "country", "tracker", "debug", "logger", "Adding tracker %s [%s].", "url", "country", "queries", "count", "filter", "objects", "Query", "date", "today", "date", "datetime", "tracker", "tracker", "queries", "info", "logger", "Tracker already checked today.", "delay", "QueryTracker", "id", "tracker", "Exception", "e", "warn", "logger", "Error processing the tracker. %s", "str", "e", "Exception", "e", "warn", "logger", "Error enqueuing trackers. %s", "str", "e", "e", "info", "logger", "All trackers enqueued.", "sqlalchemy", "vdm.sqlalchemy", "types", "make_uuid", "meta", "*", "domain_object", "DomainObject", "package", "Package", "core", "*", "vocabulary", "activity", "ckan", "__all__", "tag_table", "package_tag_table", "Tag", "PackageTag", "PackageTagRevision", "package_tag_revision_table", "MAX_TAG_LENGTH", "MIN_TAG_LENGTH", "MAX_TAG_LENGTH", "MIN_TAG_LENGTH", "tag_table", "Table", "tag", "metadata", "Column", "id", "UnicodeText", "types", "primary_key", "True", "default", "make_uuid", "Column", "name", "Unicode", "types", "MAX_TAG_LENGTH", "nullable", "False", "Column", "vocabulary_id", "Unicode", "types", "VOCABULARY_NAME_MAX_LENGTH", "vocabulary", "ForeignKey", "vocabulary.id", "UniqueConstraint", "sqlalchemy", "name", "vocabulary_id", "package_tag_table", "Table", "package_tag", "metadata", "Column", "id", "UnicodeText", "types", "primary_key", "True", "default", "make_uuid", "Column", "package_id", "UnicodeText", "types", "ForeignKey", "package.id", "Column", "tag_id", "UnicodeText", "types", "ForeignKey", "tag.id", "make_table_stateful", "sqlalchemy", "vdm", "package_tag_table", "package_tag_revision_table", "make_revisioned_table", "package_tag_table", "Tag", "DomainObject", "__init__", "self", "name", "vocabulary_id", "", "None", "name", "self", "name", "vocabulary_id", "self", "vocabulary_id", "delete", "self", "purge", "self", "by_id", "cls", "tag_id", "autoflush", "True", "Return the tag object with the given id, or None if there is no\n        tag with that id.\n\n        Arguments:\n        tag_id -- The id of the tag to return.\n\n        ", "query", "filter", "query", "Session", "Tag", "id", "Tag", "tag_id", "query", "autoflush", "query", "autoflush", "tag", "first", "query", "tag", "classmethod", "by_name", "cls", "name", "vocab", "autoflush", "None", "True", "Return the tag object with the given name, or None if there is no\n        tag with that name.\n\n        By default only free tags (tags which do not belong to any vocabulary)\n        are returned. If the optional argument vocab is given then only tags\n        from that vocabulary are returned, or None if there is no tag with that\n        name in that vocabulary.\n\n        Arguments:\n        name -- The name of the tag to return.\n        vocab -- A Vocabulary object for the vocabulary to look in (optional).\n\n        ", "vocab", "query", "filter", "filter", "query", "Session", "Tag", "name", "Tag", "name", "vocabulary_id", "Tag", "id", "vocab", "query", "filter", "filter", "query", "Session", "Tag", "name", "Tag", "name", "vocabulary_id", "Tag", "None", "query", "autoflush", "query", "autoflush", "tag", "first", "query", "tag", "classmethod", "get", "cls", "tag_id_or_name", "vocab_id_or_name", "None", "Return the tag object with the given id or name, or None if there is\n        no tag with that id or name.\n\n        By default only free tags (tags which do not belong to any vocabulary)\n        are returned. If the optional argument vocab_id_or_name is given then\n        only tags that belong to that vocabulary will be returned, and None\n        will be returned if there is no vocabulary with that vocabulary id or\n        name or if there is no tag with that tag id or name in that vocabulary.\n\n        Arguments:\n        tag_id_or_name -- The id or name of the tag to return.\n        vocab_id_or_name -- The id or name of the vocabulary to look in.\n\n        ", "tag", "by_id", "Tag", "tag_id_or_name", "tag", "tag", "vocab_id_or_name", "vocab", "get", "Vocabulary", "vocabulary", "vocab_id_or_name", "vocab", "None", "NotFound", "logic", "ckan", "could not find vocabulary '%s'", "vocab_id_or_name", "vocab", "None", "tag", "by_name", "Tag", "tag_id_or_name", "vocab", "vocab", "tag", "classmethod", "search_by_name", "cls", "search_term", "vocab_id_or_name", "None", "Return all tags that match the given search term.\n\n        By default only free tags (tags which do not belong to any vocabulary)\n        are returned. If the optional argument vocab_id_or_name is given then\n        only tags from that vocabulary are returned.\n\n        ", "vocab_id_or_name", "vocab", "get", "Vocabulary", "vocabulary", "vocab_id_or_name", "vocab", "None", "None", "query", "filter", "query", "Session", "Tag", "vocabulary_id", "Tag", "id", "vocab", "query", "query", "Session", "Tag", "search_term", "lower", "strip", "search_term", "query", "filter", "query", "contains", "name", "Tag", "search_term", "query", "join", "distinct", "query", "package_tags", "Tag", "query", "classmethod", "all", "cls", "vocab_id_or_name", "None", "Return all tags that are currently applied to a package.\n\n        By default only free tags (tags which do not belong to any vocabulary)\n        are returned. If the optional argument vocab_id_or_name is given then\n        only tags from that vocabulary are returned.\n\n        ", "vocab_id_or_name", "vocab", "get", "Vocabulary", "vocabulary", "vocab_id_or_name", "vocab", "None", "NotFound", "logic", "ckan", "could not find vocabulary '%s'", "vocab_id_or_name", "query", "filter", "query", "Session", "Tag", "vocabulary_id", "Tag", "id", "vocab", "query", "filter", "query", "Session", "Tag", "vocabulary_id", "Tag", "None", "query", "join", "distinct", "query", "PackageTagRevision", "query", "filter", "query", "and_", "sqlalchemy", "state", "PackageTagRevision", "active", "current", "PackageTagRevision", "True", "query", "classmethod", "packages", "self", "Return a list of all packages currently tagged with this tag.\n\n        The list is sorted by package name.\n\n        ", "q", "query", "Session", "Package", "q", "join", "q", "PackageTagRevision", "q", "filter", "q", "tag_id", "PackageTagRevision", "id", "self", "q", "filter", "q", "and_", "sqlalchemy", "state", "PackageTagRevision", "active", "current", "PackageTagRevision", "True", "q", "order_by", "q", "name", "Package", "packages", "all", "q", "packages", "property", "__repr__", "self", "<Tag %s>", "name", "self", "PackageTag", "RevisionedObjectMixin", "sqlalchemy", "vdm", "StatefulObjectMixin", "sqlalchemy", "vdm", "DomainObject", "__init__", "kwargs", "self", "package", "tag", "state", "None", "None", "None", "package", "self", "package", "tag", "self", "tag", "state", "self", "state", "k", "v", "items", "kwargs", "setattr", "self", "k", "v", "__repr__", "self", "<PackageTag package=%s tag=%s>", "name", "package", "self", "name", "tag", "self", "activity_stream_detail", "self", "activity_id", "activity_type", "activity_type", "new", "activity_type", "added", "activity_type", "changed", "activity_type", "removed", "None", "ckan.lib.dictization", "ckan.model", "c", "model", "model", "ckan", "d", "tag", "package", "table_dictize", "dictization", "lib", "ckan", "tag", "self", "c", "table_dictize", "dictization", "lib", "ckan", "package", "self", "c", "ActivityDetail", "activity", "activity_id", "activity_id", "object_id", "id", "self", "object_type", "tag", "activity_type", "activity_type", "data", "d", "by_name", "self", "package_name", "tag_name", "vocab_id_or_name", "autoflush", "None", "True", "Return the one PackageTag for the given package and tag names, or\n        None if there is no PackageTag for that package and tag.\n\n        By default only PackageTags for free tags (tags which do not belong to\n        any vocabulary) are returned. If the optional argument vocab_id_or_name\n        is given then only PackageTags for tags from that vocabulary are\n        returned.\n\n        ", "vocab_id_or_name", "vocab", "get", "Vocabulary", "vocabulary", "vocab_id_or_name", "vocab", "None", "None", "query", "filter", "filter", "filter", "query", "Session", "PackageTag", "Tag", "Package", "vocabulary_id", "Tag", "id", "vocab", "name", "Package", "package_name", "name", "Tag", "tag_name", "query", "filter", "filter", "query", "Session", "PackageTag", "name", "Package", "package_name", "name", "Tag", "tag_name", "query", "autoflush", "query", "autoflush", "one", "query", "classmethod", "related_packages", "self", "package", "self", "mapper", "Tag", "tag_table", "properties", "package_tags", "vocabulary", "relation", "PackageTag", "backref", "tag", "cascade", "all, delete, delete-orphan", "relation", "Vocabulary", "vocabulary", "order_by", "name", "c", "tag_table", "order_by", "name", "c", "tag_table", "mapper", "PackageTag", "package_tag_table", "properties", "pkg", "relation", "Package", "backref", "package_tag_all", "cascade", "none", "order_by", "id", "c", "package_tag_table", "extension", "Revisioner", "sqlalchemy", "vdm", "package_tag_revision_table", "PluginMapperExtension", "extension", "package_mapping", "*", "modify_base_object_mapper", "sqlalchemy", "vdm", "PackageTag", "Revision", "State", "PackageTagRevision", "create_object_version", "sqlalchemy", "vdm", "mapper", "PackageTag", "package_tag_revision_table", "related_packages", "PackageTagRevision", "self", "package", "continuity", "self", "unittest", "warnings", "pyramid.testing", "cleanUp", "pyramid.compat", "text_", "native_", "text_type", "url_quote", "PY3", "catch_warnings", "warnings", "record", "True", "w", "filterwarnings", "warnings", "always", "pyramid.interfaces", "IContextURL", "len", "w", "TraversalPathTests", "TestCase", "unittest", "_callFUT", "self", "path", "pyramid.traversal", "traversal_path", "traversal_path", "path", "test_utf8", "self", "la", "La Pe\u00f1a", "encoded", "url_quote", "la", "decoded", "text_", "la", "utf-8", "path", "join", "/", "encoded", "encoded", "result", "_callFUT", "self", "path", "assertEqual", "self", "result", "decoded", "decoded", "test_utf16", "self", "pyramid.exceptions", "URLDecodeError", "la", "encode", "text_", "La Pe\u00f1a", "utf-8", "utf-16", "encoded", "url_quote", "la", "path", "join", "/", "encoded", "encoded", "assertRaises", "self", "URLDecodeError", "_callFUT", "self", "path", "test_unicode_highorder_chars", "self", "path", "text_", "/%E6%B5%81%E8%A1%8C%E8%B6%8B%E5%8A%BF", "assertEqual", "self", "_callFUT", "self", "path", "text_", "\\u6d41\\u884c\\u8d8b\\u52bf", "unicode_escape", "test_element_urllquoted", "self", "assertEqual", "self", "_callFUT", "self", "/foo/space%20thing/bar", "text_", "foo", "text_", "space thing", "text_", "bar", "test_unicode_undecodeable_to_ascii", "self", "path", "text_", "/La Pe\u00f1a", "utf-8", "assertRaises", "self", "UnicodeEncodeError", "_callFUT", "self", "path", "TraversalPathInfoTests", "TestCase", "unittest", "_callFUT", "self", "path", "pyramid.traversal", "traversal_path_info", "traversal_path_info", "path", "test_path_startswith_endswith", "self", "assertEqual", "self", "_callFUT", "self", "/foo/", "text_", "foo", "test_empty_elements", "self", "assertEqual", "self", "_callFUT", "self", "foo///", "text_", "foo", "test_onedot", "self", "assertEqual", "self", "_callFUT", "self", "foo/./bar", "text_", "foo", "text_", "bar", "test_twodots", "self", "assertEqual", "self", "_callFUT", "self", "foo/../bar", "text_", "bar", "test_twodots_at_start", "self", "assertEqual", "self", "_callFUT", "self", "../../bar", "text_", "bar", "test_segments_are_unicode", "self", "result", "_callFUT", "self", "/foo/bar", "assertEqual", "self", "type", "result", "text_type", "assertEqual", "self", "type", "result", "text_type", "test_same_value_returned_if_cached", "self", "result1", "_callFUT", "self", "/foo/bar", "result2", "_callFUT", "self", "/foo/bar", "assertEqual", "self", "result1", "text_", "foo", "text_", "bar", "assertEqual", "self", "result2", "text_", "foo", "text_", "bar", "test_unicode_simple", "self", "path", "text_", "/abc", "assertEqual", "self", "_callFUT", "self", "path", "text_", "abc", "test_highorder", "self", "la", "La Pe\u00f1a", "latin1", "native_", "la", "result", "_callFUT", "self", "latin1", "assertEqual", "self", "result", "text_", "la", "utf-8", "test_highorder_undecodeable", "self", "pyramid.exceptions", "URLDecodeError", "la", "text_", "La Pe\u00f1a", "utf-8", "notlatin1", "native_", "la", "assertRaises", "self", "URLDecodeError", "_callFUT", "self", "notlatin1", "ResourceTreeTraverserTests", "TestCase", "unittest", "setUp", "self", "cleanUp", "tearDown", "self", "cleanUp", "_getTargetClass", "self", "pyramid.traversal", "ResourceTreeTraverser", "ResourceTreeTraverser", "_makeOne", "arg", "kw", "self", "klass", "_getTargetClass", "self", "klass", "arg", "kw", "_getEnviron", "kw", "self", "environ", "update", "environ", "kw", "environ", "test_class_conforms_to_ITraverser", "self", "zope.interface.verify", "verifyClass", "pyramid.interfaces", "ITraverser", "verifyClass", "ITraverser", "_getTargetClass", "self", "test_instance_conforms_to_ITraverser", "self", "zope.interface.verify", "verifyObject", "pyramid.interfaces", "ITraverser", "context", "DummyContext", "verifyObject", "ITraverser", "_makeOne", "self", "context", "test_call_with_no_pathinfo", "self", "policy", "_makeOne", "self", "None", "environ", "_getEnviron", "self", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "None", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "root", "policy", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_pathinfo_highorder", "self", "foo", "DummyContext", "None", "text_", "Qu\u00e9bec", "utf-8", "root", "DummyContext", "foo", "root", "policy", "_makeOne", "self", "root", "PY3", "path_info", "decode", "/Qu\u00e9bec", "latin-1", "path_info", "/Qu\u00e9bec", "environ", "_getEnviron", "self", "PATH_INFO", "path_info", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "foo", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "Qu\u00e9bec", "utf-8", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "root", "policy", "assertEqual", "self", "result", "virtual_root_path", "test_call_pathel_with_no_getitem", "self", "policy", "_makeOne", "self", "None", "environ", "_getEnviron", "self", "PATH_INFO", "/foo/bar", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "None", "assertEqual", "self", "result", "view_name", "foo", "assertEqual", "self", "result", "subpath", "bar", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "root", "policy", "assertEqual", "self", "result", "virtual_root_path", "test_call_withconn_getitem_emptypath_nosubpath", "self", "root", "DummyContext", "policy", "_makeOne", "self", "root", "environ", "_getEnviron", "self", "PATH_INFO", "", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "root", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "root", "assertEqual", "self", "result", "virtual_root_path", "test_call_withconn_getitem_withpath_nosubpath", "self", "foo", "DummyContext", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "environ", "_getEnviron", "self", "PATH_INFO", "/foo/bar", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "foo", "assertEqual", "self", "result", "view_name", "bar", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "foo", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "root", "assertEqual", "self", "result", "virtual_root_path", "test_call_withconn_getitem_withpath_withsubpath", "self", "foo", "DummyContext", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "environ", "_getEnviron", "self", "PATH_INFO", "/foo/bar/baz/buz", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "foo", "assertEqual", "self", "result", "view_name", "bar", "assertEqual", "self", "result", "subpath", "baz", "buz", "assertEqual", "self", "result", "traversed", "text_", "foo", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "root", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_explicit_viewname", "self", "foo", "DummyContext", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "environ", "_getEnviron", "self", "PATH_INFO", "/@@foo", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "root", "assertEqual", "self", "result", "view_name", "foo", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "root", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_vh_root", "self", "environ", "_getEnviron", "self", "PATH_INFO", "/baz", "HTTP_X_VHM_ROOT", "/foo/bar", "baz", "DummyContext", "None", "baz", "bar", "DummyContext", "baz", "bar", "foo", "DummyContext", "bar", "foo", "root", "DummyContext", "foo", "root", "policy", "_makeOne", "self", "root", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "baz", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "foo", "text_", "bar", "text_", "baz", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "bar", "assertEqual", "self", "result", "virtual_root_path", "text_", "foo", "text_", "bar", "test_call_with_vh_root2", "self", "environ", "_getEnviron", "self", "PATH_INFO", "/bar/baz", "HTTP_X_VHM_ROOT", "/foo", "baz", "DummyContext", "None", "baz", "bar", "DummyContext", "baz", "bar", "foo", "DummyContext", "bar", "foo", "root", "DummyContext", "foo", "root", "policy", "_makeOne", "self", "root", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "baz", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "foo", "text_", "bar", "text_", "baz", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "foo", "assertEqual", "self", "result", "virtual_root_path", "text_", "foo", "test_call_with_vh_root3", "self", "environ", "_getEnviron", "self", "PATH_INFO", "/foo/bar/baz", "HTTP_X_VHM_ROOT", "/", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "baz", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "foo", "text_", "bar", "text_", "baz", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "root", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_vh_root4", "self", "environ", "_getEnviron", "self", "PATH_INFO", "/", "HTTP_X_VHM_ROOT", "/foo/bar/baz", "baz", "DummyContext", "None", "baz", "bar", "DummyContext", "baz", "bar", "foo", "DummyContext", "bar", "foo", "root", "DummyContext", "foo", "root", "policy", "_makeOne", "self", "root", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "baz", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "foo", "text_", "bar", "text_", "baz", "assertEqual", "self", "result", "root", "root", "assertEqual", "self", "result", "virtual_root", "baz", "assertEqual", "self", "result", "virtual_root_path", "text_", "foo", "text_", "bar", "text_", "baz", "test_call_with_vh_root_path_root", "self", "policy", "_makeOne", "self", "None", "environ", "_getEnviron", "self", "HTTP_X_VHM_ROOT", "/", "PATH_INFO", "/", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "None", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "root", "policy", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_vh_root_highorder", "self", "bar", "DummyContext", "None", "bar", "foo", "DummyContext", "bar", "text_", "Qu\u00e9bec", "utf-8", "root", "DummyContext", "foo", "root", "policy", "_makeOne", "self", "root", "PY3", "vhm_root", "decode", "/Qu\u00e9bec", "latin-1", "vhm_root", "/Qu\u00e9bec", "environ", "_getEnviron", "self", "HTTP_X_VHM_ROOT", "vhm_root", "PATH_INFO", "/bar", "request", "DummyRequest", "environ", "result", "policy", "request", "assertEqual", "self", "result", "context", "bar", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "text_", "Qu\u00e9bec", "utf-8", "text_", "bar", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "foo", "assertEqual", "self", "result", "virtual_root_path", "text_", "Qu\u00e9bec", "utf-8", "test_non_utf8_path_segment_unicode_path_segments_fails", "self", "pyramid.exceptions", "URLDecodeError", "foo", "DummyContext", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "segment", "native_", "text_", "LaPe\u00f1a", "utf-8", "utf-16", "environ", "_getEnviron", "self", "PATH_INFO", "/%s", "segment", "request", "DummyRequest", "environ", "assertRaises", "self", "URLDecodeError", "policy", "request", "test_non_utf8_path_segment_settings_unicode_path_segments_fails", "self", "pyramid.exceptions", "URLDecodeError", "foo", "DummyContext", "root", "DummyContext", "foo", "policy", "_makeOne", "self", "root", "segment", "native_", "text_", "LaPe\u00f1a", "utf-8", "utf-16", "environ", "_getEnviron", "self", "PATH_INFO", "/%s", "segment", "request", "DummyRequest", "environ", "assertRaises", "self", "URLDecodeError", "policy", "request", "test_withroute_nothingfancy", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_withroute_with_subpath_string", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "subpath", "/a/b/c", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "a", "b", "c", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_withroute_with_subpath_tuple", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "subpath", "a", "b", "c", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "a", "b", "c", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_withroute_and_traverse_string", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "traverse", "foo/bar", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "foo", "assertEqual", "self", "result", "subpath", "bar", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_withroute_and_traverse_tuple", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "traverse", "foo", "bar", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "foo", "assertEqual", "self", "result", "subpath", "bar", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_withroute_and_traverse_empty", "self", "resource", "DummyContext", "traverser", "_makeOne", "self", "resource", "environ", "bfg.routes.matchdict", "traverse", "", "request", "DummyRequest", "environ", "result", "traverser", "request", "assertEqual", "self", "result", "context", "resource", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "resource", "assertEqual", "self", "result", "virtual_root", "resource", "assertEqual", "self", "result", "virtual_root_path", "test_call_with_environ", "self", "catch_warnings", "warnings", "record", "True", "w", "filterwarnings", "warnings", "always", "policy", "_makeOne", "self", "None", "environ", "_getEnviron", "self", "result", "policy", "environ", "assertEqual", "self", "result", "context", "None", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "subpath", "assertEqual", "self", "result", "traversed", "assertEqual", "self", "result", "root", "root", "policy", "assertEqual", "self", "result", "virtual_root", "root", "policy", "assertEqual", "self", "result", "virtual_root_path", "assertEqual", "self", "len", "w", "FindInterfaceTests", "TestCase", "unittest", "_callFUT", "self", "context", "iface", "pyramid.traversal", "find_interface", "find_interface", "context", "iface", "test_it_interface", "self", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyContext", "foo", "__parent__", "root", "None", "__name__", "root", "root", "__parent__", "foo", "root", "__name__", "foo", "foo", "__parent__", "bar", "foo", "__name__", "bar", "bar", "__parent__", "baz", "bar", "__name__", "baz", "baz", "zope.interface", "directlyProvides", "zope.interface", "Interface", "IFoo", "Interface", "directlyProvides", "root", "IFoo", "result", "_callFUT", "self", "baz", "IFoo", "assertEqual", "self", "__name__", "result", "root", "test_it_class", "self", "DummyRoot", "object", "__init__", "self", "child", "child", "self", "child", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyRoot", "foo", "__parent__", "root", "None", "__name__", "root", "root", "__parent__", "foo", "root", "__name__", "foo", "foo", "__parent__", "bar", "foo", "__name__", "bar", "bar", "__parent__", "baz", "bar", "__name__", "baz", "baz", "result", "_callFUT", "self", "baz", "DummyRoot", "assertEqual", "self", "__name__", "result", "root", "FindRootTests", "TestCase", "unittest", "_callFUT", "self", "context", "pyramid.traversal", "find_root", "find_root", "context", "test_it", "self", "dummy", "DummyContext", "baz", "DummyContext", "__parent__", "baz", "dummy", "__name__", "baz", "baz", "__parent__", "dummy", "None", "__name__", "dummy", "None", "result", "_callFUT", "self", "baz", "assertEqual", "self", "result", "dummy", "FindResourceTests", "TestCase", "unittest", "_callFUT", "self", "context", "name", "pyramid.traversal", "find_resource", "find_resource", "context", "name", "_registerTraverser", "self", "traverser", "pyramid.threadlocal", "get_current_registry", "reg", "get_current_registry", "pyramid.interfaces", "ITraverser", "zope.interface", "Interface", "registerAdapter", "reg", "traverser", "Interface", "ITraverser", "test_list", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "", "assertEqual", "self", "result", "resource", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "/", "test_generator", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "foo", "", "result", "_callFUT", "self", "resource", "foo", "assertEqual", "self", "result", "resource", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "/", "test_self_string_found", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "", "assertEqual", "self", "result", "resource", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_self_tuple_found", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "assertEqual", "self", "result", "resource", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_relative_string_found", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "result", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_relative_tuple_found", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "result", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_relative_string_notfound", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "bar", "_registerTraverser", "self", "traverser", "assertRaises", "self", "KeyError", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_relative_tuple_notfound", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "bar", "_registerTraverser", "self", "traverser", "assertRaises", "self", "KeyError", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_absolute_string_found", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "/", "assertEqual", "self", "result", "root", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_absolute_tuple_found", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "resource", "", "assertEqual", "self", "result", "root", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_absolute_string_notfound", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "fuz", "_registerTraverser", "self", "traverser", "assertRaises", "self", "KeyError", "_callFUT", "self", "resource", "/", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_absolute_tuple_notfound", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "fuz", "_registerTraverser", "self", "traverser", "assertRaises", "self", "KeyError", "_callFUT", "self", "resource", "", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_absolute_unicode_found", "self", "pyramid.traversal", "ResourceTreeTraverser", "unprintable", "DummyContext", "root", "DummyContext", "unprintable", "__parent__", "unprintable", "root", "__name__", "unprintable", "text_", "/\u6d41\u884c\u8d8b\u52bf", "utf-8", "__parent__", "root", "None", "__name__", "root", "None", "traverser", "ResourceTreeTraverser", "_registerTraverser", "self", "traverser", "result", "_callFUT", "self", "root", "text_", "/%E6%B5%81%E8%A1%8C%E8%B6%8B%E5%8A%BF", "assertEqual", "self", "result", "unprintable", "ResourcePathTests", "TestCase", "unittest", "_callFUT", "elements", "self", "resource", "pyramid.traversal", "resource_path", "resource_path", "resource", "elements", "test_it", "self", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyContext", "foo", "__parent__", "root", "None", "__name__", "root", "None", "__parent__", "foo", "root", "__name__", "foo", "foo ", "__parent__", "bar", "foo", "__name__", "bar", "bar", "__parent__", "baz", "bar", "__name__", "baz", "baz", "result", "_callFUT", "self", "baz", "this/theotherthing", "that", "assertEqual", "self", "result", "/foo%20/bar/baz/this%2Ftheotherthing/that", "test_root_default", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "result", "_callFUT", "self", "root", "assertEqual", "self", "result", "/", "test_root_default_emptystring", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "", "result", "_callFUT", "self", "root", "assertEqual", "self", "result", "/", "test_root_object_nonnull_name_direct", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "flubadub", "result", "_callFUT", "self", "root", "assertEqual", "self", "result", "flubadub", "test_root_object_nonnull_name_indirect", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "flubadub", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "barker", "result", "_callFUT", "self", "other", "assertEqual", "self", "result", "flubadub/barker", "test_nonroot_default", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "other", "result", "_callFUT", "self", "other", "assertEqual", "self", "result", "/other", "test_path_with_None_itermediate_names", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "None", "other2", "DummyContext", "__parent__", "other2", "other", "__name__", "other2", "other2", "result", "_callFUT", "self", "other2", "assertEqual", "self", "result", "//other2", "ResourcePathTupleTests", "TestCase", "unittest", "_callFUT", "elements", "self", "resource", "pyramid.traversal", "resource_path_tuple", "resource_path_tuple", "resource", "elements", "test_it", "self", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyContext", "foo", "__parent__", "root", "None", "__name__", "root", "None", "__parent__", "foo", "root", "__name__", "foo", "foo ", "__parent__", "bar", "foo", "__name__", "bar", "bar", "__parent__", "baz", "bar", "__name__", "baz", "baz", "result", "_callFUT", "self", "baz", "this/theotherthing", "that", "assertEqual", "self", "result", "", "foo ", "bar", "baz", "this/theotherthing", "that", "test_root_default", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "result", "_callFUT", "self", "root", "assertEqual", "self", "result", "", "test_root_default_emptystring_name", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "other", "result", "_callFUT", "self", "other", "assertEqual", "self", "result", "", "other", "test_nonroot_default", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "other", "result", "_callFUT", "self", "other", "assertEqual", "self", "result", "", "other", "test_path_with_None_itermediate_names", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "other", "DummyContext", "__parent__", "other", "root", "__name__", "other", "None", "other2", "DummyContext", "__parent__", "other2", "other", "__name__", "other2", "other2", "result", "_callFUT", "self", "other2", "assertEqual", "self", "result", "", "", "other2", "QuotePathSegmentTests", "TestCase", "unittest", "_callFUT", "self", "s", "pyramid.traversal", "quote_path_segment", "quote_path_segment", "s", "test_unicode", "self", "la", "text_", "/La Pe\u00f1a", "utf-8", "result", "_callFUT", "self", "la", "assertEqual", "self", "result", "%2FLa%20Pe%C3%B1a", "test_string", "self", "s", "/ hello!", "result", "_callFUT", "self", "s", "assertEqual", "self", "result", "%2F%20hello%21", "test_int", "self", "s", "result", "_callFUT", "self", "s", "assertEqual", "self", "result", "12345", "test_long", "self", "pyramid.compat", "long", "sys", "s", "long", "maxsize", "sys", "result", "_callFUT", "self", "s", "expected", "str", "s", "assertEqual", "self", "result", "expected", "test_other", "self", "Foo", "object", "__str__", "self", "abc", "s", "Foo", "result", "_callFUT", "self", "s", "assertEqual", "self", "result", "abc", "ResourceURLTests", "TestCase", "unittest", "_makeOne", "self", "context", "url", "_getTargetClass", "self", "context", "url", "_getTargetClass", "self", "pyramid.traversal", "ResourceURL", "ResourceURL", "_registerTraverser", "self", "traverser", "pyramid.threadlocal", "get_current_registry", "reg", "get_current_registry", "pyramid.interfaces", "ITraverser", "zope.interface", "Interface", "registerAdapter", "reg", "traverser", "Interface", "ITraverser", "test_class_conforms_to_IContextURL", "self", "zope.interface.verify", "verifyClass", "verifyClass", "IContextURL", "_getTargetClass", "self", "test_instance_conforms_to_IContextURL", "self", "zope.interface.verify", "verifyObject", "context", "DummyContext", "request", "DummyRequest", "verifyObject", "IContextURL", "_makeOne", "self", "context", "request", "test_instance_conforms_to_IResourceURL", "self", "pyramid.interfaces", "IResourceURL", "zope.interface.verify", "verifyObject", "context", "DummyContext", "request", "DummyRequest", "verifyObject", "IResourceURL", "_makeOne", "self", "context", "request", "test_call_withlineage", "self", "baz", "DummyContext", "bar", "DummyContext", "baz", "foo", "DummyContext", "bar", "root", "DummyContext", "foo", "__parent__", "root", "None", "__name__", "root", "None", "__parent__", "foo", "root", "__name__", "foo", "foo ", "__parent__", "bar", "foo", "__name__", "bar", "bar", "__parent__", "baz", "bar", "__name__", "baz", "baz", "request", "DummyRequest", "context_url", "_makeOne", "self", "baz", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/foo%20/bar/baz/", "test_call_nolineage", "self", "context", "DummyContext", "__name__", "context", "", "__parent__", "context", "None", "request", "DummyRequest", "context_url", "_makeOne", "self", "context", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/", "test_call_unicode_mixed_with_bytes_in_resource_names", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "one", "DummyContext", "__parent__", "one", "root", "__name__", "one", "text_", "La Pe\u00f1a", "utf-8", "two", "DummyContext", "__parent__", "two", "one", "__name__", "two", "La Pe\u00f1a", "request", "DummyRequest", "context_url", "_makeOne", "self", "two", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/La%20Pe%C3%B1a/La%20Pe%C3%B1a/", "test_call_with_virtual_root_path", "self", "pyramid.interfaces", "VH_ROOT_KEY", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "one", "DummyContext", "__parent__", "one", "root", "__name__", "one", "one", "two", "DummyContext", "__parent__", "two", "one", "__name__", "two", "two", "request", "DummyRequest", "VH_ROOT_KEY", "/one", "context_url", "_makeOne", "self", "two", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/two/", "request", "DummyRequest", "VH_ROOT_KEY", "/one/two", "context_url", "_makeOne", "self", "two", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/", "test_call_with_virtual_root_path_physical_not_startwith_vroot", "self", "pyramid.interfaces", "VH_ROOT_KEY", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "one", "DummyContext", "__parent__", "one", "root", "__name__", "one", "one", "two", "DummyContext", "__parent__", "two", "one", "__name__", "two", "two", "request", "DummyRequest", "VH_ROOT_KEY", "/wrong", "context_url", "_makeOne", "self", "two", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/one/two/", "test_call_empty_names_not_ignored", "self", "bar", "DummyContext", "empty", "DummyContext", "bar", "root", "DummyContext", "empty", "__parent__", "root", "None", "__name__", "root", "None", "__parent__", "empty", "root", "__name__", "empty", "", "__parent__", "bar", "empty", "__name__", "bar", "bar", "request", "DummyRequest", "context_url", "_makeOne", "self", "bar", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432//bar/", "test_call_local_url_returns_None", "self", "resource", "DummyContext", "resource_url", "request", "info", "assertEqual", "self", "info", "virtual_path", "/", "assertEqual", "self", "info", "physical_path", "/", "None", "__resource_url__", "resource", "resource_url", "request", "DummyRequest", "context_url", "_makeOne", "self", "resource", "request", "result", "context_url", "assertEqual", "self", "result", "http://example.com:5432/", "test_call_local_url_returns_url", "self", "resource", "DummyContext", "resource_url", "request", "info", "assertEqual", "self", "info", "virtual_path", "/", "assertEqual", "self", "info", "physical_path", "/", "abc", "__resource_url__", "resource", "resource_url", "request", "DummyRequest", "context_url", "_makeOne", "self", "resource", "request", "result", "context_url", "assertEqual", "self", "result", "abc", "test_virtual_root_no_virtual_root_path", "self", "root", "DummyContext", "__name__", "root", "None", "__parent__", "root", "None", "one", "DummyContext", "__name__", "one", "one", "__parent__", "one", "root", "request", "DummyRequest", "context_url", "_makeOne", "self", "one", "request", "assertEqual", "self", "virtual_root", "context_url", "root", "test_virtual_root_no_virtual_root_path_with_root_on_request", "self", "context", "DummyContext", "__parent__", "context", "None", "request", "DummyRequest", "root", "request", "DummyContext", "context_url", "_makeOne", "self", "context", "request", "assertEqual", "self", "virtual_root", "context_url", "root", "request", "test_virtual_root_with_virtual_root_path", "self", "pyramid.interfaces", "VH_ROOT_KEY", "context", "DummyContext", "__parent__", "context", "None", "traversed_to", "DummyContext", "environ", "VH_ROOT_KEY", "/one", "request", "DummyRequest", "environ", "traverser", "make_traverser", "context", "view_name", "traversed_to", "", "_registerTraverser", "self", "traverser", "context_url", "_makeOne", "self", "context", "request", "assertEqual", "self", "virtual_root", "context_url", "traversed_to", "assertEqual", "self", "environ", "request", "context", "PATH_INFO", "/one", "test_IResourceURL_attributes_with_vroot", "self", "pyramid.interfaces", "VH_ROOT_KEY", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "one", "DummyContext", "__parent__", "one", "root", "__name__", "one", "one", "two", "DummyContext", "__parent__", "two", "one", "__name__", "two", "two", "environ", "VH_ROOT_KEY", "/one", "request", "DummyRequest", "environ", "context_url", "_makeOne", "self", "two", "request", "assertEqual", "self", "physical_path", "context_url", "/one/two/", "assertEqual", "self", "virtual_path", "context_url", "/two/", "test_IResourceURL_attributes_no_vroot", "self", "root", "DummyContext", "__parent__", "root", "None", "__name__", "root", "None", "one", "DummyContext", "__parent__", "one", "root", "__name__", "one", "one", "two", "DummyContext", "__parent__", "two", "one", "__name__", "two", "two", "environ", "request", "DummyRequest", "environ", "context_url", "_makeOne", "self", "two", "request", "assertEqual", "self", "physical_path", "context_url", "/one/two/", "assertEqual", "self", "virtual_path", "context_url", "/one/two/", "TestVirtualRoot", "TestCase", "unittest", "setUp", "self", "cleanUp", "tearDown", "self", "cleanUp", "_callFUT", "self", "resource", "request", "pyramid.traversal", "virtual_root", "virtual_root", "resource", "request", "test_registered", "self", "zope.interface", "Interface", "request", "_makeRequest", "registerAdapter", "registry", "request", "DummyContextURL", "Interface", "Interface", "IContextURL", "context", "DummyContext", "result", "_callFUT", "self", "context", "request", "assertEqual", "self", "result", "123", "test_default", "self", "context", "DummyContext", "request", "_makeRequest", "environ", "request", "PATH_INFO", "/", "result", "_callFUT", "self", "context", "request", "assertEqual", "self", "result", "context", "test_default_no_registry_on_request", "self", "context", "DummyContext", "request", "_makeRequest", "registry", "request", "environ", "request", "PATH_INFO", "/", "result", "_callFUT", "self", "context", "request", "assertEqual", "self", "result", "context", "TraverseTests", "TestCase", "unittest", "setUp", "self", "cleanUp", "tearDown", "self", "cleanUp", "_callFUT", "self", "context", "name", "pyramid.traversal", "traverse", "traverse", "context", "name", "_registerTraverser", "self", "traverser", "pyramid.threadlocal", "get_current_registry", "reg", "get_current_registry", "pyramid.interfaces", "ITraverser", "zope.interface", "Interface", "registerAdapter", "reg", "traverser", "Interface", "ITraverser", "test_request_has_registry", "self", "pyramid.threadlocal", "get_current_registry", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "", "assertEqual", "self", "registry", "request", "resource", "get_current_registry", "test_list", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "/", "test_generator", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "foo", "", "_callFUT", "self", "resource", "foo", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "/", "test_self_string_found", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_self_unicode_found", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "text_", "", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_self_tuple_found", "self", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_relative_string_found", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_relative_tuple_found", "self", "resource", "DummyContext", "baz", "DummyContext", "traverser", "make_traverser", "context", "view_name", "baz", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "baz", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "baz", "test_absolute_string_found", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "/", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_absolute_tuple_found", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "", "assertEqual", "self", "wascontext", "root", "True", "assertEqual", "self", "environ", "request", "root", "PATH_INFO", "/", "test_empty_sequence", "self", "root", "DummyContext", "resource", "DummyContext", "__parent__", "resource", "root", "__name__", "resource", "baz", "traverser", "make_traverser", "context", "view_name", "root", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "assertEqual", "self", "wascontext", "resource", "True", "assertEqual", "self", "environ", "request", "resource", "PATH_INFO", "", "test_default_traverser", "self", "resource", "DummyContext", "result", "_callFUT", "self", "resource", "", "assertEqual", "self", "result", "view_name", "", "assertEqual", "self", "result", "context", "resource", "test_requestfactory_overridden", "self", "pyramid.interfaces", "IRequestFactory", "pyramid.request", "Request", "pyramid.threadlocal", "get_current_registry", "reg", "get_current_registry", "MyRequest", "Request", "registerUtility", "reg", "MyRequest", "IRequestFactory", "resource", "DummyContext", "traverser", "make_traverser", "context", "view_name", "resource", "", "_registerTraverser", "self", "traverser", "_callFUT", "self", "resource", "", "assertEqual", "self", "__class__", "request", "resource", "MyRequest", "TestDefaultRootFactory", "TestCase", "unittest", "_getTargetClass", "self", "pyramid.traversal", "DefaultRootFactory", "DefaultRootFactory", "_makeOne", "self", "environ", "_getTargetClass", "self", "environ", "test_no_matchdict", "self", "DummyRequest", "matchdict", "None", "root", "_makeOne", "self", "DummyRequest", "assertEqual", "self", "__parent__", "root", "None", "assertEqual", "self", "__name__", "root", "None", "test_matchdict", "self", "DummyRequest", "request", "DummyRequest", "matchdict", "request", "a", "b", "root", "_makeOne", "self", "request", "assertEqual", "self", "a", "root", "assertEqual", "self", "b", "root", "Test__join_path_tuple", "TestCase", "unittest", "_callFUT", "self", "tup", "pyramid.traversal", "_join_path_tuple", "_join_path_tuple", "tup", "test_empty_tuple", "self", "result", "_callFUT", "self", "assertEqual", "self", "result", "/", "test_nonempty_tuple", "self", "result", "_callFUT", "self", "x", "assertEqual", "self", "result", "x", "make_traverser", "result", "DummyTraverser", "object", "__init__", "self", "context", "context", "self", "context", "wascontext", "context", "True", "__call__", "self", "request", "request", "context", "self", "request", "result", "DummyTraverser", "DummyContext", "object", "__parent__", "None", "__init__", "self", "next", "name", "None", "None", "next", "self", "next", "__name__", "self", "name", "__getitem__", "self", "name", "next", "self", "None", "KeyError", "name", "next", "self", "__repr__", "self", "<DummyContext with name %s at id %s>", "__name__", "self", "id", "self", "DummyRequest", "application_url", "http://example.com:5432", "__init__", "self", "environ", "None", "environ", "None", "environ", "environ", "self", "environ", "DummyContextURL", "__init__", "self", "context", "request", "virtual_root", "self", "123", "_makeRequest", "environ", "None", "pyramid.registry", "Registry", "request", "DummyRequest", "registry", "request", "Registry", "request", "logging", "pickle", "django.test", "TestCase", "haystack.models", "SearchResult", "core.models", "MockModel", "core.tests.mocks", "MockSearchResult", "CaptureHandler", "Handler", "logging", "logs_seen", "emit", "self", "record", "append", "logs_seen", "CaptureHandler", "record", "SearchResultTestCase", "TestCase", "setUp", "self", "setUp", "super", "SearchResultTestCase", "self", "cap", "CaptureHandler", "addHandler", "getLogger", "logging", "haystack", "cap", "no_data", "self", "extra_data", "self", "stored", "I am stored data. How fun.", "no_overwrite_data", "self", "django_id", "django_ct", "stored", "haystack.anothermockmodel", "I am stored data. How fun.", "no_data_sr", "self", "MockSearchResult", "haystack", "mockmodel", "1", "extra_data_sr", "self", "MockSearchResult", "haystack", "mockmodel", "1", "extra_data", "self", "no_overwrite_data_sr", "self", "MockSearchResult", "haystack", "mockmodel", "1", "no_overwrite_data", "self", "test_init", "self", "assertEqual", "self", "app_label", "no_data_sr", "self", "haystack", "assertEqual", "self", "model_name", "no_data_sr", "self", "mockmodel", "assertEqual", "self", "model", "no_data_sr", "self", "MockModel", "assertEqual", "self", "verbose_name", "no_data_sr", "self", "assertEqual", "self", "verbose_name_plural", "no_data_sr", "self", "assertEqual", "self", "pk", "no_data_sr", "self", "1", "assertEqual", "self", "score", "no_data_sr", "self", "assertEqual", "self", "stored", "no_data_sr", "self", "None", "assertEqual", "self", "app_label", "extra_data_sr", "self", "haystack", "assertEqual", "self", "model_name", "extra_data_sr", "self", "mockmodel", "assertEqual", "self", "model", "extra_data_sr", "self", "MockModel", "assertEqual", "self", "verbose_name", "extra_data_sr", "self", "assertEqual", "self", "verbose_name_plural", "extra_data_sr", "self", "assertEqual", "self", "pk", "extra_data_sr", "self", "1", "assertEqual", "self", "score", "extra_data_sr", "self", "assertEqual", "self", "stored", "extra_data_sr", "self", "I am stored data. How fun.", "assertEqual", "self", "app_label", "no_overwrite_data_sr", "self", "haystack", "assertEqual", "self", "model_name", "no_overwrite_data_sr", "self", "mockmodel", "assertEqual", "self", "model", "no_overwrite_data_sr", "self", "MockModel", "assertEqual", "self", "verbose_name", "no_overwrite_data_sr", "self", "assertEqual", "self", "verbose_name_plural", "no_overwrite_data_sr", "self", "assertEqual", "self", "pk", "no_overwrite_data_sr", "self", "1", "assertEqual", "self", "score", "no_overwrite_data_sr", "self", "assertEqual", "self", "stored", "no_overwrite_data_sr", "self", "I am stored data. How fun.", "test_get_additional_fields", "self", "assertEqual", "self", "get_additional_fields", "no_data_sr", "self", "assertEqual", "self", "get_additional_fields", "extra_data_sr", "self", "stored", "I am stored data. How fun.", "assertEqual", "self", "get_additional_fields", "no_overwrite_data_sr", "self", "django_ct", "django_id", "stored", "haystack.anothermockmodel", "I am stored data. How fun.", "test_unicode", "self", "assertEqual", "self", "__unicode__", "no_data_sr", "self", "assertEqual", "self", "__unicode__", "extra_data_sr", "self", "assertEqual", "self", "__unicode__", "no_overwrite_data_sr", "self", "test_stored_fields", "self", "haystack", "haystack.sites", "SearchSite", "old_site", "site", "haystack", "test_site", "SearchSite", "site", "haystack", "test_site", "assertEqual", "self", "get_stored_fields", "no_data_sr", "self", "assertEqual", "self", "get_stored_fields", "extra_data_sr", "self", "assertEqual", "self", "get_stored_fields", "no_overwrite_data_sr", "self", "haystack.indexes", "SearchIndex", "CharField", "TestSearchIndex", "SearchIndex", "stored", "CharField", "model_attr", "author", "document", "True", "register", "site", "haystack", "MockModel", "TestSearchIndex", "assertEqual", "self", "get_stored_fields", "no_data_sr", "self", "stored", "None", "assertEqual", "self", "get_stored_fields", "extra_data_sr", "self", "stored", "I am stored data. How fun.", "assertEqual", "self", "get_stored_fields", "no_overwrite_data_sr", "self", "stored", "I am stored data. How fun.", "site", "haystack", "old_site", "test_missing_object", "self", "awol1", "SearchResult", "core", "mockmodel", "1000000", "assertEqual", "self", "app_label", "awol1", "core", "assertEqual", "self", "model_name", "awol1", "mockmodel", "assertEqual", "self", "pk", "awol1", "1000000", "assertEqual", "self", "score", "awol1", "awol2", "SearchResult", "core", "yetanothermockmodel", "1000000", "assertEqual", "self", "app_label", "awol2", "core", "assertEqual", "self", "model_name", "awol2", "yetanothermockmodel", "assertEqual", "self", "pk", "awol2", "1000000", "assertEqual", "self", "score", "awol2", "logs_seen", "CaptureHandler", "assertEqual", "self", "model", "awol1", "MockModel", "assertEqual", "self", "object", "awol1", "None", "assertEqual", "self", "verbose_name", "awol1", "assertEqual", "self", "verbose_name_plural", "awol1", "assertEqual", "self", "stored", "awol1", "None", "assertEqual", "self", "len", "logs_seen", "CaptureHandler", "logs_seen", "CaptureHandler", "assertEqual", "self", "model", "awol2", "None", "assertEqual", "self", "object", "awol2", "None", "assertEqual", "self", "verbose_name", "awol2", "assertEqual", "self", "verbose_name_plural", "awol2", "assertEqual", "self", "stored", "awol2", "None", "assertEqual", "self", "len", "logs_seen", "CaptureHandler", "test_pickling", "self", "pickle_me_1", "SearchResult", "core", "mockmodel", "1000000", "picklicious", "dumps", "pickle", "pickle_me_1", "pickle_me_2", "loads", "pickle", "picklicious", "assertEqual", "self", "app_label", "pickle_me_1", "app_label", "pickle_me_2", "assertEqual", "self", "model_name", "pickle_me_1", "model_name", "pickle_me_2", "assertEqual", "self", "pk", "pickle_me_1", "pk", "pickle_me_2", "assertEqual", "self", "score", "pickle_me_1", "score", "pickle_me_2", "datetime", "re", "datetime", "date", "decimal", "Decimal", "django", "forms", "django.db", "models", "django.forms.models", "_get_foreign_key", "inlineformset_factory", "modelformset_factory", "modelformset_factory", "django.test", "TestCase", "skipUnlessDBFeature", "modeltests.model_formsets.models", "Author", "BetterAuthor", "Book", "BookWithCustomPK", "Editor", "BookWithOptionalAltEditor", "AlternateBook", "AuthorMeeting", "CustomPrimaryKey", "Place", "Owner", "Location", "OwnerProfile", "Restaurant", "Product", "Price", "MexicanRestaurant", "ClassyMexicanRestaurant", "Repository", "Revision", "Person", "Membership", "Team", "Player", "Poet", "Poem", "Post", "DeletionTests", "TestCase", "test_deletion", "self", "PoetFormSet", "modelformset_factory", "Poet", "can_delete", "True", "poet", "create", "objects", "Poet", "name", "test", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "form-0-DELETE", "str", "pk", "poet", "formset", "PoetFormSet", "data", "queryset", "all", "objects", "Poet", "save", "formset", "assertTrue", "self", "is_valid", "formset", "assertEqual", "self", "count", "objects", "Poet", "test_add_form_deletion_when_invalid", "self", "\n        Make sure that an add form that is filled out, but marked for deletion\n        doesn't cause validation errors.\n        ", "PoetFormSet", "modelformset_factory", "Poet", "can_delete", "True", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "formset", "PoetFormSet", "data", "queryset", "all", "objects", "Poet", "assertEqual", "self", "is_valid", "formset", "False", "assertEqual", "self", "count", "objects", "Poet", "data", "form-0-DELETE", "on", "formset", "PoetFormSet", "data", "queryset", "all", "objects", "Poet", "assertEqual", "self", "is_valid", "formset", "True", "save", "formset", "assertEqual", "self", "count", "objects", "Poet", "test_change_form_deletion_when_invalid", "self", "\n        Make sure that an add form that is filled out, but marked for deletion\n        doesn't cause validation errors.\n        ", "PoetFormSet", "modelformset_factory", "Poet", "can_delete", "True", "poet", "create", "objects", "Poet", "name", "test", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "unicode", "id", "poet", "formset", "PoetFormSet", "data", "queryset", "all", "objects", "Poet", "assertEqual", "self", "is_valid", "formset", "False", "assertEqual", "self", "count", "objects", "Poet", "data", "form-0-DELETE", "on", "formset", "PoetFormSet", "data", "queryset", "all", "objects", "Poet", "assertEqual", "self", "is_valid", "formset", "True", "save", "formset", "assertEqual", "self", "count", "objects", "Poet", "ModelFormsetTest", "TestCase", "test_simple_save", "self", "qs", "all", "objects", "Author", "AuthorFormSet", "modelformset_factory", "Author", "extra", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-name\">Name:</label> <input id=\"id_form-0-name\" type=\"text\" name=\"form-0-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-0-id\" id=\"id_form-0-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-1-name\">Name:</label> <input id=\"id_form-1-name\" type=\"text\" name=\"form-1-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-1-id\" id=\"id_form-1-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-2-name\">Name:</label> <input id=\"id_form-2-name\" type=\"text\" name=\"form-2-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-2-id\" id=\"id_form-2-id\" /></p>", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-name", "form-1-name", "form-2-name", "3", "0", "", "Charles Baudelaire", "Arthur Rimbaud", "", "formset", "AuthorFormSet", "data", "data", "queryset", "qs", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "author1", "author2", "saved", "assertEqual", "self", "author1", "get", "objects", "Author", "name", "Charles Baudelaire", "assertEqual", "self", "author2", "get", "objects", "Author", "name", "Arthur Rimbaud", "authors", "list", "order_by", "objects", "Author", "name", "assertEqual", "self", "authors", "author2", "author1", "qs", "order_by", "objects", "Author", "name", "AuthorFormSet", "modelformset_factory", "Author", "extra", "can_delete", "False", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-name\">Name:</label> <input id=\"id_form-0-name\" type=\"text\" name=\"form-0-name\" value=\"Arthur Rimbaud\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-0-id\" value=\"%d\" id=\"id_form-0-id\" /></p>", "id", "author2", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-1-name\">Name:</label> <input id=\"id_form-1-name\" type=\"text\" name=\"form-1-name\" value=\"Charles Baudelaire\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-1-id\" value=\"%d\" id=\"id_form-1-id\" /></p>", "id", "author1", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-2-name\">Name:</label> <input id=\"id_form-2-name\" type=\"text\" name=\"form-2-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"form-2-id\" id=\"id_form-2-id\" /></p>", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "form-1-id", "form-1-name", "form-2-name", "3", "2", "", "str", "id", "author2", "Arthur Rimbaud", "str", "id", "author1", "Charles Baudelaire", "Paul Verlaine", "formset", "AuthorFormSet", "data", "data", "queryset", "qs", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "author3", "saved", "assertEqual", "self", "author3", "get", "objects", "Author", "name", "Paul Verlaine", "authors", "list", "order_by", "objects", "Author", "name", "assertEqual", "self", "authors", "author2", "author1", "author3", "qs", "order_by", "objects", "Author", "name", "AuthorFormSet", "modelformset_factory", "Author", "extra", "can_delete", "True", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-name\">Name:</label> <input id=\"id_form-0-name\" type=\"text\" name=\"form-0-name\" value=\"Arthur Rimbaud\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-0-DELETE\">Delete:</label> <input type=\"checkbox\" name=\"form-0-DELETE\" id=\"id_form-0-DELETE\" /><input type=\"hidden\" name=\"form-0-id\" value=\"%d\" id=\"id_form-0-id\" /></p>", "id", "author2", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-1-name\">Name:</label> <input id=\"id_form-1-name\" type=\"text\" name=\"form-1-name\" value=\"Charles Baudelaire\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-1-DELETE\">Delete:</label> <input type=\"checkbox\" name=\"form-1-DELETE\" id=\"id_form-1-DELETE\" /><input type=\"hidden\" name=\"form-1-id\" value=\"%d\" id=\"id_form-1-id\" /></p>", "id", "author1", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-2-name\">Name:</label> <input id=\"id_form-2-name\" type=\"text\" name=\"form-2-name\" value=\"Paul Verlaine\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-2-DELETE\">Delete:</label> <input type=\"checkbox\" name=\"form-2-DELETE\" id=\"id_form-2-DELETE\" /><input type=\"hidden\" name=\"form-2-id\" value=\"%d\" id=\"id_form-2-id\" /></p>", "id", "author3", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-3-name\">Name:</label> <input id=\"id_form-3-name\" type=\"text\" name=\"form-3-name\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-3-DELETE\">Delete:</label> <input type=\"checkbox\" name=\"form-3-DELETE\" id=\"id_form-3-DELETE\" /><input type=\"hidden\" name=\"form-3-id\" id=\"id_form-3-id\" /></p>", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "form-1-id", "form-1-name", "form-2-id", "form-2-name", "form-3-name", "form-3-DELETE", "4", "3", "", "str", "id", "author2", "Arthur Rimbaud", "str", "id", "author1", "Charles Baudelaire", "str", "id", "author3", "Paul Verlaine", "Walt Whitman", "on", "formset", "AuthorFormSet", "data", "data", "queryset", "qs", "assertTrue", "self", "is_valid", "formset", "assertEqual", "self", "save", "formset", "authors", "list", "order_by", "objects", "Author", "name", "assertEqual", "self", "authors", "author2", "author1", "author3", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "form-1-id", "form-1-name", "form-2-id", "form-2-name", "form-3-name", "form-3-DELETE", "4", "3", "", "str", "id", "author2", "Walt Whitman", "str", "id", "author1", "Charles Baudelaire", "str", "id", "author3", "Paul Verlaine", "", "", "formset", "AuthorFormSet", "data", "data", "queryset", "qs", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "assertEqual", "self", "saved", "get", "objects", "Author", "name", "Walt Whitman", "test_commit_false", "self", "author1", "create", "objects", "Author", "name", "Charles Baudelaire", "author2", "create", "objects", "Author", "name", "Paul Verlaine", "author3", "create", "objects", "Author", "name", "Walt Whitman", "meeting", "create", "objects", "AuthorMeeting", "created", "today", "date", "authors", "meeting", "all", "objects", "Author", "author4", "create", "objects", "Author", "name", "AuthorMeetingFormSet", "modelformset_factory", "AuthorMeeting", "extra", "can_delete", "True", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-id", "form-0-name", "form-0-authors", "form-1-name", "form-1-authors", "form-1-DELETE", "2", "1", "", "str", "id", "meeting", "2nd Tuesday of the Week Meeting", "id", "author2", "id", "author1", "id", "author3", "id", "author4", "", "", "", "formset", "AuthorMeetingFormSet", "data", "data", "queryset", "all", "objects", "AuthorMeeting", "assertTrue", "self", "is_valid", "formset", "instances", "save", "formset", "commit", "False", "instance", "instances", "created", "instance", "today", "date", "save", "instance", "save_m2m", "formset", "assertQuerysetEqual", "self", "all", "authors", "instances", "<Author: Charles Baudelaire>", "<Author: John Steinbeck>", "<Author: Paul Verlaine>", "<Author: Walt Whitman>", "test_max_num", "self", "author1", "create", "objects", "Author", "name", "Charles Baudelaire", "author2", "create", "objects", "Author", "name", "Paul Verlaine", "author3", "create", "objects", "Author", "name", "Walt Whitman", "qs", "order_by", "objects", "Author", "name", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "None", "extra", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "len", "extra_forms", "formset", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "extra", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "len", "extra_forms", "formset", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "extra", "formset", "AuthorFormSet", "queryset", "qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "len", "extra_forms", "formset", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "None", "formset", "AuthorFormSet", "queryset", "qs", "assertQuerysetEqual", "self", "get_queryset", "formset", "<Author: Charles Baudelaire>", "<Author: Paul Verlaine>", "<Author: Walt Whitman>", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "formset", "AuthorFormSet", "queryset", "qs", "assertQuerysetEqual", "self", "get_queryset", "formset", "<Author: Charles Baudelaire>", "<Author: Paul Verlaine>", "<Author: Walt Whitman>", "AuthorFormSet", "modelformset_factory", "Author", "max_num", "formset", "AuthorFormSet", "queryset", "qs", "assertQuerysetEqual", "self", "get_queryset", "formset", "<Author: Charles Baudelaire>", "<Author: Paul Verlaine>", "<Author: Walt Whitman>", "test_custom_save_method", "self", "PoetForm", "ModelForm", "forms", "save", "self", "commit", "True", "author", "save", "super", "PoetForm", "self", "commit", "False", "name", "author", "commit", "save", "author", "author", "PoetFormSet", "modelformset_factory", "Poet", "form", "PoetForm", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-name", "form-1-name", "form-2-name", "3", "0", "", "Walt Whitman", "Charles Baudelaire", "", "qs", "all", "objects", "Poet", "formset", "PoetFormSet", "data", "data", "queryset", "qs", "assertTrue", "self", "is_valid", "formset", "poets", "save", "formset", "assertEqual", "self", "len", "poets", "poet1", "poet2", "poets", "assertEqual", "self", "name", "poet1", "Vladimir Mayakovsky", "assertEqual", "self", "name", "poet2", "Vladimir Mayakovsky", "test_model_inheritance", "self", "BetterAuthorFormSet", "modelformset_factory", "BetterAuthor", "formset", "BetterAuthorFormSet", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-name\">Name:</label> <input id=\"id_form-0-name\" type=\"text\" name=\"form-0-name\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-0-write_speed\">Write speed:</label> <input type=\"text\" name=\"form-0-write_speed\" id=\"id_form-0-write_speed\" /><input type=\"hidden\" name=\"form-0-author_ptr\" id=\"id_form-0-author_ptr\" /></p>", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-author_ptr", "form-0-name", "form-0-write_speed", "1", "0", "", "", "Ernest Hemingway", "10", "formset", "BetterAuthorFormSet", "data", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "author1", "saved", "assertEqual", "self", "author1", "get", "objects", "BetterAuthor", "name", "Ernest Hemingway", "hemingway_id", "pk", "get", "objects", "BetterAuthor", "name", "Ernest Hemingway", "formset", "BetterAuthorFormSet", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-name\">Name:</label> <input id=\"id_form-0-name\" type=\"text\" name=\"form-0-name\" value=\"Ernest Hemingway\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-0-write_speed\">Write speed:</label> <input type=\"text\" name=\"form-0-write_speed\" value=\"10\" id=\"id_form-0-write_speed\" /><input type=\"hidden\" name=\"form-0-author_ptr\" value=\"%d\" id=\"id_form-0-author_ptr\" /></p>", "hemingway_id", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-1-name\">Name:</label> <input id=\"id_form-1-name\" type=\"text\" name=\"form-1-name\" maxlength=\"100\" /></p>\n<p><label for=\"id_form-1-write_speed\">Write speed:</label> <input type=\"text\" name=\"form-1-write_speed\" id=\"id_form-1-write_speed\" /><input type=\"hidden\" name=\"form-1-author_ptr\" id=\"id_form-1-author_ptr\" /></p>", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-author_ptr", "form-0-name", "form-0-write_speed", "form-1-author_ptr", "form-1-name", "form-1-write_speed", "2", "1", "", "hemingway_id", "Ernest Hemingway", "10", "", "", "", "formset", "BetterAuthorFormSet", "data", "assertTrue", "self", "is_valid", "formset", "assertEqual", "self", "save", "formset", "test_inline_formsets", "self", "AuthorBooksFormSet", "inlineformset_factory", "Author", "Book", "can_delete", "False", "extra", "author", "create", "objects", "Author", "name", "Charles Baudelaire", "formset", "AuthorBooksFormSet", "instance", "author", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-0-title\">Title:</label> <input id=\"id_book_set-0-title\" type=\"text\" name=\"book_set-0-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-0-author\" value=\"%d\" id=\"id_book_set-0-author\" /><input type=\"hidden\" name=\"book_set-0-id\" id=\"id_book_set-0-id\" /></p>", "id", "author", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-1-title\">Title:</label> <input id=\"id_book_set-1-title\" type=\"text\" name=\"book_set-1-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-1-author\" value=\"%d\" id=\"id_book_set-1-author\" /><input type=\"hidden\" name=\"book_set-1-id\" id=\"id_book_set-1-id\" /></p>", "id", "author", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-2-title\">Title:</label> <input id=\"id_book_set-2-title\" type=\"text\" name=\"book_set-2-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-2-author\" value=\"%d\" id=\"id_book_set-2-author\" /><input type=\"hidden\" name=\"book_set-2-id\" id=\"id_book_set-2-id\" /></p>", "id", "author", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-title", "book_set-1-title", "book_set-2-title", "3", "0", "", "Les Fleurs du Mal", "", "", "formset", "AuthorBooksFormSet", "data", "instance", "author", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book1", "saved", "assertEqual", "self", "book1", "get", "objects", "Book", "title", "Les Fleurs du Mal", "assertQuerysetEqual", "self", "all", "book_set", "author", "<Book: Les Fleurs du Mal>", "AuthorBooksFormSet", "inlineformset_factory", "Author", "Book", "can_delete", "False", "extra", "author", "get", "objects", "Author", "name", "Charles Baudelaire", "formset", "AuthorBooksFormSet", "instance", "author", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-0-title\">Title:</label> <input id=\"id_book_set-0-title\" type=\"text\" name=\"book_set-0-title\" value=\"Les Fleurs du Mal\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-0-author\" value=\"%d\" id=\"id_book_set-0-author\" /><input type=\"hidden\" name=\"book_set-0-id\" value=\"%d\" id=\"id_book_set-0-id\" /></p>", "id", "author", "id", "book1", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-1-title\">Title:</label> <input id=\"id_book_set-1-title\" type=\"text\" name=\"book_set-1-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-1-author\" value=\"%d\" id=\"id_book_set-1-author\" /><input type=\"hidden\" name=\"book_set-1-id\" id=\"id_book_set-1-id\" /></p>", "id", "author", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-2-title\">Title:</label> <input id=\"id_book_set-2-title\" type=\"text\" name=\"book_set-2-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-2-author\" value=\"%d\" id=\"id_book_set-2-author\" /><input type=\"hidden\" name=\"book_set-2-id\" id=\"id_book_set-2-id\" /></p>", "id", "author", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-id", "book_set-0-title", "book_set-1-title", "book_set-2-title", "3", "1", "", "str", "id", "book1", "Les Fleurs du Mal", "Les Paradis Artificiels", "", "formset", "AuthorBooksFormSet", "data", "instance", "author", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book2", "saved", "assertEqual", "self", "book2", "get", "objects", "Book", "title", "Les Paradis Artificiels", "assertQuerysetEqual", "self", "order_by", "book_set", "author", "title", "<Book: Les Fleurs du Mal>", "<Book: Les Paradis Artificiels>", "test_inline_formsets_save_as_new", "self", "AuthorBooksFormSet", "inlineformset_factory", "Author", "Book", "can_delete", "False", "extra", "author", "create", "objects", "Author", "name", "Charles Baudelaire", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-id", "book_set-0-title", "book_set-1-id", "book_set-1-title", "book_set-2-title", "3", "2", "", "1", "Les Fleurs du Mal", "2", "Les Paradis Artificiels", "", "formset", "AuthorBooksFormSet", "data", "instance", "Author", "save_as_new", "True", "assertTrue", "self", "is_valid", "formset", "new_author", "create", "objects", "Author", "name", "Charles Baudelaire", "formset", "AuthorBooksFormSet", "data", "instance", "new_author", "save_as_new", "True", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book1", "book2", "saved", "assertEqual", "self", "title", "book1", "Les Fleurs du Mal", "assertEqual", "self", "title", "book2", "Les Paradis Artificiels", "formset", "AuthorBooksFormSet", "prefix", "test", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_test-0-title\">Title:</label> <input id=\"id_test-0-title\" type=\"text\" name=\"test-0-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"test-0-author\" id=\"id_test-0-author\" /><input type=\"hidden\" name=\"test-0-id\" id=\"id_test-0-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_test-1-title\">Title:</label> <input id=\"id_test-1-title\" type=\"text\" name=\"test-1-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"test-1-author\" id=\"id_test-1-author\" /><input type=\"hidden\" name=\"test-1-id\" id=\"id_test-1-id\" /></p>", "test_inline_formsets_with_custom_pk", "self", "AuthorBooksFormSet2", "inlineformset_factory", "Author", "BookWithCustomPK", "can_delete", "False", "extra", "author", "create", "objects", "Author", "pk", "name", "Charles Baudelaire", "formset", "AuthorBooksFormSet2", "instance", "author", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_bookwithcustompk_set-0-my_pk\">My pk:</label> <input type=\"text\" name=\"bookwithcustompk_set-0-my_pk\" id=\"id_bookwithcustompk_set-0-my_pk\" /></p>\n<p><label for=\"id_bookwithcustompk_set-0-title\">Title:</label> <input id=\"id_bookwithcustompk_set-0-title\" type=\"text\" name=\"bookwithcustompk_set-0-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"bookwithcustompk_set-0-author\" value=\"1\" id=\"id_bookwithcustompk_set-0-author\" /></p>", "data", "bookwithcustompk_set-TOTAL_FORMS", "bookwithcustompk_set-INITIAL_FORMS", "bookwithcustompk_set-MAX_NUM_FORMS", "bookwithcustompk_set-0-my_pk", "bookwithcustompk_set-0-title", "1", "0", "", "77777", "Les Fleurs du Mal", "formset", "AuthorBooksFormSet2", "data", "instance", "author", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book1", "saved", "assertEqual", "self", "pk", "book1", "book1", "get", "bookwithcustompk_set", "author", "assertEqual", "self", "title", "book1", "Les Fleurs du Mal", "test_inline_formsets_with_multi_table_inheritance", "self", "AuthorBooksFormSet3", "inlineformset_factory", "Author", "AlternateBook", "can_delete", "False", "extra", "author", "create", "objects", "Author", "pk", "name", "Charles Baudelaire", "formset", "AuthorBooksFormSet3", "instance", "author", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_alternatebook_set-0-title\">Title:</label> <input id=\"id_alternatebook_set-0-title\" type=\"text\" name=\"alternatebook_set-0-title\" maxlength=\"100\" /></p>\n<p><label for=\"id_alternatebook_set-0-notes\">Notes:</label> <input id=\"id_alternatebook_set-0-notes\" type=\"text\" name=\"alternatebook_set-0-notes\" maxlength=\"100\" /><input type=\"hidden\" name=\"alternatebook_set-0-author\" value=\"1\" id=\"id_alternatebook_set-0-author\" /><input type=\"hidden\" name=\"alternatebook_set-0-book_ptr\" id=\"id_alternatebook_set-0-book_ptr\" /></p>", "data", "alternatebook_set-TOTAL_FORMS", "alternatebook_set-INITIAL_FORMS", "alternatebook_set-MAX_NUM_FORMS", "alternatebook_set-0-title", "alternatebook_set-0-notes", "1", "0", "", "Flowers of Evil", "English translation of Les Fleurs du Mal", "formset", "AuthorBooksFormSet3", "data", "instance", "author", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book1", "saved", "assertEqual", "self", "title", "book1", "Flowers of Evil", "assertEqual", "self", "notes", "book1", "English translation of Les Fleurs du Mal", "test_inline_formsets_with_nullable_unique_together", "self", "AuthorBooksFormSet4", "inlineformset_factory", "Author", "BookWithOptionalAltEditor", "can_delete", "False", "extra", "author", "create", "objects", "Author", "pk", "name", "Charles Baudelaire", "data", "bookwithoptionalalteditor_set-TOTAL_FORMS", "bookwithoptionalalteditor_set-INITIAL_FORMS", "bookwithoptionalalteditor_set-MAX_NUM_FORMS", "bookwithoptionalalteditor_set-0-author", "bookwithoptionalalteditor_set-0-title", "bookwithoptionalalteditor_set-1-author", "bookwithoptionalalteditor_set-1-title", "2", "0", "", "1", "Les Fleurs du Mal", "1", "Les Fleurs du Mal", "formset", "AuthorBooksFormSet4", "data", "instance", "author", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "book1", "book2", "saved", "assertEqual", "self", "author_id", "book1", "assertEqual", "self", "title", "book1", "Les Fleurs du Mal", "assertEqual", "self", "author_id", "book2", "assertEqual", "self", "title", "book2", "Les Fleurs du Mal", "skipUnlessDBFeature", "ignores_nulls_in_unique_constraints", "test_inline_formsets_with_custom_save_method", "self", "AuthorBooksFormSet", "inlineformset_factory", "Author", "Book", "can_delete", "False", "extra", "author", "create", "objects", "Author", "pk", "name", "Charles Baudelaire", "book1", "create", "objects", "Book", "pk", "author", "author", "title", "Les Paradis Artificiels", "book2", "create", "objects", "Book", "pk", "author", "author", "title", "Les Fleurs du Mal", "book3", "create", "objects", "Book", "pk", "author", "author", "title", "Flowers of Evil", "PoemForm", "ModelForm", "forms", "save", "self", "commit", "True", "poem", "save", "super", "PoemForm", "self", "commit", "False", "name", "poem", "commit", "save", "poem", "poem", "PoemFormSet", "inlineformset_factory", "Poet", "Poem", "form", "PoemForm", "data", "poem_set-TOTAL_FORMS", "poem_set-INITIAL_FORMS", "poem_set-MAX_NUM_FORMS", "poem_set-0-name", "poem_set-1-name", "poem_set-2-name", "3", "0", "", "The Cloud in Trousers", "I", "", "poet", "create", "objects", "Poet", "name", "Vladimir Mayakovsky", "formset", "PoemFormSet", "data", "data", "instance", "poet", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "poem1", "poem2", "saved", "assertEqual", "self", "name", "poem1", "Brooklyn Bridge", "assertEqual", "self", "name", "poem2", "Brooklyn Bridge", "custom_qs", "order_by", "objects", "Book", "-title", "formset", "AuthorBooksFormSet", "instance", "author", "queryset", "custom_qs", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-0-title\">Title:</label> <input id=\"id_book_set-0-title\" type=\"text\" name=\"book_set-0-title\" value=\"Les Paradis Artificiels\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-0-author\" value=\"1\" id=\"id_book_set-0-author\" /><input type=\"hidden\" name=\"book_set-0-id\" value=\"1\" id=\"id_book_set-0-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-1-title\">Title:</label> <input id=\"id_book_set-1-title\" type=\"text\" name=\"book_set-1-title\" value=\"Les Fleurs du Mal\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-1-author\" value=\"1\" id=\"id_book_set-1-author\" /><input type=\"hidden\" name=\"book_set-1-id\" value=\"2\" id=\"id_book_set-1-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-2-title\">Title:</label> <input id=\"id_book_set-2-title\" type=\"text\" name=\"book_set-2-title\" value=\"Flowers of Evil\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-2-author\" value=\"1\" id=\"id_book_set-2-author\" /><input type=\"hidden\" name=\"book_set-2-id\" value=\"3\" id=\"id_book_set-2-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-3-title\">Title:</label> <input id=\"id_book_set-3-title\" type=\"text\" name=\"book_set-3-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-3-author\" value=\"1\" id=\"id_book_set-3-author\" /><input type=\"hidden\" name=\"book_set-3-id\" id=\"id_book_set-3-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-4-title\">Title:</label> <input id=\"id_book_set-4-title\" type=\"text\" name=\"book_set-4-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-4-author\" value=\"1\" id=\"id_book_set-4-author\" /><input type=\"hidden\" name=\"book_set-4-id\" id=\"id_book_set-4-id\" /></p>", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-id", "book_set-0-title", "book_set-1-id", "book_set-1-title", "book_set-2-id", "book_set-2-title", "book_set-3-title", "book_set-4-title", "5", "3", "", "str", "id", "book1", "Les Paradis Artificiels", "str", "id", "book2", "Les Fleurs du Mal", "str", "id", "book3", "Flowers of Evil", "Revue des deux mondes", "", "formset", "AuthorBooksFormSet", "data", "instance", "author", "queryset", "custom_qs", "assertTrue", "self", "is_valid", "formset", "custom_qs", "filter", "objects", "Book", "title__startswith", "F", "formset", "AuthorBooksFormSet", "instance", "author", "queryset", "custom_qs", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-0-title\">Title:</label> <input id=\"id_book_set-0-title\" type=\"text\" name=\"book_set-0-title\" value=\"Flowers of Evil\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-0-author\" value=\"1\" id=\"id_book_set-0-author\" /><input type=\"hidden\" name=\"book_set-0-id\" value=\"3\" id=\"id_book_set-0-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-1-title\">Title:</label> <input id=\"id_book_set-1-title\" type=\"text\" name=\"book_set-1-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-1-author\" value=\"1\" id=\"id_book_set-1-author\" /><input type=\"hidden\" name=\"book_set-1-id\" id=\"id_book_set-1-id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_book_set-2-title\">Title:</label> <input id=\"id_book_set-2-title\" type=\"text\" name=\"book_set-2-title\" maxlength=\"100\" /><input type=\"hidden\" name=\"book_set-2-author\" value=\"1\" id=\"id_book_set-2-author\" /><input type=\"hidden\" name=\"book_set-2-id\" id=\"id_book_set-2-id\" /></p>", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-id", "book_set-0-title", "book_set-1-title", "book_set-2-title", "3", "1", "", "str", "id", "book3", "Flowers of Evil", "Revue des deux mondes", "", "formset", "AuthorBooksFormSet", "data", "instance", "author", "queryset", "custom_qs", "assertTrue", "self", "is_valid", "formset", "test_custom_pk", "self", "CustomPrimaryKeyFormSet", "modelformset_factory", "CustomPrimaryKey", "formset", "CustomPrimaryKeyFormSet", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-my_pk\">My pk:</label> <input id=\"id_form-0-my_pk\" type=\"text\" name=\"form-0-my_pk\" maxlength=\"10\" /></p>\n<p><label for=\"id_form-0-some_field\">Some field:</label> <input id=\"id_form-0-some_field\" type=\"text\" name=\"form-0-some_field\" maxlength=\"100\" /></p>", "place", "create", "objects", "Place", "pk", "name", "city", "FormSet", "inlineformset_factory", "Place", "Owner", "extra", "can_delete", "False", "formset", "FormSet", "instance", "place", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_owner_set-0-name\">Name:</label> <input id=\"id_owner_set-0-name\" type=\"text\" name=\"owner_set-0-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"owner_set-0-place\" value=\"1\" id=\"id_owner_set-0-place\" /><input type=\"hidden\" name=\"owner_set-0-auto_id\" id=\"id_owner_set-0-auto_id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_owner_set-1-name\">Name:</label> <input id=\"id_owner_set-1-name\" type=\"text\" name=\"owner_set-1-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"owner_set-1-place\" value=\"1\" id=\"id_owner_set-1-place\" /><input type=\"hidden\" name=\"owner_set-1-auto_id\" id=\"id_owner_set-1-auto_id\" /></p>", "data", "owner_set-TOTAL_FORMS", "owner_set-INITIAL_FORMS", "owner_set-MAX_NUM_FORMS", "owner_set-0-auto_id", "owner_set-0-name", "owner_set-1-auto_id", "owner_set-1-name", "2", "0", "", "", "", "", "formset", "FormSet", "data", "instance", "place", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "owner1", "saved", "assertEqual", "self", "name", "owner1", "Joe Perry", "assertEqual", "self", "name", "place", "owner1", "Giordanos", "formset", "FormSet", "instance", "place", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_owner_set-0-name\">Name:</label> <input id=\"id_owner_set-0-name\" type=\"text\" name=\"owner_set-0-name\" value=\"Joe Perry\" maxlength=\"100\" /><input type=\"hidden\" name=\"owner_set-0-place\" value=\"1\" id=\"id_owner_set-0-place\" /><input type=\"hidden\" name=\"owner_set-0-auto_id\" value=\"%d\" id=\"id_owner_set-0-auto_id\" /></p>", "auto_id", "owner1", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_owner_set-1-name\">Name:</label> <input id=\"id_owner_set-1-name\" type=\"text\" name=\"owner_set-1-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"owner_set-1-place\" value=\"1\" id=\"id_owner_set-1-place\" /><input type=\"hidden\" name=\"owner_set-1-auto_id\" id=\"id_owner_set-1-auto_id\" /></p>", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_owner_set-2-name\">Name:</label> <input id=\"id_owner_set-2-name\" type=\"text\" name=\"owner_set-2-name\" maxlength=\"100\" /><input type=\"hidden\" name=\"owner_set-2-place\" value=\"1\" id=\"id_owner_set-2-place\" /><input type=\"hidden\" name=\"owner_set-2-auto_id\" id=\"id_owner_set-2-auto_id\" /></p>", "data", "owner_set-TOTAL_FORMS", "owner_set-INITIAL_FORMS", "owner_set-MAX_NUM_FORMS", "owner_set-0-auto_id", "owner_set-0-name", "owner_set-1-auto_id", "owner_set-1-name", "owner_set-2-auto_id", "owner_set-2-name", "3", "1", "", "unicode", "auto_id", "owner1", "", "", "", "formset", "FormSet", "data", "instance", "place", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "owner2", "saved", "assertEqual", "self", "name", "owner2", "Jack Berry", "assertEqual", "self", "name", "place", "owner2", "Giordanos", "FormSet", "modelformset_factory", "OwnerProfile", "formset", "FormSet", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_form-0-owner\">Owner:</label> <select name=\"form-0-owner\" id=\"id_form-0-owner\">\n<option value=\"\" selected=\"selected\">---------</option>\n<option value=\"%d\">Joe Perry at Giordanos</option>\n<option value=\"%d\">Jack Berry at Giordanos</option>\n</select></p>\n<p><label for=\"id_form-0-age\">Age:</label> <input type=\"text\" name=\"form-0-age\" id=\"id_form-0-age\" /></p>", "auto_id", "owner1", "auto_id", "owner2", "owner1", "get", "objects", "Owner", "name", "FormSet", "inlineformset_factory", "Owner", "OwnerProfile", "max_num", "can_delete", "False", "assertEqual", "self", "max_num", "FormSet", "formset", "FormSet", "instance", "owner1", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_ownerprofile-0-age\">Age:</label> <input type=\"text\" name=\"ownerprofile-0-age\" id=\"id_ownerprofile-0-age\" /><input type=\"hidden\" name=\"ownerprofile-0-owner\" value=\"%d\" id=\"id_ownerprofile-0-owner\" /></p>", "auto_id", "owner1", "data", "ownerprofile-TOTAL_FORMS", "ownerprofile-INITIAL_FORMS", "ownerprofile-MAX_NUM_FORMS", "ownerprofile-0-owner", "ownerprofile-0-age", "1", "0", "1", "", "formset", "FormSet", "data", "instance", "owner1", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "profile1", "saved", "assertEqual", "self", "owner", "profile1", "owner1", "assertEqual", "self", "age", "profile1", "formset", "FormSet", "instance", "owner1", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_ownerprofile-0-age\">Age:</label> <input type=\"text\" name=\"ownerprofile-0-age\" value=\"54\" id=\"id_ownerprofile-0-age\" /><input type=\"hidden\" name=\"ownerprofile-0-owner\" value=\"%d\" id=\"id_ownerprofile-0-owner\" /></p>", "auto_id", "owner1", "data", "ownerprofile-TOTAL_FORMS", "ownerprofile-INITIAL_FORMS", "ownerprofile-MAX_NUM_FORMS", "ownerprofile-0-owner", "ownerprofile-0-age", "1", "1", "1", "unicode", "auto_id", "owner1", "formset", "FormSet", "data", "instance", "owner1", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "profile1", "saved", "assertEqual", "self", "owner", "profile1", "owner1", "assertEqual", "self", "age", "profile1", "test_unique_true_enforces_max_num_one", "self", "place", "create", "objects", "Place", "pk", "name", "city", "FormSet", "inlineformset_factory", "Place", "Location", "can_delete", "False", "assertEqual", "self", "max_num", "FormSet", "formset", "FormSet", "instance", "place", "assertEqual", "self", "len", "forms", "formset", "assertEqual", "self", "as_p", "forms", "formset", "<p><label for=\"id_location_set-0-lat\">Lat:</label> <input id=\"id_location_set-0-lat\" type=\"text\" name=\"location_set-0-lat\" maxlength=\"100\" /></p>\n<p><label for=\"id_location_set-0-lon\">Lon:</label> <input id=\"id_location_set-0-lon\" type=\"text\" name=\"location_set-0-lon\" maxlength=\"100\" /><input type=\"hidden\" name=\"location_set-0-place\" value=\"1\" id=\"id_location_set-0-place\" /><input type=\"hidden\" name=\"location_set-0-id\" id=\"id_location_set-0-id\" /></p>", "test_foreign_keys_in_parents", "self", "assertEqual", "self", "type", "_get_foreign_key", "Restaurant", "Owner", "ForeignKey", "models", "assertEqual", "self", "type", "_get_foreign_key", "MexicanRestaurant", "Owner", "ForeignKey", "models", "test_unique_validation", "self", "FormSet", "modelformset_factory", "Product", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-slug", "1", "0", "", "car-red", "formset", "FormSet", "data", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "product1", "saved", "assertEqual", "self", "slug", "product1", "car-red", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-slug", "1", "0", "", "car-red", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "errors", "formset", "slug", "test_unique_together_validation", "self", "FormSet", "modelformset_factory", "Price", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-price", "form-0-quantity", "1", "0", "", "1", "formset", "FormSet", "data", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "price1", "saved", "assertEqual", "self", "price", "price1", "Decimal", "12.00", "assertEqual", "self", "quantity", "price1", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-price", "form-0-quantity", "1", "0", "", "1", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "errors", "formset", "__all__", "test_unique_together_with_inlineformset_factory", "self", "repository", "create", "objects", "Repository", "name", "FormSet", "inlineformset_factory", "Repository", "Revision", "extra", "data", "revision_set-TOTAL_FORMS", "revision_set-INITIAL_FORMS", "revision_set-MAX_NUM_FORMS", "revision_set-0-repository", "revision_set-0-revision", "revision_set-0-DELETE", "1", "0", "", "pk", "repository", "146239817507f148d448db38840db7c3cbf47c76", "", "formset", "FormSet", "data", "instance", "repository", "assertTrue", "self", "is_valid", "formset", "saved", "save", "formset", "assertEqual", "self", "len", "saved", "revision1", "saved", "assertEqual", "self", "repository", "revision1", "repository", "assertEqual", "self", "revision", "revision1", "146239817507f148d448db38840db7c3cbf47c76", "data", "revision_set-TOTAL_FORMS", "revision_set-INITIAL_FORMS", "revision_set-MAX_NUM_FORMS", "revision_set-0-repository", "revision_set-0-revision", "revision_set-0-DELETE", "1", "0", "", "pk", "repository", "146239817507f148d448db38840db7c3cbf47c76", "", "formset", "FormSet", "data", "instance", "repository", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "errors", "formset", "__all__", "FormSet", "inlineformset_factory", "Repository", "Revision", "fields", "revision", "extra", "data", "revision_set-TOTAL_FORMS", "revision_set-INITIAL_FORMS", "revision_set-MAX_NUM_FORMS", "revision_set-0-repository", "revision_set-0-revision", "revision_set-0-DELETE", "1", "0", "", "pk", "repository", "146239817507f148d448db38840db7c3cbf47c76", "", "formset", "FormSet", "data", "instance", "repository", "assertFalse", "self", "is_valid", "formset", "test_callable_defaults", "self", "person", "create", "objects", "Person", "name", "Ringo", "FormSet", "inlineformset_factory", "Person", "Membership", "can_delete", "False", "extra", "formset", "FormSet", "instance", "person", "assertEqual", "self", "len", "forms", "formset", "form", "forms", "formset", "now", "initial", "fields", "form", "date_joined", "result", "as_p", "form", "result", "sub", "re", "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?", "__DATETIME__", "result", "assertEqual", "self", "result", "<p><label for=\"id_membership_set-0-date_joined\">Date joined:</label> <input type=\"text\" name=\"membership_set-0-date_joined\" value=\"__DATETIME__\" id=\"id_membership_set-0-date_joined\" /><input type=\"hidden\" name=\"initial-membership_set-0-date_joined\" value=\"__DATETIME__\" id=\"initial-membership_set-0-id_membership_set-0-date_joined\" /></p>\n<p><label for=\"id_membership_set-0-karma\">Karma:</label> <input type=\"text\" name=\"membership_set-0-karma\" id=\"id_membership_set-0-karma\" /><input type=\"hidden\" name=\"membership_set-0-person\" value=\"%d\" id=\"id_membership_set-0-person\" /><input type=\"hidden\" name=\"membership_set-0-id\" id=\"id_membership_set-0-id\" /></p>", "id", "person", "data", "membership_set-TOTAL_FORMS", "membership_set-INITIAL_FORMS", "membership_set-MAX_NUM_FORMS", "membership_set-0-date_joined", "initial-membership_set-0-date_joined", "membership_set-0-karma", "1", "0", "", "unicode", "strftime", "now", "%Y-%m-%d %H:%M:%S", "unicode", "strftime", "now", "%Y-%m-%d %H:%M:%S", "", "formset", "FormSet", "data", "instance", "person", "assertTrue", "self", "is_valid", "formset", "one_day_later", "now", "timedelta", "datetime", "days", "filled_data", "membership_set-TOTAL_FORMS", "membership_set-INITIAL_FORMS", "membership_set-MAX_NUM_FORMS", "membership_set-0-date_joined", "initial-membership_set-0-date_joined", "membership_set-0-karma", "1", "0", "", "unicode", "strftime", "one_day_later", "%Y-%m-%d %H:%M:%S", "unicode", "strftime", "now", "%Y-%m-%d %H:%M:%S", "", "formset", "FormSet", "filled_data", "instance", "person", "assertFalse", "self", "is_valid", "formset", "MembershipForm", "ModelForm", "forms", "date_joined", "SplitDateTimeField", "forms", "initial", "now", "Meta", "model", "Membership", "__init__", "kwargs", "self", "__init__", "super", "MembershipForm", "self", "kwargs", "widget", "fields", "self", "date_joined", "SplitDateTimeWidget", "forms", "FormSet", "inlineformset_factory", "Person", "Membership", "form", "MembershipForm", "can_delete", "False", "extra", "data", "membership_set-TOTAL_FORMS", "membership_set-INITIAL_FORMS", "membership_set-MAX_NUM_FORMS", "membership_set-0-date_joined_0", "membership_set-0-date_joined_1", "initial-membership_set-0-date_joined", "membership_set-0-karma", "1", "0", "", "unicode", "strftime", "now", "%Y-%m-%d", "unicode", "strftime", "now", "%H:%M:%S", "unicode", "strftime", "now", "%Y-%m-%d %H:%M:%S", "", "formset", "FormSet", "data", "instance", "person", "assertTrue", "self", "is_valid", "formset", "test_inlineformset_factory_with_null_fk", "self", "team", "create", "objects", "Team", "name", "save", "Player", "name", "Timmy", "save", "Player", "name", "Bobby", "team", "team", "PlayerInlineFormSet", "inlineformset_factory", "Team", "Player", "formset", "PlayerInlineFormSet", "assertQuerysetEqual", "self", "get_queryset", "formset", "formset", "PlayerInlineFormSet", "instance", "team", "players", "get_queryset", "formset", "assertEqual", "self", "len", "players", "player1", "players", "assertEqual", "self", "team", "player1", "team", "assertEqual", "self", "name", "player1", "Bobby", "test_model_formset_with_custom_pk", "self", "FormSet", "modelformset_factory", "ClassyMexicanRestaurant", "fields", "tacos_are_yummy", "assertEqual", "self", "sorted", "keys", "fields", "forms", "FormSet", "restaurant", "tacos_are_yummy", "test_prevent_duplicates_from_with_the_same_formset", "self", "FormSet", "modelformset_factory", "Product", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-slug", "form-1-slug", "", "red_car", "red_car", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "FormSet", "modelformset_factory", "Price", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-price", "form-0-quantity", "form-1-price", "form-1-quantity", "", "25", "7", "25", "7", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "FormSet", "modelformset_factory", "Price", "fields", "price", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-price", "form-1-price", "2", "0", "", "24", "24", "formset", "FormSet", "data", "assertTrue", "self", "is_valid", "formset", "FormSet", "inlineformset_factory", "Author", "Book", "extra", "author", "create", "objects", "Author", "pk", "name", "Charles Baudelaire", "book1", "create", "objects", "Book", "pk", "author", "author", "title", "Les Paradis Artificiels", "book2", "create", "objects", "Book", "pk", "author", "author", "title", "Les Fleurs du Mal", "book3", "create", "objects", "Book", "pk", "author", "author", "title", "Flowers of Evil", "book_ids", "values_list", "order_by", "book_set", "author", "id", "id", "flat", "True", "data", "book_set-TOTAL_FORMS", "book_set-INITIAL_FORMS", "book_set-MAX_NUM_FORMS", "book_set-0-title", "book_set-0-author", "book_set-0-id", "book_set-1-title", "book_set-1-author", "book_set-1-id", "2", "2", "", "The 2008 Election", "str", "id", "author", "str", "book_ids", "The 2008 Election", "str", "id", "author", "str", "book_ids", "formset", "FormSet", "data", "data", "instance", "author", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "assertEqual", "self", "errors", "formset", "__all__", "FormSet", "modelformset_factory", "Post", "extra", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-title", "form-0-slug", "form-0-subtitle", "form-0-posted", "form-1-title", "form-1-slug", "form-1-subtitle", "form-1-posted", "2", "0", "", "blah", "Morning", "foo", "2009-01-01", "blah", "Morning in Prague", "rawr", "2009-01-01", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "assertEqual", "self", "errors", "formset", "__all__", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-title", "form-0-slug", "form-0-subtitle", "form-0-posted", "form-1-title", "form-1-slug", "form-1-subtitle", "form-1-posted", "2", "0", "", "foo", "Morning in Prague", "foo", "2009-01-01", "blah", "Morning in Prague", "rawr", "2009-08-02", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "data", "form-TOTAL_FORMS", "form-INITIAL_FORMS", "form-MAX_NUM_FORMS", "form-0-title", "form-0-slug", "form-0-subtitle", "form-0-posted", "form-1-title", "form-1-slug", "form-1-subtitle", "form-1-posted", "2", "0", "", "foo", "Morning in Prague", "rawr", "2008-08-01", "blah", "Prague", "rawr", "2009-08-02", "formset", "FormSet", "data", "assertFalse", "self", "is_valid", "formset", "assertEqual", "self", "_non_form_errors", "formset", "re", "os", "unittest", "django.db", "connection", "django.contrib.gis", "gdal", "django.contrib.gis.geos", "*", "django.contrib.gis.measure", "Distance", "django.contrib.gis.tests.utils", "no_mysql", "no_oracle", "no_postgis", "no_spatialite", "mysql", "oracle", "postgis", "spatialite", "django.test", "TestCase", "models", "Country", "City", "PennsylvaniaCity", "State", "Track", "spatialite", "models", "Feature", "MinusOneSRID", "GeoModelTest", "TestCase", "test01_fixtures", "self", "Testing geographic model initialization from fixtures.", "assertEqual", "self", "count", "objects", "Country", "assertEqual", "self", "count", "objects", "City", "assertEqual", "self", "count", "objects", "State", "test02_proxy", "self", "Testing Lazy-Geometry support (using the GeometryProxy).", "pnt", "Point", "nullcity", "City", "name", "NullCity", "point", "pnt", "save", "nullcity", "bad", "LineString", "point", "nullcity", "bad", "TypeError", "fail", "self", "Should throw a TypeError", "new", "Point", "point", "nullcity", "new", "assertEqual", "self", "srid", "point", "nullcity", "save", "nullcity", "assertEqual", "self", "new", "point", "get", "objects", "City", "name", "NullCity", "x", "point", "nullcity", "y", "point", "nullcity", "assertNotEqual", "self", "Point", "point", "get", "objects", "City", "name", "NullCity", "save", "nullcity", "assertEqual", "self", "Point", "point", "get", "objects", "City", "name", "NullCity", "delete", "nullcity", "shell", "LinearRing", "inner", "LinearRing", "ply", "Polygon", "shell", "inner", "nullstate", "State", "name", "NullState", "poly", "ply", "assertEqual", "self", "srid", "poly", "nullstate", "save", "nullstate", "ns", "get", "objects", "State", "name", "NullState", "assertEqual", "self", "ply", "poly", "ns", "HAS_GDAL", "gdal", "assertEqual", "self", "True", "isinstance", "ogr", "poly", "ns", "OGRGeometry", "gdal", "assertEqual", "self", "wkb", "poly", "ns", "wkb", "ogr", "poly", "ns", "assertEqual", "self", "True", "isinstance", "srs", "poly", "ns", "SpatialReference", "gdal", "assertEqual", "self", "WGS 84", "name", "srs", "poly", "ns", "new_inner", "LinearRing", "poly", "ns", "new_inner", "ply", "new_inner", "assertEqual", "self", "srid", "poly", "ns", "save", "ns", "assertEqual", "self", "ply", "poly", "get", "objects", "State", "name", "NullState", "delete", "ns", "test03a_kml", "self", "Testing KML output from the database using GeoQuerySet.kml().", "postgis", "assertRaises", "self", "NotImplementedError", "kml", "all", "objects", "State", "field_name", "poly", "qs", "all", "objects", "City", "assertRaises", "self", "TypeError", "kml", "qs", "name", "spatial_version", "ops", "connection", "ref_kml", "<Point><coordinates>-104.609252,38.255001</coordinates></Point>", "ref_kml", "<Point><coordinates>-104.609252,38.255001,0</coordinates></Point>", "ptown1", "get", "kml", "objects", "City", "field_name", "point", "precision", "name", "Pueblo", "ptown2", "get", "kml", "objects", "City", "precision", "name", "Pueblo", "ptown", "ptown1", "ptown2", "assertEqual", "self", "ref_kml", "kml", "ptown", "test03b_gml", "self", "Testing GML output from the database using GeoQuerySet.gml().", "mysql", "spatialite", "assertRaises", "self", "NotImplementedError", "gml", "all", "objects", "Country", "field_name", "mpoly", "qs", "all", "objects", "City", "assertRaises", "self", "TypeError", "gml", "qs", "field_name", "name", "ptown1", "get", "gml", "objects", "City", "field_name", "point", "precision", "name", "Pueblo", "ptown2", "get", "gml", "objects", "City", "precision", "name", "Pueblo", "oracle", "gml_regex", "compile", "re", "^<gml:Point srsName=\"SDO:4326\" xmlns:gml=\"http://www.opengis.net/gml\"><gml:coordinates decimal=\"\\.\" cs=\",\" ts=\" \">-104.60925\\d+,38.25500\\d+ </gml:coordinates></gml:Point>", "ptown", "ptown1", "ptown2", "failUnless", "self", "match", "gml_regex", "gml", "ptown", "gml_regex", "compile", "re", "^<gml:Point srsName=\"EPSG:4326\"><gml:coordinates>-104\\.60925\\d+,38\\.255001</gml:coordinates></gml:Point>", "ptown", "ptown1", "ptown2", "failUnless", "self", "match", "gml_regex", "gml", "ptown", "test03c_geojson", "self", "Testing GeoJSON output from the database using GeoQuerySet.geojson().", "geojson", "ops", "connection", "assertRaises", "self", "NotImplementedError", "geojson", "all", "objects", "Country", "field_name", "mpoly", "spatial_version", "ops", "connection", "pueblo_json", "{\"type\":\"Point\",\"coordinates\":[-104.609252,38.255001]}", "houston_json", "{\"type\":\"Point\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"EPSG:4326\"}},\"coordinates\":[-95.363151,29.763374]}", "victoria_json", "{\"type\":\"Point\",\"bbox\":[-123.30519600,48.46261100,-123.30519600,48.46261100],\"coordinates\":[-123.305196,48.462611]}", "chicago_json", "{\"type\":\"Point\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"EPSG:4326\"}},\"bbox\":[-87.65018,41.85039,-87.65018,41.85039],\"coordinates\":[-87.65018,41.85039]}", "pueblo_json", "{\"type\":\"Point\",\"coordinates\":[-104.60925200,38.25500100]}", "houston_json", "{\"type\":\"Point\",\"crs\":{\"type\":\"EPSG\",\"properties\":{\"EPSG\":4326}},\"coordinates\":[-95.36315100,29.76337400]}", "victoria_json", "{\"type\":\"Point\",\"bbox\":[-123.30519600,48.46261100,-123.30519600,48.46261100],\"coordinates\":[-123.30519600,48.46261100]}", "chicago_json", "{\"type\":\"Point\",\"crs\":{\"type\":\"EPSG\",\"properties\":{\"EPSG\":4326}},\"bbox\":[-87.65018,41.85039,-87.65018,41.85039],\"coordinates\":[-87.65018,41.85039]}", "assertRaises", "self", "TypeError", "geojson", "objects", "City", "precision", "foo", "assertEqual", "self", "pueblo_json", "geojson", "get", "geojson", "objects", "City", "name", "Pueblo", "assertEqual", "self", "houston_json", "json", "get", "geojson", "objects", "City", "crs", "True", "model_att", "json", "name", "Houston", "assertEqual", "self", "victoria_json", "geojson", "get", "geojson", "objects", "City", "bbox", "True", "name", "Victoria", "assertEqual", "self", "chicago_json", "geojson", "get", "geojson", "objects", "City", "bbox", "True", "crs", "True", "precision", "name", "Chicago", "test03d_svg", "self", "Testing SVG output using GeoQuerySet.svg().", "mysql", "oracle", "assertRaises", "self", "NotImplementedError", "svg", "objects", "City", "assertRaises", "self", "TypeError", "svg", "objects", "City", "precision", "foo", "svg1", "cx=\"-104.609252\" cy=\"-38.255001\"", "svg2", "replace", "svg1", "c", "", "assertEqual", "self", "svg1", "svg", "get", "svg", "objects", "City", "name", "Pueblo", "assertEqual", "self", "svg2", "svg", "get", "svg", "objects", "City", "relative", "name", "Pueblo", "test04_transform", "self", "Testing the transform() GeoManager method.", "htown", "fromstr", "POINT(1947516.83115183 6322297.06040572)", "srid", "ptown", "fromstr", "POINT(992363.390841912 481455.395105533)", "srid", "prec", "oracle", "h", "get", "transform", "objects", "City", "srid", "htown", "name", "Houston", "assertEqual", "self", "srid", "point", "h", "assertAlmostEqual", "self", "x", "htown", "x", "point", "h", "prec", "assertAlmostEqual", "self", "y", "htown", "y", "point", "h", "prec", "p1", "get", "transform", "objects", "City", "srid", "ptown", "field_name", "point", "name", "Pueblo", "p2", "get", "transform", "objects", "City", "srid", "srid", "ptown", "name", "Pueblo", "p", "p1", "p2", "assertEqual", "self", "srid", "point", "p", "assertAlmostEqual", "self", "x", "ptown", "x", "point", "p", "prec", "assertAlmostEqual", "self", "y", "ptown", "y", "point", "p", "prec", "no_mysql", "test05_extent", "self", "Testing the `extent` GeoQuerySet method.", "expected", "qs", "filter", "objects", "City", "name__in", "Houston", "Dallas", "extent", "extent", "qs", "val", "exp", "zip", "extent", "expected", "assertAlmostEqual", "self", "exp", "val", "no_mysql", "no_spatialite", "test06_make_line", "self", "Testing the `make_line` GeoQuerySet method.", "assertRaises", "self", "TypeError", "make_line", "objects", "State", "assertRaises", "self", "TypeError", "make_line", "objects", "Country", "ref_line", "GEOSGeometry", "LINESTRING(-95.363151 29.763374,-96.801611 32.782057,-97.521157 34.464642,174.783117 -41.315268,-104.609252 38.255001,-95.23506 38.971823,-87.650175 41.850385,-123.305196 48.462611)", "srid", "assertEqual", "self", "ref_line", "make_line", "objects", "City", "no_mysql", "no_oracle", "no_spatialite", "test09_disjoint", "self", "Testing the `disjoint` lookup type.", "ptown", "get", "objects", "City", "name", "Pueblo", "qs1", "filter", "objects", "City", "point__disjoint", "point", "ptown", "assertEqual", "self", "count", "qs1", "qs2", "filter", "objects", "State", "poly__disjoint", "point", "ptown", "assertEqual", "self", "count", "qs2", "assertEqual", "self", "Kansas", "name", "qs2", "no_mysql", "test10_contains_contained", "self", "Testing the 'contained', 'contains', and 'bbcontains' lookup types.", "texas", "get", "objects", "Country", "name", "Texas", "oracle", "qs", "filter", "objects", "City", "point__contained", "mpoly", "texas", "assertEqual", "self", "count", "qs", "cities", "Houston", "Dallas", "Oklahoma City", "c", "qs", "assertEqual", "self", "True", "name", "c", "cities", "houston", "get", "objects", "City", "name", "Houston", "wellington", "get", "objects", "City", "name", "Wellington", "pueblo", "get", "objects", "City", "name", "Pueblo", "okcity", "get", "objects", "City", "name", "Oklahoma City", "lawrence", "get", "objects", "City", "name", "Lawrence", "tx", "get", "objects", "Country", "mpoly__contains", "point", "houston", "nz", "get", "objects", "Country", "mpoly__contains", "hex", "point", "wellington", "assertEqual", "self", "Texas", "name", "tx", "assertEqual", "self", "New Zealand", "name", "nz", "spatialite", "ks", "get", "objects", "State", "poly__contains", "point", "lawrence", "assertEqual", "self", "Kansas", "name", "ks", "assertEqual", "self", "len", "filter", "objects", "Country", "mpoly__contains", "point", "pueblo", "assertEqual", "self", "mysql", "len", "filter", "objects", "Country", "mpoly__contains", "wkt", "point", "okcity", "oracle", "qs", "filter", "objects", "Country", "mpoly__bbcontains", "point", "okcity", "assertEqual", "self", "len", "qs", "assertEqual", "self", "Texas", "name", "qs", "test11_lookup_insert_transform", "self", "Testing automatic transform for lookups and inserts.", "sa_4326", "POINT (-98.493183 29.424170)", "wgs_pnt", "fromstr", "sa_4326", "srid", "oracle", "nad_wkt", "POINT (300662.034646583 5416427.45974934)", "nad_srid", "nad_wkt", "POINT (1645978.362408288754523 6276356.025927528738976)", "nad_srid", "nad_pnt", "fromstr", "nad_wkt", "srid", "nad_srid", "oracle", "tx", "get", "objects", "Country", "mpoly__contains", "nad_pnt", "tx", "get", "objects", "Country", "mpoly__intersects", "nad_pnt", "assertEqual", "self", "Texas", "name", "tx", "sa", "create", "objects", "City", "name", "San Antonio", "point", "nad_pnt", "sa", "get", "objects", "City", "name", "San Antonio", "assertAlmostEqual", "self", "x", "wgs_pnt", "x", "point", "sa", "assertAlmostEqual", "self", "y", "wgs_pnt", "y", "point", "sa", "spatialite", "m1", "MinusOneSRID", "geom", "Point", "srid", "save", "m1", "assertEqual", "self", "srid", "geom", "m1", "no_mysql", "test12_null_geometries", "self", "Testing NULL geometry support, and the `isnull` lookup type.", "create", "objects", "State", "name", "Puerto Rico", "nullqs", "filter", "objects", "State", "poly__isnull", "True", "validqs", "filter", "objects", "State", "poly__isnull", "False", "assertEqual", "self", "len", "nullqs", "assertEqual", "self", "Puerto Rico", "name", "nullqs", "assertEqual", "self", "len", "validqs", "state_names", "name", "s", "s", "validqs", "assertEqual", "self", "True", "Colorado", "state_names", "assertEqual", "self", "True", "Kansas", "state_names", "nmi", "create", "objects", "State", "name", "Northern Mariana Islands", "poly", "None", "assertEqual", "self", "poly", "nmi", "None", "poly", "nmi", "POLYGON((0 0,1 0,1 1,1 0,0 0))", "save", "nmi", "update", "filter", "objects", "State", "name", "Northern Mariana Islands", "poly", "None", "assertEqual", "self", "None", "poly", "get", "objects", "State", "name", "Northern Mariana Islands", "no_mysql", "test13_left_right", "self", "Testing the 'left' and 'right' lookup types.", "co_border", "poly", "get", "objects", "State", "name", "Colorado", "ks_border", "poly", "get", "objects", "State", "name", "Kansas", "cities", "Houston", "Dallas", "Oklahoma City", "Lawrence", "Chicago", "Wellington", "qs", "filter", "objects", "City", "point__right", "co_border", "assertEqual", "self", "len", "qs", "c", "qs", "assertEqual", "self", "True", "name", "c", "cities", "cities", "Chicago", "Wellington", "qs", "filter", "objects", "City", "point__right", "ks_border", "assertEqual", "self", "len", "qs", "c", "qs", "assertEqual", "self", "True", "name", "c", "cities", "vic", "get", "objects", "City", "point__left", "co_border", "assertEqual", "self", "Victoria", "name", "vic", "cities", "Pueblo", "Victoria", "qs", "filter", "objects", "City", "point__left", "ks_border", "assertEqual", "self", "len", "qs", "c", "qs", "assertEqual", "self", "True", "name", "c", "cities", "no_mysql", "no_oracle", "no_spatialite", "test14_equals", "self", "Testing the 'same_as' and 'equals' lookup types.", "pnt", "fromstr", "POINT (-95.363151 29.763374)", "srid", "c1", "get", "objects", "City", "point", "pnt", "c2", "get", "objects", "City", "point__same_as", "pnt", "c3", "get", "objects", "City", "point__equals", "pnt", "c", "c1", "c2", "c3", "assertEqual", "self", "Houston", "name", "c", "test15_relate", "self", "Testing the 'relate' lookup type.", "pnt1", "fromstr", "POINT (649287.0363174 4177429.4494686)", "srid", "pnt2", "fromstr", "POINT(-98.4919715741052 29.4333344025053)", "srid", "assertRaises", "self", "ValueError", "filter", "objects", "Country", "mpoly__relate", "foo", "bad_args", "e", "pnt1", "ValueError", "pnt2", "T*T***FF*", "ValueError", "qs", "filter", "objects", "Country", "mpoly__relate", "bad_args", "assertRaises", "self", "e", "count", "qs", "postgis", "spatialite", "contains_mask", "T*T***FF*", "within_mask", "T*F**F***", "intersects_mask", "T********", "oracle", "contains_mask", "contains", "within_mask", "inside", "intersects_mask", "overlapbdyintersect", "assertEqual", "self", "Texas", "name", "get", "objects", "Country", "mpoly__relate", "pnt1", "contains_mask", "assertEqual", "self", "Texas", "name", "get", "objects", "Country", "mpoly__relate", "pnt2", "contains_mask", "ks", "get", "objects", "State", "name", "Kansas", "assertEqual", "self", "Lawrence", "name", "get", "objects", "City", "point__relate", "poly", "ks", "within_mask", "oracle", "assertEqual", "self", "Texas", "name", "get", "objects", "Country", "mpoly__relate", "pnt1", "intersects_mask", "assertEqual", "self", "Texas", "name", "get", "objects", "Country", "mpoly__relate", "pnt2", "intersects_mask", "assertEqual", "self", "Lawrence", "name", "get", "objects", "City", "point__relate", "poly", "ks", "intersects_mask", "no_mysql", "test16_createnull", "self", "Testing creating a model instance and the geometry being None", "c", "City", "assertEqual", "self", "point", "c", "None", "test17_unionagg", "self", "Testing the `unionagg` (aggregate union) GeoManager method.", "tx", "mpoly", "get", "objects", "Country", "name", "Texas", "union1", "fromstr", "MULTIPOINT(-96.801611 32.782057,-95.363151 29.763374)", "union2", "fromstr", "MULTIPOINT(-96.801611 32.782057,-95.363151 29.763374)", "qs", "filter", "objects", "City", "point__within", "tx", "assertRaises", "self", "TypeError", "unionagg", "qs", "name", "u1", "unionagg", "qs", "field_name", "point", "u2", "unionagg", "order_by", "qs", "name", "tol", "oracle", "union", "union2", "union", "union1", "assertEqual", "self", "True", "equals_exact", "union", "u1", "tol", "assertEqual", "self", "True", "equals_exact", "union", "u2", "tol", "qs", "filter", "objects", "City", "name", "NotACity", "assertEqual", "self", "None", "unionagg", "qs", "field_name", "point", "no_mysql", "test18_geometryfield", "self", "Testing the general GeometryField.", "save", "Feature", "name", "Point", "geom", "Point", "save", "Feature", "name", "LineString", "geom", "LineString", "save", "Feature", "name", "Polygon", "geom", "Polygon", "LinearRing", "save", "Feature", "name", "GeometryCollection", "geom", "GeometryCollection", "Point", "LineString", "Polygon", "LinearRing", "f_1", "get", "objects", "Feature", "name", "Point", "assertEqual", "self", "True", "isinstance", "geom", "f_1", "Point", "assertEqual", "self", "tuple", "geom", "f_1", "f_2", "get", "objects", "Feature", "name", "LineString", "assertEqual", "self", "True", "isinstance", "geom", "f_2", "LineString", "assertEqual", "self", "tuple", "geom", "f_2", "f_3", "get", "objects", "Feature", "name", "Polygon", "assertEqual", "self", "True", "isinstance", "geom", "f_3", "Polygon", "f_4", "get", "objects", "Feature", "name", "GeometryCollection", "assertEqual", "self", "True", "isinstance", "geom", "f_4", "GeometryCollection", "assertEqual", "self", "geom", "f_3", "geom", "f_4", "no_spatialite", "test19_centroid", "self", "Testing the `centroid` GeoQuerySet method.", "qs", "centroid", "exclude", "objects", "State", "poly__isnull", "True", "oracle", "tol", "spatialite", "tol", "tol", "s", "qs", "assertEqual", "self", "True", "equals_exact", "centroid", "poly", "s", "centroid", "s", "tol", "no_mysql", "test20_pointonsurface", "self", "Testing the `point_on_surface` GeoQuerySet method.", "oracle", "ref", "New Zealand", "Texas", "fromstr", "POINT (174.616364 -36.100861)", "srid", "fromstr", "POINT (-103.002434 36.500397)", "srid", "postgis", "spatialite", "ref", "New Zealand", "Texas", "point_on_surface", "mpoly", "get", "objects", "Country", "name", "New Zealand", "point_on_surface", "mpoly", "get", "objects", "Country", "name", "Texas", "c", "point_on_surface", "objects", "Country", "spatialite", "tol", "tol", "assertEqual", "self", "True", "equals_exact", "ref", "name", "c", "point_on_surface", "c", "tol", "no_mysql", "test21_scale", "self", "Testing the `scale` GeoQuerySet method.", "xfac", "yfac", "tol", "qs", "scale", "objects", "Country", "xfac", "yfac", "model_att", "scaled", "c", "qs", "p1", "p2", "zip", "mpoly", "c", "scaled", "c", "r1", "r2", "zip", "p1", "p2", "c1", "c2", "zip", "coords", "r1", "coords", "r2", "assertAlmostEqual", "self", "c1", "xfac", "c2", "tol", "assertAlmostEqual", "self", "c1", "yfac", "c2", "tol", "no_mysql", "no_oracle", "test22_translate", "self", "Testing the `translate` GeoQuerySet method.", "xfac", "yfac", "qs", "translate", "objects", "Country", "xfac", "yfac", "model_att", "translated", "c", "qs", "p1", "p2", "zip", "mpoly", "c", "translated", "c", "r1", "r2", "zip", "p1", "p2", "c1", "c2", "zip", "coords", "r1", "coords", "r2", "assertAlmostEqual", "self", "c1", "xfac", "c2", "assertAlmostEqual", "self", "c1", "yfac", "c2", "no_mysql", "no_oracle", "test23_numgeom", "self", "Testing the `num_geom` GeoQuerySet method.", "c", "num_geom", "objects", "Country", "assertEqual", "self", "num_geom", "c", "c", "num_geom", "filter", "objects", "City", "point__isnull", "False", "postgis", "assertEqual", "self", "None", "num_geom", "c", "assertEqual", "self", "num_geom", "c", "no_mysql", "test24_numpoints", "self", "Testing the `num_points` GeoQuerySet method.", "c", "num_points", "objects", "Country", "assertEqual", "self", "num_points", "mpoly", "c", "num_points", "c", "oracle", "c", "num_points", "objects", "City", "assertEqual", "self", "num_points", "c", "no_mysql", "no_spatialite", "test25_geoset", "self", "Testing the `difference`, `intersection`, `sym_difference`, and `union` GeoQuerySet methods.", "geom", "Point", "tol", "qs", "union", "sym_difference", "difference", "all", "objects", "Country", "geom", "geom", "geom", "spatialite", "qs", "exclude", "qs", "name", "Texas", "qs", "intersection", "qs", "geom", "c", "qs", "oracle", "assertEqual", "self", "difference", "mpoly", "c", "geom", "difference", "c", "spatialite", "assertEqual", "self", "intersection", "mpoly", "c", "geom", "intersection", "c", "assertEqual", "self", "sym_difference", "mpoly", "c", "geom", "sym_difference", "c", "assertEqual", "self", "union", "mpoly", "c", "geom", "union", "c", "no_mysql", "test26_inherited_geofields", "self", "Test GeoQuerySet methods on inherited Geometry fields.", "mansfield", "create", "objects", "PennsylvaniaCity", "name", "Mansfield", "county", "Tioga", "point", "POINT(-77.071445 41.823881)", "qs", "transform", "objects", "PennsylvaniaCity", "assertEqual", "self", "count", "qs", "pc", "qs", "assertEqual", "self", "srid", "point", "pc", "no_mysql", "test27_snap_to_grid", "self", "Testing GeoQuerySet.snap_to_grid().", "bad_args", "range", "range", "assertRaises", "self", "ValueError", "snap_to_grid", "objects", "Country", "bad_args", "bad_args", "1.0", "None", "tuple", "map", "unicode", "range", "assertRaises", "self", "TypeError", "snap_to_grid", "objects", "Country", "bad_args", "wkt", "MULTIPOLYGON(((12.41580 43.95795,12.45055 43.97972,12.45389 43.98167,12.46250 43.98472,12.47167 43.98694,12.49278 43.98917,12.50555 43.98861,12.51000 43.98694,12.51028 43.98277,12.51167 43.94333,12.51056 43.93916,12.49639 43.92333,12.49500 43.91472,12.48778 43.90583,12.47444 43.89722,12.46472 43.89555,12.45917 43.89611,12.41639 43.90472,12.41222 43.90610,12.40782 43.91366,12.40389 43.92667,12.40500 43.94833,12.40889 43.95499,12.41580 43.95795)))", "sm", "create", "objects", "Country", "name", "San Marino", "mpoly", "fromstr", "wkt", "tol", "ref", "fromstr", "MULTIPOLYGON(((12.4 44,12.5 44,12.5 43.9,12.4 43.9,12.4 44)))", "failUnless", "self", "equals_exact", "ref", "snap_to_grid", "get", "snap_to_grid", "objects", "Country", "name", "San Marino", "tol", "ref", "fromstr", "MULTIPOLYGON(((12.4 43.93,12.45 43.93,12.5 43.93,12.45 43.93,12.4 43.93)))", "failUnless", "self", "equals_exact", "ref", "snap_to_grid", "get", "snap_to_grid", "objects", "Country", "name", "San Marino", "tol", "ref", "fromstr", "MULTIPOLYGON(((12.4 43.87,12.45 43.87,12.45 44.1,12.5 44.1,12.5 43.87,12.45 43.87,12.4 43.87)))", "failUnless", "self", "equals_exact", "ref", "snap_to_grid", "get", "snap_to_grid", "objects", "Country", "name", "San Marino", "tol", "no_mysql", "no_oracle", "no_spatialite", "test28_reverse", "self", "Testing GeoQuerySet.reverse_geom().", "coords", "create", "objects", "Track", "name", "Foo", "line", "LineString", "coords", "t", "get", "reverse_geom", "objects", "Track", "name", "Foo", "reverse", "coords", "assertEqual", "self", "tuple", "coords", "coords", "reverse_geom", "t", "oracle", "assertRaises", "self", "TypeError", "reverse_geom", "objects", "State", "no_mysql", "no_spatialite", "test29_force_rhr", "self", "Testing GeoQuerySet.force_rhr().", "rings", "rhr_rings", "create", "objects", "State", "name", "Foo", "poly", "Polygon", "rings", "s", "get", "force_rhr", "objects", "State", "name", "Foo", "assertEqual", "self", "rhr_rings", "coords", "force_rhr", "s", "no_mysql", "no_oracle", "no_spatialite", "test29_force_rhr", "self", "Testing GeoQuerySet.geohash().", "geohash", "ops", "connection", "ref_hash", "9vk1mfq8jx0c8e0386z6", "h1", "get", "geohash", "objects", "City", "name", "Houston", "h2", "get", "geohash", "objects", "City", "precision", "name", "Houston", "assertEqual", "self", "ref_hash", "geohash", "h1", "assertEqual", "self", "ref_hash", "geohash", "h2", "no_mysql", "no_oracle", "no_spatialite", "test_feeds", "GeoFeedTest", "test_regress", "GeoRegressionTests", "test_sitemaps", "GeoSitemapTest", "suite", "s", "TestSuite", "unittest", "addTest", "s", "makeSuite", "unittest", "GeoModelTest", "addTest", "s", "makeSuite", "unittest", "GeoFeedTest", "addTest", "s", "makeSuite", "unittest", "GeoSitemapTest", "addTest", "s", "makeSuite", "unittest", "GeoRegressionTests", "s", "warnings", "simplefilter", "warnings", "ignore", "Warning", "django.conf", "settings", "core.tests.backends", "*", "core.tests.fields", "*", "core.tests.forms", "*", "core.tests.indexes", "*", "core.tests.models", "*", "core.tests.query", "*", "core.tests.sites", "*", "core.tests.templatetags", "*", "core.tests.views", "*", "core.tests.utils", "*", "csv", "datetime", "cStringIO", "StringIO", "django.utils.timezone", "utc", "django.http", "HttpResponse", "django.conf", "settings", "pytz", "timezone", "reportlab.pdfgen", "canvas", "cStringIO", "StringIO", "contact_csv", "contacts", "subscribers.models", "Inquiry", "fh", "StringIO", "writer", "UnicodeWriter", "fh", "obj", "contacts", "isinstance", "obj", "Inquiry", "row", "code", "type", "obj", "get_address_lines", "contact", "obj", "row", "get_address_lines", "obj", "writerow", "writer", "row", "getvalue", "fh", "contact_csv_response", "contacts", "response", "HttpResponse", "contact_csv", "contacts", "response", "Content-type", "text/csv; charset=utf-8", "response", "Content-disposition", "attachment; filename=contacts.csv", "response", "contact_pdf_response", "contacts", "subscribers.models", "Inquiry", "out", "StringIO", "width", "height", "c", "Canvas", "canvas", "out", "pagesize", "width", "height", "setFont", "c", "Helvetica", "obj", "contacts", "isinstance", "obj", "Inquiry", "address_lines", "get_address_lines", "contact", "obj", "code", "code", "response_type", "obj", "address_lines", "get_address_lines", "obj", "code", "", "i", "i", "line", "enumerate", "address_lines", "drawString", "c", "height", "height", "i", "line", "drawString", "c", "height", "height", "code", "showPage", "c", "save", "c", "response", "HttpResponse", "getvalue", "out", "response", "Content-type", "application/pdf", "response", "Content-disposition", "attachment; filename=labels.pdf", "response", "unicode_csv_reader", "kwargs", "unicode_csv_data", "dialect", "excel", "csv", "csv_reader", "reader", "csv", "utf_8_encoder", "unicode_csv_data", "dialect", "dialect", "kwargs", "row", "csv_reader", "unicode", "cell", "utf-8", "cell", "row", "utf_8_encoder", "unicode_csv_data", "line", "unicode_csv_data", "encode", "line", "utf-8", "csv", "codecs", "cStringIO", "UTF8Recoder", "\n    Iterator that reads an encoded stream and reencodes the input to UTF-8\n    ", "__init__", "self", "f", "encoding", "reader", "self", "getreader", "codecs", "encoding", "f", "__iter__", "self", "self", "next", "self", "encode", "next", "reader", "self", "utf-8", "UnicodeReader", "\n    A CSV reader which will iterate over lines in the CSV file \"f\",\n    which is encoded in the given encoding.\n    ", "__init__", "kwds", "self", "f", "dialect", "encoding", "excel", "csv", "utf-8", "f", "UTF8Recoder", "f", "encoding", "reader", "self", "reader", "csv", "f", "dialect", "dialect", "kwds", "next", "self", "row", "next", "reader", "self", "unicode", "s", "utf-8", "s", "row", "__iter__", "self", "self", "UnicodeWriter", "\n    A CSV writer which will write rows to CSV file \"f\",\n    which is encoded in the given encoding.\n    ", "__init__", "kwds", "self", "f", "dialect", "encoding", "excel", "csv", "utf-8", "queue", "self", "StringIO", "cStringIO", "writer", "self", "writer", "csv", "queue", "self", "dialect", "dialect", "kwds", "stream", "self", "f", "encoder", "self", "getincrementalencoder", "codecs", "encoding", "writerow", "self", "row", "writerow", "writer", "self", "encode", "s", "utf-8", "s", "row", "data", "getvalue", "queue", "self", "data", "decode", "data", "utf-8", "data", "encode", "encoder", "self", "data", "write", "stream", "self", "data", "truncate", "queue", "self", "writerows", "self", "rows", "row", "rows", "writerow", "self", "row", "sys", "_sys", "os", "_os", "re", "_re", "pyrem_strs._base_origined", "*", "pyrem_strs.config", "_SLOTS_VALID_IN_STR_DERIVED", "pyrem_strs.utility.rowcol", "_ut", "pyrem_strs.utility.unoverwritabledict", "UnoverwritableDict", "hasattr", "to_rowcol", "ImportError", "module pyrem_strs assumes that tuple type doesn't have a method to_rowcol", "named_str", "name", "value", "\n    A helper function to generate a NamedStr instance.\n    ", "NamedStr", "name", "value", "NamedStr", "str", "\n    class NamedStr is a string with a name.\n    A struct whose instance variables are: name and value.\n    Immutable, you can't any assign instance variable after initialized.\n    ", "_SLOTS_VALID_IN_STR_DERIVED", "__slots__", "__rowIndicesTuple", "__name", "__getvalue", "self", "__str__", "self", "value", "property", "__getvalue", "None", "None", "__get_rowIndicesTuple", "self", "__rowIndicesTuple", "self", "rowIndicesTuple", "property", "__get_rowIndicesTuple", "None", "None", "__getname", "self", "__name", "self", "name", "property", "__getname", "None", "None", "__new__", "cls", "name", "s", "\n        A Constructor. Generates a NamedStr from name and content (text).\n        ", "isinstance", "s", "str", "self", "__new__", "str", "cls", "s", "__name", "self", "name", "__rowIndicesTuple", "self", "tuple", "calc_row_index_list", "_ut", "s", "self", "new_from_file", "filePath", "mode", "None", "\n        A helper function to generate a NamedStr instance from a file.\n        ", "mode", "None", "mode", "rb", "f", "open", "filePath", "mode", "NamedStr", "filePath", "read", "f", "close", "f", "staticmethod", "__repr__", "self", "NamedStr('%s', *)", "__name", "self", "__eq__", "self", "right", "isinstance", "right", "NamedStr", "__name", "self", "name", "right", "__eq__", "str", "self", "right", "__ne__", "self", "right", "isinstance", "right", "NamedStr", "__name", "self", "name", "right", "__eq__", "str", "self", "right", "__ge__", "self", "right", "isinstance", "right", "NamedStr", "rn", "name", "right", "__name", "self", "rn", "True", "__name", "self", "rn", "__ge__", "str", "self", "right", "__gt__", "self", "right", "isinstance", "right", "NamedStr", "rn", "name", "right", "__name", "self", "rn", "True", "__name", "self", "rn", "__gt__", "str", "self", "right", "__lt__", "self", "right", "isinstance", "right", "NamedStr", "rn", "name", "right", "__name", "self", "rn", "True", "__name", "self", "rn", "__lt__", "str", "self", "right", "__le__", "self", "right", "isinstance", "right", "NamedStr", "rn", "name", "right", "__name", "self", "rn", "True", "__name", "self", "rn", "__le__", "str", "self", "right", "__hash__", "self", "__hash__", "__name", "self", "__hash__", "__value", "self", "__getitem__", "self", "index", "NamedStr", "__name", "self", "__getitem__", "str", "self", "index", "__getslice__", "self", "beg", "end", "NamedStr", "__name", "self", "__getslice__", "str", "self", "beg", "end", "__add__", "self", "right", "NamedStrAttributeError", "__add__ is not supported in NamedStr", "__mul__", "self", "right", "NamedStrAttributeError", "__mul__ is not supported in NamedStr", "__rmul__", "self", "left", "NamedStrAttributeError", "__rmul__ is not supported in NamedStr", "lower", "self", "NamedStrAttributeError", "lower is not supported in NamedStr", "upper", "self", "NamedStrAttributeError", "upper is not supported in NamedStr", "swapcase", "self", "NamedStrAttributeError", "swapcase is not supported in NamedStr", "strip", "self", "NamedStrAttributeError", "strip is not supported in NamedStr", "lstrip", "self", "NamedStrAttributeError", "lstrip is not supported in NamedStr", "rstrip", "self", "NamedStrAttributeError", "rstrip is not supported in NamedStr", "get_rowcols", "self", "\n        Returns an array of Rowcol, which contains row and col info \n        for each character of this string.\n        ", "row_index_list_to_row_col_table", "_ut", "__rowIndicesTuple", "self", "__str__", "self", "get_rowcol_at", "self", "index", "\n        Return a Rowcol instance, which contains row and col of \n        the index'th character of this string.\n        ", "Rowcol", "get_row_col_at", "_ut", "__rowIndicesTuple", "self", "index", "get_row_at", "self", "index", "\n        Return a Rowcol instance, which contains row and col of \n        the index'th character of this string.\n        ", "get_row_at", "_ut", "__rowIndicesTuple", "self", "index", "to_origined_str", "self", "OriginedStr", "self", "origined_str", "something", "\n    A helper function to convert something into an OriginedStr instance.\n    An argument \"something\" should be one of follows: \n    '', NamedStr, OriginedStr, ReferenceRange, or list of ReferenceRange.\n    ", "something", "", "OriginedStr", "", "isinstance", "something", "OriginedStr", "something", "isinstance", "something", "NamedStr", "OriginedStr", "something", "isinstance", "something", "ReferenceRange", "from_origin", "OriginedStr", "something", "isinstance", "something", "list", "tuple", "item", "something", "isinstance", "item", "ReferenceRange", "from_origin", "OriginedStr", "something", "TypeError", "Can't cast to pyrem_strs.originedstr.OriginedStr", "_ReferenceRange_optimized", "optimized", "ReferenceRange", "OriginedStr", "str", "\n    OriginedStr is a string which knows its origin(s).\n    A struct who has properties: value, origin0.\n    Immutable, you can't assign any instance variable after initialized.\n    \n    The read-only property \"value\" contains a value as a string.\n    The read-only property \"origin0\" is the first element of origin data.\n    ", "_SLOTS_VALID_IN_STR_DERIVED", "__slots__", "__references", "get_origin", "self", "\n        Returns origins, that is, a list of ReferenceRange.\n        ", "isinstance", "__references", "self", "ReferenceRange", "__references", "self", "__references", "self", "origin_iter", "self", "hasattr", "__references", "self", "to_rowcol", "__references", "self", "r", "__references", "self", "r", "__getvalue", "self", "__str__", "self", "value", "property", "__getvalue", "None", "None", "__getorigin0", "self", "__references", "self", "None", "hasattr", "__references", "self", "to_rowcol", "__references", "self", "__references", "self", "origin0", "property", "__getorigin0", "None", "None", "__new__", "args", "cls", "\n        A Constructor. Generates a OriginedStr from a NamedStr, or '' (empty str).\n        ", "len", "args", "s", "args", "s", "self", "__new__", "str", "cls", "", "__references", "self", "None", "isinstance", "s", "NamedStr", "self", "__new__", "str", "cls", "value", "s", "__references", "self", "ReferenceRange", "s", "len", "s", "s", "refs", "args", "isinstance", "s", "str", "self", "__new__", "str", "cls", "s", "__references", "self", "refs", "self", "from_origin", "referenceRanges", "\n        A factory method to generate an OriginedStr instance from a list of ReferenceRange.\n        ", "referenceRanges", "_ReferenceRange_optimized", "referenceRanges", "referenceRanges", "OriginedStr", "", "len", "referenceRanges", "OriginedStr", "to_string", "referenceRanges", "referenceRanges", "OriginedStr", "join", "", "to_string", "rr", "rr", "referenceRanges", "tuple", "referenceRanges", "staticmethod", "__repr__", "self", "OriginedStr(%s)", "repr", "get_origin", "self", "__getitem__", "self", "index", "curLength", "len", "self", "index", "index", "curLength", "index", "index", "curLength", "IndexError", "OriginedStr index out of range", "rr", "origin_iter", "self", "index", "len", "rr", "index", "relativeIndex", "end", "rr", "index", "ostr", "OriginedStr", "namedstr", "rr", "relativeIndex", "__references", "ostr", "ReferenceRange", "namedstr", "rr", "relativeIndex", "relativeIndex", "ostr", "False", "__getslice__", "self", "beg", "end", "curLength", "len", "self", "beg", "beg", "curLength", "beg", "beg", "IndexError", "OriginedStr index out of range", "end", "end", "curLength", "end", "end", "IndexError", "OriginedStr index out of range", "beg", "end", "OriginedStr", "", "index", "beg", "reqlen", "end", "beg", "refiter", "origin_iter", "self", "rrs", "list", "rr", "refiter", "index", "len", "rr", "index", "f", "extracted", "rr", "index", "append", "rrs", "f", "reqlen", "len", "f", "rr", "refiter", "reqlen", "append", "rrs", "rr", "reqlen", "len", "rr", "reqlen", "append", "rrs", "trimed", "pop", "rrs", "reqlen", "from_origin", "OriginedStr", "rrs", "__add__", "self", "right", "isinstance", "right", "OriginedStr", "right", "self", "self", "right", "from_origin", "OriginedStr", "get_origin", "self", "get_origin", "right", "to_index_str", "self", "\n        Returns a string which contains the indices of origins of this string.\n        ", "join", ",", "to_index_str", "rr", "rr", "origin_iter", "self", "to_rowcol_str", "self", "\n        Returns a string which contains the row-cols of origins of this string.\n        ", "join", ",", "to_rowcol_str", "rr", "rr", "origin_iter", "self", "to_row_str", "self", "\n        Returns a string which contains the rows of origins of this string.\n        ", "join", ",", "to_row_str", "rr", "rr", "origin_iter", "self", "__mul__", "self", "right", "OriginedStrAttributeError", "__mul__ is not supported in OriginedStr", "__rmul__", "self", "left", "OriginedStrAttributeError", "__rmul__ is not supported in OriginedStr", "expandtabs", "self", "OriginedStrAttributeError", "expandtabs is not supported in OriginedStr", "lower", "self", "OriginedStrAttributeError", "lower is not supported in OriginedStr", "upper", "self", "OriginedStrAttributeError", "upper is not supported in OriginedStr", "swapcase", "self", "OriginedStrAttributeError", "swapcase is not supported in OriginedStr", "strip", "self", "OriginedStrAttributeError", "strip is not supported in OriginedStr", "lstrip", "self", "OriginedStrAttributeError", "lstrip is not supported in OriginedStr", "rstrip", "self", "OriginedStrAttributeError", "rstrip is not supported in OriginedStr", "ljust", "self", "OriginedStrAttributeError", "ljust is not supported in OriginedStr", "rjust", "self", "OriginedStrAttributeError", "rjust is not supported in OriginedStr", "title", "self", "OriginedStrAttributeError", "title is not supported in OriginedStr", "translate", "self", "OriginedStrAttributeError", "translate is not supported in OriginedStr", "join", "self", "strs", "strs", "OriginedStr", "", "self", "self_references", "get_origin", "self", "r", "list", "get_origin", "strs", "right", "strs", "extend", "r", "self_references", "extend", "r", "get_origin", "right", "r", "right", "strs", "extend", "r", "get_origin", "right", "from_origin", "OriginedStr", "r", "partition", "self", "sep", "i", "find", "self", "sep", "i", "e", "i", "len", "sep", "self", "i", "self", "i", "e", "self", "e", "self", "OriginedStr", "", "OriginedStr", "", "rpartition", "self", "sep", "i", "rfind", "self", "sep", "i", "e", "i", "len", "sep", "self", "i", "self", "i", "e", "self", "e", "OriginedStr", "", "OriginedStr", "", "self", "platform", "_sys", "cli", "splitlines", "self", "keepends", "False", "keepends", "pat", "compile", "_re", "[^\\r\\n]*(\\r\\n?|\\n)|.+$", "DOTALL", "_re", "r", "m", "finditer", "pat", "self", "b", "e", "group", "m", "append", "r", "self", "b", "e", "r", "pat", "compile", "_re", "\\r\\n?|\\n", "r", "split", "pat", "self", "r", "r", "r", "r", "splitlines", "self", "keepends", "False", "keepends", "pat", "compile", "_re", "[^\\r\\n]*(\\r\\n?|\\n)|.+$", "DOTALL", "_re", "group", "m", "m", "finditer", "pat", "self", "pat", "compile", "_re", "\\r\\n?|\\n", "r", "split", "pat", "self", "r", "r", "r", "r", "FileTable", "UnoverwritableDict", "\n    FileTable is a dict which contains NamedStr instances \n    that are generated from files.\n    ", "__init__", "self", "defaultMode", "None", "__init__", "UnoverwritableDict", "self", "__defaultMode", "self", "defaultMode", "__setdefaultmode", "self", "defaultMode", "__defaultMode", "self", "defaultMode", "__getdefaultmode", "self", "__defaultMode", "self", "defaultMode", "property", "__getdefaultmode", "__setdefaultmode", "None", "__setitem__", "self", "filePath", "content", "isinstance", "content", "NamedStr", "TypeError", "__setitem__", "UnoverwritableDict", "self", "filePath", "content", "read", "self", "filePath", "mode", "None", "\n        Reads a file and adds it as a new element of this.\n        ", "filePath", "mode", "None", "mode", "__defaultMode", "self", "filePath", "self", "self", "filePath", "new_from_file", "NamedStr", "filePath", "mode", "mode", "self", "filePath", "read_from_directory", "self", "dirPath", "filePathPattern", "recursive", "mode", "False", "None", "\n        Reads files from a directory and adds them as new elements of this.\n        ", "mode", "None", "mode", "__defaultMode", "self", "root", "dirs", "files", "walk", "_os", "dirPath", "recursive", "dirs", "f", "files", "path", "join", "path", "_os", "root", "f", "match", "filePathPattern", "path", "read", "self", "path", "mode", "mode", "defaultFileTable", "FileTable", "unittest", "pyramid.testing", "cleanUp", "TestACLAuthorizationPolicy", "TestCase", "unittest", "setUp", "self", "cleanUp", "tearDown", "self", "cleanUp", "_getTargetClass", "self", "pyramid.authorization", "ACLAuthorizationPolicy", "ACLAuthorizationPolicy", "_makeOne", "self", "_getTargetClass", "self", "test_class_implements_IAuthorizationPolicy", "self", "zope.interface.verify", "verifyClass", "pyramid.interfaces", "IAuthorizationPolicy", "verifyClass", "IAuthorizationPolicy", "_getTargetClass", "self", "test_instance_implements_IAuthorizationPolicy", "self", "zope.interface.verify", "verifyObject", "pyramid.interfaces", "IAuthorizationPolicy", "verifyObject", "IAuthorizationPolicy", "_makeOne", "self", "test_permits_no_acl", "self", "context", "DummyContext", "policy", "_makeOne", "self", "assertEqual", "self", "permits", "policy", "context", "view", "False", "test_permits", "self", "pyramid.security", "Deny", "pyramid.security", "Allow", "pyramid.security", "Everyone", "pyramid.security", "Authenticated", "pyramid.security", "ALL_PERMISSIONS", "pyramid.security", "DENY_ALL", "root", "DummyContext", "community", "DummyContext", "__name__", "community", "__parent__", "root", "blog", "DummyContext", "__name__", "blog", "__parent__", "community", "__acl__", "root", "Allow", "Authenticated", "VIEW", "__acl__", "community", "Allow", "fred", "ALL_PERMISSIONS", "Allow", "wilma", "VIEW", "DENY_ALL", "__acl__", "blog", "Allow", "barney", "MEMBER_PERMS", "Allow", "wilma", "VIEW", "policy", "_makeOne", "self", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "wilma", "view", "assertEqual", "self", "result", "True", "assertEqual", "self", "context", "result", "blog", "assertEqual", "self", "ace", "result", "Allow", "wilma", "VIEW", "assertEqual", "self", "acl", "result", "__acl__", "blog", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "wilma", "delete", "assertEqual", "self", "result", "False", "assertEqual", "self", "context", "result", "community", "assertEqual", "self", "ace", "result", "Deny", "Everyone", "ALL_PERMISSIONS", "assertEqual", "self", "acl", "result", "__acl__", "community", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "fred", "view", "assertEqual", "self", "result", "True", "assertEqual", "self", "context", "result", "community", "assertEqual", "self", "ace", "result", "Allow", "fred", "ALL_PERMISSIONS", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "fred", "doesntevenexistyet", "assertEqual", "self", "result", "True", "assertEqual", "self", "context", "result", "community", "assertEqual", "self", "ace", "result", "Allow", "fred", "ALL_PERMISSIONS", "assertEqual", "self", "acl", "result", "__acl__", "community", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "barney", "view", "assertEqual", "self", "result", "True", "assertEqual", "self", "context", "result", "blog", "assertEqual", "self", "ace", "result", "Allow", "barney", "MEMBER_PERMS", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "barney", "administer", "assertEqual", "self", "result", "False", "assertEqual", "self", "context", "result", "community", "assertEqual", "self", "ace", "result", "Deny", "Everyone", "ALL_PERMISSIONS", "assertEqual", "self", "acl", "result", "__acl__", "community", "result", "permits", "policy", "root", "Everyone", "Authenticated", "someguy", "view", "assertEqual", "self", "result", "True", "assertEqual", "self", "context", "result", "root", "assertEqual", "self", "ace", "result", "Allow", "Authenticated", "VIEW", "result", "permits", "policy", "blog", "Everyone", "Authenticated", "someguy", "view", "assertEqual", "self", "result", "False", "assertEqual", "self", "context", "result", "community", "assertEqual", "self", "ace", "result", "Deny", "Everyone", "ALL_PERMISSIONS", "assertEqual", "self", "acl", "result", "__acl__", "community", "result", "permits", "policy", "root", "Everyone", "view", "assertEqual", "self", "result", "False", "assertEqual", "self", "context", "result", "root", "assertEqual", "self", "ace", "result", "<default deny>", "assertEqual", "self", "acl", "result", "__acl__", "root", "context", "DummyContext", "result", "permits", "policy", "context", "Everyone", "view", "assertEqual", "self", "result", "False", "assertEqual", "self", "ace", "result", "<default deny>", "assertEqual", "self", "acl", "result", "<No ACL found on any object in resource lineage>", "test_permits_string_permissions_in_acl", "self", "pyramid.security", "Allow", "root", "DummyContext", "__acl__", "root", "Allow", "wilma", "view_stuff", "policy", "_makeOne", "self", "result", "permits", "policy", "root", "wilma", "view", "assertEqual", "self", "result", "False", "test_principals_allowed_by_permission_direct", "self", "pyramid.security", "Allow", "pyramid.security", "DENY_ALL", "context", "DummyContext", "acl", "Allow", "chrism", "read", "write", "DENY_ALL", "Allow", "other", "read", "__acl__", "context", "acl", "policy", "_makeOne", "self", "result", "sorted", "principals_allowed_by_permission", "policy", "context", "read", "assertEqual", "self", "result", "chrism", "test_principals_allowed_by_permission_string_permission", "self", "pyramid.security", "Allow", "context", "DummyContext", "acl", "Allow", "chrism", "read_it", "__acl__", "context", "acl", "policy", "_makeOne", "self", "result", "principals_allowed_by_permission", "policy", "context", "read", "assertEqual", "self", "list", "result", "test_principals_allowed_by_permission", "self", "pyramid.security", "Allow", "pyramid.security", "Deny", "pyramid.security", "DENY_ALL", "pyramid.security", "ALL_PERMISSIONS", "root", "DummyContext", "__name__", "", "__parent__", "None", "community", "DummyContext", "__name__", "community", "__parent__", "root", "blog", "DummyContext", "__name__", "blog", "__parent__", "community", "__acl__", "root", "Allow", "chrism", "read", "write", "Allow", "other", "read", "Allow", "jim", "ALL_PERMISSIONS", "__acl__", "community", "Deny", "flooz", "read", "Allow", "flooz", "read", "Allow", "mork", "read", "Deny", "jim", "read", "Allow", "someguy", "manage", "__acl__", "blog", "Allow", "fred", "read", "DENY_ALL", "policy", "_makeOne", "self", "result", "sorted", "principals_allowed_by_permission", "policy", "blog", "read", "assertEqual", "self", "result", "fred", "result", "sorted", "principals_allowed_by_permission", "policy", "community", "read", "assertEqual", "self", "result", "chrism", "mork", "other", "result", "sorted", "principals_allowed_by_permission", "policy", "community", "read", "result", "sorted", "principals_allowed_by_permission", "policy", "root", "read", "assertEqual", "self", "result", "chrism", "jim", "other", "test_principals_allowed_by_permission_no_acls", "self", "context", "DummyContext", "policy", "_makeOne", "self", "result", "sorted", "principals_allowed_by_permission", "policy", "context", "read", "assertEqual", "self", "result", "test_principals_allowed_by_permission_deny_not_permission_in_acl", "self", "pyramid.security", "Deny", "pyramid.security", "Everyone", "context", "DummyContext", "acl", "Deny", "Everyone", "write", "__acl__", "context", "acl", "policy", "_makeOne", "self", "result", "sorted", "principals_allowed_by_permission", "policy", "context", "read", "assertEqual", "self", "result", "test_principals_allowed_by_permission_deny_permission_in_acl", "self", "pyramid.security", "Deny", "pyramid.security", "Everyone", "context", "DummyContext", "acl", "Deny", "Everyone", "read", "__acl__", "context", "acl", "policy", "_makeOne", "self", "result", "sorted", "principals_allowed_by_permission", "policy", "context", "read", "assertEqual", "self", "result", "DummyContext", "__init__", "arg", "kw", "self", "update", "__dict__", "self", "kw", "VIEW", "view", "EDIT", "edit", "CREATE", "create", "DELETE", "delete", "MODERATE", "moderate", "ADMINISTER", "administer", "COMMENT", "comment", "GUEST_PERMS", "VIEW", "COMMENT", "MEMBER_PERMS", "GUEST_PERMS", "EDIT", "CREATE", "DELETE", "MODERATOR_PERMS", "MEMBER_PERMS", "MODERATE", "ADMINISTRATOR_PERMS", "MODERATOR_PERMS", "ADMINISTER", "os", "sys", "pip", "urllib2", "mimetypes", "tempfile", "optparse", "OptionParser", "hashlib", "md5", "ImportError", "md5", "md5_module", "md5", "new", "md5_module", "main", "usage", "usage: %prog release", "parser", "OptionParser", "usage", "options", "args", "parse_args", "parser", "len", "args", "error", "parser", "Please provide a release version, e.g. 0.7.0beta3", "release", "args", "scripts_dir", "dirname", "path", "os", "__file__", "download_dir", "normpath", "path", "os", "join", "path", "os", "scripts_dir", "..", "requirements", "release", "exists", "path", "os", "download_dir", "makedirs", "os", "download_dir", "release_reqs", "join", "path", "os", "download_dir", "release.txt", "exists", "path", "os", "release_reqs", "error", "parser", "%s could not be found. Please make sure you created the file before.", "release_reqs", "complete_log", "level", "level", "level_for_integer", "Logger", "pip", "level", "logger", "Logger", "pip", "level", "stdout", "sys", "DEBUG", "Logger", "pip", "append", "complete_log", "logger", "pip", "logger", "finder", "PackageFinder", "pip", "find_links", "http://pypi.pinaxproject.com", "index_urls", "pypi_url", "pip", "req_set", "RequirementSet", "pip", "build_dir", "download_dir", "src_dir", "download_dir", "unmet_requirements", "req", "parse_requirements", "pip", "release_reqs", "finder", "finder", "add_requirement", "req_set", "req", "reqs", "list", "unnamed_requirements", "req_set", "values", "requirements", "req_set", "reqs", "error", "parser", "No requirements were found in %s. Are you sure it contains something?", "release_reqs", "req", "reqs", "name", "req", "notify", "logger", "Searching for: %s", "name", "req", "editable", "req", "append", "unmet_requirements", "req", "location", "build_location", "req", "download_dir", "url", "req", "None", "link", "find_requirement", "finder", "req", "upgrade", "False", "link", "Link", "pip", "url", "req", "link", "md5_hash", "md5_hash", "link", "target_url", "split", "url", "link", "#", "target_file", "None", "resp", "urlopen", "urllib2", "target_url", "HTTPError", "urllib2", "e", "fatal", "logger", "HTTP error %s while getting %s", "code", "e", "link", "IOError", "e", "fatal", "logger", "Error %s while getting %s", "e", "link", "content_type", "info", "resp", "content-type", "startswith", "content_type", "text/html", "append", "unmet_requirements", "req", "filename", "filename", "link", "ext", "splitext", "pip", "filename", "ext", "ext", "guess_extension", "mimetypes", "content_type", "filename", "ext", "temp_location", "join", "path", "os", "download_dir", "filename", "exists", "path", "os", "temp_location", "notify", "logger", "Skipping %s. File exists.", "filename", "fp", "open", "temp_location", "wb", "md5_hash", "download_hash", "md5", "total_length", "int", "info", "resp", "content-length", "ValueError", "KeyError", "total_length", "downloaded", "show_progress", "total_length", "total_length", "show_url", "show_url", "link", "show_progress", "total_length", "start_progress", "logger", "Downloading %s (%s): ", "show_url", "format_size", "pip", "total_length", "start_progress", "logger", "Downloading %s (unknown size): ", "show_url", "notify", "logger", "Downloading %s", "show_url", "debug", "logger", "Downloading from URL %s", "link", "chunk", "read", "resp", "chunk", "downloaded", "len", "chunk", "show_progress", "total_length", "show_progress", "logger", "%s", "format_size", "pip", "downloaded", "show_progress", "logger", "%3i%%  %s", "downloaded", "total_length", "format_size", "pip", "downloaded", "md5_hash", "update", "download_hash", "chunk", "write", "fp", "chunk", "close", "fp", "show_progress", "end_progress", "logger", "%s downloaded", "format_size", "pip", "downloaded", "md5_hash", "download_hash", "hexdigest", "download_hash", "download_hash", "md5_hash", "fatal", "logger", "MD5 hash of the package %s (%s) doesn't match the expected hash %s!", "link", "download_hash", "md5_hash", "InstallationError", "pip", "Bad MD5 hash for package %s", "link", "HTTPError", "urllib2", "e", "fatal", "logger", "Could not install requirement %s because of error %s", "req", "e", "InstallationError", "Could not install requirement %s because of HTTP error %s for URL %s", "req", "e", "url", "DistributionNotFound", "pip", "debug", "logger", "Downloading %s was not successful. Package released?", "req", "unmet_requirements", "notify", "logger", "The following requirements were not downloaded and should be packaged manually:", "indent", "logger", "req", "unmet_requirements", "notify", "logger", "* %s", "req", "__name__", "__main__", "main", "copy", "web", "web.form", "notnull", "google.appengine.ext", "ndb", "google.appengine.api", "users", "memcache", "google.appengine.api", "mail", "palimpsest.models", "World", "get_default_void", "world_exists", "Property", "property_exists", "PropertyValue", "Room", "text_exists", "palimpsest.logins", "get_current_user", "user_exists", "flush_caches", "palimpsest.pages", "Page", "render", "CreatePage", "palimpsest.utils.form", "Form", "CombinedForm", "Submit", "display_input_warning", "display_form_warning", "WorldEdit", "CreatePage", "formargs", "method", "post", "GET", "self", "world", "cur_world", "world_exists", "world", "redirect_if_not_admin", "self", "cur_world", "world_menu", "get_or_put_menu", "self", "cur_world", "admin", "f", "world_form", "self", "form", "CombinedForm", "f", "formargs", "self", "fill", "f", "title", "blurb", "publish", "is_open", "void_text", "title", "cur_world", "blurb", "cur_world", "publish", "cur_world", "is_open", "cur_world", "void_text", "cur_world", "section", "section_world", "render", "form", "admin", "render", "cur_world", "section", "world_menu", "%s on Palimpsest", "title", "cur_world", "POST", "self", "world", "cur_world", "world_exists", "world", "redirect_if_not_admin", "self", "cur_world", "o", "is_open", "cur_world", "world_menu", "get_or_put_menu", "self", "cur_world", "admin", "f", "world_form", "self", "form", "CombinedForm", "f", "formargs", "self", "validates", "f", "section", "section_world", "render", "form", "admin", "render", "cur_world", "section", "world_menu", "%s on Palimpsest", "title", "cur_world", "edit_world", "get_by_id", "World", "world", "title", "edit_world", "title", "d", "f", "blurb", "edit_world", "blurb", "d", "f", "publish", "edit_world", "publish", "d", "f", "void_text", "edit_world", "void_text", "d", "f", "is_open", "edit_world", "is_open", "d", "f", "put", "edit_world", "o", "is_open", "edit_world", "world_menu", "replace_or_put_and_get_menu", "self", "edit_world", "admin", "section", "section_world", "render", "form", "admin", "render", "edit_world", "section", "world_menu", "%s on Palimpsest", "title", "cur_world", "PropertyEdit", "CreatePage", "formargs", "method", "post", "GET", "self", "world", "prop", "cur_world", "world_exists", "world", "cur_prop", "property_exists", "prop", "a", "get_access_string", "cur_world", "page_user", "self", "menu", "get_or_put_menu", "self", "cur_world", "a", "menu", "properties", "active", "param", "input", "web", "hasattr", "param", "r", "section", "section_property_read", "render", "cur_prop", "admin", "render", "cur_world", "section", "menu", "%s's %s on Palimpsest", "title", "cur_world", "name", "cur_prop", "redirect_if_not_edit", "self", "cur_world", "cur_prop", "valid_values", "cur_prop", "|text|", "valid_values", "cur_prop", "|num|", "valid_vals", "valid_values", "cur_prop", "valid_vals", "f", "properties_form", "self", "fill", "f", "name", "valid_values", "fixed_values", "sorter", "info", "discrete", "name", "cur_prop", "valid_vals", "valid_values", "cur_prop", "sorter", "cur_prop", "info", "cur_prop", "discrete", "cur_prop", "edit_form", "CombinedForm", "f", "formargs", "self", "del_form", "CombinedForm", "delete_form", "self", "formargs", "self", "section", "section_property", "render", "edit_form", "del_form", "True", "admin", "render", "cur_world", "section", "menu", "%s's %s on Palimpsest", "title", "cur_world", "name", "cur_prop", "pre", "/js/showhide_form_fields.js", "POST", "self", "world", "prop", "cur_world", "world_exists", "world", "cur_prop", "property_exists", "prop", "redirect_if_not_edit", "self", "cur_world", "cur_prop", "a", "get_access_string", "cur_world", "page_user", "self", "post", "input", "web", "hasattr", "post", "delete", "delete_all_for_property", "PropertyValue", "cur_prop", "delete", "key", "cur_prop", " Flush menus and available properties for everyone so they get reset", "delete", "memcache", "_properties-%s-global", "id", "key", "cur_world", "a", "admin", "delete", "memcache", "%s-closed", "id", "key", "cur_world", "a", "closed", "delete", "memcache", "%s-admin", "id", "key", "cur_world", "replace_or_put_menu", "self", "cur_world", "a", "seeother", "web", "/%s/property", "id", "key", "cur_world", "f", "properties_form", "self", "validates", "f", "menu", "get_or_put_menu", "self", "cur_world", "a", "edit_form", "CombinedForm", "f", "formargs", "self", "section", "section_property", "render", "edit_form", "admin", "render", "cur_world", "section", "menu", "%s's %s on Palimpsest", "title", "cur_world", "name", "cur_prop", "pre", "/js/showhide_form_fields.js", "int", "valid_values", "d", "f", "valid_values", "fixed_values", "d", "f", "valid_values", "valid_values", "d", "f", "ValueError", "valid_values", "valid_values", "d", "f", "discrete", "d", "f", "True", "discrete", "True", "discrete", "False", "to_edit", "cur_prop", "name", "to_edit", "name", "d", "f", "sorter", "to_edit", "sorter", "d", "f", "info", "to_edit", "info", "d", "f", "discrete", "to_edit", "discrete", "valid_values", "to_edit", "valid_values", "last_modified_by", "to_edit", "key", "page_user", "self", "put", "to_edit", "seeother", "web", "/%s/property/%s", "id", "key", "cur_world", "id", "key", "cur_prop", "TextEdit", "CreatePage", "formargs", "method", "post", "GET", "self", "world", "text", "cur_world", "world_exists", "world", "cur_text", "text_exists", "text", "access", "get_access_string", "cur_world", "page_user", "self", "world_menu", "get_or_put_menu", "self", "cur_world", "access", "world_menu", "texts", "active", "param", "input", "web", "hasattr", "param", "r", "world_properties", "get_result", "get_properties_allowed", "cur_world", "page_user", "self", "js", "js_add_properties", "self", "world_properties", "cur_world", "properties_available", "True", "IndexError", "properties_available", "False", "property_values", "get_result", "get_allowed_property_values", "cur_text", "page_user", "self", "js", "js_one_room_on_map", "self", "cur_text", "section", "section_texts_read", "render", "cur_text", "is_open", "cur_world", "properties_available", "property_values", "admin", "render", "cur_world", "section", "world_menu", "%s on Palimpsest", "name", "cur_text", "pre", "http://maps.google.com/maps/api/js?sensor=false", "js", "js", "post", "/js/viewroomcoords.js", "/js/add_text_properties.js", "redirect_if_not_edit", "self", "cur_world", "cur_text", "form", "text_form", "self", "fill", "form", "name", "short_desc", "long_desc", "name", "cur_text", "short_desc", "cur_text", "long_desc", "cur_text", "reset_text_page", "self", "cur_world", "form", "access", "world_menu", "cur_text", "POST", "self", "world", "text", "cur_world", "world_exists", "world", "cur_text", "text_exists", "text", "redirect_if_not_edit", "self", "cur_world", "cur_text", "a", "get_access_string", "cur_world", "page_user", "self", "post", "input", "web", "hasattr", "post", "delete", "delete_all_for_text", "PropertyValue", "cur_text", "delete", "key", "cur_text", " Flush menus for everyone so they get reset", "replace_or_put_menu", "self", "cur_world", "a", "a", "admin", "delete", "memcache", "%s-closed", "id", "key", "cur_world", "a", "closed", "delete", "memcache", "%s-admin", "id", "key", "cur_world", "seeother", "web", "/%s/text", "id", "key", "cur_world", "i", "input", "web", "long", "lat", "prop_name", "prop_val", "del_property", "action_val", "mod_id", "coord", "new", "form", "text_form", "self", "validates", "form", "world_menu", "get_or_put_menu", "self", "cur_world", "a", "reset_text_page", "self", "cur_world", "form", "a", "world_menu", "cur_text", "world", "cur_text", "key", "cur_world", "name", "cur_text", "name", "d", "form", "short_desc", "cur_text", "short_desc", "d", "form", "long_desc", "cur_text", "long_desc", "d", "form", "last_modified_by", "cur_text", "key", "page_user", "self", "latitudes", "cur_text", "lat", "i", "longitudes", "cur_text", "long", "i", "text_ftr", "put_async", "cur_text", "is_mod", "cur_world", "page_user", "self", "visible", "True", " Flush menus for everyone so they get reset", "mrpc", "create_rpc", "memcache", "m", "flush_caches", "", "cur_world", "mrpc", "get_result", "m", "AssertionError", "visible", "False", "index", "name", "enumerate", "prop_name", "i", "p", "Key", "ndb", "Property", "int", "name", "append", "new", "PropertyValue", "value", "new", "index", "prop_val", "i", "index", "of_property", "new", "index", "p", "room", "new", "index", "key", "cur_text", "added_by", "new", "index", "key", "page_user", "self", "visible", "new", "index", "visible", "new_values_ftrs", "put_multi_async", "ndb", "new", "value_keys", "index", "p_id", "enumerate", "del_property", "i", "append", "value_keys", "Key", "ndb", "PropertyValue", "int", "p_id", "delete_multi", "ndb", "value_keys", "ftr", "new_values_ftrs", "get_result", "ftr", "get_result", "text_ftr", "set_menu", "self", "cur_world", "a", "seeother", "web", "/%s/text/%s", "id", "key", "cur_world", "id", "key", "cur_text", "os", "subprocess", "re", "locale", "sys", "output", "aprint", "convert_time", "raw", "h", "m", "s", "%02d", "c", "c", "raw", "raw", "raw", "h", "00", "startswith", "m", "0", "m", "m", "m", ":", "s", "startswith", "h", "0", "h", "h", "h", ":", "m", ":", "s", "bold", "s", "startswith", "str", "s", "<b>", "endswith", "str", "s", "</b>", "<b>%s</b>", "s", "s", "unbold", "s", "startswith", "str", "s", "<b>", "endswith", "str", "s", "</b>", "s", "s", "escape_html", "s", "s", "replace", "s", "&", "&amp;", "s", "replace", "s", "<", "&lt;", "s", "replace", "s", ">", "&gt;", "s", "replace", "s", "\"", "&quot;", "s", "unescape_html", "s", "s", "replace", "s", "&lt;", "<", "s", "replace", "s", "&gt;", ">", "s", "replace", "s", "&quot;", "\"", "s", "replace", "s", "&nbsp;", " ", "s", "replace", "s", "&amp;", "&", "s", "wiki_to_html", "s", "s", "sub", "re", "'''(.*?)'''", "<b>\\1</b>", "s", "s", "sub", "re", "''(.*?)''", "<i>\\1</i>", "s", "s", "strip_all_slashes", "s", "s", "replace", "s", "\\", "", "s", "replace", "s", "/", "", "s", "replace", "s", "\"", "", "s", "_rmgeneric", "path", "__func__", "__func__", "path", "OSError", "is_binary", "f", "\u0000", "f", "True", "False", "link_markup", "s", "enclose_in_parentheses", "small", "linkcolor", "enclose_in_parentheses", "s", "(%s)", "s", "small", "s", "<small>%s</small>", "s", "linkcolor", "color", "linkcolor", "color", "blue", "s", "<span color='%s'>%s</span>", "color", "s", "s", "iunique", "iterable", "key", "id", "seen", "set", "i", "iterable", "key", "i", "seen", "add", "seen", "key", "i", "i", "remove_list_duplicates", "inputlist", "case", "True", "case", "key", "x", "x", "key", "x", "lower", "repr", "x", "list", "iunique", "inputlist", "key", "lower_no_the", "s", "the_re", "compile", "re", "^the ", "s", "unicode", "s", "s", "sub", "the_re", "", "lower", "s", "s", "str", "s", "s", "create_dir", "dirname", "exists", "path", "os", "expanduser", "path", "os", "dirname", "makedirs", "os", "expanduser", "path", "os", "dirname", "IOError", "OSError", "remove_file", "filename", "exists", "path", "os", "filename", "remove", "os", "filename", "remove_dir_recursive", "path", "isdir", "path", "os", "path", "files", "listdir", "os", "path", "x", "files", "fullpath", "join", "path", "os", "path", "x", "isfile", "path", "os", "fullpath", "f", "remove", "os", "_rmgeneric", "fullpath", "f", "isdir", "path", "os", "fullpath", "remove_dir_recursive", "fullpath", "f", "rmdir", "os", "_rmgeneric", "fullpath", "f", "file_exists_insensitive", "filename", "exists", "path", "os", "filename", "filename", "regexp", "compile", "re", "escape", "re", "filename", "IGNORECASE", "re", "path", "dirname", "path", "os", "filename", "files", "listdir", "os", "path", "OSError", "filename", "x", "files", "fullpath", "join", "path", "os", "path", "x", "match", "regexp", "fullpath", "fullpath", "filename", "browser_load", "docslink", "browser", "window", "browser", "strip", "browser", "browsers", "strip", "browser", "browsers", "gnome-open", "x-www-browser", "exo-open", "kfmclient openURL", "firefox", "mozilla", "opera", "chromium-browser", "browser", "browsers", "Popen", "subprocess", "split", "browser", "docslink", "OSError", "False", "True", "file_from_utf8", "filename", "gobject", "filename_from_utf8", "gobject", "filename", "filename", "is_lang_rtl", "window", "pango", "get_base_dir", "get_pango_context", "window", "DIRECTION_RTL", "pango", "sanitize_musicdir", "mdir", "mdir", "expanduser", "path", "os", "mdir", "", "mpd_env_vars", "host", "None", "port", "None", "password", "None", "MPD_HOST", "environ", "os", "@", "environ", "os", "MPD_HOST", "password", "host", "split", "environ", "os", "MPD_HOST", "@", "host", "environ", "os", "MPD_HOST", "MPD_PORT", "environ", "os", "port", "int", "environ", "os", "MPD_PORT", "host", "port", "password", "get_files_recursively", "dirname", "filenames", "walk", "path", "os", "dirname", "_get_files_recursively", "filenames", "filenames", "_get_files_recursively", "filenames", "dirname", "files", "extend", "filenames", "join", "path", "os", "dirname", "f", "f", "files", "setlocale", "setlocale", "locale", "LC_ALL", "locale", "", "setlocale", "locale", "LC_CTYPE", "locale", "C", "aprint", "Failed to set locale", "exit", "sys", "datetime", "os", "re", "sys", "types", "django.conf", "settings", "django.http", "HttpResponse", "HttpResponseServerError", "HttpResponseNotFound", "django.template", "Template", "Context", "TemplateDoesNotExist", "TemplateSyntaxError", "django.template.defaultfilters", "force_escape", "pprint", "django.utils.html", "escape", "django.utils.importlib", "import_module", "django.utils.encoding", "smart_unicode", "smart_str", "HIDDEN_SETTINGS", "compile", "re", "SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE", "linebreak_iter", "template_source", "p", "find", "template_source", "\n", "p", "p", "p", "find", "template_source", "\n", "p", "len", "template_source", "cleanse_setting", "key", "value", "Cleanse an individual setting key/value of sensitive content.\n\n    If the value is a dictionary, recursively cleanse the keys in\n    that dictionary.\n    ", "search", "HIDDEN_SETTINGS", "key", "cleansed", "********************", "isinstance", "value", "dict", "cleansed", "dict", "k", "cleanse_setting", "k", "v", "k", "v", "items", "value", "cleansed", "value", "TypeError", "cleansed", "value", "cleansed", "get_safe_settings", "Returns a dictionary of the settings module, with sensitive settings blurred out.", "settings_dict", "k", "dir", "settings", "isupper", "k", "settings_dict", "k", "cleanse_setting", "k", "getattr", "settings", "k", "settings_dict", "technical_500_response", "request", "exc_type", "exc_value", "tb", "\n    Create a technical server error response. The last three arguments are\n    the values returned from sys.exc_info() and friends.\n    ", "reporter", "ExceptionReporter", "request", "exc_type", "exc_value", "tb", "html", "get_traceback_html", "reporter", "HttpResponseServerError", "html", "mimetype", "text/html", "ExceptionReporter", "object", "\n    A class to organize and coordinate reporting on exceptions.\n    ", "__init__", "self", "request", "exc_type", "exc_value", "tb", "is_email", "False", "request", "self", "request", "exc_type", "self", "exc_type", "exc_value", "self", "exc_value", "tb", "self", "tb", "is_email", "self", "is_email", "template_info", "self", "None", "template_does_not_exist", "self", "False", "loader_debug_info", "self", "None", "isinstance", "exc_type", "self", "basestring", "exc_value", "self", "Exception", "Deprecated String Exception: %r", "exc_type", "self", "exc_type", "self", "type", "exc_value", "self", "get_traceback_html", "self", "Return HTML code for traceback.", "exc_type", "self", "issubclass", "exc_type", "self", "TemplateDoesNotExist", "django.template.loader", "template_source_loaders", "template_does_not_exist", "self", "True", "loader_debug_info", "self", "loader", "template_source_loaders", "module", "import_module", "__module__", "loader", "hasattr", "loader", "__class__", "source_list_func", "get_template_sources", "loader", "source_list_func", "get_template_sources", "module", "template_list", "name", "exists", "t", "exists", "path", "os", "t", "t", "source_list_func", "str", "exc_value", "self", "ImportError", "AttributeError", "template_list", "hasattr", "loader", "__class__", "loader_name", "__module__", "loader", ".", "__name__", "__class__", "loader", "loader_name", "__module__", "loader", ".", "__name__", "loader", "append", "loader_debug_info", "self", "loader", "templates", "loader_name", "template_list", "TEMPLATE_DEBUG", "settings", "hasattr", "exc_value", "self", "source", "isinstance", "exc_value", "self", "TemplateSyntaxError", "get_template_exception_info", "self", "frames", "get_traceback_frames", "self", "i", "frame", "enumerate", "frames", "vars", "frame", "frame", "vars", "k", "force_escape", "pprint", "v", "k", "v", "frame", "vars", "frames", "i", "frame", "unicode_hint", "", "exc_type", "self", "issubclass", "exc_type", "self", "UnicodeError", "start", "getattr", "exc_value", "self", "start", "None", "end", "getattr", "exc_value", "self", "end", "None", "start", "None", "end", "None", "unicode_str", "args", "exc_value", "self", "unicode_hint", "smart_unicode", "unicode_str", "max", "start", "min", "end", "len", "unicode_str", "ascii", "errors", "replace", "django", "get_version", "t", "Template", "TECHNICAL_500_TEMPLATE", "name", "Technical 500 template", "c", "Context", "is_email", "unicode_hint", "frames", "request", "settings", "sys_executable", "sys_version_info", "server_time", "django_version_info", "sys_path", "template_info", "template_does_not_exist", "loader_debug_info", "is_email", "self", "unicode_hint", "frames", "request", "self", "get_safe_settings", "executable", "sys", "%d.%d.%d", "version_info", "sys", "now", "datetime", "datetime", "get_version", "path", "sys", "template_info", "self", "template_does_not_exist", "self", "loader_debug_info", "self", "exc_type", "self", "c", "exception_type", "__name__", "exc_type", "self", "exc_value", "self", "c", "exception_value", "smart_unicode", "exc_value", "self", "errors", "replace", "frames", "c", "lastframe", "frames", "render", "t", "c", "get_template_exception_info", "self", "origin", "start", "end", "source", "exc_value", "self", "template_source", "reload", "origin", "context_lines", "line", "upto", "source_lines", "before", "during", "after", "", "num", "next", "enumerate", "linebreak_iter", "template_source", "start", "upto", "end", "next", "line", "num", "before", "escape", "template_source", "upto", "start", "during", "escape", "template_source", "start", "end", "after", "escape", "template_source", "end", "next", "append", "source_lines", "num", "escape", "template_source", "upto", "next", "upto", "next", "total", "len", "source_lines", "top", "max", "line", "context_lines", "bottom", "min", "total", "line", "context_lines", "template_info", "self", "message", "source_lines", "before", "during", "after", "top", "bottom", "total", "line", "name", "args", "exc_value", "self", "source_lines", "top", "bottom", "before", "during", "after", "top", "bottom", "total", "line", "name", "origin", "_get_lines_from_file", "self", "filename", "lineno", "context_lines", "loader", "module_name", "None", "None", "\n        Returns context_lines before and after lineno from file.\n        Returns (pre_context_lineno, pre_context, context_line, post_context).\n        ", "source", "None", "loader", "None", "hasattr", "loader", "get_source", "source", "get_source", "loader", "module_name", "source", "None", "source", "splitlines", "source", "source", "None", "f", "open", "filename", "source", "readlines", "f", "close", "f", "OSError", "IOError", "source", "None", "None", "None", "encoding", "ascii", "line", "source", "match", "search", "re", "coding[:=]\\s*([-\\w.]+)", "line", "match", "encoding", "group", "match", "source", "unicode", "sline", "encoding", "replace", "sline", "source", "lower_bound", "max", "lineno", "context_lines", "upper_bound", "lineno", "context_lines", "pre_context", "strip", "line", "\n", "line", "source", "lower_bound", "lineno", "context_line", "strip", "source", "lineno", "\n", "post_context", "strip", "line", "\n", "line", "source", "lineno", "upper_bound", "lower_bound", "pre_context", "context_line", "post_context", "get_traceback_frames", "self", "frames", "tb", "tb", "self", "tb", "None", "get", "f_locals", "tb_frame", "tb", "__traceback_hide__", "tb", "tb_next", "tb", "filename", "co_filename", "f_code", "tb_frame", "tb", "function", "co_name", "f_code", "tb_frame", "tb", "lineno", "tb_lineno", "tb", "loader", "get", "f_globals", "tb_frame", "tb", "__loader__", "module_name", "get", "f_globals", "tb_frame", "tb", "__name__", "pre_context_lineno", "pre_context", "context_line", "post_context", "_get_lines_from_file", "self", "filename", "lineno", "loader", "module_name", "pre_context_lineno", "None", "append", "frames", "tb", "filename", "function", "lineno", "vars", "id", "pre_context", "context_line", "post_context", "pre_context_lineno", "tb", "filename", "function", "lineno", "items", "f_locals", "tb_frame", "tb", "id", "tb", "pre_context", "context_line", "post_context", "pre_context_lineno", "tb", "tb_next", "tb", "frames", "format_exception", "self", "\n        Return the same data as from traceback.format_exception.\n        ", "traceback", "frames", "get_traceback_frames", "self", "tb", "f", "filename", "f", "lineno", "f", "function", "f", "context_line", "f", "frames", "list", "Traceback (most recent call last):\n", "list", "format_list", "traceback", "tb", "list", "format_exception_only", "traceback", "exc_type", "self", "exc_value", "self", "list", "technical_404_response", "request", "exception", "Create a technical 404 error response. The exception should be the Http404.", "tried", "args", "exception", "tried", "IndexError", "TypeError", "KeyError", "tried", "tried", "empty_urlconf", "request", "urlconf", "getattr", "request", "urlconf", "ROOT_URLCONF", "settings", "isinstance", "urlconf", "ModuleType", "types", "urlconf", "__name__", "urlconf", "t", "Template", "TECHNICAL_404_TEMPLATE", "name", "Technical 404 template", "c", "Context", "urlconf", "root_urlconf", "request_path", "urlpatterns", "reason", "request", "settings", "urlconf", "ROOT_URLCONF", "settings", "path_info", "request", "tried", "smart_str", "exception", "errors", "replace", "request", "get_safe_settings", "HttpResponseNotFound", "render", "t", "c", "mimetype", "text/html", "empty_urlconf", "request", "Create an empty URLconf 404 error response.", "t", "Template", "EMPTY_URLCONF_TEMPLATE", "name", "Empty URLConf template", "c", "Context", "project_name", "split", "SETTINGS_MODULE", "settings", ".", "HttpResponse", "render", "t", "c", "mimetype", "text/html", "TECHNICAL_500_TEMPLATE", "\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>{% if exception_type %}{{ exception_type }}{% else %}Report{% endif %}{% if request %} at {{ request.path_info|escape }}{% endif %}</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h2 span { font-size:80%; color:#666; font-weight:normal; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; }\n    ul.traceback li.frame { padding-bottom:1em; }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#666; cursor:pointer; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:black; background-color:#ccc; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:black; text-decoration:none; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 0 20px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em;}\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n  {% if not is_email %}\n  <script type=\"text/javascript\">\n  //<!--\n    function getElementsByClassName(oElm, strTagName, strClassName){\n        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com\n        var arrElements = (strTagName == \"*\" && document.all)? document.all :\n        oElm.getElementsByTagName(strTagName);\n        var arrReturnElements = new Array();\n        strClassName = strClassName.replace(/\\-/g, \"\\-\");\n        var oRegExp = new RegExp(\"(^|\\s)\" + strClassName + \"(\\s|$)\");\n        var oElement;\n        for(var i=0; i<arrElements.length; i++){\n            oElement = arrElements[i];\n            if(oRegExp.test(oElement.className)){\n                arrReturnElements.push(oElement);\n            }\n        }\n        return (arrReturnElements)\n    }\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(getElementsByClassName(document, 'table', 'vars'));\n      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));\n      hideAll(getElementsByClassName(document, 'ol', 'post-context'));\n      hideAll(getElementsByClassName(document, 'div', 'pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block' : 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.innerHTML = s.innerHTML == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.innerHTML = link.innerHTML == s1 ? s2 : s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n    //-->\n  </script>\n  {% endif %}\n</head>\n<body>\n<div id=\"summary\">\n  <h1>{% if exception_type %}{{ exception_type }}{% else %}Report{% endif %}{% if request %} at {{ request.path_info|escape }}{% endif %}</h1>\n  <pre class=\"exception_value\">{% if exception_value %}{{ exception_value|force_escape }}{% else %}No exception supplied{% endif %}</pre>\n  <table class=\"meta\">\n{% if request %}\n    <tr>\n      <th>Request Method:</th>\n      <td>{{ request.META.REQUEST_METHOD }}</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>{{ request.build_absolute_uri|escape }}</td>\n    </tr>\n{% endif %}\n    <tr>\n      <th>Django Version:</th>\n      <td>{{ django_version_info }}</td>\n    </tr>\n{% if exception_type %}\n    <tr>\n      <th>Exception Type:</th>\n      <td>{{ exception_type }}</td>\n    </tr>\n{% endif %}\n{% if exception_type and exception_value %}\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>{{ exception_value|force_escape }}</pre></td>\n    </tr>\n{% endif %}\n{% if lastframe %}\n    <tr>\n      <th>Exception Location:</th>\n      <td>{{ lastframe.filename|escape }} in {{ lastframe.function|escape }}, line {{ lastframe.lineno }}</td>\n    </tr>\n{% endif %}\n    <tr>\n      <th>Python Executable:</th>\n      <td>{{ sys_executable|escape }}</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>{{ sys_version_info }}</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>{{ sys_path|pprint }}</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>{{server_time|date:\"r\"}}</td>\n    </tr>\n  </table>\n</div>\n{% if unicode_hint %}\n<div id=\"unicode-hint\">\n    <h2>Unicode error hint</h2>\n    <p>The string that could not be encoded/decoded was: <strong>{{ unicode_hint|force_escape }}</strong></p>\n</div>\n{% endif %}\n{% if template_does_not_exist %}\n<div id=\"template-not-exist\">\n    <h2>Template-loader postmortem</h2>\n    {% if loader_debug_info %}\n        <p>Django tried loading these templates, in this order:</p>\n        <ul>\n        {% for loader in loader_debug_info %}\n            <li>Using loader <code>{{ loader.loader }}</code>:\n                <ul>{% for t in loader.templates %}<li><code>{{ t.name }}</code> (File {% if t.exists %}exists{% else %}does not exist{% endif %})</li>{% endfor %}</ul>\n            </li>\n        {% endfor %}\n        </ul>\n    {% else %}\n        <p>Django couldn't find any templates because your <code>TEMPLATE_LOADERS</code> setting is empty!</p>\n    {% endif %}\n</div>\n{% endif %}\n{% if template_info %}\n<div id=\"template\">\n   <h2>Template error</h2>\n   <p>In template <code>{{ template_info.name }}</code>, error at line <strong>{{ template_info.line }}</strong></p>\n   <h3>{{ template_info.message }}</h3>\n   <table class=\"source{% if template_info.top %} cut-top{% endif %}{% ifnotequal template_info.bottom template_info.total %} cut-bottom{% endifnotequal %}\">\n   {% for source_line in template_info.source_lines %}\n   {% ifequal source_line.0 template_info.line %}\n       <tr class=\"error\"><th>{{ source_line.0 }}</th>\n       <td>{{ template_info.before }}<span class=\"specific\">{{ template_info.during }}</span>{{ template_info.after }}</td></tr>\n   {% else %}\n      <tr><th>{{ source_line.0 }}</th>\n      <td>{{ source_line.1 }}</td></tr>\n   {% endifequal %}\n   {% endfor %}\n   </table>\n</div>\n{% endif %}\n{% if frames %}\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\">{% if not is_email %}<a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">Switch to copy-and-paste view</a></span>{% endif %}</h2>\n  {% autoescape off %}\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      {% for frame in frames %}\n        <li class=\"frame\">\n          <code>{{ frame.filename|escape }}</code> in <code>{{ frame.function|escape }}</code>\n\n          {% if frame.context_line %}\n            <div class=\"context\" id=\"c{{ frame.id }}\">\n              {% if frame.pre_context and not is_email %}\n                <ol start=\"{{ frame.pre_context_lineno }}\" class=\"pre-context\" id=\"pre{{ frame.id }}\">{% for line in frame.pre_context %}<li onclick=\"toggle('pre{{ frame.id }}', 'post{{ frame.id }}')\"><pre>{{ line|escape }}</pre></li>{% endfor %}</ol>\n              {% endif %}\n              <ol start=\"{{ frame.lineno }}\" class=\"context-line\"><li onclick=\"toggle('pre{{ frame.id }}', 'post{{ frame.id }}')\"><pre>{{ frame.context_line|escape }}</pre>{% if not is_email %} <span>...</span>{% endif %}</li></ol>\n              {% if frame.post_context and not is_email  %}\n                <ol start='{{ frame.lineno|add:\"1\" }}' class=\"post-context\" id=\"post{{ frame.id }}\">{% for line in frame.post_context %}<li onclick=\"toggle('pre{{ frame.id }}', 'post{{ frame.id }}')\"><pre>{{ line|escape }}</pre></li>{% endfor %}</ol>\n              {% endif %}\n            </div>\n          {% endif %}\n\n          {% if frame.vars %}\n            <div class=\"commands\">\n                {% if is_email %}\n                    <h2>Local Vars</h2>\n                {% else %}\n                    <a href=\"#\" onclick=\"return varToggle(this, '{{ frame.id }}')\"><span>&#x25b6;</span> Local vars</a>\n                {% endif %}\n            </div>\n            <table class=\"vars\" id=\"v{{ frame.id }}\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {% for var in frame.vars|dictsort:\"0\" %}\n                  <tr>\n                    <td>{{ var.0|force_escape }}</td>\n                    <td class=\"code\"><pre>{{ var.1 }}</pre></td>\n                  </tr>\n                {% endfor %}\n              </tbody>\n            </table>\n          {% endif %}\n        </li>\n      {% endfor %}\n    </ul>\n  </div>\n  {% endautoescape %}\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n{% if not is_email %}\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\" value=\"{{ exception_type|escape }}{% if request %} at {{ request.path_info|escape }}{% endif %}\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n{% if request %}\nRequest Method: {{ request.META.REQUEST_METHOD }}\nRequest URL: {{ request.build_absolute_uri|escape }}\n{% endif %}\nDjango Version: {{ django_version_info }}\nPython Version: {{ sys_version_info }}\nInstalled Applications:\n{{ settings.INSTALLED_APPS|pprint }}\nInstalled Middleware:\n{{ settings.MIDDLEWARE_CLASSES|pprint }}\n\n{% if template_does_not_exist %}Template Loader Error:\n{% if loader_debug_info %}Django tried loading these templates, in this order:\n{% for loader in loader_debug_info %}Using loader {{ loader.loader }}:\n{% for t in loader.templates %}{{ t.name }} (File {% if t.exists %}exists{% else %}does not exist{% endif %})\n{% endfor %}{% endfor %}\n{% else %}Django couldn't find any templates because your TEMPLATE_LOADERS setting is empty!\n{% endif %}\n{% endif %}{% if template_info %}\nTemplate error:\nIn template {{ template_info.name }}, error at line {{ template_info.line }}\n   {{ template_info.message }}{% for source_line in template_info.source_lines %}{% ifequal source_line.0 template_info.line %}\n   {{ source_line.0 }} : {{ template_info.before }} {{ template_info.during }} {{ template_info.after }}\n{% else %}\n   {{ source_line.0 }} : {{ source_line.1 }}\n{% endifequal %}{% endfor %}{% endif %}\nTraceback:\n{% for frame in frames %}File \"{{ frame.filename|escape }}\" in {{ frame.function|escape }}\n{% if frame.context_line %}  {{ frame.lineno }}. {{ frame.context_line|escape }}{% endif %}\n{% endfor %}\nException Type: {{ exception_type|escape }}{% if request %} at {{ request.path_info|escape }}{% endif %}\nException Value: {{ exception_value|force_escape }}\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public Web site\">\n  </div>\n</form>\n</div>\n{% endif %}\n{% endif %}\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n{% if request %}\n  <h3 id=\"get-info\">GET</h3>\n  {% if request.GET %}\n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {% for var in request.GET.items %}\n          <tr>\n            <td>{{ var.0 }}</td>\n            <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n          </tr>\n        {% endfor %}\n      </tbody>\n    </table>\n  {% else %}\n    <p>No GET data</p>\n  {% endif %}\n\n  <h3 id=\"post-info\">POST</h3>\n  {% if request.POST %}\n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {% for var in request.POST.items %}\n          <tr>\n            <td>{{ var.0 }}</td>\n            <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n          </tr>\n        {% endfor %}\n      </tbody>\n    </table>\n  {% else %}\n    <p>No POST data</p>\n  {% endif %}\n  <h3 id=\"files-info\">FILES</h3>\n  {% if request.FILES %}\n    <table class=\"req\">\n        <thead>\n            <tr>\n                <th>Variable</th>\n                <th>Value</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for var in request.FILES.items %}\n                <tr>\n                    <td>{{ var.0 }}</td>\n                    <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n                </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n  {% else %}\n    <p>No FILES data</p>\n  {% endif %}\n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  {% if request.COOKIES %}\n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {% for var in request.COOKIES.items %}\n          <tr>\n            <td>{{ var.0 }}</td>\n            <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n          </tr>\n        {% endfor %}\n      </tbody>\n    </table>\n  {% else %}\n    <p>No cookie data</p>\n  {% endif %}\n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      {% for var in request.META.items|dictsort:\"0\" %}\n        <tr>\n          <td>{{ var.0 }}</td>\n          <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n        </tr>\n      {% endfor %}\n    </tbody>\n  </table>\n{% else %}\n  <p>Request data not supplied</p>\n{% endif %}\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>{{ settings.SETTINGS_MODULE }}</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      {% for var in settings.items|dictsort:\"0\" %}\n        <tr>\n          <td>{{ var.0 }}</td>\n          <td class=\"code\"><pre>{{ var.1|pprint }}</pre></td>\n        </tr>\n      {% endfor %}\n    </tbody>\n  </table>\n\n</div>\n{% if not is_email %}\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard 500 page.\n    </p>\n  </div>\n{% endif %}\n</body>\n</html>\n", "TECHNICAL_404_TEMPLATE", "\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at {{ request.path_info|escape }}</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>{{ request.META.REQUEST_METHOD }}</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n      <td>{{ request.build_absolute_uri|escape }}</td>\n      </tr>\n    </table>\n  </div>\n  <div id=\"info\">\n    {% if urlpatterns %}\n      <p>\n      Using the URLconf defined in <code>{{ urlconf }}</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        {% for pattern in urlpatterns %}\n          <li>\n            {% for pat in pattern %}\n                {{ pat.regex.pattern }}\n                {% if forloop.last and pat.name %}[name='{{ pat.name }}']{% endif %}\n            {% endfor %}\n          </li>\n        {% endfor %}\n      </ol>\n      <p>The current URL, <code>{{ request_path|escape }}</code>, didn't match any of these.</p>\n    {% else %}\n      <p>{{ reason }}</p>\n    {% endif %}\n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n", "EMPTY_URLCONF_TEMPLATE", "\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html lang=\"en\"><head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\"><title>Welcome to Django</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h2 span { font-size:80%; color:#666; font-weight:normal; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    ul { margin-left: 2em; margin-top: 1em; }\n    #summary { background: #e0ebff; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #instructions { background:#f6f6f6; }\n    #summary table { border:none; background:transparent; }\n  </style>\n</head>\n\n<body>\n<div id=\"summary\">\n  <h1>It worked!</h1>\n  <h2>Congratulations on your first Django-powered page.</h2>\n</div>\n\n<div id=\"instructions\">\n  <p>Of course, you haven't actually done any work yet. Here's what to do next:</p>\n  <ul>\n    <li>If you plan to use a database, edit the <code>DATABASES</code> setting in <code>{{ project_name }}/settings.py</code>.</li>\n    <li>Start your first app by running <code>python {{ project_name }}/manage.py startapp [appname]</code>.</li>\n  </ul>\n</div>\n\n<div id=\"explanation\">\n  <p>\n    You're seeing this message because you have <code>DEBUG = True</code> in your\n    Django settings file and you haven't configured any URLs. Get to work!\n  </p>\n</div>\n</body></html>\n", "time", "math", "degrees", "pi", "LocalFuncs", "angleBetween", "getCorners", "relativeAngle", "abst2pixel", "pixel2abst", "abst2astar", "astar2abst", "getKickingPos", "getSquareInFrontOfBall", "getBallRobotDist", "abst2cm", "Shared.Funcs", "simpleAngle", "getWheelSpeeds", "vecDist", "Params", "Params", "Model.PathFinding", "*", "Drawing.Drawable", "Line", "Cross", "Circle", "NavigatePID", "moveTo", "Decision.Strategy", "Strategy", "Decision.Percept", "*", "Decision.Decision", "Decision", "Simulator.Util.Lookahead", "IntersectionNotFound", "L", "d", "self", "tag", "message", "Log", "L", "numpy", "TAG", "SIMPLEACTIONS", "kick", "strategy", "kick", "getRobot", "strategy", "doStartRush", "strategy", "r", "getRobot", "strategy", "w", "getWorld", "strategy", "dist", "abst2cm", "getBallRobotDist", "w", "dist", "startRush", "r", "dist", "stopSleep", "strategy", "sleeptime", "stop", "getRobot", "strategy", "d", "Log", "TAG", "Stop Sleep is true!!", "sleep", "time", "sleeptime", "faceBall", "strategy", "r", "getRobot", "strategy", "w", "getWorld", "strategy", "bot", "getUs", "w", "ball", "getBall", "w", "angle", "angleBetween", "bot", "ball", "abs", "angle", "turn", "r", "angle", "sleep", "time", "stop", "r", "moveToInterception", "strategy", "maxspeed", "None", "x", "y", "getExtra", "strategy", "Goal Position", "KeyError", "d", "Log", "TAG", "moveToInterception - KeyError", "goal", "computeIntersection", "getWorld", "strategy", "gx", "x", "changeGoal", "strategy", "goal", "maxspeed", "moveTo", "strategy", "gpos", "getExtra", "strategy", "Goal Position", "moveTo", "strategy", "gpos", "getExtra", "strategy", "Goal Position", "maxspeed", "maxspeed", "moveToGoalPos", "strategy", "moveTo", "strategy", "gpos", "getExtra", "strategy", "Goal Position", "KeyError", "d", "Log", "TAG", "moveToGoalPos - KeyError", "changeGoal", "strategy", "goal", "d", "Log", "TAG", "Setting goal position to %s", "goal", "w", "getWorld", "strategy", "goal", "clearLayer", "w", "moving to position", "addToDrawing", "w", "Cross", "goal", "colour", "abst", "True", "layer", "moving to position", "addToDrawing", "w", "Circle", "goal", "inBallMotionLineTol", "Params", "colour", "layer", "moving to position", "setExtra", "strategy", "Goal Position", "goal", "moveTo", "strategy", "gpos", "goal", "defend", "strategy", "world", "getWorld", "strategy", "r", "getRobot", "strategy", "bot", "getUs", "world", "w", "h", "getDimensions", "world", "d", "Log", "DEFEND", "ball_pos %f %f", "getPosition", "getBall", "world", "d", "Log", "DEFEND", "w %d h %d", "w", "h", "goal", "w", "getTheirSide", "world", "high", "goal", "w", "d", "Log", "DEFEND", "goal", "angle", "relativeAngle", "bot", "goal", "d", "Log", "DEFEND", "angle %f", "degrees", "angle", "abs", "angle", "turn", "r", "angle", "sleep", "time", "move", "r", "printVisionData", "strategy", "w", "getWorld", "strategy", "Yellow Bot  Position: ", "str", "getPosition", "getYellowRobot", "w", ",  \tOrientation: ", "str", "degrees", "getAngle", "getYellowRobot", "w", "\n            Velocity: ", "str", "getVelocity", "getYellowRobot", "w", "\nBlue Bot    Position: ", "str", "getPosition", "getBlueRobot", "w", ",  \tOrientation: ", "str", "degrees", "getAngle", "getBlueRobot", "w", "\n            Velocity: ", "str", "getVelocity", "getBlueRobot", "w", "\nBall        Position: ", "str", "getPosition", "getBall", "w", "\n            Velocity: ", "str", "getVelocity", "getBall", "w", "\n", "printPrediction", "strategy", "get_intersection_ball_us", "getPredictor", "strategy", "dribble", "strategy", "r", "getRobot", "strategy", "move", "r", "sleep", "time", "move", "r", "sleep", "time", "move", "r", "sleep", "time", "move", "r", "sleep", "time", "stop", "r", "finish", "strategy", "straightSpeedTest", "strategy", "r", "getRobot", "strategy", "move", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "sleep", "time", "getVelocity", "r", "stop", "r", "finish", "strategy", "debugPrediction", "strategy", "w", "getWorld", "strategy", "p", "get_ball_position", "getPredictor", "strategy", "addToDrawing", "w", "Circle", "p", "colour", "abst", "True", "layer", "moving to position", "Predicted Position: ", "str", "p", "catch_ball", "strategy", "p", "get_intersection_ball_us", "getPredictor", "strategy", "IntersectionNotFound", "p", "get_ball_position", "getPredictor", "strategy", "moveTo", "strategy", "p", "w", "getWorld", "strategy", "addToDrawing", "w", "Circle", "p", "colour", "abst", "True", "layer", "moving to position", "Predicted Position: ", "str", "p", "re", "traceback", "zope.interface", "implementer", "pyramid.interfaces", "IActionInfo", "pyramid.compat", "bytes_", "is_nonstr_iter", "pyramid.exceptions", "ConfigurationError", "pyramid.traversal", "find_interface", "traversal_path", "hashlib", "md5", "MAX_ORDER", "DEFAULT_PHASH", "hexdigest", "md5", "ActionInfo", "object", "__init__", "self", "file", "line", "function", "src", "file", "self", "file", "line", "self", "line", "function", "self", "function", "src", "self", "src", "__str__", "self", "srclines", "split", "src", "self", "\n", "src", "join", "\n", "    %s", "x", "x", "srclines", "Line %s of file %s:\n%s", "line", "self", "file", "self", "src", "implementer", "IActionInfo", "action_method", "wrapped", " Wrapper to provide the right conflict info report data when a method\n    that calls Configurator.action calls another that does the same", "wrapper", "arg", "kw", "self", "_ainfo", "self", "None", "_ainfo", "self", "info", "pop", "kw", "_info", "None", "backframes", "pop", "kw", "_backframes", "is_nonstr_iter", "info", "len", "info", "info", "ActionInfo", "info", "info", "None", "f", "extract_stack", "traceback", "limit", "info", "ActionInfo", "f", "backframes", "info", "ActionInfo", "None", "", "", "append", "_ainfo", "self", "info", "result", "wrapped", "self", "arg", "kw", "pop", "_ainfo", "self", "result", "__name__", "wrapper", "__name__", "wrapped", "__doc__", "wrapper", "__doc__", "wrapped", "__docobj__", "wrapper", "wrapped", "wrapper", "make_predicates", "xhr", "request_method", "path_info", "request_param", "match_param", "header", "accept", "containment", "request_type", "traverse", "custom", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None", "predicates", "weights", "h", "md5", "xhr", "xhr_predicate", "context", "request", "is_xhr", "request", "__text__", "xhr_predicate", "xhr = True", "append", "weights", "append", "predicates", "xhr_predicate", "update", "h", "bytes_", "xhr:%r", "bool", "xhr", "request_method", "None", "is_nonstr_iter", "request_method", "request_method", "request_method", "request_method", "sorted", "request_method", "request_method_predicate", "context", "request", "method", "request", "request_method", "text", "request method = %r", "request_method", "__text__", "request_method_predicate", "text", "append", "weights", "append", "predicates", "request_method_predicate", "m", "request_method", "update", "h", "bytes_", "request_method:%r", "m", "path_info", "None", "path_info_val", "compile", "re", "path_info", "error", "re", "why", "ConfigurationError", "args", "why", "path_info_predicate", "context", "request", "match", "path_info_val", "upath_info", "request", "None", "text", "path_info = %s", "__text__", "path_info_predicate", "text", "path_info", "append", "weights", "append", "predicates", "path_info_predicate", "update", "h", "bytes_", "path_info:%r", "path_info", "request_param", "None", "request_param_val", "None", "=", "request_param", "request_param", "request_param_val", "split", "request_param", "=", "request_param_val", "None", "text", "request_param %s", "request_param", "text", "request_param %s = %s", "request_param", "request_param_val", "request_param_predicate", "context", "request", "request_param_val", "None", "request_param", "params", "request", "get", "params", "request", "request_param", "request_param_val", "__text__", "request_param_predicate", "text", "append", "weights", "append", "predicates", "request_param_predicate", "update", "h", "bytes_", "request_param:%r=%r", "request_param", "request_param_val", "header", "None", "header_name", "header", "header_val", "None", ":", "header", "header_name", "header_val", "split", "header", ":", "header_val", "compile", "re", "header_val", "error", "re", "why", "ConfigurationError", "args", "why", "header_val", "None", "text", "header %s", "header_name", "text", "header %s = %s", "header_name", "header_val", "header_predicate", "context", "request", "header_val", "None", "header_name", "headers", "request", "val", "get", "headers", "request", "header_name", "val", "None", "False", "match", "header_val", "val", "None", "__text__", "header_predicate", "text", "append", "weights", "append", "predicates", "header_predicate", "update", "h", "bytes_", "header:%r=%r", "header_name", "header_val", "accept", "None", "accept_predicate", "context", "request", "accept", "accept", "request", "__text__", "accept_predicate", "accept = %s", "accept", "append", "weights", "append", "predicates", "accept_predicate", "update", "h", "bytes_", "accept:%r", "accept", "containment", "None", "containment_predicate", "context", "request", "ctx", "getattr", "request", "context", "context", "find_interface", "ctx", "containment", "None", "__text__", "containment_predicate", "containment = %s", "containment", "append", "weights", "append", "predicates", "containment_predicate", "update", "h", "bytes_", "containment:%r", "hash", "containment", "request_type", "None", "request_type_predicate", "context", "request", "providedBy", "request_type", "request", "text", "request_type = %s", "__text__", "request_type_predicate", "text", "request_type", "append", "weights", "append", "predicates", "request_type_predicate", "update", "h", "bytes_", "request_type:%r", "hash", "request_type", "match_param", "None", "is_nonstr_iter", "match_param", "match_param", "match_param", "match_param", "sorted", "match_param", "text", "match_param %s", "repr", "match_param", "reqs", "split", "p", "=", "p", "match_param", "match_param_predicate", "context", "request", "k", "v", "reqs", "get", "matchdict", "request", "k", "v", "False", "True", "__text__", "match_param_predicate", "text", "append", "weights", "append", "predicates", "match_param_predicate", "p", "match_param", "update", "h", "bytes_", "match_param:%r", "p", "custom", "num", "predicate", "enumerate", "custom", "getattr", "predicate", "__text__", "None", "None", "text", "<unknown custom predicate>", "__text__", "predicate", "text", "AttributeError", "hasattr", "predicate", "__func__", "__text__", "__func__", "predicate", "text", "__text__", "im_func", "predicate", "text", "append", "predicates", "predicate", "update", "h", "bytes_", "custom%s:%r", "num", "hash", "predicate", "append", "weights", "traverse", "None", "pyramid.urldispatch", "_compile_route", "_", "tgenerate", "_compile_route", "traverse", "traverse_predicate", "context", "request", "traverse", "context", "True", "m", "context", "match", "tvalue", "tgenerate", "m", "m", "traverse", "traversal_path", "tvalue", "True", "append", "predicates", "traverse_predicate", "score", "bit", "weights", "score", "score", "bit", "order", "MAX_ORDER", "score", "len", "predicates", "phash", "hexdigest", "h", "order", "predicates", "phash", "as_sorted_tuple", "val", "is_nonstr_iter", "val", "val", "val", "val", "tuple", "sorted", "val", "val", "copy", "datetime", "django.contrib.localflavor.us.models", "USPostalCodeField", "django.contrib.auth.models", "User", "django.core.urlresolvers", "reverse", "django.db", "models", "django.db.models", "Q", "Max", "F", "django.utils.timezone", "now", "utc", "conceptq", "concept", "Address", "Model", "models", "\n    Mailing addresses of individuals, entities, or prisons.\n    ", "address1", "CharField", "models", "max_length", "blank", "True", "address2", "CharField", "models", "max_length", "blank", "True", "address3", "CharField", "models", "max_length", "blank", "True", "city", "CharField", "models", "max_length", "blank", "True", "state", "USPostalCodeField", "blank", "True", "zip", "CharField", "models", "max_length", "blank", "True", "country", "CharField", "models", "max_length", "blank", "True", "help_text", "get_address_lines", "self", "lines", "field", "address1", "address2", "address3", "getattr", "self", "field", "append", "lines", "getattr", "self", "field", "city", "self", "state", "self", "zip", "self", "append", "lines", "format", "city", "self", "state", "self", "zip", "self", "country", "self", "append", "lines", "country", "self", "lines", "format_address", "self", "join", "get_address_lines", "self", "__unicode__", "self", "join", "get_address_lines", "self", "Meta", "verbose_name_plural", "Addresses", "PrisonType", "Model", "models", "\n    The prison type -- e.g. prison, work release, jail, halfway house\n    ", "name", "CharField", "models", "max_length", "help_text", "Type of prison -- e.g. prison, jail, halfway house", "__unicode__", "self", "name", "self", "PrisonAdminType", "Model", "models", "\n    Prison administration type -- e.g. Bureau of Prisons, State prison, CCA\n    ", "name", "CharField", "models", "max_length", "help_text", "Name of organization that administers prisons -- e.g. CCA, BOP", "__unicode__", "self", "name", "self", "Prison", "Model", "models", "\n    Administrative, address, and other details about a prison.\n    ", "name", "CharField", "models", "max_length", "help_text", "The name of this institution", "type", "ForeignKey", "models", "PrisonType", "blank", "True", "null", "True", "help_text", "The type of institution -- e.g. prison, jail, halfway house", "address", "ForeignKey", "models", "Address", "help_text", "Mailing address for people housed here.", "admin_type", "ForeignKey", "models", "PrisonAdminType", "blank", "True", "null", "True", "help_text", "Organization administering this prison (e.g. CCA, BOP).", "admin_name", "CharField", "models", "max_length", "blank", "True", "help_text", "Name of institution administering this prison (e.g. 'Salinas Valley State Prison' administers 'Salinas Valley State Prison -- A'.", "admin_address", "ForeignKey", "models", "Address", "blank", "True", "null", "True", "help_text", "Administration's address for this prison, if different from the main address.", "related_name", "prison_admin_set", "admin_phone", "CharField", "models", "max_length", "blank", "True", "warden", "CharField", "models", "max_length", "blank", "True", "men", "NullBooleanField", "models", "women", "NullBooleanField", "models", "juveniles", "NullBooleanField", "models", "minimum", "NullBooleanField", "models", "medium", "NullBooleanField", "models", "maximum", "NullBooleanField", "models", "control_unit", "NullBooleanField", "models", "death_row", "NullBooleanField", "models", "get_address_lines", "self", "get_address_lines", "address", "self", "format_address", "self", "join", "get_address_lines", "self", "format_list_display", "self", "admin_type", "self", "name", "name", "self", "admin_type", "self", "name", "name", "self", "join", "name", "format_address", "self", "__unicode__", "self", "admin_type", "self", "None", "name", "self", "type", "self", "name", "admin_type", "self", "name", "self", "type", "self", "ContactManager", "Manager", "models", "reachable", "self", "stays", "values_list", "stayed", "objects", "MailingStay", "id", "flat", "True", "Q", "Q", "id__in", "stays", "deceased", "False", "lost_contact", "False", "concept", "unreachable", "self", "stays", "values_list", "stayed", "objects", "MailingStay", "id", "flat", "True", "Q", "id__in", "stays", "Q", "deceased", "True", "Q", "lost_contact", "True", "concept", "issue_needed", "self", "issue", "issue_mailings", "values_list", "issue_exists", "objects", "Mailing", "issue", "id", "flat", "True", "distinct", "exclude", "filter", "self", "q", "reachable", "self", "via", "current", "objects", "Subscription", "date", "issue", "subscription", "mailing__id__in", "issue_mailings", "issue_unreachable", "self", "issue", "issue_mailings", "values_list", "issue_exists", "objects", "Mailing", "issue", "id", "flat", "True", "distinct", "exclude", "filter", "self", "q", "unreachable", "self", "via", "current", "objects", "Subscription", "date", "issue", "subscription", "mailing__id__in", "issue_mailings", "issue_enqueued", "self", "issue", "mailings", "values_list", "issue_enqueued", "objects", "Mailing", "issue", "id", "flat", "True", "distinct", "filter", "self", "mailing__id__in", "mailings", "issue_sent", "self", "issue", "mailings", "values_list", "issue_sent", "objects", "Mailing", "issue", "id", "flat", "True", "distinct", "filter", "self", "mailing__id__in", "mailings", "notice_needed", "self", "when", "remaining", "mtype", "rel", "recent_mailings", "values_list", "notice_type_near", "objects", "Mailing", "mtype", "when", "id", "flat", "True", "distinct", "exclude", "filter", "self", "q", "reachable", "self", "q", "with_remaining_issues_at", "self", "when", "remaining", "rel", "mailing__id__in", "recent_mailings", "notice_unreachable", "self", "when", "remaining", "mtype", "rel", "recent_mailings", "values_list", "notice_type_near", "objects", "Mailing", "mtype", "when", "id", "flat", "True", "distinct", "exclude", "filter", "self", "q", "unreachable", "self", "q", "with_remaining_issues_at", "self", "when", "remaining", "rel", "mailing__id__in", "recent_mailings", "notice_enqueued", "self", "when", "remaining", "mtype", "rel", "mailings", "values_list", "notice_type_near", "objects", "Mailing", "mtype", "when", "sent", "False", "id", "flat", "True", "distinct", "filter", "self", "q", "reachable", "self", "q", "with_remaining_issues_at", "self", "when", "remaining", "rel", "mailing__id__in", "mailings", "notice_sent", "self", "when", "remaining", "mtype", "rel", "mailings", "values_list", "notice_type_near", "objects", "Mailing", "mtype", "when", "sent", "True", "id", "flat", "True", "distinct", "filter", "self", "q", "reachable", "self", "q", "with_remaining_issues_at", "self", "when", "remaining", "rel", "mailing__id__in", "mailings", "similar_to", "self", "first", "middle", "last", "min_score", "select", "select_params", "order_by", "where", "", "params", "fields", "first", "first_name", "middle", "middle_name", "last", "last_name", "used_fields", "f", "f", "fields", "f", "name", "key", "used_fields", "select", "format", "{0}_sim", "key", "format", "similarity({0}, %s)", "key", "append", "select_params", "name", "append", "order_by", "format", "-{0}_sim", "key", "where", "where", " OR ", "where", "format", "similarity({0}, %s) > %s", "key", "append", "params", "name", "append", "params", "min_score", "append", "order_by", "last_name", "extra", "self", "select", "select", "select_params", "select_params", "order_by", "order_by", "where", "where", "params", "params", "subscribed_at", "self", "date", "None", "distinct", "filter", "self", "via", "current", "objects", "Subscription", "date", "subscription", "with_remaining_issues_at", "self", "when", "num", "rel", "recipient", "\n        Return all the contacts who have the specified number of issues\n        remaining at the time of the specified issue.  Assume that issues are\n        always on the same day of the month.\n\n        If rel is 'payer', return contacts who pay for the subscriptions\n        (whether they receive them or not).\n        ", "rel_prefix", "get", "recipient", "payer", "subscription", "subscriptions_payed_for", "rel", "SO", "objects", "Subscription", "rel", "payer", "self_payer_q", "via", "not_self_payer", "SO", "rel_prefix", "self_payer_q", "Q", "Q", "q", "reachable", "self", "via", "perpetual", "SO", "rel_prefix", "via", "issues_left_at", "SO", "when", "num", "rel_prefix", "self_payer_q", "concept", "shareable_with", "self", "partner", "exclude", "filter", "self", "q", "reachable", "self", "source__name", "Inquiry", "opt_out", "False", "sharingbatch__partner", "partner", "ContactSourceCategory", "Model", "models", "\n    General category for source info about contacts (e.g. Letter, Flyer,\n    Internet, etc).\n    ", "name", "CharField", "models", "max_length", "__unicode__", "self", "name", "self", "ContactSource", "Model", "models", "\n    Specific source for a contact (e.g. Web Sale, Book Order, Info Request)\n    ", "name", "CharField", "models", "max_length", "category", "ForeignKey", "models", "ContactSourceCategory", "null", "True", "__unicode__", "self", "category", "self", "%s: %s", "name", "self", "category", "self", "name", "self", "Meta", "ordering", "-category", "name", "OrganizationType", "Model", "models", "\n    Type of entity -- e.g. Library, University, Foundation\n    ", "type", "CharField", "models", "max_length", "__unicode__", "self", "type", "self", "Contact", "Model", "models", "\n    Individuals, entities, and all other people with whom we're in contact.\n    ", "MISSING_NAME", "[name missing]", "first_name", "CharField", "models", "max_length", "blank", "True", "db_index", "True", "help_text", "Individual, or contact within organization", "middle_name", "CharField", "models", "max_length", "blank", "True", "db_index", "True", "last_name", "CharField", "models", "max_length", "blank", "True", "db_index", "True", "organization_name", "CharField", "models", "max_length", "blank", "True", "help_text", "Leave blank for individuals.", "db_index", "True", "organization_type", "ForeignKey", "models", "OrganizationType", "blank", "True", "null", "True", "help_text", "Leave blank for individuals.", "email", "EmailField", "models", "blank", "True", "gender", "CharField", "models", "max_length", "choices", "M", "Male", "F", "Female", "T", "Transgender", "blank", "True", "type", "CharField", "models", "max_length", "choices", "individual", "Individual", "prisoner", "In prison", "entity", "Entity", "advertiser", "Advertiser", "fop", "Friend of PLN", "source", "ForeignKey", "models", "ContactSource", "blank", "True", "null", "True", "help_text", "How did we find out about this contact? Leave blank if unknown.", "opt_out", "BooleanField", "models", "default", "False", "help_text", "Opt out from appeals.", "address", "ForeignKey", "models", "Address", "blank", "True", "null", "True", "help_text", "Non-prison addresses only", "created", "DateTimeField", "models", "default", "now", "deceased", "BooleanField", "models", "lost_contact", "BooleanField", "models", "help_text", "Check this if the last known address for this contact no longer works.", "donor", "BooleanField", "models", "verbose_name", "Is a donor", "help_text", "Check if this contact should be included in donor appeals.", "objects", "ContactManager", "show_name", "self", "organization_name", "self", "get_full_name", "self", "current_prisoner_address", "self", "type", "self", "prisoner", "None", "get", "select_related", "prisoneraddress_set", "self", "prison__address", "end_date__isnull", "True", "DoesNotExist", "PrisonerAddress", "None", "current_subscription", "self", "when", "None", "when", "when", "now", "subs", "filter", "subscription_set", "self", "Q", "end_date__gte", "when", "Q", "end_date__isnull", "True", "start_date__lte", "when", "len", "subs", "None", "subs", "issues_remaining", "self", "when", "None", "sub", "current_subscription", "self", "when", "sub", "issues_remaining", "sub", "subscription_type", "self", "when", "None", "sub", "current_subscription", "self", "when", "sub", "None", "type", "sub", "first_subscribed", "self", "start_date", "order_by", "subscription_set", "self", "start_date", "IndexError", "None", "renewals", "self", "count", "subscription_set", "self", "get_full_name", "self", "name", "join", "n", "n", "first_name", "self", "middle_name", "self", "last_name", "self", "n", "name", "", "name", "MISSING_NAME", "self", "name", "get_address_lines", "self", "lines", "pad", "current_prisoner_address", "self", "pad", "lines", "get_address_lines", "pad", "organization_name", "self", "append", "lines", "organization_name", "self", "full_name", "get_full_name", "self", "full_name", "full_name", "MISSING_NAME", "self", "append", "lines", "full_name", "append", "lines", "get_full_name", "self", "address", "self", "lines", "get_address_lines", "address", "self", "lines", "format_address", "self", "join", "get_address_lines", "self", "get_absolute_url", "self", "reverse", "subscribers.contacts.show", "args", "pk", "self", "__unicode__", "self", "join", "get_address_lines", "self", "DoesNotExist", "PrisonerAddress", "get_full_name", "self", "type", "self", "Meta", "ordering", "last_name", "organization_name", "MailingStayManager", "Manager", "models", "not_stayed", "self", "Q", "end_date__isnull", "False", "end_date__lte", "now", "concept", "stayed", "self", "Q", "Q", "end_date__gte", "now", "Q", "end_date__isnull", "True", "start_date__lte", "now", "concept", "MailingStay", "Model", "models", "contact", "ForeignKey", "models", "Contact", "start_date", "DateTimeField", "models", "default", "now", "end_date", "DateTimeField", "models", "blank", "True", "null", "True", "help_text", "Leave blank to withold mail until further notice.", "objects", "MailingStayManager", "Meta", "ordering", "-end_date", "__unicode__", "self", "join", ", ", "unicode", "contact", "self", "unicode", "start_date", "self", "unicode", "end_date", "self", "InquiryResponseType", "Model", "models", "description", "CharField", "models", "max_length", "code", "CharField", "models", "max_length", "blank", "True", "generate_mailing", "BooleanField", "models", "__unicode__", "self", "description", "self", "InquiryType", "Model", "models", "description", "CharField", "models", "max_length", "__unicode__", "self", "description", "self", "InquiryManager", "Manager", "models", "unmailed", "self", "filter", "self", "batch__isnull", "True", "mailed", "self", "filter", "self", "batch__isnull", "False", "reverse_chronological", "self", "order_by", "self", "-date", "mailing_needed", "self", "Q", "response_type__generate_mailing", "True", "mailing__isnull", "True", "concept", "mailing_unreachable", "self", "Q", "via", "unreachable", "objects", "Contact", "contact", "response_type__generate_mailing", "True", "concept", "mailing_enqueued", "self", "Q", "response_type__generate_mailing", "True", "mailing__isnull", "False", "mailing__sent__isnull", "True", "concept", "mailing_sent", "self", "Q", "response_type__generate_mailing", "True", "mailing__isnull", "False", "mailing__sent__isnull", "False", "concept", "Inquiry", "Model", "models", "contact", "ForeignKey", "models", "Contact", "request_type", "ForeignKey", "models", "InquiryType", "response_type", "ForeignKey", "models", "InquiryResponseType", "date", "DateTimeField", "models", "default", "now", "objects", "InquiryManager", "__unicode__", "self", "join", ": ", "unicode", "response_type", "self", "unicode", "contact", "self", "Meta", "ordering", "date", "DonorBatch", "Model", "models", "date", "DateTimeField", "models", "default", "now", "contacts", "ManyToManyField", "models", "Contact", "__unicode__", "self", "%s: %s contacts", "date", "self", "count", "contacts", "self", "Meta", "ordering", "-date", "PrisonerAddress", "Model", "models", "contact", "ForeignKey", "models", "Contact", "prisoner_number", "CharField", "models", "max_length", "blank", "True", "death_row", "NullBooleanField", "models", "control_unit", "NullBooleanField", "models", "start_date", "DateTimeField", "models", "default", "now", "end_date", "DateTimeField", "models", "blank", "True", "null", "True", "unit", "CharField", "models", "max_length", "blank", "True", "prison", "ForeignKey", "models", "Prison", "contact_name", "self", "show_name", "contact", "self", "is_current", "self", "n", "now", "start_date", "self", "n", "end_date", "self", "None", "end_date", "self", "n", "get_address_lines", "self", "lines", "prisoner_number", "self", "append", "lines", "format", "show_name", "contact", "self", "lstrip", "prisoner_number", "self", "#", "append", "lines", "show_name", "contact", "self", "unit", "self", "append", "lines", "unit", "self", "lines", "get_address_lines", "prison", "self", "lines", "format_address", "self", "join", "get_address_lines", "self", "__unicode__", "self", "unicode", "prison", "self", "Meta", "verbose_name_plural", "ordering", "-end_date", "contact", "Note", "Model", "models", "contact", "ForeignKey", "models", "Contact", "author", "ForeignKey", "models", "User", "related_name", "notes_authored", "text", "TextField", "models", "created", "DateTimeField", "models", "default", "now", "modified", "DateTimeField", "models", "contact_name", "self", "show_name", "contact", "self", "save", "args", "kwargs", "self", "modified", "self", "now", "save", "super", "Note", "self", "__unicode__", "self", "show_name", "contact", "self", "text", "self", "Meta", "ordering", "-created", "SubscriptionSource", "Model", "models", "name", "CharField", "models", "max_length", "__unicode__", "self", "name", "self", "SubscriptionStopReason", "Model", "models", "reason", "CharField", "models", "max_length", "__unicode__", "self", "reason", "self", "SubscriptionManager", "Manager", "models", "current", "self", "when", "None", "when", "when", "now", "Q", "q", "perpetual", "self", "Q", "end_date__gte", "when", "start_date__lte", "when", "concept", "not_self_payer", "self", "Q", "contact__id__lt", "F", "payer__id", "Q", "contact__id__gt", "F", "payer__id", "concept", "self_payer", "self", "Q", "contact__id", "F", "payer__id", "concept", "perpetual", "self", "Q", "end_date__isnull", "True", "concept", "issues_left_at", "self", "when", "remaining", "add_months", "dt", "months", "month", "month", "dt", "months", "year", "year", "dt", "month", "month", "month", "datetime", "datetime", "year", "month", "day", "dt", "utc", "end_date_min", "add_months", "when", "remaining", "end_date_max", "add_months", "when", "remaining", "Q", "start_date__lte", "when", "end_date__lt", "end_date_max", "end_date__gt", "end_date_min", "concept", "Subscription", "Model", "models", "contact", "ForeignKey", "models", "Contact", "payer", "ForeignKey", "models", "Contact", "related_name", "subscriptions_payed_for", "type", "CharField", "models", "max_length", "choices", "trial", "Trial", "subscription", "Subscription", "source", "ForeignKey", "models", "SubscriptionSource", "blank", "True", "null", "True", "help_text", "Leave blank if unknown.", "paid_amount", "IntegerField", "models", "default", "start_date", "DateTimeField", "models", "default", "now", "db_index", "True", "end_date", "DateTimeField", "models", "blank", "True", "null", "True", "db_index", "True", "help_text", "Leave blank for a perpetual subscription", "original_end_date", "DateTimeField", "models", "blank", "True", "null", "True", "help_text", "End date before an early stop.", "stop_reason", "ForeignKey", "models", "SubscriptionStopReason", "blank", "True", "null", "True", "objects", "SubscriptionManager", "end_early", "self", "reason", "when", "None", "original_end_date", "self", "end_date", "self", "end_date", "self", "when", "now", "stop_reason", "self", "reason", "contact_name", "self", "show_name", "contact", "self", "is_current", "self", "n", "now", "start_date", "self", "n", "end_date", "self", "None", "end_date", "self", "n", "issues_remaining", "self", "when", "None", "when", "when", "now", "end_date", "self", "None", "start", "when", "now", "count", "True", "start", "timedelta", "datetime", "days", "start", "datetime", "datetime", "year", "start", "month", "start", "utc", "start", "end_date", "self", "count", "count", "__unicode__", "self", "contact", "self", "type", "self", "end_date", "self", "Issue", "Model", "models", "volume", "IntegerField", "models", "number", "IntegerField", "models", "date", "DateTimeField", "models", "save", "args", "kwargs", "self", "num_recipients_denormalized", "self", "num_recipients", "self", "save", "super", "Issue", "self", "args", "kwargs", "num_recipients", "self", "count", "filter", "mailing_set", "self", "type__type", "Issue", "issue", "self", "num_censored_recipients", "self", "count", "filter", "mailing_set", "self", "censored", "True", "__unicode__", "self", "volume", "self", "number", "self", "Meta", "ordering", "-date", "MailingLog", "Model", "models", "user", "ForeignKey", "models", "User", "type", "ForeignKey", "models", "MailingType", "note", "CharField", "models", "max_length", "blank", "True", "default", "", "help_text", "Additional info identifying this mailing log.", "created", "DateTimeField", "models", "default", "now", "mailings", "ManyToManyField", "models", "Mailing", "__unicode__", "self", "user", "self", "created", "self", "get_absolute_url", "self", "reverse", "subscribers.mailinglogs.show", "args", "pk", "self", "MailingType", "Model", "models", "type", "CharField", "models", "max_length", "__unicode__", "self", "type", "self", "MailingManager", "Manager", "models", "issue_exists", "self", "issue", "Q", "issue", "issue", "type__type", "Issue", "concept", "issue_enqueued", "self", "issue", "Q", "issue", "issue", "type__type", "Issue", "sent__isnull", "True", "concept", "issue_sent", "self", "issue", "Q", "issue", "issue", "type__type", "Issue", "sent__isnull", "False", "concept", "notice_type_near", "self", "mtype", "when", "slop", "sent", "None", "sent", "True", "sent_q", "Q", "sent__isnull", "False", "sent", "False", "sent_q", "Q", "sent__isnull", "True", "sent_q", "Q", "Q", "sent_q", "type", "mtype", "created__gte", "when", "timedelta", "datetime", "days", "slop", "created__lte", "when", "timedelta", "datetime", "days", "slop", "concept", "inquiry_enqueued", "self", "inquiry", "Q", "inquiry", "inquiry", "sent__isnull", "True", "concept", "inquiry_sent", "self", "inquiry", "Q", "inquiry", "inquiry", "sent__isnull", "False", "concept", "Mailing", "Model", "models", "type", "ForeignKey", "models", "MailingType", "blank", "True", "null", "True", "issue", "ForeignKey", "models", "Issue", "blank", "True", "null", "True", "inquiry", "ForeignKey", "models", "Inquiry", "blank", "True", "null", "True", "custom_text", "TextField", "models", "blank", "True", "contact", "ForeignKey", "models", "Contact", "censored", "BooleanField", "models", "default", "False", "help_text", "Check if this mailing was refused delivery due to censorship.", "notes", "TextField", "models", "help_text", "Record any unusual details or special info about this mailing here", "created", "DateTimeField", "models", "default", "now", "sent", "DateTimeField", "models", "blank", "True", "null", "True", "objects", "MailingManager", "contact_name", "self", "show_name", "contact", "self", "__unicode__", "self", "type", "self", "issue", "contact", "self", "issue", "self", "contact", "self", "type", "self", "strftime", "created", "self", "Meta", "ordering", "-created", "contact__last_name", "SharingPartner", "Model", "models", "name", "CharField", "models", "max_length", "__unicode__", "self", "name", "self", "SharingBatch", "Model", "models", "partner", "ForeignKey", "models", "SharingPartner", "contacts", "ManyToManyField", "models", "Contact", "date", "DateTimeField", "models", "default", "now", "Meta", "ordering", "-date", "__unicode__", "self", "unicode", "date", "self", "pyjd", "pyjamas.ui.TabBar", "TabBar", "pyjamas.ui.TabPanel", "TabPanel", "pyjamas.ui", "HasAlignment", "pyjamas.ui.Image", "Image", "pyjamas.ui.VerticalPanel", "VerticalPanel", "pyjamas.ui.RootPanel", "RootPanel", "pyjamas.ui.HorizontalPanel", "HorizontalPanel", "pyjamas.ui.HTML", "HTML", "pyjamas.ui.Composite", "Composite", "pyjamas.ui", "MouseListener", "pyjamas.ui", "Event", "pyjamas", "Window", "pyjamas.ui.DecoratorPanel", "DecoratedTabPanel", "DecoratorPanel", "pyjamas.ui.DecoratorPanel", "DecoratorTitledPanel", "PrettyTab", "Composite", "__init__", "self", "text", "imageUrl", "__init__", "DecoratorPanel", "self", "DECORATE_ALL", "DecoratorPanel", "p", "HorizontalPanel", "setSpacing", "p", "img", "self", "Image", "imageUrl", "txt", "self", "HTML", "text", "add", "p", "img", "self", "add", "p", "txt", "self", "add", "self", "p", "addClickListener", "self", "listener", "addClickListener", "img", "self", "listener", "addClickListener", "txt", "self", "listener", "Tabs", "onModuleLoad", "self", "red", "1638", "green", "1640", "fTabs", "self", "DecoratedTabPanel", "Size", "600px", "100%", "add", "fTabs", "self", "createImage", "self", "rembrandt/JohannesElison.jpg", "red", "True", "name", "johannes", "add", "fTabs", "self", "createImage", "self", "rembrandt/SelfPortrait1640.jpg", "green", "True", "name", "self", "add", "fTabs", "self", "createImage", "self", "rembrandt/LaMarcheNocturne.jpg", "1642", "name", "lamarche", "add", "fTabs", "self", "createImage", "self", "rembrandt/TheReturnOfTheProdigalSon.jpg", "1662", "prodigal", "add", "fTabs", "self", "HTML", "shouldn't be here!", "None", "add", "fTabs", "self", "HTML", "This is a Test.<br />Tab should be on right", "Test", "test", "selectTab", "fTabs", "self", "dp", "DecoratorTitledPanel", "Tabs", "bluetitle", "bluetitleicon", "bluetop", "bluetop2", "bluemiddle", "bluebottom", "add", "dp", "fTabs", "self", "add", "RootPanel", "dp", "addTabListener", "fTabs", "self", "self", "createImage", "self", "imageUrl", "image", "Image", "imageUrl", "setStyleName", "image", "ks-images-Image", "p", "VerticalPanel", "setHorizontalAlignment", "p", "ALIGN_CENTER", "HasAlignment", "setVerticalAlignment", "p", "ALIGN_MIDDLE", "HasAlignment", "add", "p", "image", "p", "onTabSelected", "self", "sender", "tabIndex", "onBeforeTabSelected", "self", "sender", "tabIndex", "getWidgetCount", "fTabs", "self", "add", "fTabs", "self", "HTML", "2nd Test.<br />Tab should be on right", "2nd Test", "name", "test2", "True", "remove", "fTabs", "self", "test2", "tabIndex", "__name__", "__main__", "setup", "pyjd", "./public/Tabs.html", "app", "Tabs", "onModuleLoad", "app", "run", "pyjd", "re", "bisect", "bisect", "django.conf", "settings", "django.db.models.related", "RelatedObject", "django.db.models.fields.related", "ManyToManyRel", "django.db.models.fields", "AutoField", "FieldDoesNotExist", "django.db.models.fields.proxy", "OrderWrt", "django.db.models.loading", "get_models", "app_cache_ready", "django.utils.translation", "activate", "deactivate_all", "get_language", "string_concat", "django.utils.encoding", "force_unicode", "smart_str", "django.utils.datastructures", "SortedDict", "all", "NameError", "django.utils.itercompat", "all", "get_verbose_name", "class_name", "strip", "lower", "sub", "re", "(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))", " \\1", "class_name", "DEFAULT_NAMES", "verbose_name", "db_table", "ordering", "unique_together", "permissions", "get_latest_by", "order_with_respect_to", "app_label", "db_tablespace", "abstract", "managed", "proxy", "auto_created", "Options", "object", "__init__", "self", "meta", "app_label", "None", "local_fields", "self", "local_many_to_many", "self", "virtual_fields", "self", "module_name", "self", "verbose_name", "self", "None", "None", "verbose_name_plural", "self", "None", "db_table", "self", "", "ordering", "self", "unique_together", "self", "permissions", "self", "object_name", "self", "app_label", "self", "None", "app_label", "get_latest_by", "self", "None", "order_with_respect_to", "self", "None", "db_tablespace", "self", "DEFAULT_TABLESPACE", "settings", "admin", "self", "None", "meta", "self", "meta", "pk", "self", "None", "has_auto_field", "self", "auto_field", "self", "False", "None", "abstract", "self", "False", "managed", "self", "True", "proxy", "self", "False", "proxy_for_model", "self", "None", "parents", "self", "SortedDict", "duplicate_targets", "self", "auto_created", "self", "False", "abstract_managers", "self", "concrete_managers", "self", "contribute_to_class", "self", "cls", "name", "django.db", "connection", "django.db.backends.util", "truncate_name", "_meta", "cls", "self", "installed", "self", "sub", "re", "\\.models$", "", "__module__", "cls", "INSTALLED_APPS", "settings", "object_name", "self", "__name__", "cls", "module_name", "self", "lower", "object_name", "self", "verbose_name", "self", "get_verbose_name", "object_name", "self", "meta", "self", "meta_attrs", "copy", "__dict__", "meta", "self", "name", "__dict__", "meta", "self", "startswith", "name", "_", "meta_attrs", "name", "attr_name", "DEFAULT_NAMES", "attr_name", "meta_attrs", "setattr", "self", "attr_name", "pop", "meta_attrs", "attr_name", "hasattr", "meta", "self", "attr_name", "setattr", "self", "attr_name", "getattr", "meta", "self", "attr_name", "ut", "pop", "meta_attrs", "unique_together", "unique_together", "self", "ut", "isinstance", "ut", "tuple", "list", "ut", "ut", "unique_together", "self", "ut", "verbose_name_plural", "self", "pop", "meta_attrs", "verbose_name_plural", "string_concat", "verbose_name", "self", "s", "meta_attrs", "TypeError", "'class Meta' got invalid attribute(s): %s", "join", ",", "keys", "meta_attrs", "verbose_name_plural", "self", "string_concat", "verbose_name", "self", "s", "meta", "self", "db_table", "self", "db_table", "self", "%s_%s", "app_label", "self", "module_name", "self", "db_table", "self", "truncate_name", "db_table", "self", "max_name_length", "ops", "connection", "_prepare", "self", "model", "order_with_respect_to", "self", "order_with_respect_to", "self", "get_field", "self", "order_with_respect_to", "self", "ordering", "self", "_order", "add_to_class", "model", "_order", "OrderWrt", "order_with_respect_to", "self", "None", "pk", "self", "None", "parents", "self", "field", "value_for_index", "parents", "self", "primary_key", "field", "True", "setup_pk", "self", "field", "auto", "AutoField", "verbose_name", "ID", "primary_key", "True", "auto_created", "True", "add_to_class", "model", "id", "auto", "collections", "column", "target", "iteritems", "duplicate_targets", "self", "add", "collections", "target", "column", "KeyError", "collections", "target", "set", "column", "duplicate_targets", "self", "elt", "itervalues", "collections", "len", "elt", "column", "elt", "duplicate_targets", "self", "column", "difference", "elt", "set", "column", "add_field", "self", "field", "rel", "field", "isinstance", "rel", "field", "ManyToManyRel", "insert", "local_many_to_many", "self", "bisect", "local_many_to_many", "self", "field", "field", "hasattr", "self", "_m2m_cache", "_m2m_cache", "self", "insert", "local_fields", "self", "bisect", "local_fields", "self", "field", "field", "setup_pk", "self", "field", "hasattr", "self", "_field_cache", "_field_cache", "self", "_field_name_cache", "self", "hasattr", "self", "_name_map", "_name_map", "self", "add_virtual_field", "self", "field", "append", "virtual_fields", "self", "field", "setup_pk", "self", "field", "pk", "self", "primary_key", "field", "pk", "self", "field", "serialize", "field", "False", "setup_proxy", "self", "target", "\n        Does the internal setup so that the current model is a proxy for\n        \"target\".\n        ", "pk", "self", "pk", "_meta", "target", "proxy_for_model", "self", "target", "db_table", "self", "db_table", "_meta", "target", "__repr__", "self", "<Options for %s>", "object_name", "self", "__str__", "self", "%s.%s", "smart_str", "app_label", "self", "smart_str", "module_name", "self", "verbose_name_raw", "self", "\n        There are a few places where the untranslated verbose name is needed\n        (so that we get the same value regardless of currently active\n        locale).\n        ", "lang", "get_language", "deactivate_all", "raw", "force_unicode", "verbose_name", "self", "activate", "lang", "raw", "verbose_name_raw", "property", "verbose_name_raw", "_fields", "self", "\n        The getter for self.fields. This returns the list of field objects\n        available to this model (including through parent models).\n\n        Callers are not permitted to modify this list, since it's a reference\n        to this instance (not a copy).\n        ", "_field_name_cache", "self", "AttributeError", "_fill_fields_cache", "self", "_field_name_cache", "self", "fields", "property", "_fields", "get_fields_with_model", "self", "\n        Returns a sequence of (field, model) pairs for all fields. The \"model\"\n        element is None for fields on the current model. Mostly of use when\n        constructing queries so that we know which model a field belongs to.\n        ", "_field_cache", "self", "AttributeError", "_fill_fields_cache", "self", "_field_cache", "self", "_fill_fields_cache", "self", "cache", "parent", "parents", "self", "field", "model", "get_fields_with_model", "_meta", "parent", "model", "append", "cache", "field", "model", "append", "cache", "field", "parent", "extend", "cache", "f", "None", "f", "local_fields", "self", "_field_cache", "self", "tuple", "cache", "_field_name_cache", "self", "x", "x", "_", "cache", "_many_to_many", "self", "_m2m_cache", "self", "AttributeError", "_fill_m2m_cache", "self", "keys", "_m2m_cache", "self", "many_to_many", "property", "_many_to_many", "get_m2m_with_model", "self", "\n        The many-to-many version of get_fields_with_model().\n        ", "_m2m_cache", "self", "AttributeError", "_fill_m2m_cache", "self", "items", "_m2m_cache", "self", "_fill_m2m_cache", "self", "cache", "SortedDict", "parent", "parents", "self", "field", "model", "get_m2m_with_model", "_meta", "parent", "model", "cache", "field", "model", "cache", "field", "parent", "field", "local_many_to_many", "self", "cache", "field", "None", "_m2m_cache", "self", "cache", "get_field", "self", "name", "many_to_many", "True", "\n        Returns the requested field by name. Raises FieldDoesNotExist on error.\n        ", "to_search", "many_to_many", "fields", "self", "many_to_many", "self", "fields", "self", "f", "to_search", "name", "f", "name", "f", "FieldDoesNotExist", "%s has no field named %r", "object_name", "self", "name", "get_field_by_name", "self", "name", "\n        Returns the (field_object, model, direct, m2m), where field_object is\n        the Field instance for the given name, model is the model containing\n        this field (None for local fields), direct is True if the field exists\n        on this model, and m2m is True for many-to-many relations. When\n        'direct' is False, 'field_object' is the corresponding RelatedObject\n        for this field (since the field doesn't have an instance associated\n        with it).\n\n        Uses a cache internally, so after the first access, this is very fast.\n        ", "_name_map", "self", "name", "AttributeError", "cache", "init_name_map", "self", "cache", "name", "KeyError", "FieldDoesNotExist", "%s has no field named %r", "object_name", "self", "name", "get_all_field_names", "self", "\n        Returns a list of all field names that are possible for this model\n        (including reverse relation names). This is used for pretty printing\n        debugging output (a list of choices), so any internal-only field names\n        are not included.\n        ", "cache", "_name_map", "self", "AttributeError", "cache", "init_name_map", "self", "names", "keys", "cache", "sort", "names", "val", "val", "names", "endswith", "val", "+", "init_name_map", "self", "\n        Initialises the field name -> field object mapping.\n        ", "cache", "f", "model", "get_all_related_m2m_objects_with_model", "self", "cache", "related_query_name", "field", "f", "f", "model", "False", "True", "f", "model", "get_all_related_objects_with_model", "self", "cache", "related_query_name", "field", "f", "f", "model", "False", "False", "f", "model", "get_m2m_with_model", "self", "cache", "name", "f", "f", "model", "True", "True", "f", "model", "get_fields_with_model", "self", "cache", "name", "f", "f", "model", "True", "False", "app_cache_ready", "_name_map", "self", "cache", "cache", "get_add_permission", "self", "add_%s", "lower", "object_name", "self", "get_change_permission", "self", "change_%s", "lower", "object_name", "self", "get_delete_permission", "self", "delete_%s", "lower", "object_name", "self", "get_all_related_objects", "self", "local_only", "include_hidden", "False", "False", "k", "k", "v", "get_all_related_objects_with_model", "self", "local_only", "local_only", "include_hidden", "include_hidden", "get_all_related_objects_with_model", "self", "local_only", "include_hidden", "False", "False", "\n        Returns a list of (related-object, model) pairs. Similar to\n        get_fields_with_model().\n        ", "_related_objects_cache", "self", "AttributeError", "_fill_related_objects_cache", "self", "predicates", "local_only", "append", "predicates", "k", "v", "v", "include_hidden", "append", "predicates", "k", "v", "is_hidden", "rel", "field", "k", "filter", "t", "all", "p", "t", "p", "predicates", "items", "_related_objects_cache", "self", "_fill_related_objects_cache", "self", "cache", "SortedDict", "parent_list", "get_parent_list", "self", "parent", "parents", "self", "obj", "model", "get_all_related_objects_with_model", "_meta", "parent", "creation_counter", "field", "obj", "parent_link", "rel", "field", "obj", "model", "obj", "parent_list", "model", "cache", "obj", "parent", "cache", "obj", "model", "klass", "get_models", "include_auto_created", "True", "f", "local_fields", "_meta", "klass", "rel", "f", "isinstance", "to", "rel", "f", "str", "self", "_meta", "to", "rel", "f", "cache", "RelatedObject", "to", "rel", "f", "klass", "f", "None", "_related_objects_cache", "self", "cache", "get_all_related_many_to_many_objects", "self", "local_only", "False", "cache", "_related_many_to_many_cache", "self", "AttributeError", "cache", "_fill_related_many_to_many_cache", "self", "local_only", "k", "k", "v", "items", "cache", "v", "keys", "cache", "get_all_related_m2m_objects_with_model", "self", "\n        Returns a list of (related-m2m-object, model) pairs. Similar to\n        get_fields_with_model().\n        ", "cache", "_related_many_to_many_cache", "self", "AttributeError", "cache", "_fill_related_many_to_many_cache", "self", "items", "cache", "_fill_related_many_to_many_cache", "self", "cache", "SortedDict", "parent_list", "get_parent_list", "self", "parent", "parents", "self", "obj", "model", "get_all_related_m2m_objects_with_model", "_meta", "parent", "creation_counter", "field", "obj", "model", "obj", "parent_list", "model", "cache", "obj", "parent", "cache", "obj", "model", "klass", "get_models", "f", "local_many_to_many", "_meta", "klass", "rel", "f", "isinstance", "to", "rel", "f", "str", "self", "_meta", "to", "rel", "f", "cache", "RelatedObject", "to", "rel", "f", "klass", "f", "None", "app_cache_ready", "_related_many_to_many_cache", "self", "cache", "cache", "get_base_chain", "self", "model", "\n        Returns a list of parent classes leading to 'model' (order from closet\n        to most distant ancestor). This has to handle the case were 'model' is\n        a granparent or even more distant relation.\n        ", "parents", "self", "model", "parents", "self", "model", "parent", "parents", "self", "res", "get_base_chain", "_meta", "parent", "model", "res", "insert", "res", "parent", "res", "TypeError", "%r is not an ancestor of this model", "module_name", "_meta", "model", "get_parent_list", "self", "\n        Returns a list of all the ancestor of this model as a list. Useful for\n        determining if something is an ancestor, regardless of lineage.\n        ", "result", "set", "parent", "parents", "self", "add", "result", "parent", "update", "result", "get_parent_list", "_meta", "parent", "result", "get_ancestor_link", "self", "ancestor", "\n        Returns the field on the current model which points to the given\n        \"ancestor\". This is possible an indirect link (a pointer to a parent\n        model, which points, eventually, to the ancestor). Used when\n        constructing table joins for model inheritance.\n\n        Returns None if the model isn't an ancestor of this one.\n        ", "ancestor", "parents", "self", "parents", "self", "ancestor", "parent", "parents", "self", "parent_link", "get_ancestor_link", "_meta", "parent", "ancestor", "parent_link", "parents", "self", "parent", "parent_link", "get_ordered_objects", "self", "Returns a list of Options objects that are ordered with respect to this object.", "hasattr", "self", "_ordered_objects", "objects", "_ordered_objects", "self", "objects", "_ordered_objects", "self", "pk_index", "self", "\n        Returns the index of the primary key field in the self.fields list.\n        ", "index", "fields", "self", "pk", "self", "os", "modules", "dict4ini", "modules", "Globals", "_fmtime", "None", "_ini", "None", "_ini_filename", "join", "path", "os", "workpath", "Globals", "acp/javascript/javascript.tag", "get_newest_ini", "_fmtime", "_ini", "_fmtime", "getmtime", "path", "os", "_ini_filename", "_ini", "DictIni", "dict4ini", "_ini_filename", "_ini", "DictIni", "dict4ini", "_ini_filename", "_ini", "default_identifier", "win", "ini", "get_newest_ini", "identifiers", "default", "ini", "calltip", "win", "word", "syncvar", "ini", "get_newest_ini", "pos", "rfind", "word", ".", "pos", "word", "word", "pos", "word", "pos", "GetCurrentPos", "win", "getChar", "win", "pos", "(", "pos", "line", "GetCurrentLine", "win", "linePos", "PositionFromLine", "win", "line", "pos", "linePos", "word", "getChar", "win", "pos", "get", "functions", "ini", "word", "", "autodot", "win", "word", "syncvar", "ini", "get_newest_ini", "endswith", "word", ".", "word", "word", "dots", "ini", "word", "\nImport Suite and Case data for a given Product Version.\n\nThe \"suites\" or \"cases\" sections are optional.\nThe data must be in JSON format and structured like this::\n\n    {\n        \"suites\": [\n            {\n                \"name\": \"suite1 name\",\n                \"description\": \"suite description\"\n            }\n        ]\n        \"cases\": [\n            {\n                \"name\": \"case title\",\n                \"description\": \"case description\",\n                \"tags\": [\"tag1\", \"tag2\", \"tag3\"],\n                \"suites\": [\"suite1 name\", \"suite2 name\", \"suite3 name\"],\n                \"created_by\": \"cdawson@mozilla.com\"\n                \"steps\": [\n                    {\n                        \"instruction\": \"insruction text\",\n                        \"expected\": \"expected text\"\n                    }\n                ]\n            }\n        ]\n    }\n\n", "django.core.management.base", "BaseCommand", "CommandError", "optparse", "make_option", "json", "os.path", "moztrap.model.core.models", "Product", "ProductVersion", "moztrap.model.library.importer", "Importer", "Command", "BaseCommand", "args", "<product_name> <product_version> <filename>", "help", "Imports the cases from a JSON file into the specified Product Version", "option_list", "option_list", "BaseCommand", "make_option", "-f", "--force_dupes", "action", "store_true", "dest", "force_dupes", "default", "False", "help", "Force importing cases, even if the case name is a duplicate", "handle", "args", "options", "self", "len", "args", "CommandError", "format", "Usage: {0}", "args", "self", "force_dupes", "get", "options", "force_dupes", "product", "get", "objects", "Product", "name", "args", "DoesNotExist", "Product", "CommandError", "format", "Product \"{0}\" does not exist", "args", "product_version", "get", "objects", "ProductVersion", "product", "product", "version", "args", "DoesNotExist", "ProductVersion", "CommandError", "format", "Version \"{0}\" of product \"{1}\" does not exist", "args", "args", "files", "isdir", "path", "os", "args", "file", "listdir", "os", "args", "startswith", "file", ".", "append", "files", "format", "{0}/{1}", "args", "file", "append", "files", "args", "results_for_files", "None", "file", "files", "open", "file", "fh", "case_data", "load", "json", "fh", "ValueError", "e", "CommandError", "format", "Could not parse JSON: {0}: {1}", "str", "e", "fh", "result", "import_data", "Importer", "product_version", "case_data", "force_dupes", "force_dupes", "results_for_files", "results_for_files", "result", "append", "results_for_files", "result", "results_for_files", "result_list", "get_as_list", "results_for_files", "append", "result_list", "", "write", "stdout", "self", "join", "\n", "result_list", "write", "stdout", "self", "No files found to import.\n", "IOError", "errno", "strerror", "CommandError", "format", "Could not open \"{0}\", I/O error {1}: {2}", "args", "errno", "strerror", "os", "datetime", "datetime", "django.conf", "settings", "django.core.files.base", "ContentFile", "django.db", "models", "django.db.models.base", "ModelBase", "django.utils.html", "conditional_escape", "escape", "django.utils.translation", "ugettext_lazy", "_", "imagekit", "specs", "imagekit.lib", "*", "imagekit.options", "Options", "imagekit.utils", "img_to_fobj", "MAXBLOCK", "ImageFile", "getattr", "settings", "PIL_IMAGEFILE_MAXBLOCK", "CROP_HORZ_CHOICES", "_", "left", "_", "center", "_", "right", "CROP_VERT_CHOICES", "_", "top", "_", "center", "_", "bottom", "ImageModelBase", "ModelBase", " ImageModel metaclass\n\n    This metaclass parses IKOptions and loads the specified specification\n    module.\n\n    ", "__init__", "cls", "name", "bases", "attrs", "parents", "b", "b", "bases", "isinstance", "b", "ImageModelBase", "parents", "user_opts", "getattr", "cls", "IKOptions", "None", "opts", "Options", "user_opts", "module", "__import__", "spec_module", "opts", "", "ImportError", "ImportError", "Unable to load imagekit config module: %s", "spec_module", "opts", "spec", "spec", "spec", "values", "__dict__", "module", "isinstance", "spec", "type", "issubclass", "spec", "ImageSpec", "specs", "spec", "ImageSpec", "specs", "setattr", "cls", "name", "spec", "Descriptor", "specs", "spec", "append", "specs", "opts", "spec", "setattr", "cls", "_ik", "opts", "ImageModel", "Model", "models", " Abstract base class implementing all core ImageKit functionality\n\n    Subclasses of ImageModel are augmented with accessors for each defined\n    image specification and can override the inner IKOptions class to customize\n    storage locations and other options.\n\n    ", "__metaclass__", "ImageModelBase", "Meta", "abstract", "True", "IKOptions", "admin_thumbnail_view", "self", "_imgfield", "self", "None", "prop", "getattr", "self", "admin_thumbnail_spec", "_ik", "self", "None", "prop", "None", "An \"%s\" image spec has not been defined.", "admin_thumbnail_spec", "_ik", "self", "hasattr", "self", "get_absolute_url", "escape", "get_absolute_url", "self", "escape", "url", "prop", "escape", "url", "_imgfield", "self", "escape", "url", "prop", "short_description", "admin_thumbnail_view", "_", "Thumbnail", "allow_tags", "admin_thumbnail_view", "True", "_imgfield", "self", "getattr", "self", "image_field", "_ik", "self", "property", "_storage", "self", "getattr", "_ik", "self", "storage", "storage", "_imgfield", "self", "property", "_clear_cache", "self", "spec", "specs", "_ik", "self", "prop", "getattr", "self", "name", "spec", "_delete", "prop", "_pre_cache", "self", "spec", "specs", "_ik", "self", "pre_cache", "spec", "prop", "getattr", "self", "name", "spec", "_create", "prop", "save_image", "self", "name", "image", "save", "replace", "True", "True", "_imgfield", "self", "replace", "delete", "_imgfield", "self", "save", "False", "hasattr", "image", "read", "data", "read", "image", "data", "image", "content", "ContentFile", "data", "save", "_imgfield", "self", "name", "content", "save", "save", "args", "kwargs", "self", "clear_cache", "True", "is_new_object", "_get_pk_val", "self", "None", "save", "super", "ImageModel", "self", "args", "kwargs", "is_new_object", "clear_cache", "False", "spec", "preprocessor_spec", "_ik", "self", "spec", "None", "newfile", "open", "storage", "_imgfield", "self", "str", "_imgfield", "self", "img", "open", "Image", "newfile", "img", "format", "process", "spec", "img", "self", "format", "JPEG", "imgfile", "img_to_fobj", "img", "format", "imgfile", "img_to_fobj", "img", "format", "quality", "int", "quality", "spec", "optimize", "True", "content", "ContentFile", "read", "imgfile", "close", "newfile", "name", "str", "_imgfield", "self", "delete", "storage", "_imgfield", "self", "name", "save", "storage", "_imgfield", "self", "name", "content", "clear_cache", "_imgfield", "self", "", "_clear_cache", "self", "_pre_cache", "self", "delete", "self", "_get_pk_val", "self", "None", "%s object can't be deleted because its %s attribute is set to None.", "object_name", "_meta", "self", "attname", "pk", "_meta", "self", "_clear_cache", "self", "delete", "Model", "models", "self", "os", "string", "strip", "django", "forms", "forum.settings.base", "Setting", "django.utils.translation", "ugettext", "_", "django.core.files.storage", "FileSystemStorage", "django.core.urlresolvers", "reverse", "DummySetting", "UnfilteredField", "CharField", "forms", "clean", "self", "value", "value", "SettingsSetForm", "Form", "forms", "__init__", "args", "kwargs", "self", "set", "data", "unsaved", "None", "None", "initial", "dict", "name", "setting", "value", "setting", "setting", "set", "unsaved", "update", "initial", "unsaved", "__init__", "super", "SettingsSetForm", "self", "data", "initial", "initial", "args", "kwargs", "setting", "set", "widget", "get", "field_context", "setting", "widget", "None", "widget", "CheckboxSelectMultiple", "forms", "widget", "SelectMultiple", "forms", "isinstance", "widget", "SelectMultiple", "forms", "field", "MultipleChoiceField", "forms", "field_context", "setting", "widget", "RadioSelect", "forms", "isinstance", "widget", "RadioSelect", "forms", "field", "ChoiceField", "forms", "field_context", "setting", "isinstance", "setting", "get", "emulators", "Setting", "str", "DummySetting", "get", "emulators", "Setting", "unicode", "DummySetting", "get", "field_context", "setting", "widget", "None", "field_context", "setting", "widget", "TextInput", "forms", "attrs", "class", "longstring", "field", "CharField", "forms", "field_context", "setting", "isinstance", "setting", "get", "emulators", "Setting", "float", "DummySetting", "field", "FloatField", "forms", "field_context", "setting", "isinstance", "setting", "get", "emulators", "Setting", "int", "DummySetting", "field", "IntegerField", "forms", "field_context", "setting", "isinstance", "setting", "get", "emulators", "Setting", "bool", "DummySetting", "field", "BooleanField", "forms", "field_context", "setting", "field", "UnfilteredField", "field_context", "setting", "fields", "self", "name", "setting", "field", "set", "self", "set", "as_table", "self", "_html_output", "self", "<br /><a class=\"fieldtool context\" href=\"#\">%s</a><span class=\"sep\">|</span><a class=\"fieldtool default\" href=\"#\">%s</a></th>", "_", "context", "_", "default", "</td></tr>", "False", "save", "self", "setting", "set", "self", "set_value", "setting", "cleaned_data", "self", "name", "setting", "ImageFormWidget", "Widget", "forms", "render", "self", "name", "value", "attrs", "None", "\n            <img src=\"%(value)s\" /><br />\n            %(change)s: <input type=\"file\" name=\"%(name)s\" />\n            <input type=\"hidden\" name=\"%(name)s_old\" value=\"%(value)s\" />\n            ", "name", "value", "change", "name", "value", "_", "Change this:", "value_from_datadict", "self", "data", "files", "name", "name", "files", "f", "files", "name", "file_name_suffix", "lower", "splitext", "path", "os", "name", "f", "file_name_suffix", ".jpg", ".jpeg", ".gif", ".png", ".bmp", ".tiff", ".ico", "Exception", "File type not allowed", "forum.settings", "UPFILES_FOLDER", "UPFILES_ALIAS", "storage", "FileSystemStorage", "str", "UPFILES_FOLDER", "str", "UPFILES_ALIAS", "new_file_name", "save", "storage", "name", "f", "f", "str", "UPFILES_ALIAS", "new_file_name", "%s_old", "name", "data", "data", "%s_old", "name", "name", "data", "data", "name", "StringListWidget", "Widget", "forms", "render", "self", "name", "value", "attrs", "None", "ret", "", "s", "value", "ret", "\n            <div class=\"string-list-input\">\n                <input type=\"text\" name=\"%(name)s\" value=\"%(value)s\" />\n                <button class=\"string_list_widget_button\">-</button>\n            </div>\n            ", "name", "value", "name", "s", "\n            <div class=\"string_list_widgets\">\n                %(ret)s\n                <div><button name=\"%(name)s\" class=\"string_list_widget_button add\">+</button></div>\n            </div>\n            ", "dict", "name", "name", "ret", "ret", "value_from_datadict", "self", "data", "files", "name", "submit", "data", "getlist", "data", "name", "data", "name", "CommaStringListWidget", "Textarea", "forms", "render", "self", "name", "value", "attrs", "None", "render", "super", "CommaStringListWidget", "self", "name", "join", ", ", "value", "attrs", "value_from_datadict", "self", "data", "files", "name", "submit", "data", "map", "strip", "split", "data", "name", ",", "join", ", ", "data", "name", "TestEmailSettingsWidget", "TextInput", "forms", "render", "self", "name", "value", "attrs", "None", "value", "value", "", "\n            <div id=\"test_email_settings\">\n                <a href=\"%s\" onclick=\"return false;\" class=\"button test_button\" href=\"/\">Test</a>\n\n                <div style=\"margin-top: 7px\">\n                <div style=\"display: none\" class=\"ajax_indicator\">\n                    Testing your current e-mail settings. Please, wait.\n                </div>\n                <div class=\"test_status\"></div>\n                </div>\n            </div>\n            ", "reverse", "test_email_settings", "os", "sys", "time", "yaml", "networkx", "NX", "pygraphviz", "paths", "colors", "fixName", "name", "startswith", "name", "NODE_", "_rv", "name", "len", "NODE_", "_rv", "name", "_rv", "drawGraph", "data", "outFname", "_graph", "AGraph", "pygraphviz", "_foodNodes", "_obj", "node", "_obj", "data", "foods", "_lairNodes", "_obj", "node", "_obj", "data", "lairs", "_node", "data", "nodes", "_node", "name", "_foodNodes", "_color", "color2", "colors", "_shape", "egg", "_node", "name", "_lairNodes", "_color", "color3", "colors", "_shape", "house", "_color", "color1", "colors", "_shape", "ellipse", "add_node", "_graph", "fixName", "_node", "name", "color", "_color", "shape", "_shape", "_edge", "data", "edges", "_from", "_to", "fixName", "_nm", "_nm", "_edge", "nodes", "_f1", "_f2", "_edge", "nodes", "_color", "color1", "colors", "_labelItems", "price", "_edge", "append", "_labelItems", "%i", "_edge", "price", "pheromone", "_edge", "append", "_labelItems", "%.2f", "_edge", "pheromone", "_label", "join", "\\n", "_labelItems", "minPath", "data", "data", "minPath", "_f1", "data", "minPath", "_f2", "data", "minPath", "append", "_color", "color2", "colors", "add_edge", "_graph", "_from", "_to", "color", "join", ":", "_color", "label", "_label", "layout", "_graph", "prog", "dot", "draw", "_graph", "outFname", "__name__", "__main__", "_name", "argv", "sys", "_inFname", "join", "path", "os", "dataDir", "paths", "_name", ".yaml", "isfile", "path", "os", "_inFname", "file '%s' not found", "_inFname", "exit", "_outDir", "join", "path", "os", "imgDir", "paths", "graphs", "_outFile", "join", "path", "os", "_outDir", "_name", ".png", "isfile", "path", "os", "_outFile", "_inS", "stat", "os", "_inFname", "_outS", "stat", "os", "_outFile", "_inTime", "max", "st_mtime", "_inS", "st_ctime", "_inS", "_outTime", "min", "st_mtime", "_outS", "st_ctime", "_outS", "_inTime", "_outTime", "exit", "_data", "load", "yaml", "file", "_inFname", "drawGraph", "_data", "_outFile", "mimetypes", "os", "random", "time", "email", "Charset", "Encoders", "email.MIMEText", "MIMEText", "email.MIMEMultipart", "MIMEMultipart", "email.MIMEBase", "MIMEBase", "email.Header", "Header", "email.Utils", "formatdate", "getaddresses", "formataddr", "django.conf", "settings", "django.core.mail.utils", "DNS_NAME", "django.utils.encoding", "smart_str", "force_unicode", "add_charset", "Charset", "utf-8", "SHORTEST", "Charset", "QP", "Charset", "utf-8", "DEFAULT_ATTACHMENT_MIME_TYPE", "application/octet-stream", "BadHeaderError", "ValueError", "make_msgid", "idstring", "None", "Returns a string suitable for RFC 2822 compliant Message-ID, e.g:\n\n    <20020201195627.33539.96671@nightshade.la.mastaler.com>\n\n    Optional idstring if given is a string used to strengthen the\n    uniqueness of the message id.\n    ", "timeval", "time", "time", "utcdate", "strftime", "time", "%Y%m%d%H%M%S", "gmtime", "time", "timeval", "pid", "getpid", "os", "AttributeError", "pid", "randint", "randrange", "random", "idstring", "None", "idstring", "", "idstring", ".", "idstring", "idhost", "DNS_NAME", "msgid", "<%s.%s.%s%s@%s>", "utcdate", "pid", "randint", "idstring", "idhost", "msgid", "forbid_multi_line_headers", "name", "val", "encoding", "Forbids multi-line headers, to prevent header injection.", "encoding", "encoding", "DEFAULT_CHARSET", "settings", "val", "force_unicode", "val", "\n", "val", "\r", "val", "BadHeaderError", "Header values can't contain newlines (got %r for header %r)", "val", "name", "val", "encode", "val", "ascii", "UnicodeEncodeError", "lower", "name", "to", "from", "cc", "result", "nm", "addr", "getaddresses", "val", "nm", "str", "Header", "encode", "nm", "encoding", "encoding", "addr", "encode", "addr", "ascii", "UnicodeEncodeError", "addr", "str", "Header", "encode", "addr", "encoding", "encoding", "append", "result", "formataddr", "nm", "addr", "val", "join", ", ", "result", "val", "Header", "encode", "val", "encoding", "encoding", "lower", "name", "subject", "val", "Header", "val", "name", "val", "SafeMIMEText", "MIMEText", "__init__", "self", "text", "subtype", "charset", "encoding", "self", "charset", "__init__", "MIMEText", "self", "text", "subtype", "charset", "__setitem__", "self", "name", "val", "name", "val", "forbid_multi_line_headers", "name", "val", "encoding", "self", "__setitem__", "MIMEText", "self", "name", "val", "SafeMIMEMultipart", "MIMEMultipart", "__init__", "_params", "self", "_subtype", "boundary", "_subparts", "encoding", "mixed", "None", "None", "None", "encoding", "self", "encoding", "__init__", "MIMEMultipart", "self", "_subtype", "boundary", "_subparts", "_params", "__setitem__", "self", "name", "val", "name", "val", "forbid_multi_line_headers", "name", "val", "encoding", "self", "__setitem__", "MIMEMultipart", "self", "name", "val", "EmailMessage", "object", "\n    A container for email information.\n    ", "content_subtype", "plain", "mixed_subtype", "mixed", "encoding", "None", "__init__", "self", "subject", "body", "from_email", "to", "bcc", "connection", "attachments", "headers", "cc", "", "", "None", "None", "None", "None", "None", "None", "None", "\n        Initialize a single email message (which can be sent to multiple\n        recipients).\n\n        All strings used to create the message can be unicode strings\n        (or UTF-8 bytestrings). The SafeMIMEText class will handle any\n        necessary encoding conversions.\n        ", "to", "isinstance", "to", "basestring", "\"to\" argument must be a list or tuple", "to", "self", "list", "to", "to", "self", "cc", "isinstance", "cc", "basestring", "\"cc\" argument must be a list or tuple", "cc", "self", "list", "cc", "cc", "self", "bcc", "isinstance", "bcc", "basestring", "\"bcc\" argument must be a list or tuple", "bcc", "self", "list", "bcc", "bcc", "self", "from_email", "self", "from_email", "DEFAULT_FROM_EMAIL", "settings", "subject", "self", "subject", "body", "self", "body", "attachments", "self", "attachments", "extra_headers", "self", "headers", "connection", "self", "connection", "get_connection", "self", "fail_silently", "False", "django.core.mail", "get_connection", "connection", "self", "connection", "self", "get_connection", "fail_silently", "fail_silently", "connection", "self", "message", "self", "encoding", "encoding", "self", "DEFAULT_CHARSET", "settings", "msg", "SafeMIMEText", "smart_str", "body", "self", "encoding", "content_subtype", "self", "encoding", "msg", "_create_message", "self", "msg", "msg", "Subject", "subject", "self", "msg", "From", "get", "extra_headers", "self", "From", "from_email", "self", "msg", "To", "join", ", ", "to", "self", "cc", "self", "msg", "Cc", "join", ", ", "cc", "self", "header_names", "lower", "key", "key", "extra_headers", "self", "date", "header_names", "msg", "Date", "formatdate", "message-id", "header_names", "msg", "Message-ID", "make_msgid", "name", "value", "items", "extra_headers", "self", "lower", "name", "from", "msg", "name", "value", "msg", "recipients", "self", "\n        Returns a list of all recipients of the email (includes direct\n        addressees as well as Cc and Bcc entries).\n        ", "to", "self", "cc", "self", "bcc", "self", "send", "self", "fail_silently", "False", "Sends the email message.", "recipients", "self", "send_messages", "get_connection", "self", "fail_silently", "self", "attach", "self", "filename", "content", "mimetype", "None", "None", "None", "\n        Attaches a file with the given filename and content. The filename can\n        be omitted and the mimetype is guessed, if not provided.\n\n        If the first parameter is a MIMEBase subclass it is inserted directly\n        into the resulting message attachments.\n        ", "isinstance", "filename", "MIMEBase", "content", "mimetype", "None", "append", "attachments", "self", "filename", "content", "None", "append", "attachments", "self", "filename", "content", "mimetype", "attach_file", "self", "path", "mimetype", "None", "Attaches a file from the filesystem.", "filename", "basename", "path", "os", "path", "content", "read", "open", "path", "rb", "attach", "self", "filename", "content", "mimetype", "_create_message", "self", "msg", "_create_attachments", "self", "msg", "_create_attachments", "self", "msg", "attachments", "self", "encoding", "encoding", "self", "DEFAULT_CHARSET", "settings", "body_msg", "msg", "msg", "SafeMIMEMultipart", "_subtype", "mixed_subtype", "self", "encoding", "encoding", "body", "self", "attach", "msg", "body_msg", "attachment", "attachments", "self", "isinstance", "attachment", "MIMEBase", "attach", "msg", "attachment", "attach", "msg", "_create_attachment", "self", "attachment", "msg", "_create_mime_attachment", "self", "content", "mimetype", "\n        Converts the content, mimetype pair into a MIME attachment object.\n        ", "basetype", "subtype", "split", "mimetype", "/", "basetype", "text", "encoding", "encoding", "self", "DEFAULT_CHARSET", "settings", "attachment", "SafeMIMEText", "smart_str", "content", "encoding", "subtype", "encoding", "attachment", "MIMEBase", "basetype", "subtype", "set_payload", "attachment", "content", "encode_base64", "Encoders", "attachment", "attachment", "_create_attachment", "self", "filename", "content", "mimetype", "None", "\n        Converts the filename, content, mimetype triple into a MIME attachment\n        object.\n        ", "mimetype", "None", "mimetype", "_", "guess_type", "mimetypes", "filename", "mimetype", "None", "mimetype", "DEFAULT_ATTACHMENT_MIME_TYPE", "attachment", "_create_mime_attachment", "self", "content", "mimetype", "filename", "add_header", "attachment", "Content-Disposition", "attachment", "filename", "filename", "attachment", "EmailMultiAlternatives", "EmailMessage", "\n    A version of EmailMessage that makes it easy to send multipart/alternative\n    messages. For example, including text and HTML versions of the text is\n    made easier.\n    ", "alternative_subtype", "alternative", "__init__", "self", "subject", "body", "from_email", "to", "bcc", "connection", "attachments", "headers", "alternatives", "cc", "", "", "None", "None", "None", "None", "None", "None", "None", "None", "\n        Initialize a single email message (which can be sent to multiple\n        recipients).\n\n        All strings used to create the message can be unicode strings (or UTF-8\n        bytestrings). The SafeMIMEText class will handle any necessary encoding\n        conversions.\n        ", "__init__", "super", "EmailMultiAlternatives", "self", "subject", "body", "from_email", "to", "bcc", "connection", "attachments", "headers", "cc", "alternatives", "self", "alternatives", "attach_alternative", "self", "content", "mimetype", "Attach an alternative content representation.", "content", "None", "mimetype", "None", "append", "alternatives", "self", "content", "mimetype", "_create_message", "self", "msg", "_create_attachments", "self", "_create_alternatives", "self", "msg", "_create_alternatives", "self", "msg", "encoding", "encoding", "self", "DEFAULT_CHARSET", "settings", "alternatives", "self", "body_msg", "msg", "msg", "SafeMIMEMultipart", "_subtype", "alternative_subtype", "self", "encoding", "encoding", "body", "self", "attach", "msg", "body_msg", "alternative", "alternatives", "self", "attach", "msg", "_create_mime_attachment", "self", "alternative", "msg", "logging", "os", "time", "itertools", "izip", "random", "randint", "uniform", "random", "pyevolve.Consts", "minimaxType", "pyevolve.G1DList", "G1DList", "pyevolve.GAllele", "GAlleleRange", "GAlleles", "pyevolve.Mutators", "G1DListMutatorAllele", "pyevolve.Initializators", "G1DListInitializatorAllele", "pyevolve.GSimpleGA", "GSimpleGA", "pyevolve", "Util", "pyevolve.GPopulation", "GPopulation", "pyevolve", "Consts", "pyho.common.utils", "printf", "check_stop_flag", "stop_flag_criteria", "ga_engine", "path", "getParam", "ga_engine", "stop_file", "None", "check_stop_flag", "path", "stats_step_callback", "ga", "pstr", "Step %d out of %d: ", "currentGeneration", "ga", "nGenerations", "ga", "pstr", "err [%%] = %g", "score", "bestIndividual", "ga", "timer", "getParam", "ga", "timer", "lap", "timer", "currentGeneration", "ga", "gens_left", "nGenerations", "ga", "currentGeneration", "ga", "mean_time", "time_so_far", "timer", "currentGeneration", "ga", "pstr", "\t(est. time to end=%d s.)", "gens_left", "mean_time", "printf", "pstr", "custom_initializer", "kwargs", "genome", "mins", "getParam", "genome", "min_constr", "maxes", "getParam", "genome", "max_constr", "genomeList", "genome", "uniform", "mins", "i", "maxes", "i", "i", "xrange", "getListSize", "genome", "custom_mutator", "kwargs", "genome", "kwargs", "pmut", "size", "len", "genome", "mutations", "kwargs", "pmut", "size", "mins", "getParam", "genome", "min_constr", "maxes", "getParam", "genome", "max_constr", "mutations", "mutations", "it", "xrange", "size", "randomFlipCoin", "Util", "kwargs", "pmut", "genome", "it", "uniform", "mins", "it", "maxes", "it", "mutations", "it", "xrange", "int", "round", "mutations", "which_gene", "randint", "size", "genome", "which_gene", "uniform", "mins", "which_gene", "maxes", "which_gene", "int", "mutations", "custom_crossover", "kwargs", "genome", "mom", "kwargs", "mom", "dad", "kwargs", "dad", "mins", "getParam", "mom", "min_constr", "maxes", "getParam", "mom", "max_constr", "count", "kwargs", "count", "sister", "None", "brother", "None", "count", "sister", "clone", "mom", "resetStats", "sister", "i", "pair", "enumerate", "izip", "mom", "dad", "midpoint", "pair", "pair", "distance", "abs", "pair", "pair", "sister", "i", "midpoint", "distance", "random", "random", "sister", "i", "mins", "i", "sister", "i", "mins", "i", "sister", "i", "maxes", "i", "sister", "i", "maxes", "i", "count", "brother", "clone", "dad", "resetStats", "brother", "i", "pair", "enumerate", "izip", "mom", "dad", "midpoint", "pair", "pair", "distance", "abs", "pair", "pair", "brother", "i", "midpoint", "distance", "random", "random", "brother", "i", "mins", "i", "brother", "i", "mins", "i", "brother", "i", "maxes", "i", "brother", "i", "maxes", "i", "sister", "brother", "CustomG1DList", "G1DList", "__init__", "args", "kwargs", "self", "__init__", "G1DList", "self", "args", "kwargs", "set", "initializator", "self", "custom_initializer", "set", "mutator", "self", "custom_mutator", "set", "crossover", "self", "custom_crossover", "AlleleG1DList", "G1DList", "__init__", "args", "kwargs", "self", "mins", "pop", "kwargs", "constr_min", "maxes", "pop", "kwargs", "constr_max", "__init__", "G1DList", "self", "args", "kwargs", "allele", "GAlleles", "GAlleleRange", "b", "e", "True", "b", "e", "zip", "mins", "maxes", "setParams", "self", "allele", "allele", "set", "initializator", "self", "G1DListInitializatorAllele", "set", "mutator", "self", "G1DListMutatorAllele", "CustomGSimpleGA", "GSimpleGA", "__init__", "args", "kwargs", "self", "genome", "__init__", "GSimpleGA", "self", "genome", "args", "kwargs", "internalPop", "self", "CustomGPopulation", "genome", "setMinimax", "self", "minimaxType", "minimize", "setMutationRate", "self", "setCrossoverRate", "self", "add", "stepCallback", "self", "stats_step_callback", "add", "terminationCriteria", "self", "stop_flag_criteria", "stop_file", "getParam", "self", "stop_file", "None", "stop_file", "isfile", "path", "os", "stop_file", "remove", "os", "stop_file", "step", "self", " Just do one step in evolution, one generation.\n            Ported to support custom Population class.\n        ", "genomeMom", "None", "genomeDad", "None", "newPop", "CustomGPopulation", "internalPop", "self", "debug", "logging", "Population was cloned.", "size_iterate", "len", "internalPop", "self", "size_iterate", "size_iterate", "crossover_empty", "isEmpty", "crossover", "select", "self", "popID", "currentGeneration", "self", "i", "xrange", "size_iterate", "genomeMom", "select", "self", "popID", "currentGeneration", "self", "genomeDad", "select", "self", "popID", "currentGeneration", "self", "crossover_empty", "pCrossover", "self", "it", "applyFunctions", "crossover", "genomeMom", "mom", "genomeMom", "dad", "genomeDad", "count", "sister", "brother", "it", "crossover_empty", "randomFlipCoin", "Util", "pCrossover", "self", "it", "applyFunctions", "crossover", "genomeMom", "mom", "genomeMom", "dad", "genomeDad", "count", "sister", "brother", "it", "sister", "clone", "genomeMom", "brother", "clone", "genomeDad", "mutate", "sister", "pmut", "pMutation", "self", "ga_engine", "self", "mutate", "brother", "pmut", "pMutation", "self", "ga_engine", "self", "append", "internalPop", "newPop", "sister", "append", "internalPop", "newPop", "brother", "len", "internalPop", "self", "genomeMom", "select", "self", "popID", "currentGeneration", "self", "genomeDad", "select", "self", "popID", "currentGeneration", "self", "randomFlipCoin", "Util", "pCrossover", "self", "it", "applyFunctions", "crossover", "genomeMom", "mom", "genomeMom", "dad", "genomeDad", "count", "sister", "brother", "it", "sister", "choice", "random", "genomeMom", "genomeDad", "sister", "clone", "sister", "mutate", "sister", "pmut", "pMutation", "self", "ga_engine", "self", "append", "internalPop", "newPop", "sister", "debug", "logging", "Evaluating the new created population.", "evaluate", "newPop", "clear", "self", "elitism", "self", "debug", "logging", "Doing elitism.", "getMinimax", "self", "minimaxType", "Consts", "maximize", "i", "xrange", "nElitismReplacement", "self", "score", "bestRaw", "internalPop", "self", "i", "score", "bestRaw", "newPop", "i", "idx", "len", "newPop", "i", "newPop", "idx", "bestRaw", "internalPop", "self", "i", "getMinimax", "self", "minimaxType", "Consts", "minimize", "i", "xrange", "nElitismReplacement", "self", "score", "bestRaw", "internalPop", "self", "i", "score", "bestRaw", "newPop", "i", "idx", "len", "newPop", "i", "newPop", "idx", "bestRaw", "internalPop", "self", "i", "internalPop", "self", "newPop", "sort", "internalPop", "self", "debug", "logging", "The generation %d was finished.", "currentGeneration", "self", "currentGeneration", "self", "currentGeneration", "self", "nGenerations", "self", "CustomGPopulation", "GPopulation", "evaluate", "args", "self", " Evaluate all individuals in population, calls the evaluate()\n        method of individuals\n\n        :param args: this params are passed to the evaluation function\n\n        ", "pop", "internalPop", "self", "ind", "pop", "poll", "ind", "evaluator", "ind", "ind", "clean", "False", "clean", "clean", "True", "ind", "pop", "poll", "ind", "res", "next", "poll", "ind", "res", "None", "clean", "False", "score", "ind", "res", "poll", "ind", "None", "sleep", "time", "clearFlags", "self", "urlparse", "django.conf", "settings", "django.core.urlresolvers", "reverse", "django.http", "HttpResponseRedirect", "QueryDict", "django.shortcuts", "render_to_response", "django.template", "RequestContext", "django.utils.http", "base36_to_int", "django.utils.translation", "ugettext", "_", "django.views.decorators.cache", "never_cache", "django.views.decorators.csrf", "csrf_protect", "django.contrib.auth", "REDIRECT_FIELD_NAME", "login", "auth_login", "logout", "auth_logout", "django.contrib.auth.decorators", "login_required", "django.contrib.auth.forms", "AuthenticationForm", "PasswordResetForm", "SetPasswordForm", "PasswordChangeForm", "django.contrib.auth.models", "User", "django.contrib.auth.tokens", "default_token_generator", "django.contrib.sites.models", "get_current_site", "login", "request", "template_name", "redirect_field_name", "authentication_form", "current_app", "extra_context", "registration/login.html", "REDIRECT_FIELD_NAME", "AuthenticationForm", "None", "None", "\n    Displays the login form and handles the login action.\n    ", "redirect_to", "get", "REQUEST", "request", "redirect_field_name", "", "method", "request", "POST", "form", "authentication_form", "data", "POST", "request", "is_valid", "form", "netloc", "urlparse", "urlparse", "redirect_to", "redirect_to", "redirect_to", "LOGIN_REDIRECT_URL", "settings", "netloc", "netloc", "get_host", "request", "redirect_to", "LOGIN_REDIRECT_URL", "settings", "auth_login", "request", "get_user", "form", "test_cookie_worked", "session", "request", "delete_test_cookie", "session", "request", "HttpResponseRedirect", "redirect_to", "form", "authentication_form", "request", "set_test_cookie", "session", "request", "current_site", "get_current_site", "request", "context", "form", "redirect_field_name", "site", "site_name", "form", "redirect_to", "current_site", "name", "current_site", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "csrf_protect", "never_cache", "logout", "request", "next_page", "template_name", "redirect_field_name", "current_app", "extra_context", "None", "registration/logged_out.html", "REDIRECT_FIELD_NAME", "None", "None", "\n    Logs out the user and displays 'You are logged out' message.\n    ", "auth_logout", "request", "redirect_to", "get", "REQUEST", "request", "redirect_field_name", "", "redirect_to", "netloc", "urlparse", "urlparse", "redirect_to", "netloc", "netloc", "get_host", "request", "HttpResponseRedirect", "redirect_to", "next_page", "None", "current_site", "get_current_site", "request", "context", "site", "site_name", "title", "current_site", "name", "current_site", "_", "Logged out", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "HttpResponseRedirect", "next_page", "path", "request", "logout_then_login", "request", "login_url", "current_app", "extra_context", "None", "None", "None", "\n    Logs out the user if he is logged in. Then redirects to the log-in page.\n    ", "login_url", "login_url", "LOGIN_URL", "settings", "logout", "request", "login_url", "current_app", "current_app", "extra_context", "extra_context", "redirect_to_login", "next", "login_url", "redirect_field_name", "None", "REDIRECT_FIELD_NAME", "\n    Redirects the user to the login page, passing the given 'next' page\n    ", "login_url", "login_url", "LOGIN_URL", "settings", "login_url_parts", "list", "urlparse", "urlparse", "login_url", "redirect_field_name", "querystring", "QueryDict", "login_url_parts", "mutable", "True", "querystring", "redirect_field_name", "next", "login_url_parts", "urlencode", "querystring", "safe", "/", "HttpResponseRedirect", "urlunparse", "urlparse", "login_url_parts", "password_reset", "request", "is_admin_site", "template_name", "email_template_name", "password_reset_form", "token_generator", "post_reset_redirect", "from_email", "current_app", "extra_context", "False", "registration/password_reset_form.html", "registration/password_reset_email.html", "PasswordResetForm", "default_token_generator", "None", "None", "None", "None", "post_reset_redirect", "None", "post_reset_redirect", "reverse", "django.contrib.auth.views.password_reset_done", "method", "request", "POST", "form", "password_reset_form", "POST", "request", "is_valid", "form", "opts", "use_https", "token_generator", "from_email", "email_template_name", "request", "is_secure", "request", "token_generator", "from_email", "email_template_name", "request", "is_admin_site", "opts", "dict", "opts", "domain_override", "META", "request", "HTTP_HOST", "save", "form", "opts", "HttpResponseRedirect", "post_reset_redirect", "form", "password_reset_form", "context", "form", "form", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "csrf_protect", "password_reset_done", "request", "template_name", "current_app", "extra_context", "registration/password_reset_done.html", "None", "None", "context", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "password_reset_confirm", "request", "uidb36", "token", "template_name", "token_generator", "set_password_form", "post_reset_redirect", "current_app", "extra_context", "None", "None", "registration/password_reset_confirm.html", "default_token_generator", "SetPasswordForm", "None", "None", "None", "\n    View that checks the hash in a password reset link and presents a\n    form for entering a new password.\n    ", "uidb36", "None", "token", "None", "post_reset_redirect", "None", "post_reset_redirect", "reverse", "django.contrib.auth.views.password_reset_complete", "uid_int", "base36_to_int", "uidb36", "user", "get", "objects", "User", "id", "uid_int", "ValueError", "DoesNotExist", "User", "user", "None", "user", "None", "check_token", "token_generator", "user", "token", "validlink", "True", "method", "request", "POST", "form", "set_password_form", "user", "POST", "request", "is_valid", "form", "save", "form", "HttpResponseRedirect", "post_reset_redirect", "form", "set_password_form", "None", "validlink", "False", "form", "None", "context", "form", "validlink", "form", "validlink", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "never_cache", "password_reset_complete", "request", "template_name", "current_app", "extra_context", "registration/password_reset_complete.html", "None", "None", "context", "login_url", "LOGIN_URL", "settings", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "password_change", "request", "template_name", "post_change_redirect", "password_change_form", "current_app", "extra_context", "registration/password_change_form.html", "None", "PasswordChangeForm", "None", "None", "post_change_redirect", "None", "post_change_redirect", "reverse", "django.contrib.auth.views.password_change_done", "method", "request", "POST", "form", "password_change_form", "user", "user", "request", "data", "POST", "request", "is_valid", "form", "save", "form", "HttpResponseRedirect", "post_change_redirect", "form", "password_change_form", "user", "user", "request", "context", "form", "form", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "csrf_protect", "login_required", "password_change_done", "request", "template_name", "current_app", "extra_context", "registration/password_change_done.html", "None", "None", "context", "update", "context", "extra_context", "render_to_response", "template_name", "context", "context_instance", "RequestContext", "request", "current_app", "current_app", "datetime", "os", "re", "time", "Cookie", "BaseCookie", "SimpleCookie", "CookieError", "pprint", "pformat", "urllib", "urlencode", "urlparse", "urljoin", "cStringIO", "StringIO", "ImportError", "StringIO", "StringIO", "mod_python.util", "parse_qsl", "ImportError", "urlparse", "parse_qsl", "ImportError", "cgi", "parse_qsl", "django.utils.datastructures", "MultiValueDict", "ImmutableList", "django.utils.encoding", "smart_str", "iri_to_uri", "force_unicode", "django.utils.http", "cookie_date", "django.http.multipartparser", "MultiPartParser", "django.conf", "settings", "django.core.files", "uploadhandler", "utils", "*", "RESERVED_CHARS", "!*'();:@&=+$,/?%#[]", "absolute_http_url_re", "compile", "re", "^https?://", "I", "re", "Http404", "Exception", "HttpRequest", "object", "A basic HTTP request.", "_encoding", "None", "_upload_handlers", "__init__", "self", "GET", "self", "POST", "self", "COOKIES", "self", "META", "self", "FILES", "self", "path", "self", "", "path_info", "self", "", "method", "self", "None", "__repr__", "self", "<HttpRequest\nGET:%s,\nPOST:%s,\nCOOKIES:%s,\nMETA:%s>", "pformat", "GET", "self", "pformat", "POST", "self", "pformat", "COOKIES", "self", "pformat", "META", "self", "get_host", "self", "Returns the HTTP host using the environment or request headers.", "HTTP_X_FORWARDED_HOST", "META", "self", "host", "META", "self", "HTTP_X_FORWARDED_HOST", "HTTP_HOST", "META", "self", "host", "META", "self", "HTTP_HOST", "host", "META", "self", "SERVER_NAME", "server_port", "str", "META", "self", "SERVER_PORT", "server_port", "is_secure", "self", "443", "80", "host", "%s:%s", "host", "server_port", "host", "get_full_path", "self", "", "build_absolute_uri", "self", "location", "None", "\n        Builds an absolute URI from the location and the variables available in\n        this request. If no location is specified, the absolute URI is built on\n        ``request.get_full_path()``.\n        ", "location", "location", "get_full_path", "self", "match", "absolute_http_url_re", "location", "current_uri", "%s://%s%s", "is_secure", "self", "https", "http", "get_host", "self", "path", "self", "location", "urljoin", "current_uri", "location", "iri_to_uri", "location", "is_secure", "self", "get", "environ", "os", "HTTPS", "on", "is_ajax", "self", "get", "META", "self", "HTTP_X_REQUESTED_WITH", "XMLHttpRequest", "_set_encoding", "self", "val", "\n        Sets the encoding used for GET/POST accesses. If the GET or POST\n        dictionary has already been created, it is removed and recreated on the\n        next access (so that it is decoded correctly).\n        ", "_encoding", "self", "val", "hasattr", "self", "_get", "_get", "self", "hasattr", "self", "_post", "_post", "self", "_get_encoding", "self", "_encoding", "self", "encoding", "property", "_get_encoding", "_set_encoding", "_initialize_handlers", "self", "_upload_handlers", "self", "load_handler", "uploadhandler", "handler", "self", "handler", "FILE_UPLOAD_HANDLERS", "settings", "_set_upload_handlers", "self", "upload_handlers", "hasattr", "self", "_files", "AttributeError", "You cannot set the upload handlers after the upload has been processed.", "_upload_handlers", "self", "upload_handlers", "_get_upload_handlers", "self", "_upload_handlers", "self", "_initialize_handlers", "self", "_upload_handlers", "self", "upload_handlers", "property", "_get_upload_handlers", "_set_upload_handlers", "parse_file_upload", "self", "META", "post_data", "Returns a tuple of (POST QueryDict, FILES MultiValueDict).", "upload_handlers", "self", "ImmutableList", "upload_handlers", "self", "warning", "You cannot alter upload handlers after the upload has been processed.", "parser", "MultiPartParser", "META", "post_data", "upload_handlers", "self", "encoding", "self", "parse", "parser", "_get_raw_post_data", "self", "hasattr", "self", "_raw_post_data", "_read_started", "self", "Exception", "You cannot access raw_post_data after reading from request's data stream", "content_length", "int", "get", "META", "self", "CONTENT_LENGTH", "ValueError", "TypeError", "content_length", "content_length", "_raw_post_data", "self", "read", "self", "content_length", "_raw_post_data", "self", "read", "self", "_stream", "self", "StringIO", "_raw_post_data", "self", "_raw_post_data", "self", "raw_post_data", "property", "_get_raw_post_data", "_mark_post_parse_error", "self", "_post", "self", "QueryDict", "", "_files", "self", "MultiValueDict", "_post_parse_error", "self", "True", "_load_post_and_files", "self", "method", "self", "POST", "_post", "self", "_files", "self", "QueryDict", "", "encoding", "_encoding", "self", "MultiValueDict", "_read_started", "self", "_mark_post_parse_error", "self", "startswith", "get", "META", "self", "CONTENT_TYPE", "", "multipart", "_raw_post_data", "self", "", "_post", "self", "_files", "self", "parse_file_upload", "self", "META", "self", "self", "_mark_post_parse_error", "self", "_post", "self", "_files", "self", "QueryDict", "raw_post_data", "self", "encoding", "_encoding", "self", "MultiValueDict", "read", "args", "kwargs", "self", "_read_started", "self", "True", "read", "_stream", "self", "args", "kwargs", "readline", "args", "kwargs", "self", "_read_started", "self", "True", "readline", "_stream", "self", "args", "kwargs", "xreadlines", "self", "True", "buf", "readline", "self", "buf", "buf", "__iter__", "xreadlines", "readlines", "self", "list", "iter", "self", "QueryDict", "MultiValueDict", "\n    A specialized MultiValueDict that takes a query string when initialized.\n    This is immutable unless you create a copy of it.\n\n    Values retrieved from this class are converted from the given encoding\n    (DEFAULT_CHARSET by default) to unicode.\n    ", "_mutable", "True", "_encoding", "None", "__init__", "self", "query_string", "mutable", "encoding", "False", "None", "__init__", "MultiValueDict", "self", "encoding", "django.conf", "settings", "encoding", "DEFAULT_CHARSET", "settings", "encoding", "self", "encoding", "key", "value", "parse_qsl", "query_string", "", "True", "appendlist", "self", "force_unicode", "key", "encoding", "errors", "replace", "force_unicode", "value", "encoding", "errors", "replace", "_mutable", "self", "mutable", "_get_encoding", "self", "_encoding", "self", "None", "django.conf", "settings", "_encoding", "self", "DEFAULT_CHARSET", "settings", "_encoding", "self", "_set_encoding", "self", "value", "_encoding", "self", "value", "encoding", "property", "_get_encoding", "_set_encoding", "_assert_mutable", "self", "_mutable", "self", "AttributeError", "This QueryDict instance is immutable", "__setitem__", "self", "key", "value", "_assert_mutable", "self", "key", "str_to_unicode", "key", "encoding", "self", "value", "str_to_unicode", "value", "encoding", "self", "__setitem__", "MultiValueDict", "self", "key", "value", "__delitem__", "self", "key", "_assert_mutable", "self", "__delitem__", "super", "QueryDict", "self", "key", "__copy__", "self", "result", "__class__", "self", "", "mutable", "True", "encoding", "encoding", "self", "key", "value", "items", "dict", "self", "__setitem__", "dict", "result", "key", "value", "result", "__deepcopy__", "self", "memo", "django.utils.copycompat", "copy", "result", "__class__", "self", "", "mutable", "True", "encoding", "encoding", "self", "memo", "id", "self", "result", "key", "value", "items", "dict", "self", "__setitem__", "dict", "result", "deepcopy", "copy", "key", "memo", "deepcopy", "copy", "value", "memo", "result", "setlist", "self", "key", "list_", "_assert_mutable", "self", "key", "str_to_unicode", "key", "encoding", "self", "list_", "str_to_unicode", "elt", "encoding", "self", "elt", "list_", "setlist", "MultiValueDict", "self", "key", "list_", "setlistdefault", "self", "key", "default_list", "_assert_mutable", "self", "key", "self", "setlist", "self", "key", "default_list", "getlist", "MultiValueDict", "self", "key", "appendlist", "self", "key", "value", "_assert_mutable", "self", "key", "str_to_unicode", "key", "encoding", "self", "value", "str_to_unicode", "value", "encoding", "self", "appendlist", "MultiValueDict", "self", "key", "value", "update", "self", "other_dict", "_assert_mutable", "self", "f", "s", "str_to_unicode", "s", "encoding", "self", "hasattr", "other_dict", "lists", "key", "valuelist", "lists", "other_dict", "value", "valuelist", "update", "MultiValueDict", "self", "f", "key", "f", "value", "d", "dict", "f", "k", "f", "v", "k", "v", "items", "other_dict", "update", "MultiValueDict", "self", "d", "pop", "args", "self", "key", "_assert_mutable", "self", "pop", "MultiValueDict", "self", "key", "args", "popitem", "self", "_assert_mutable", "self", "popitem", "MultiValueDict", "self", "clear", "self", "_assert_mutable", "self", "clear", "MultiValueDict", "self", "setdefault", "self", "key", "default", "None", "_assert_mutable", "self", "key", "str_to_unicode", "key", "encoding", "self", "default", "str_to_unicode", "default", "encoding", "self", "setdefault", "MultiValueDict", "self", "key", "default", "copy", "self", "Returns a mutable copy of this object.", "__deepcopy__", "self", "urlencode", "self", "output", "k", "list_", "lists", "self", "k", "smart_str", "k", "encoding", "self", "extend", "output", "urlencode", "k", "smart_str", "v", "encoding", "self", "v", "list_", "join", "&", "output", "CompatCookie", "SimpleCookie", "\n    Cookie class that handles some issues with browser compatibility.\n    ", "value_encode", "self", "val", "val", "encoded", "value_encode", "super", "CompatCookie", "self", "val", "encoded", "replace", "replace", "encoded", ";", "\\073", ",", "\\054", "\\", "encoded", "startswith", "encoded", "\"", "encoded", "\"", "encoded", "\"", "val", "encoded", "parse_cookie", "cookie", "cookie", "", "isinstance", "cookie", "BaseCookie", "c", "CompatCookie", "load", "c", "cookie", "CookieError", "c", "cookie", "cookiedict", "key", "keys", "c", "cookiedict", "key", "value", "get", "c", "key", "cookiedict", "BadHeaderError", "ValueError", "HttpResponse", "object", "A basic HTTP response, with content and dictionary-accessed headers.", "status_code", "__init__", "self", "content", "mimetype", "status", "content_type", "", "None", "None", "None", "_headers", "self", "_charset", "self", "DEFAULT_CHARSET", "settings", "mimetype", "content_type", "mimetype", "content_type", "content_type", "%s; charset=%s", "DEFAULT_CONTENT_TYPE", "settings", "_charset", "self", "isinstance", "content", "basestring", "hasattr", "content", "__iter__", "_container", "self", "content", "_is_string", "self", "False", "_container", "self", "content", "_is_string", "self", "True", "cookies", "self", "CompatCookie", "status", "status_code", "self", "status", "self", "Content-Type", "content_type", "__str__", "self", "Full HTTP message, including headers.", "join", "\n", "%s: %s", "key", "value", "key", "value", "values", "_headers", "self", "\n\n", "content", "self", "_convert_to_ascii", "values", "self", "Converts all values to ascii strings.", "value", "values", "isinstance", "value", "unicode", "value", "encode", "value", "us-ascii", "UnicodeError", "e", "reason", "e", ", HTTP response headers must be in US-ASCII format", "value", "str", "value", "\n", "value", "\r", "value", "BadHeaderError", "Header values can't contain newlines (got %r)", "value", "value", "__setitem__", "self", "header", "value", "header", "value", "_convert_to_ascii", "self", "header", "value", "_headers", "self", "lower", "header", "header", "value", "__delitem__", "self", "header", "_headers", "self", "lower", "header", "KeyError", "__getitem__", "self", "header", "_headers", "self", "lower", "header", "has_header", "self", "header", "Case-insensitive check for a header.", "has_key", "_headers", "self", "lower", "header", "__contains__", "has_header", "items", "self", "values", "_headers", "self", "get", "self", "header", "alternate", "get", "_headers", "self", "lower", "header", "None", "alternate", "set_cookie", "self", "key", "value", "max_age", "expires", "path", "domain", "secure", "", "None", "None", "/", "None", "False", "\n        Sets a cookie.\n\n        ``expires`` can be a string in the correct format or a\n        ``datetime.datetime`` object in UTC. If ``expires`` is a datetime\n        object then ``max_age`` will be calculated.\n        ", "cookies", "self", "key", "value", "expires", "None", "isinstance", "expires", "datetime", "datetime", "delta", "expires", "utcnow", "expires", "delta", "delta", "timedelta", "datetime", "seconds", "expires", "None", "max_age", "max", "days", "delta", "seconds", "delta", "cookies", "self", "key", "expires", "expires", "max_age", "None", "cookies", "self", "key", "max-age", "max_age", "expires", "cookies", "self", "key", "expires", "cookie_date", "time", "time", "max_age", "path", "None", "cookies", "self", "key", "path", "path", "domain", "None", "cookies", "self", "key", "domain", "domain", "secure", "cookies", "self", "key", "secure", "True", "delete_cookie", "self", "key", "path", "domain", "/", "None", "set_cookie", "self", "key", "max_age", "path", "path", "domain", "domain", "expires", "Thu, 01-Jan-1970 00:00:00 GMT", "_get_content", "self", "has_header", "self", "Content-Encoding", "join", "", "_container", "self", "smart_str", "join", "", "_container", "self", "_charset", "self", "_set_content", "self", "value", "_container", "self", "value", "_is_string", "self", "True", "content", "property", "_get_content", "_set_content", "__iter__", "self", "_iterator", "self", "iter", "_container", "self", "self", "next", "self", "chunk", "next", "_iterator", "self", "isinstance", "chunk", "unicode", "chunk", "encode", "chunk", "_charset", "self", "str", "chunk", "close", "self", "hasattr", "_container", "self", "close", "close", "_container", "self", "write", "self", "content", "_is_string", "self", "Exception", "This %s instance is not writable", "__class__", "self", "append", "_container", "self", "content", "flush", "self", "tell", "self", "_is_string", "self", "Exception", "This %s instance cannot tell its position", "__class__", "self", "sum", "len", "chunk", "chunk", "_container", "self", "HttpResponseRedirect", "HttpResponse", "status_code", "__init__", "self", "redirect_to", "__init__", "HttpResponse", "self", "self", "Location", "iri_to_uri", "redirect_to", "HttpResponsePermanentRedirect", "HttpResponse", "status_code", "__init__", "self", "redirect_to", "__init__", "HttpResponse", "self", "self", "Location", "iri_to_uri", "redirect_to", "HttpResponseNotModified", "HttpResponse", "status_code", "HttpResponseBadRequest", "HttpResponse", "status_code", "HttpResponseNotFound", "HttpResponse", "status_code", "HttpResponseForbidden", "HttpResponse", "status_code", "HttpResponseNotAllowed", "HttpResponse", "status_code", "__init__", "self", "permitted_methods", "__init__", "HttpResponse", "self", "self", "Allow", "join", ", ", "permitted_methods", "HttpResponseGone", "HttpResponse", "status_code", "__init__", "args", "kwargs", "self", "__init__", "HttpResponse", "self", "args", "kwargs", "HttpResponseServerError", "HttpResponse", "status_code", "__init__", "args", "kwargs", "self", "__init__", "HttpResponse", "self", "args", "kwargs", "get_host", "request", "get_host", "request", "str_to_unicode", "s", "encoding", "\n    Converts basestring objects to unicode, using the given encoding. Illegally\n    encoded input characters are replaced with Unicode \"unknown\" codepoint\n    (\\ufffd).\n\n    Returns any non-basestring objects without change.\n    ", "isinstance", "s", "str", "unicode", "s", "encoding", "replace", "s", "numpy", "np", "scipy.optimize", "op", "scipy.special", "fn", "math", "collections", "OrderedDict", "namedtuple", "lines", "pprint", "scipy.interpolate", "ip", "scipy.signal", "sig", "lines", "os", "parser", "DEBUG", "True", "fwhm_coef", "sqrt", "math", "log", "math", "sqrt_2pi", "sqrt", "math", "pi", "math", "sqrt_2", "sqrt", "math", "pi_d_2", "pi", "math", "e_0", "e_mo", "gauss", "x", "x0", "A", "fwhm", "sigma", "fwhm", "fwhm_coef", "_c", "A", "_", "x", "x0", "sigma", "_", "exp", "np", "_", "_c", "_", "gauss_square", "A", "fwhm", "sigma", "fwhm", "fwhm_coef", "_e", "A", "sigma", "sqrt_2pi", "_e", "arccot", "x", "pi_d_2", "arctan", "np", "x", "Pike", "namedtuple", "Line", "x0, A, fwhm, bkg, slope, chisq", "zero_pike", "_make", "Pike", "None", "zero_line", "_make", "Line", "lines", "", "", "Zero", "_LL", "L", "K", "wgt", "e1", "e2", "e1", "e2", "e1", "K", "_LL", "name", "e1", "keV", "e1", "K", "keV", "e2", "K", "Object", "FittingWarning", "ValueError", "Parameters", "object", "__init__", "self", "channels", "channels", "self", "array", "np", "channels", "x", "self", "arange", "np", "len", "channels", "self", "peakes", "self", "peake_cache", "self", "scale", "self", "Object", "zero_e", "scale", "self", "None", "max_keV", "scale", "self", "None", "done", "scale", "self", "False", "peakes", "scale", "self", "fwhm", "scale", "self", "Object", "done", "fwhm", "scale", "self", "False", "bkg", "self", "None", "cwt", "self", "Object", "peakes", "cwt", "self", "OrderedDict", "done", "cwt", "self", "False", "line_db_conn", "self", "None", "set_active_channels", "self", "channels", "self", "set_figure", "self", "fig", "fig", "self", "fig", "set_line_db_conn", "self", "conn", "line_db_conn", "self", "conn", "set_active_channels", "self", "channels", "active_channels", "self", "channels", "peake_cache", "self", "set_scale_lines", "self", "zero_e", "lines", "max_keV", "zero_e", "scale", "self", "zero_e", "lines", "scale", "self", "lines", "max_keV", "scale", "self", "max_keV", "sub_line", "self", "channels", "line", "s", "w", "int", "fwhm", "line", "s", "xmin", "xmax", "cut", "self", "x0", "line", "w", "xl", "y", "channels", "y", "xmin", "xmax", "y", "xmin", "xmax", "gauss", "x", "xmin", "xmax", "x0", "line", "A", "line", "fwhm", "line", "keV_to_channel", "self", "keV", "done", "scale", "self", "keV", "b", "scale", "self", "k", "scale", "self", "RuntimeError", "scale did not calculated", "channel_to_keV", "self", "channel", "done", "scale", "self", "channel", "k", "scale", "self", "b", "scale", "self", "RuntimeError", "scale did not calculated", "calc_scale", "self", "plot", "force", "pb", "False", "False", "None", "zero_e", "scale", "self", "None", "ValueError", "energy for Zero pike is not set.", "len", "lines", "scale", "self", "ValueError", "supply at exactly one element to make scaling.", "done", "scale", "self", "force", "scale", "self", "max_keV", "max_keV", "scale", "self", "ls", "select", "line_db_conn", "self", "element", "lines", "scale", "self", "where", "keV < %3.5f", "max_keV", "analytical", "True", "order_by", "e.Z", "ls", "list", "ls", "e_2", "wgt", "ls", "ls", "lines", "zero_e", "scale", "self", "e_2", "y", "array", "np", "channels", "self", "xl", "len", "y", "x", "x", "self", "y", "array", "np", "y", "dtype", "dtype", "np", "f8", "_y", "atleast_2d", "np", "y", "order", "_order", "int", "order", "b", "a", "butter", "sig", "order", "btype", "low", "pb", "pb", "yfiltered", "lfilter", "sig", "b", "a", "y", "y_e", "yfiltered", "plot", "plot", "p", "x", "yfiltered", "color", "linewidth", "alpha", "order", "_order", "int", "order", "b", "a", "butter", "sig", "order", "btype", "bandstop", "_y", "array", "np", "y", "_y", "yfilteredlb", "lfilter", "sig", "b", "a", "y", "y_e", "yfilteredlb", "pb", "pb", "chst", "i", "ch", "enumerate", "yfiltered", "ch", "chst", "chst", "ch", "zero", "i", "chst", "i", "x", "i", "_y", "yfiltered", "i", "yfilteredlb", "i", "_y", "i", "_y", "chst", "chst", "_y", "i", "tube", "i", "tube", "plot", "plot", "p", "x", "yfiltered", "color", "linewidth", "alpha", "plot", "p", "x", "yfilteredlb", "color", "linewidth", "alpha", "points", "zero", "tube", "ws", "S_fwhm", "POINTS", "points", "fwhm_guess", "None", "x0", "points", "Xopt", "get", "peake_cache", "self", "x0", "None", "Xopt", "None", "append", "ws", "Xopt", "task", "True", "True", "True", "fail_iter", "False", "A", "y", "x0", "bkg", "step", "range", "len", "task", "fail_iter", "mask", "xtol", "_plot", "iters", "s_fwhm", "task", "step", "fwhm_guess", "None", "width", "fwhm_guess", "s_fwhm", "fwhm_guess", "width", "Xopt", "r_line", "self", "x0", "A", "A", "fwhm", "fwhm_guess", "width", "width", "plot", "_plot", "plot", "raise_on_warn", "True", "iters", "iters", "mask", "mask", "xtol", "xtol", "pb", "pb", "FittingWarning", "w", "Fit Warning step", "step", "fail_iter", "True", "x0", "x0", "Xopt", "A", "A", "Xopt", "fwhm_guess", "fwhm", "Xopt", "bkg", "bkg", "Xopt", "fail_iter", "peake_cache", "self", "x0", "Xopt", "append", "ws", "Xopt", "ws", "sort", "ws", "key", "x", "x0", "x", "peakes", "scale", "self", "ws", "zero_fwhm", "tube_fwhm", "fwhm", "w", "w", "ws", "zero_x0", "tube_x0", "x0", "w", "w", "ws", "_y", "array", "np", "lines", "_x0", "array", "np", "x0", "_", "_", "ws", "scale", "k", "b", "x", "y", "y", "x", "k", "b", "k_scale", "b_scale", "leastsq", "op", "scale", "args", "_x0", "_y", "pb", "pb", "K, B:", "k_scale", "b_scale", "k", "scale", "self", "k_scale", "b", "scale", "self", "b_scale", "done", "scale", "self", "True", "scale", "self", "refine_scale", "self", "elements", "plot", "background", "pb", "False", "True", "None", "ws", "max_keV", "channel_to_keV", "self", "len", "channels", "self", "els", "elements", "ls", "select", "line_db_conn", "self", "element", "els", "where", "keV < %3.5f", "max_keV", "analytical", "True", "order_by", "e.Z", "ls", "list", "ls", "pb", "pb", "ls1", "ls2", "i", "lls", "len", "ls", "lls", "i", "lls", "l", "ls", "i", "z", "Z", "l", "lp", "l", "append", "ls1", "l", "i", "i", "lls", "l", "ls", "i", "append", "ls2", "lp", "Z", "l", "z", "append", "ls2", "lp", "append", "ls2", "l", "i", "l1", "l2", "zip", "ls1", "ls2", "l1", "l2", "-----", "x0", "keV_to_channel", "self", "wgt", "l1", "l2", "plot", "Fitting line at x0=", "x0", "p", "iter_r_line", "self", "x0", "plot", "plot", "fwhm", "fwhm", "peakes", "scale", "self", "background", "background", "p", "append", "ws", "p", "l1", "l2", "pb", "pb", "len", "ws", "RuntimeError", "not enough data to graduation, sorry", "pprint", "pprint", "ws", "_y", "array", "np", "wgt", "w", "w", "w", "ws", "_x0", "array", "np", "x0", "w", "w", "ws", "_diag", "array", "np", "A", "w", "w", "ws", "scale", "k", "b", "x", "y", "y", "x", "k", "b", "pb", "pb", "k_scale", "b_scale", "leastsq", "op", "scale", "args", "_x0", "_y", "K, B:", "k_scale", "b_scale", "k", "scale", "self", "k_scale", "b", "scale", "self", "b_scale", "done", "scale", "self", "True", "extend", "peakes", "scale", "self", "w", "w", "ws", "calculate_fwhm", "self", "peakes", "scale", "self", "scale", "self", "calculate_fwhm", "self", "peakes", "pb", "None", "pprint", "pprint", "peakes", "_y", "array", "np", "fwhm", "w", "w", "peakes", "_x0", "array", "np", "x0", "peakes", "scale", "self", "x0", "w", "w", "peakes", "scale", "k", "b", "x", "y", "y", "sqrt", "np", "x", "k", "b", "k_scale", "b_scale", "leastsq", "op", "scale", "args", "_x0", "_y", "FWHM scale:", "k_scale", "b_scale", "pb", "pb", "k", "fwhm", "scale", "self", "k_scale", "b", "fwhm", "scale", "self", "b_scale", "done", "fwhm", "scale", "self", "True", "fwhm", "scale", "self", "keV_to_fwhm", "self", "keV", "x0", "keV_to_channel", "self", "keV", "sqrt", "np", "x0", "k", "fwhm", "scale", "self", "b", "fwhm", "scale", "self", "invalidate_background", "self", "bkg", "self", "None", "approx_background", "self", "elements", "plot", "sw", "s", "deeping", "noice", "relax", "pb", "proceed", "iters", "False", "None", "True", "proceed", "elements", "max_keV", "channel_to_keV", "self", "len", "channels", "self", "els", "elements", "ls", "select", "line_db_conn", "self", "element", "els", "where", "keV < %3.5f", "max_keV", "order_by", "e.Z", "pb", "pb", "ls", "list", "ls", "xl", "len", "channels", "self", "ws", "ones", "np", "xl", "deeper", "zeros", "np", "xl", "_deep_count", "range", "iters", "_s", "w", "sw", "l", "ls", "x0", "keV_to_channel", "self", "keV", "l", "fwhm", "keV_to_fwhm", "self", "keV", "l", "hwidth", "fwhm", "_s", "xmin", "xmax", "cut", "self", "x0", "hwidth", "xl", "ws", "xmin", "xmax", "w", "_x", "x", "self", "deeper", "_x", "ws", "_x", "deeper", "_x", "deeper", "relax", "ws", "plot", "plot", "fig", "self", "x", "self", "ws", "max", "channels", "self", "color", "alpha", "nx", "ny", "nw", "_x", "x", "self", "ws", "_x", "append", "nx", "_x", "append", "ny", "channels", "self", "_x", "append", "nw", "ws", "_x", "spline", "splrep", "ip", "nx", "ny", "nw", "k", "s", "s", "ys", "splev", "ip", "x", "self", "spline", "y", "array", "np", "channels", "self", "_x", "x", "self", "ys", "_x", "ys", "_x", "ys", "_x", "noice", "y", "_x", "deeper", "_x", "deeping", "plot", "plot", "fig", "self", "x", "self", "ys", "color", "linewidth", "alpha", "pb", "pb", "bkg", "self", "ys", "ys", "iter_r_line", "self", "x0", "A", "fwhm", "bkg", "task", "plot", "background", "None", "None", "None", "False", "True", "xorig", "int", "x0", "Xopt", "get", "peake_cache", "self", "xorig", "None", "Xopt", "None", "Xopt", "background", "background", "background", "b", "background", "task", "None", "task", "False", "b", "b", "False", "b", "b", "True", "A", "None", "A", "active_channels", "self", "int", "x0", "slope", "fail_iter", "False", "step", "range", "len", "task", "fail_iter", "mask", "xtol", "_plot", "iters", "s_fwhm", "task", "step", "fwhm", "None", "fwhm", "width", "fwhm", "Xopt", "r_line", "self", "x0", "A", "A", "fwhm", "fwhm", "width", "width", "plot", "_plot", "plot", "raise_on_warn", "True", "iters", "iters", "mask", "mask", "xtol", "xtol", "FittingWarning", "w", "Fit Warning step", "step", "fail_iter", "True", "x0", "x0", "Xopt", "A", "A", "Xopt", "fwhm", "fwhm", "Xopt", "bkg", "bkg", "Xopt", "fail_iter", "peake_cache", "self", "int", "x0", "Xopt", "peake_cache", "self", "int", "xorig", "Xopt", "Xopt", "calc_fwhm_scale", "self", "plot", "pb", "False", "None", "scale", "calc_scale", "self", "nearest_peake", "self", "x0", "peaks", "dpeaks", "abs", "np", "peaks", "x0", "i", "argmin", "np", "dpeaks", "peaks", "i", "scan_peakes_cwt", "self", "plot", "force", "False", "False", "done", "cwt", "self", "force", "cwt", "self", "scale", "calc_scale", "self", "plot", "plot", "ws", "peakes", "scale", "zero_fwhm", "tube_fwhm", "fwhm", "w", "w", "ws", "zero_x0", "tube_x0", "x0", "w", "w", "ws", "a", "b", "zero_fwhm", "tube_fwhm", "_wsmin", "a", "_wsmax", "b", "scan_num", "int", "b", "a", "fwhm_widths", "linspace", "np", "a", "b", "scan_num", "get_fwhm_cwt", "cwt_data", "peak", "fwhm", "wl", "xl", "shape", "cwt_data", "pmin", "pmax", "cut", "self", "peak", "xl", "wc", "argmax", "np", "cwt_data", "peak", "axis", "peak", "fwhm", "wc", "cwt_fwhms", "OrderedDict", "y", "array", "np", "active_channels", "self", "peaks", "cwt_field", "find_peaks_cwt1", "sig", "y", "fwhm_widths", "min_snr", "max_distances", "fwhm_widths", "peak", "peaks", "x0", "fwhm", "get_fwhm_cwt", "cwt_field", "peak", "fwhm_widths", "cwt_fwhms", "peak", "fwhm", "field", "cwt", "self", "cwt_field", "peakes", "cwt", "self", "cwt_fwhms", "done", "cwt", "self", "True", "cwt", "self", "calculate", "self", "plot", "pb", "False", "None", "calc_scale", "self", "plot", "plot", "pb", "pb", "calc_fwhm_scale", "self", "plot", "plot", "pb", "pb", "model_spectra", "self", "elements", "plot", "bkg", "False", "None", "bkg", "None", "bkg", "x", "y", "array", "np", "channels", "self", "ly", "len", "y", "x", "arange", "np", "ly", "x", "channel_to_keV", "self", "x", "x:", "x", "max_keV", "max", "x", "ls", "select", "line_db_conn", "self", "element", "elements", "where", "keV < %3.5f", "max_keV", "order_by", "e.Z", "lines", "list", "ls", "const", "exp", "ampc", "gen_equation", "self", "elements", "elements", "lines", "lines", "x", "x", "s_fun", "\ndef approx_func(Params, x):\n    %s = Params\n    _1 = %s\n    return _1\n", "join", ",", "const", "join", "\n    ", "exp", "amp", "y", "ampc", "s_fun", "ast", "compile", "s_fun", "<string-gen>", "exec", "repr", "co_code", "ast", "asd", "gen_equation", "self", "elements", "lines", "x", "const", "sum", "ampc", "line", "lines", "rel", "rel", "line", "keV", "keV", "line", "c_name", "C_", "element", "line", "_", "name", "line", "fwhm", "keV_to_fwhm", "self", "keV", "line", "append", "sum", "%s*%f*gauss(x,%f,%f)+ \\", "c_name", "rel", "keV", "fwhm", "c_name", "const", "append", "const", "c_name", "append", "ampc", "keV_to_channel", "self", "keV", "append", "sum", "0.", "const", "sum", "ampc", "trash", "self", "FWHM interval:", "zero_fwhm", "tube_fwhm", "a", "b", "zero_fwhm", "tube_fwhm", "_wsmin", "a", "_wsmax", "b", "scan_num", "int", "b", "a", "fwhm_widths", "linspace", "np", "a", "b", "scan_num", "get_fwhm_cwt", "cwt_data", "peak", "fwhm", "wl", "xl", "shape", "cwt_data", "pmin", "pmax", "cut", "self", "peak", "xl", "wc", "argmax", "np", "cwt_data", "peak", "axis", "peak", "fwhm", "wc", "nearest_peake", "x0", "peaks", "dpeaks", "abs", "np", "peaks", "x0", "i", "argmin", "np", "dpeaks", "peaks", "i", "cwt_fwhms", "ws", "bad_ws", "iter_num", "range", "Start ITERATION:", "iter_num", "peaks", "cwt_field", "find_peaks_cwt1", "sig", "y", "fwhm_widths", "min_snr", "max_distances", "fwhm_widths", "peak", "peaks", "x0", "fwhm", "get_fwhm_cwt", "cwt_field", "peak", "fwhm_widths", "x0, fwhm=", "x0", "fwhm", "cwt_fwhms", "peak", "fwhm", "pike", "peaks", "axvline", "p", "x", "pike", "color", "linewidth", "fwhm_guess", "zero_fwhm", "sort", "peaks", "key", "peak", "y", "peak", "peak_rec", "False", "pp", "peaks", "pp", "bad_ws", "cwt_b", "int", "fwhm_guess", "_wsmin", "cwt_guess", "cwt_field", "cwt_b", "pp", "Cut: [", "pp", "]", "_il", "_l", "enumerate", "cwt_field", "_il", "_wsmin", ":", "_l", "pp", "pp", "y_guess", "y", "pp", "GUESS: y[pp]", "y_guess", "CWT:", "cwt_guess", "FWHM:", "cwt_fwhms", "pp", "Ratio:", "y_guess", "cwt_guess", "cwt_fwhms", "pp", "Xopt", "r_line", "self", "x", "pp", "A", "y", "pp", "fwhm", "cwt_fwhms", "pp", "width", "cwt_fwhms", "pp", "S_fwhm", "plot", "False", "raise_on_warn", "True", "mask", "iters", "FittingWarning", "w", "FITWARN!!!!", "append", "bad_ws", "pp", "Xopt", "r_line", "self", "x0", "Xopt", "A", "Xopt", "fwhm", "fwhm", "Xopt", "width", "fwhm", "Xopt", "S_fwhm", "bkg", "bkg", "Xopt", "plot", "True", "raise_on_warn", "True", "mask", "iters", "FittingWarning", "w", "FITWARN!!!!", "append", "bad_ws", "pp", "bkg", "Xopt", "append", "bad_ws", "pp", "x0", "Xopt", "fwhm", "Xopt", "xl", "append", "bad_ws", "pp", "x0", "Xopt", "fwhm", "Xopt", "append", "bad_ws", "pp", "A", "Xopt", "append", "bad_ws", "pp", "append", "ws", "Xopt", "cwt_fwhms", "pp", "fwhm", "Xopt", "peak_rec", "True", "sub_line", "y", "Xopt", "peak_rec", "plot", "p", "x", "y", "color", "Stop ITERATIONs at:", "iter_num", "B_fwhm1", "B_fwhm2", "omega", "ones", "np", "xl", "cwt_fwhms", "cwt_fwhms", "cwt_fwhms", "cwt_fwhms", "x0", "fwhm", "iteritems", "cwt_fwhms", "x0", "bad_ws", "xmin", "xmax", "cut", "self", "x0", "fwhm", "B_fwhm1", "xl", "omega", "xmin", "xmax", "x0", "fwhm", "iteritems", "cwt_fwhms", "x0", "bad_ws", "xmin", "xmax", "cut", "self", "x0", "fwhm", "B_fwhm2", "xl", "omega", "xmin", "xmax", "omega", "nx", "ny", "no", "_x", "x", "omega", "_x", "append", "nx", "_x", "append", "ny", "active_channels", "self", "_x", "append", "no", "omega", "_x", "spline", "splrep", "ip", "nx", "ny", "no", "k", "s", "ys", "splev", "ip", "x", "spline", "_x", "x", "ys", "_x", "ys", "_x", "plot", "p", "x", "ys", "color", "linewidth", "alpha", "plot", "p", "x", "omega", "color", "plot", "p", "x", "active_channels", "self", "color", "WS:", "pprint", "pprint", "ws", "show", "p", "sort", "ws", "key", "x", "fwhm", "x", "fwhm_guess_min", "fwhm", "ws", "fwhm_guess_max", "fwhm_guess_min", "LIMITS:", "fwhm_guess_min", "fwhm_guess_max", "ws", "l", "l", "ws", "fwhm", "l", "fwhm_guess_max", "sort", "ws", "key", "x", "fwhm", "x", "fwhm_min", "fwhm", "ws", "fwhm_max", "fwhm", "ws", "_y", "array", "np", "fwhm", "_", "_", "ws", "_x0", "array", "np", "x0", "_", "_", "ws", "_x0", "_x0", "_y", "X FWHMs:", "_x0", "Y FWHMs:", "_y", "ffwhm", "k", "x", "_y", "sqrt", "np", "x", "k", "k_fwhm", "leastsq", "op", "ffwhm", "args", "_x0", "k_fwhm", "x0_to_fwhm", "x0", "sqrt", "np", "x0", "_x0", "k_fwhm", "F FWHMs:", "x0_to_fwhm", "_x0", "l", "ws", "axvline", "p", "x0", "l", "color", "plot", "p", "x", "zeros", "np", "xl", "y_bkg", "array", "np", "active_channels", "self", "_", "array", "np", "y_bkg", "Bkg processing", "max_count", "count", "range", "max_count", "cmc", "float", "max_count", "count", "max_count", "x_mi", "w", "int", "x0_to_fwhm", "x_mi", "cmc", "x_ma", "x_mi", "w", "x_c", "int", "x_mi", "x_ma", "w", "int", "x0_to_fwhm", "x_c", "cmc", "x_mi", "x_c", "w", "x_ma", "x_c", "w", "x_ma", "xl", "y_mi", "y_bkg", "x_mi", "y_ma", "y_bkg", "x_ma", "y_c", "y_bkg", "x_c", "y_a", "y_mi", "y_ma", "y_c", "y_a", "_", "x_c", "y_a", "x_c", "y_bkg", "_", "plot", "p", "x", "y_bkg", "color", "float", "count", "max_count", "Spline:", "y", "array", "np", "y_bkg", "w", "zeros", "np", "xl", "_i", "x", "y", "_i", "w", "_i", "y", "_i", "w", "_i", "xmin", "w", "xmin", "w0", "array", "np", "w", "miter", "iter", "range", "miter", "spline", "splrep", "ip", "x", "y", "w", "ys", "splev", "ip", "x", "spline", "dy", "y", "ys", "le", "less_equal", "np", "dy", "_i", "x", "dy", "y", "_i", "ys", "_i", "dy", "w", "_i", "dy", "abs", "dy", "w", "_i", "w", "_i", "w0", "_i", "c", "float", "miter", "iter", "miter", "plot", "p", "x", "ys", "color", "c", "c", "c", "linewidth", "\n        p.plot(x, self.channels-y_bkg, color=(0.5,0.5,0))\n        # Repeat the recognition procedure again? or split the Compton pike?\n\n        peaks=sig.find_peaks_cwt(self.channels-y_bkg,\n            np.linspace(fwhm_min, fwhm_max, 20), min_snr=0.6)\n\n        pprint.pprint(peaks)\n        print len(peaks)+1\n\n        for pi in peaks:\n            xp=x[pi]\n            yp=y[pi]\n\n            p.axvline(xp, color=(1, 0, 1))\n        ", "plot", "p", "x", "active_channels", "self", "color", "show", "p", "mm", "c1_fwhm", "c2_fwhm", "Xl", "Xopt", "max_lines", "__", "range", "f_lines", "Xopt", "True", "mx", "argmax", "np", "y", "Xl", "r_line", "self", "mx", "A", "None", "fwhm", "fwhm", "Xl", "width", "fwhm", "Xopt", "c1_fwhm", "plot", "False", "account_bkg", "iters", "raise_on_warn", "True", "channels", "y", "FittingWarning", "w", "w", "y", "int", "x0", "Xl", "A", "Xl", "A", "Xl", "sub_line", "y", "Xl", "s", "S_fwhm", "xtmp", "x0", "Xl", "append", "f_lines", "Xl", "max_lines", "max_lines", "_fwhm_s", "a", "b", "int", "fwhm", "b", "fwhm", "a", "sort", "f_lines", "_fwhm_s", "fwhm", "f_lines", "fwhm", "f_lines", "f_lines", "y", "array", "np", "active_channels", "self", "fy", "zeros", "np", "xl", "dtype", "float", "w", "zeros", "np", "xl", "dtype", "float", "l", "f_lines", "sub_line", "y", "l", "s", "S_fwhm", "fy", "fy", "gauss", "x", "x0", "l", "A", "l", "fwhm", "l", "_w", "int", "fwhm", "l", "S_fwhm", "xmin", "xmax", "cut", "self", "x0", "l", "_w", "xl", "w", "xmin", "xmax", "xp1", "x", "x0", "Xopt", "plot", "p", "x", "fy", "color", "y", "array", "np", "active_channels", "self", "spline", "splrep", "ip", "xp1", "y", "x0", "Xopt", "w", "x0", "Xopt", "k", "s", "ys", "splev", "ip", "x", "spline", "plot", "p", "x", "ys", "ym", "channels", "self", "ys", "_i", "_", "enumerate", "ym", "_", "ym", "_i", "plot", "p", "x", "ym", "color", "linewidth", "__", "y", "ym", "plot", "p", "x", "channels", "self", "color", "linewidth", "pprint", "pprint", "f_lines", "len", "f_lines", "DEBUG", "show", "p", "e_fe", "e_zr", "plot", "p", "x", "y", "plot", "p", "x", "x", "x00", "_", "fwhm_0", "b0", "k0", "r_line", "width", "len", "x", "plot", "True", "FWHM0:", "fwhm_0", "w", "fwhm_0", "x0_fe", "_", "fwhm_fe", "b_fe", "k_fe", "r_line", "fwhm", "fwhm_0", "width", "w", "plot", "True", "s_k", "e_fe", "e_0", "x0_fe", "x00", "s_b", "e_fe", "s_k", "x0_fe", "Scale:", "s_k", "s_b", "to_chan", "e", "e", "s_b", "s_k", "x0_mo", "to_chan", "e_mo", "x0_zr", "to_chan", "e_zr", "r_line", "fwhm", "fwhm_0", "width", "w", "plot", "True", "ffwhm", "k", "x", "_y", "sqrt", "np", "x", "k", "k", "leastsq", "op", "ffwhm", "args", "array", "np", "e_0", "e_fe", "fwhm_zr", "k", "sqrt", "math", "e_zr", "fwhm_mo", "k", "sqrt", "math", "e_mo", "fwhm:", "fwhm_zr", "k", "gain", "s_k", "r_line_zr", "x0_zr", "fwhm", "fwhm_zr", "width", "fwhm_zr", "plot", "True", "Xtry", "_", "A_mo", "_", "a0", "a1", "r_line_zr", "x0_mo", "fwhm", "fwhm_mo", "width", "fwhm_zr", "plot", "True", "Releigh pike:", "Xtry", "angle", "rangle", "angle", "pi", "math", "m0", "E", "e_mo", "E_prime", "E", "cos", "math", "rangle", "E", "m0", "x0_coumpton", "to_chan", "E_prime", "xmin", "xmax", "\n        y1=y+0.\n        Xtry[-1]=Xtry[-2]=0.\n        y1[3514:3640]=y1[3514:3640]-ofp(Xtry, x[3514:3640])\n        y2,y=y,y1\n        p.plot(x, y)\n        ", "Xopt_cou", "A_mo", "x0_cou", "A_cou", "fwhm_co", "bkg_cou", "shift", "c2", "a3", "b", "c", "x0_mo", "cou_sim_fmin", "A_mo", "x0_coumpton", "A_mo", "fwhm_mo", "x0_mo", "x0_mo", "fwhm_mo", "xmin", "xmin", "xmax", "xmax", "xmin", "xmax", "Coumpton group:", "Xopt_cou", "_cs", "cou_sim", "A_mo", "x0_cou", "A_cou", "fwhm_co", "bkg_cou", "shift", "c2", "a3", "b", "c", "x0_mo", "fwhm_mo", "x", "xmin", "xmax", "plot", "p", "x", "xmin", "xmax", "_cs", "y1", "y", "Xtry", "Xtry", "y1", "xmin", "xmax", "y1", "xmin", "xmax", "_cs", "bkg_cou", "y2", "y", "y", "y1", "plot", "p", "x", "y", "r_line_zr", "x0_zr", "fwhm", "fwhm_zr", "width", "fwhm_zr", "plot", "True", "show", "p", "cut", "self", "x0", "hw", "xl", "ix0", "int", "floor", "math", "x0", "ihw", "int", "floor", "math", "hw", "xmin", "ix0", "ihw", "xmin", "xmin", "xmax", "ix0", "ihw", "xmax", "xl", "xmax", "xl", "xmin", "xmax", "split_args", "self", "X", "mask", "len", "X", "len", "mask", "ValueError", "vector X and mask must be of the same length", "nx", "nf", "x", "m", "zip", "X", "mask", "m", "append", "nx", "x", "append", "nf", "x", "nx", "nf", "join_args", "self", "X", "fix", "mask", "args", "xi", "fi", "m", "mask", "m", "append", "args", "X", "xi", "xi", "append", "args", "fix", "fi", "fi", "args", "r_line", "self", "x0", "A", "fwhm", "bkg", "xtol", "width", "plot", "account_bkg", "mask", "iters", "channels", "raise_on_warn", "None", "None", "False", "None", "None", "False", "_gauss", "x0", "A", "fwhm", "b", "k", "xw", "gauss", "xw", "x0", "A", "fwhm", "b", "k", "xw", "x0", "of", "args", "_", "apply", "_gauss", "args", "_", "fopt", "args", "X", "mask", "fix", "rest", "args", "xw", "yw", "list", "rest", "fargs", "join_args", "self", "X", "fix", "mask", "xw", "_", "apply", "of", "fargs", "sum", "yw", "_", "width", "None", "width", "fwhm", "hw", "width", "channels", "None", "y", "channels", "y", "channels", "self", "x", "x", "self", "xl", "len", "y", "xmin", "xmax", "cut", "self", "x0", "hw", "xl", "A", "None", "A", "max", "y", "xmin", "xmax", "X0", "x0", "A", "fwhm", "bkg", "m", "list", "mask", "account_bkg", "None", "m", "account_bkg", "X", "F", "split_args", "self", "X0", "m", "xw", "x", "xmin", "xmax", "yw", "y", "xmin", "xmax", "Xopt", "fval", "iterations", "fcalls", "warnflag", "fmin", "op", "fopt", "X", "args", "m", "F", "xw", "yw", "xtol", "xtol", "maxiter", "iters", "maxfun", "iters", "disp", "False", "full_output", "warnflag", "raise_on_warn", "FittingWarning", "warnflag", "Xopt", "_make", "Pike", "join_args", "self", "Xopt", "F", "m", "fval", "plot", "A", "Xopt", "A", "x0", "Xopt", "fwhm", "Xopt", "fwhm", "Xopt", "xl", "Xopt", "xmin1", "xmax1", "cut", "self", "Xopt", "hw", "xl", "x0", "A", "fwhm", "b", "k", "chisq", "list", "Xopt", "nxw", "arange", "np", "xmin1", "xmax1", "ValueError", "fy", "apply", "of", "list", "Xopt", "nxw", "fill_between", "p", "nxw", "fy", "nxw", "x0", "k", "b", "color", "alpha", "Xopt", "ofp", "self", "X", "xw", "x0", "A", "fwhm", "a0", "a1", "X", "dxw", "xw", "x0", "_", "gauss", "xw", "x0", "A", "fwhm", "a0", "a1", "dxw", "_", "r_line_zr", "self", "x0", "A", "fwhm", "xtol", "width", "plot", "None", "None", "None", "False", "fopt", "X", "x0", "fwhm", "xw", "yw", "A", "a0", "a1", "X", "X", "x0", "A", "fwhm", "a0", "a1", "_", "ofp", "X", "xw", "sum", "yw", "_", "fwhm", "None", "ValueError", "fwhm should be defined", "width", "None", "width", "fwhm", "hw", "width", "xmin", "xmax", "cut", "x0", "hw", "A", "None", "A", "max", "y", "xmin", "xmax", "X0", "A", "xw", "x", "xmin", "xmax", "yw", "y", "xmin", "xmax", "Xopt", "fmin", "op", "fopt", "X0", "args", "x0", "fwhm", "xw", "yw", "xtol", "xtol", "maxiter", "maxfun", "A", "a0", "a1", "Xopt", "nxw", "arange", "np", "xw", "xw", "Xopt", "x0", "A", "fwhm", "a0", "a1", "fy", "ofp", "Xopt", "nxw", "ffy", "ofp", "x0", "A", "fwhm", "a0", "x", "plot", "dnxw", "nxw", "x0", "fill_between", "p", "nxw", "fy", "a0", "a1", "dnxw", "color", "alpha", "plot", "p", "x", "ffy", "color", "alpha", "Xopt", "Gc", "self", "E", "E0", "fwhm", "fg", "sigma", "fwhm", "fwhm_coef", "_1", "sigma", "fg", "_", "sqrt_2pi", "_1", "_", "_", "dE", "E", "E0", "_x", "dE", "_1", "_", "exp", "np", "_x", "T", "self", "E", "E0", "fwhm", "g", "mult", "sigma", "fwhm", "fwhm_coef", "dE", "E", "E0", "_ef", "exp", "math", "g", "_0", "g", "sigma", "_1", "_0", "_ef", "_exp1", "exp", "np", "mult", "dE", "_0", "_1", "_x", "mult", "dE", "sqrt_2", "sigma", "sqrt_2", "g", "_exp1", "erfc", "fn", "_x", "cou_approx", "self", "A", "E", "E0", "fwhm", "fg", "fa", "fb", "ga", "gb", "_", "_", "Gc", "E", "E0", "fwhm", "fg", "A", "_", "cou_opt", "self", "X", "Ew", "E0", "fwhm", "yw", "A", "fg", "fa", "fb", "ga", "gb", "X", "sum", "cou_approx", "A", "Ew", "E0", "fwhm", "fg", "fa", "fb", "ga", "gb", "yw", "cou_fmin", "self", "E", "E0", "fwhm", "X0", "xtol", "xmin", "xmax", "None", "None", "X0", "None", "X0", "xmax", "None", "xmax", "len", "E", "Ew", "E", "xmin", "xmax", "yw", "y", "xmin", "xmax", "fmin", "op", "cou_opt", "X0", "args", "Ew", "E0", "fwhm", "yw", "xtol", "xtol", "maxiter", "maxfun", "cou_sim", "self", "A_mo", "x_cou", "A_cou", "fwhm_cou", "bkg", "shift", "c2", "a3", "b", "c", "x_mo", "fwhm_mo", "xw", "_", "_", "gauss", "xw", "x_mo", "A_mo", "fwhm_mo", "_", "gauss", "xw", "x_cou", "shift", "A_cou", "fwhm_cou", "_", "gauss", "xw", "x_cou", "shift", "c2", "A_cou", "fwhm_cou", "_", "a3", "arccot", "shift", "b", "xw", "x_cou", "c", "arccot", "shift", "b", "xw", "x_cou", "_", "bkg", "_", "cou_sim_opt", "self", "X", "fwhm_mo", "xw", "yw", "A_mo", "x_cou", "A_cou", "fwhm_cou", "bkg", "shift", "c2", "a3", "b", "c", "x_mo", "X", "_", "cou_sim", "A_mo", "x_cou", "A_cou", "fwhm_cou", "bkg", "shift", "c2", "a3", "b", "c", "x_mo", "fwhm_mo", "xw", "_", "sum", "_", "yw", "_", "cou_sim_fmin", "self", "X", "x_mo", "fwhm_mo", "xmin", "xmax", "xtol", "None", "xmax", "None", "xmax", "len", "E", "xw", "x", "xmin", "xmax", "yw", "y", "xmin", "xmax", "fmin", "op", "cou_sim_opt", "X", "args", "fwhm_mo", "xw", "yw", "xtol", "xtol", "maxiter", "maxfun", "REL_INT", "KA1", "KA2", "KB1", "KB3", "LA1", "LA2", "LB1", "LB2", "LB3", "LG1", "REL_NC", "line_plot", "self", "lines", "options", "get", "options", "show-lines", "True", "fig", "fig", "self", "ym", "L2", "K", "L", "M", "black", "red", "green", "calc_scale", "self", "channels", "chmax", "max", "active_channels", "self", "props", "dict", "boxstyle", "round", "facecolor", "wheat", "alpha", "linewidth", "lc", "len", "active_channels", "self", "k", "get", "options", "k", "True", "l", "get", "options", "l", "True", "m", "get", "options", "m", "False", "anl", "get", "options", "analytical", "False", "line", "lines", "k", "startswith", "name", "line", "K", "l", "startswith", "name", "line", "L", "m", "startswith", "name", "line", "M", "anl", "name", "line", "A", "Z", "line", "startswith", "name", "line", "L", "Z", "line", "startswith", "name", "line", "K", "ch", "keV_to_channel", "self", "keV", "line", "append", "channels", "ch", "lname", "name", "line", "col", "L2", "lname", "ri", "rel", "line", "axvline", "fig", "ch", "ymax", "ym", "ri", "color", "col", "ch", "lc", "y", "active_channels", "self", "ch", "text", "fig", "ch", "y", "%s %s", "element", "line", "name", "line", "horizontalalignment", "right", "verticalalignment", "bottom", "family", "monospace", "size", "alpha", "bbox", "props", "channels", "test1", "matplotlib.pyplot", "p", "name", "os", "nt", "ldb", "Lines", "lines", "dbname", "/home/eugeneai/Development/codes/dispersive/data/lines.sqlite3", "ldb", "Lines", "lines", "dbname", "C:\\dispersive\\data\\lines.sqlite3", "channels", "plastic", "standard", "standard2", "par", "Parameters", "standard", "set_figure", "par", "gca", "p", "set_line_db_conn", "par", "ldb", "set_scale_lines", "par", "e_0", "Mo", "calculate", "par", "plot", "False", "elements", "set", "split", "Ne,Ni,Rb,Cl,Os,Ca,Ir,Si,S,P,As,Ar,Fe,W,V,Hf,Zr,Br", ",", "ls", "as_deltafun", "ldb", "order_by", "keV", "element", "elements", "where", "not l.name like 'M%' and keV<20.0", "ls", "list", "ls", "refine_scale", "par", "elements", "set", "As", "V", "line_plot", "par", "ls", "analytical", "True", "ybkg", "approx_background", "par", "elements", "elements", "plot", "True", "iters", "plot", "p", "x", "par", "channels", "par", "color", "alpha", "plot", "p", "x", "par", "ybkg", "color", "alpha", "linestyle", "-", "set_active_channels", "par", "channels", "par", "ybkg", "refine_scale", "par", "elements", "set", "As", "V", "W", "background", "False", "plot", "False", "model_spectra", "par", "elements", "elements", "plot", "p", "x", "par", "channels", "par", "ybkg", "color", "axis", "p", "tight", "ax", "list", "axis", "p", "ax", "ax", "ax", "ax", "axis", "p", "ax", "axhline", "p", "y", "xmin", "xmax", "color", "alpha", "linestyle", "--", "show", "p", "test2", "l", "Pike", "x0", "fwhm", "A", "bkg", "slope", "l", "__name__", "__main__", "test1", "pkg.mod", "__name__", "pkg", "__name__", "mod", "pkg", "foo", "mod", "pkg", "pkg_", "__import__", "pkg.mod", "pkg_", "mod", "pkg", "pkg_", "pkg", "mod", "pkg_", "mod", "pkg", "unittest", "mox", "gio", "nose.plugins.skip", "SkipTest", "ImportError", "SkipTest", "None", "xl.collection", "xl.trax.search", "xl.trax.track", "xl.trax.util", "tests.xl.trax", "test_data", "test_is_valid_track_valid", "track", "TEST_TRACKS", "test_data", "endswith", "track", ".aac", "is_valid_track", "util", "trax", "xl", "track", "track", "test_is_valid_track_invalid", "is_valid_track", "util", "trax", "xl", "/", "is_valid_track", "util", "trax", "xl", "/tmp", "is_valid_track", "util", "trax", "xl", "__file__", "is_valid_track", "util", "trax", "xl", "http:///tmp", "TestGetTracksFromUri", "TestCase", "unittest", "DummyClass", "__init__", "self", "parent", "retval", "parent", "self", "parent", "retval", "self", "retval", "query_info", "self", "value", "assertEqual", "parent", "self", "value", "standard::type", "self", "get_file_type", "self", "retval", "self", "setUp", "self", "mox", "self", "Mox", "mox", "tearDown", "self", "UnsetStubs", "mox", "self", "get_anything", "self", "file_type", "anything", "CreateMockAnything", "mox", "self", "AndReturn", "get_uri_scheme", "anything", "file", "file_type", "f", "file_type", "FILE_TYPE_REGULAR", "gio", "file_type", "d", "file_type", "FILE_TYPE_DIRECTORY", "gio", "file_type", "n", "NotImplementedError", "AndReturn", "query_info", "anything", "standard::type", "anything", "AndReturn", "get_file_type", "anything", "file_type", "anything", "test_invalid", "self", "SkipTest", "None", "SkipTest", "Test is borken because of moxing out error", "loc", "/tmp/foo", "StubOutWithMock", "mox", "self", "gio", "File", "f_anything", "get_anything", "self", "n", "AndReturn", "File", "gio", "loc", "f_anything", "ReplayAll", "mox", "self", "assertEqual", "self", "get_tracks_from_uri", "util", "trax", "xl", "loc", "VerifyAll", "mox", "self", "test_single", "self", "SkipTest", "None", "SkipTest", "Test is borken because of moxing out error", "loc", "/tmp/foo", "StubOutWithMock", "mox", "self", "gio", "FileInfo", "f_anything", "CreateMockAnything", "mox", "self", "AndReturn", "FileInfo", "gio", "f_anything", "AndReturn", "get_file_type", "f_anything", "FILE_TYPE_REGULAR", "gio", "ReplayAll", "mox", "self", "assertEqual", "self", "get_tracks_from_uri", "util", "trax", "xl", "loc", "Track", "track", "trax", "xl", "loc", "VerifyAll", "mox", "self", "test_directory", "self", "SkipTest", "None", "SkipTest", "Test is borken because of moxing out error", "loc", "/tmp/foo", "retval", "foo", "bar", "baz", "StubOutWithMock", "mox", "self", "gio", "File", "d_anything", "get_anything", "self", "d", "AndReturn", "File", "gio", "loc", "d_anything", "StubOutWithMock", "mox", "self", "Library", "collection", "xl", "rescan", "rescan", "Library", "collection", "xl", "StubOutWithMock", "mox", "self", "Collection", "collection", "xl", "get_tracks", "AndReturn", "get_tracks", "Collection", "collection", "xl", "retval", "ReplayAll", "mox", "self", "get_tracks_from_uri", "util", "trax", "xl", "loc", "VerifyAll", "mox", "self", "TestSortTracks", "TestCase", "unittest", "setUp", "self", "tracks", "self", "Track", "track", "trax", "xl", "url", "url", "/tmp/foo", "/tmp/bar", "/tmp/baz", "track", "val", "zip", "tracks", "self", "aab", "set_tag_raw", "track", "artist", "val", "track", "val", "zip", "tracks", "self", "212", "set_tag_raw", "track", "discnumber", "val", "fields", "self", "artist", "discnumber", "result", "self", "tracks", "self", "tracks", "self", "tracks", "self", "test_sorted", "self", "assertEqual", "self", "sort_tracks", "util", "trax", "xl", "fields", "self", "tracks", "self", "result", "self", "test_reversed", "self", "assertEqual", "self", "sort_tracks", "util", "trax", "xl", "fields", "self", "tracks", "self", "reverse", "True", "list", "reversed", "result", "self", "TestSortResultTracks", "TestCase", "unittest", "setUp", "self", "tracks", "Track", "track", "trax", "xl", "url", "url", "/tmp/foo", "/tmp/bar", "/tmp/baz", "track", "val", "zip", "tracks", "aab", "set_tag_raw", "track", "artist", "val", "track", "val", "zip", "tracks", "212", "set_tag_raw", "track", "discnumber", "val", "tracks", "self", "SearchResultTrack", "search", "trax", "xl", "track", "track", "tracks", "fields", "self", "artist", "discnumber", "result", "self", "tracks", "self", "tracks", "self", "tracks", "self", "test_sorted", "self", "assertEqual", "self", "sort_result_tracks", "util", "trax", "xl", "fields", "self", "tracks", "self", "result", "self", "test_reversed", "self", "assertEqual", "self", "sort_result_tracks", "util", "trax", "xl", "fields", "self", "tracks", "self", "True", "list", "reversed", "result", "self", "urlparse", "urllib", "time", "re", "zope.interface", "Interface", "twisted.python", "log", "twisted.web", "html", "resource", "buildbot.status", "builder", "buildbot.status.builder", "SUCCESS", "WARNINGS", "FAILURE", "SKIPPED", "EXCEPTION", "buildbot", "version", "util", "buildbot.process.properties", "Properties", "datetime", "ITopBox", "Interface", "I represent a box in the top row of the waterfall display: the one\n    which shows the status of the last build for each builder.", "getBox", "self", "request", "Return a Box instance, which can produce a <td> cell.\n        ", "ICurrentBox", "Interface", "I represent the 'current activity' box, just above the builder name.", "getBox", "self", "status", "Return a Box instance, which can produce a <td> cell.\n        ", "IBox", "Interface", "I represent a box in the waterfall display.", "getBox", "self", "request", "Return a Box instance, which wraps an Event and can produce a <td>\n        cell.\n        ", "IHTMLLog", "Interface", "css_classes", "SUCCESS", "WARNINGS", "FAILURE", "SKIPPED", "EXCEPTION", "None", "success", "warnings", "failure", "skipped", "exception", "", "ROW_TEMPLATE", "\n<div class=\"row\">\n  <span class=\"label\">%(label)s</span>\n  <span class=\"field\">%(field)s</span>\n</div>\n", "make_row", "label", "field", "Create a name/value row for the HTML.\n\n    `label` is plain text; it will be HTML-encoded.\n\n    `field` is a bit of HTML structure; it will not be encoded in\n    any way.\n    ", "label", "escape", "html", "label", "ROW_TEMPLATE", "label", "field", "label", "field", "make_name_user_passwd_form", "useUserPasswd", "helper function to create HTML prompt for 'name' when\n    C{useUserPasswd} is C{False} or 'username' / 'password' prompt\n    when C{True}.", "useUserPasswd", "label", "Your username:", "label", "Your name:", "data", "make_row", "label", "<input type=\"text\" name=\"username\" />", "useUserPasswd", "data", "make_row", "Your password:", "<input type=\"password\" name=\"passwd\" />", "data", "make_stop_form", "stopURL", "useUserPasswd", "on_all", "label", "False", "Build", "on_all", "data", "<form method=\"post\" action=\"%s\" class='command stopbuild'>\n          <p>To stop all builds, fill out the following fields and\n          push the 'Stop' button</p>\n", "stopURL", "data", "<form method=\"post\" action=\"%s\" class='command stopbuild'>\n          <p>To stop this build, fill out the following fields and\n          push the 'Stop' button</p>\n", "stopURL", "data", "make_name_user_passwd_form", "useUserPasswd", "data", "make_row", "Reason for stopping build:", "<input type='text' name='comments' />", "data", "<input type=\"submit\" value=\"Stop %s\" /></form>\n", "label", "data", "make_extra_property_row", "N", "helper function to create the html for adding extra build\n    properties to a forced (or resubmitted) build. \"N\" is an integer\n    inserted into the form names so that more than one property can be\n    used in the form.\n    ", "prop_html", "\n    <div class=\"row\">Property %(N)i\n      <span class=\"label\">Name:</span>\n      <span class=\"field\"><input type=\"text\" name=\"property%(N)iname\" /></span>\n      <span class=\"label\">Value:</span>\n      <span class=\"field\"><input type=\"text\" name=\"property%(N)ivalue\" /></span>\n    </div>\n    ", "N", "N", "prop_html", "make_force_build_form", "forceURL", "useUserPasswd", "on_all", "False", "on_all", "data", "<form method=\"post\" action=\"%s\" class=\"command forcebuild\">\n          <p>To force a build on all Builders, fill out the following fields\n          and push the 'Force Build' button</p>", "forceURL", "data", "<form method=\"post\" action=\"%s\" class=\"command forcebuild\">\n          <p>To force a build, fill out the following fields and\n          push the 'Force Build' button</p>", "forceURL", "data", "make_name_user_passwd_form", "useUserPasswd", "make_row", "Reason for build:", "<input type='text' name='comments' />", "make_row", "Branch to build:", "<input type='text' name='branch' />", "make_row", "Revision to build:", "<input type='text' name='revision' />", "make_extra_property_row", "make_extra_property_row", "make_extra_property_row", "<input type=\"submit\" value=\"Force Build\" /></form>\n", "getAndCheckProperties", "req", "\nFetch custom build properties from the HTTP request of a \"Force build\" or\n\"Resubmit build\" HTML form.\nCheck the names for valid strings, and return None if a problem is found.\nReturn a new Properties object containing each property found in req.\n", "properties", "Properties", "i", "pname", "get", "args", "req", "property%dname", "i", "", "pvalue", "get", "args", "req", "property%dvalue", "i", "", "pname", "pvalue", "match", "re", "^[\\w\\.\\-\\/\\~:]*$", "pname", "match", "re", "^[\\w\\.\\-\\/\\~:]*$", "pvalue", "msg", "log", "bad property name='%s', value='%s'", "pname", "pvalue", "None", "setProperty", "properties", "pname", "pvalue", "Force Build Form", "properties", "td", "props", "text", "parms", "", "data", "", "data", "  ", "update", "props", "parms", "comment", "get", "props", "comment", "None", "comment", "data", "<!-- %s -->", "comment", "data", "<td", "class_", "get", "props", "class_", "None", "class_", "props", "class", "class_", "prop", "align", "colspan", "rowspan", "border", "valign", "halign", "class", "p", "get", "props", "prop", "None", "p", "None", "data", " %s=\"%s\"", "prop", "p", "data", ">", "text", "text", "&nbsp;", "isinstance", "text", "list", "data", "join", "<br />", "text", "data", "text", "data", "</td>\n", "data", "build_get_class", "b", "\n    Return the class to use for a finished build or buildstep,\n    based on the result.\n    ", "result", "getResults", "b", "isinstance", "b", "BuildStatus", "builder", "result", "getResults", "b", "isinstance", "b", "BuildStepStatus", "builder", "result", "getResults", "b", "isinstance", "result", "tuple", "result", "result", "TypeError", "%r is not a BuildStatus or BuildStepStatus", "b", "result", "None", "running", "Results", "builder", "result", "path_to_root", "request", "prepath", "request", "segs", "len", "prepath", "request", "segs", "root", "../", "segs", "root", "path_to_builder", "request", "builderstatus", "path_to_root", "request", "builders/", "quote", "urllib", "getName", "builderstatus", "safe", "", "path_to_build", "request", "buildstatus", "path_to_builder", "request", "getBuilder", "buildstatus", "/builds/%d", "getNumber", "buildstatus", "path_to_step", "request", "stepstatus", "path_to_build", "request", "getBuild", "stepstatus", "/steps/%s", "quote", "urllib", "getName", "stepstatus", "safe", "", "path_to_slave", "request", "slave", "path_to_root", "request", "buildslaves/", "quote", "urllib", "getName", "slave", "safe", "", "path_to_change", "request", "change", "path_to_root", "request", "changes/%s", "number", "change", "Box", "spacer", "False", "__init__", "parms", "self", "text", "class_", "urlbase", "None", "None", "text", "self", "text", "class_", "self", "class_", "urlbase", "self", "urlbase", "show_idle", "self", "has_key", "parms", "show_idle", "parms", "show_idle", "show_idle", "self", "parms", "self", "parms", "td", "props", "self", "update", "props", "parms", "self", "text", "text", "self", "text", "show_idle", "self", "text", "[idle]", "td", "text", "props", "class_", "class_", "self", "HtmlResource", "Resource", "resource", "contentType", "text/html; charset=UTF-8", "title", "Buildbot", "addSlash", "False", "getChild", "self", "path", "request", "addSlash", "self", "path", "", "len", "postpath", "request", "self", "getChild", "Resource", "resource", "self", "path", "request", "render", "self", "request", "hasattr", "request", "channel", "registerChannel", "buildbot_service", "site", "request", "channel", "request", "False", "addSlash", "self", "prepath", "request", "", "url", "prePathURL", "request", "scheme", "netloc", "path", "query", "fragment", "urlsplit", "urlparse", "url", "new_url", "prepath", "request", "/", "query", "new_url", "?", "query", "redirect", "request", "new_url", "", "data", "content", "self", "request", "isinstance", "data", "unicode", "data", "encode", "data", "utf-8", "setHeader", "request", "content-type", "contentType", "self", "method", "request", "HEAD", "setHeader", "request", "content-length", "len", "data", "", "now", "utcnow", "datetime", "datetime", "expires", "now", "timedelta", "datetime", "seconds", "setHeader", "request", "Expires", "strftime", "expires", "%a, %d %b %Y %H:%M:%S GMT", "setHeader", "request", "Pragma", "no-cache", "data", "getStatus", "self", "request", "getStatus", "buildbot_service", "site", "request", "getControl", "self", "request", "getControl", "buildbot_service", "site", "request", "isUsingUserPasswd", "self", "request", "isUsingUserPasswd", "buildbot_service", "site", "request", "authUser", "self", "request", "user", "get", "args", "request", "username", "<unknown>", "passwd", "get", "args", "request", "passwd", "<no-password>", "user", "<unknown>", "passwd", "<no-password>", "False", "authUser", "buildbot_service", "site", "request", "user", "passwd", "getChangemaster", "self", "request", "getChangeSvc", "buildbot_service", "site", "request", "path_to_root", "self", "request", "path_to_root", "request", "footer", "self", "status", "req", "projectURL", "getProjectURL", "status", "projectName", "getProjectName", "status", "data", "<hr /><div class=\"footer\">\n", "welcomeurl", "path_to_root", "self", "req", "index.html", "data", "[<a href=\"%s\">welcome</a>]\n", "welcomeurl", "data", "<br />\n", "data", "<a href=\"http://buildbot.sourceforge.net/\">Buildbot</a>", "data", "-%s ", "version", "projectName", "data", "working for the ", "projectURL", "data", "<a href=\"%s\">%s</a> project.", "projectURL", "projectName", "data", "%s project.", "projectName", "data", "<br />\n", "data", "Page built: ", "strftime", "time", "%a %d %b %Y %H:%M:%S", "localtime", "time", "now", "util", "\n", "data", "</div>\n", "data", "getTitle", "self", "request", "title", "self", "fillTemplate", "self", "template", "request", "s", "buildbot_service", "site", "request", "values", "copy", "template_values", "s", "values", "root", "path_to_root", "self", "request", "values", "title", "getTitle", "self", "request", "template", "values", "content", "self", "request", "s", "buildbot_service", "site", "request", "data", "", "data", "fillTemplate", "self", "header", "s", "request", "data", "<head>\n", "he", "head_elements", "s", "data", " ", "fillTemplate", "self", "he", "request", "\n", "data", "head", "self", "request", "data", "</head>\n\n", "data", "<body %s>\n", "join", " ", "%s=\"%s\"", "k", "v", "k", "v", "items", "body_attrs", "s", "data", "body", "self", "request", "data", "</body>\n", "data", "fillTemplate", "self", "footer", "s", "request", "data", "head", "self", "request", "", "body", "self", "request", "Dummy\n", "StaticHTML", "HtmlResource", "__init__", "self", "body", "title", "__init__", "HtmlResource", "self", "bodyHTML", "self", "body", "title", "self", "title", "body", "self", "request", "bodyHTML", "self", "MINUTE", "HOUR", "MINUTE", "DAY", "HOUR", "WEEK", "DAY", "MONTH", "DAY", "plural", "word", "words", "num", "int", "num", "%d %s", "num", "word", "%d %s", "num", "words", "abbreviate_age", "age", "age", "%s ago", "plural", "second", "seconds", "age", "age", "MINUTE", "about %s ago", "plural", "minute", "minutes", "age", "MINUTE", "age", "DAY", "about %s ago", "plural", "hour", "hours", "age", "HOUR", "age", "WEEK", "about %s ago", "plural", "day", "days", "age", "DAY", "age", "MONTH", "about %s ago", "plural", "week", "weeks", "age", "WEEK", "a long time ago", "OneLineMixin", "LINE_TIME_FORMAT", "%b %d %H:%M", "get_line_values", "self", "req", "build", "\n        Collect the data needed for each line display\n        ", "builder_name", "getName", "getBuilder", "build", "results", "getResults", "build", "text", "getText", "build", "rev", "getProperty", "build", "got_revision", "rev", "None", "rev", "??", "KeyError", "rev", "??", "rev", "str", "rev", "len", "rev", "rev", "version is too-long", "root", "path_to_root", "self", "req", "css_class", "get", "css_classes", "results", "", "values", "class", "builder_name", "buildnum", "results", "text", "buildurl", "builderurl", "rev", "time", "css_class", "builder_name", "getNumber", "build", "css_class", "join", " ", "getText", "build", "path_to_build", "req", "build", "path_to_builder", "req", "getBuilder", "build", "rev", "strftime", "time", "LINE_TIME_FORMAT", "self", "localtime", "time", "getTimes", "build", "values", "make_line", "self", "req", "build", "include_builder", "True", "\n        Format and render a single line into HTML\n        ", "values", "get_line_values", "self", "req", "build", "fmt_pieces", "<font size=\"-1\">(%(time)s)</font>", "rev=[%(rev)s]", "<span class=\"%(class)s\">%(results)s</span>", "include_builder", "append", "fmt_pieces", "<a href=\"%(builderurl)s\">%(builder_name)s</a>", "append", "fmt_pieces", "<a href=\"%(buildurl)s\">#%(buildnum)d</a>:", "append", "fmt_pieces", "%(text)s", "data", "join", " ", "fmt_pieces", "values", "data", "map_branches", "branches", "trunk", "branches", "branches", "None", "branches", "unittest", "random", "time", "math", "sys", "array", "urllib", "tarfile", "hashlib", "os", "getopt", "operator", "functools", "cv2.cv", "cv", "OpenCVTests", "TestCase", "unittest", "depths", "IPL_DEPTH_8U", "cv", "IPL_DEPTH_8S", "cv", "IPL_DEPTH_16U", "cv", "IPL_DEPTH_16S", "cv", "IPL_DEPTH_32S", "cv", "IPL_DEPTH_32F", "cv", "IPL_DEPTH_64F", "cv", "mat_types", "CV_8UC1", "cv", "CV_8UC2", "cv", "CV_8UC3", "cv", "CV_8UC4", "cv", "CV_8SC1", "cv", "CV_8SC2", "cv", "CV_8SC3", "cv", "CV_8SC4", "cv", "CV_16UC1", "cv", "CV_16UC2", "cv", "CV_16UC3", "cv", "CV_16UC4", "cv", "CV_16SC1", "cv", "CV_16SC2", "cv", "CV_16SC3", "cv", "CV_16SC4", "cv", "CV_32SC1", "cv", "CV_32SC2", "cv", "CV_32SC3", "cv", "CV_32SC4", "cv", "CV_32FC1", "cv", "CV_32FC2", "cv", "CV_32FC3", "cv", "CV_32FC4", "cv", "CV_64FC1", "cv", "CV_64FC2", "cv", "CV_64FC3", "cv", "CV_64FC4", "cv", "mat_types_single", "CV_8UC1", "cv", "CV_8SC1", "cv", "CV_16UC1", "cv", "CV_16SC1", "cv", "CV_32SC1", "cv", "CV_32FC1", "cv", "CV_64FC1", "cv", "depthsize", "self", "d", "IPL_DEPTH_8U", "cv", "IPL_DEPTH_8S", "cv", "IPL_DEPTH_16U", "cv", "IPL_DEPTH_16S", "cv", "IPL_DEPTH_32S", "cv", "IPL_DEPTH_32F", "cv", "IPL_DEPTH_64F", "cv", "d", "get_sample", "self", "filename", "iscolor", "CV_LOAD_IMAGE_COLOR", "cv", "filename", "image_cache", "self", "filedata", "read", "urlopen", "urllib", "http://code.opencv.org/svn/opencv/trunk/opencv/", "filename", "imagefiledata", "CreateMatHeader", "cv", "len", "filedata", "CV_8UC1", "cv", "SetData", "cv", "imagefiledata", "filedata", "len", "filedata", "image_cache", "self", "filename", "DecodeImageM", "cv", "imagefiledata", "iscolor", "image_cache", "self", "filename", "setUp", "self", "image_cache", "self", "snap", "self", "img", "snapL", "self", "img", "snapL", "self", "L", "i", "img", "enumerate", "L", "NamedWindow", "cv", "snap-%d", "i", "ShowImage", "cv", "snap-%d", "i", "img", "WaitKey", "cv", "DestroyAllWindows", "cv", "hashimg", "self", "im", " Compute a hash for an image, useful for image comparisons ", "digest", "md5", "hashlib", "tostring", "im", "PreliminaryTests", "OpenCVTests", "test_lena", "self", "im", "get_sample", "self", "samples/c/lena.jpg", "assertEqual", "self", "hexdigest", "md5", "hashlib", "tostring", "im", "9dcd9247f9811c6ce86675ba7b0297b6", "test_LoadImage", "self", "assertRaises", "self", "TypeError", "LoadImage", "cv", "assertRaises", "self", "TypeError", "LoadImage", "cv", "assertRaises", "self", "TypeError", "LoadImage", "cv", "foo.jpg", "assertRaises", "self", "TypeError", "LoadImage", "cv", "foo.jpg", "xiscolor", "CV_LOAD_IMAGE_COLOR", "cv", "test_types", "self", "assert_", "self", "type", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "iplimage", "cv", "assert_", "self", "type", "CreateMat", "cv", "CV_32FC1", "cv", "cvmat", "cv", "i", "t", "enumerate", "mat_types", "self", "basefunc", "CV_8UC", "cv", "CV_8SC", "cv", "CV_16UC", "cv", "CV_16SC", "cv", "CV_32SC", "cv", "CV_32FC", "cv", "CV_64FC", "cv", "i", "assertEqual", "self", "basefunc", "i", "t", "test_tostring", "self", "w", "h", "c", "d", "depths", "self", "a", "CreateImage", "cv", "w", "h", "d", "c", "assert_", "self", "len", "tostring", "a", "w", "h", "c", "depthsize", "self", "d", "w", "h", "depth_size", "IPL_DEPTH_8U", "cv", "IPL_DEPTH_8S", "cv", "IPL_DEPTH_16U", "cv", "IPL_DEPTH_16S", "cv", "IPL_DEPTH_32S", "cv", "IPL_DEPTH_32F", "cv", "IPL_DEPTH_64F", "cv", "f", "depths", "self", "channels", "img", "CreateImage", "cv", "w", "h", "f", "channels", "esize", "w", "h", "channels", "depth_size", "f", "assert_", "self", "len", "tostring", "img", "esize", "SetData", "cv", "img", " ", "esize", "w", "channels", "depth_size", "f", "assert_", "self", "len", "tostring", "img", "esize", "mattype_size", "CV_8UC1", "cv", "CV_8UC2", "cv", "CV_8UC3", "cv", "CV_8UC4", "cv", "CV_8SC1", "cv", "CV_8SC2", "cv", "CV_8SC3", "cv", "CV_8SC4", "cv", "CV_16UC1", "cv", "CV_16UC2", "cv", "CV_16UC3", "cv", "CV_16UC4", "cv", "CV_16SC1", "cv", "CV_16SC2", "cv", "CV_16SC3", "cv", "CV_16SC4", "cv", "CV_32SC1", "cv", "CV_32SC2", "cv", "CV_32SC3", "cv", "CV_32SC4", "cv", "CV_32FC1", "cv", "CV_32FC2", "cv", "CV_32FC3", "cv", "CV_32FC4", "cv", "CV_64FC1", "cv", "CV_64FC2", "cv", "CV_64FC3", "cv", "CV_64FC4", "cv", "t", "mat_types", "self", "im", "CreateMat", "cv", "h", "w", "t", "CreateMatND", "cv", "h", "w", "t", "elemsize", "CV_MAT_CN", "cv", "GetElemType", "cv", "im", "mattype_size", "GetElemType", "cv", "im", "SetData", "cv", "im", " ", "w", "h", "elemsize", "w", "elemsize", "esize", "w", "h", "elemsize", "assert_", "self", "len", "tostring", "im", "esize", "SetData", "cv", "im", " ", "esize", "w", "elemsize", "assert_", "self", "len", "tostring", "im", "esize", "FunctionTests", "OpenCVTests", "test_AvgSdv", "self", "m", "CreateMat", "cv", "CV_32FC1", "cv", "i", "v", "enumerate", "m", "i", "v", "assertAlmostEqual", "self", "Avg", "cv", "m", "avg", "sdv", "AvgSdv", "cv", "m", "assertAlmostEqual", "self", "avg", "assertAlmostEqual", "self", "sdv", "test_CalcEMD2", "self", "cc", "r", "scratch", "CreateImage", "cv", "SetZero", "cv", "scratch", "Circle", "cv", "scratch", "r", "storage", "CreateMemStorage", "cv", "seq", "FindContours", "cv", "scratch", "storage", "CV_RETR_TREE", "cv", "CV_CHAIN_APPROX_SIMPLE", "cv", "arr", "CreateMat", "cv", "len", "seq", "CV_32FC1", "cv", "i", "e", "enumerate", "seq", "arr", "i", "arr", "i", "e", "arr", "i", "e", "cc", "r", "arr", "myL1", "A", "B", "D", "abs", "A", "B", "abs", "A", "B", "myL2", "A", "B", "D", "sqrt", "math", "A", "B", "A", "B", "myC", "A", "B", "D", "max", "abs", "A", "B", "abs", "A", "B", "contours", "set", "values", "cc", "c0", "contours", "c1", "contours", "assert_", "self", "abs", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_L1", "cv", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_USER", "cv", "myL1", "assert_", "self", "abs", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_L2", "cv", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_USER", "cv", "myL2", "assert_", "self", "abs", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_C", "cv", "CalcEMD2", "cv", "c0", "c1", "CV_DIST_USER", "cv", "myC", "test_CalcOpticalFlowBM", "self", "a", "get_sample", "self", "samples/c/lena.jpg", "b", "get_sample", "self", "samples/c/lena.jpg", "w", "h", "GetSize", "cv", "a", "vel_size", "w", "h", "velx", "CreateImage", "cv", "vel_size", "IPL_DEPTH_32F", "cv", "vely", "CreateImage", "cv", "vel_size", "IPL_DEPTH_32F", "cv", "CalcOpticalFlowBM", "cv", "a", "b", "velx", "vely", "test_CalcOpticalFlowPyrLK", "self", "a", "get_sample", "self", "samples/c/lena.jpg", "map", "CreateMat", "cv", "CV_32FC1", "cv", "GetRotationMatrix2D", "cv", "map", "b", "CloneMat", "cv", "a", "WarpAffine", "cv", "a", "b", "map", "eig_image", "CreateMat", "cv", "rows", "a", "cols", "a", "CV_32FC1", "cv", "temp_image", "CreateMat", "cv", "rows", "a", "cols", "a", "CV_32FC1", "cv", "prevPyr", "CreateMat", "cv", "rows", "a", "cols", "a", "CV_8UC1", "cv", "currPyr", "CreateMat", "cv", "rows", "a", "cols", "a", "CV_8UC1", "cv", "prevFeatures", "GoodFeaturesToTrack", "cv", "a", "eig_image", "temp_image", "currFeatures", "status", "track_error", "CalcOpticalFlowPyrLK", "cv", "a", "b", "prevPyr", "currPyr", "prevFeatures", "CV_TERMCRIT_ITER", "cv", "CV_TERMCRIT_EPS", "cv", "sum", "status", "Points found in curr image", "prev", "this", "zip", "prevFeatures", "currFeatures", "iprev", "tuple", "int", "c", "c", "prev", "ithis", "tuple", "int", "c", "c", "this", "Circle", "cv", "a", "iprev", "Circle", "cv", "a", "ithis", "Line", "cv", "a", "iprev", "ithis", "snapL", "self", "a", "b", "test_CartToPolar", "self", "x", "CreateMat", "cv", "CV_32F", "cv", "y", "CreateMat", "cv", "CV_32F", "cv", "mag", "CreateMat", "cv", "CV_32F", "cv", "angle", "CreateMat", "cv", "CV_32F", "cv", "x2", "CreateMat", "cv", "CV_32F", "cv", "y2", "CreateMat", "cv", "CV_32F", "cv", "i", "range", "j", "range", "x", "i", "j", "i", "y", "i", "j", "j", "in_degrees", "False", "True", "CartToPolar", "cv", "x", "y", "mag", "angle", "in_degrees", "PolarToCart", "cv", "mag", "angle", "x2", "y2", "in_degrees", "i", "range", "j", "range", "assertAlmostEqual", "self", "x", "i", "j", "x2", "i", "j", "assertAlmostEqual", "self", "y", "i", "j", "y2", "i", "j", "test_Circle", "self", "w", "h", "img", "CreateImage", "cv", "w", "h", "IPL_DEPTH_8U", "cv", "SetZero", "cv", "img", "tricky", "h", "h", "h", "h", "w", "w", "w", "w", "x0", "tricky", "y0", "tricky", "r", "w", "w", "w", "w", "h", "h", "h", "h", "thick", "t", "CV_AA", "cv", "Circle", "cv", "img", "x0", "y0", "r", "thick", "t", "assert_", "self", "Sum", "cv", "img", "test_ConvertImage", "self", "i1", "GetImage", "cv", "get_sample", "self", "samples/c/lena.jpg", "i2", "CloneImage", "cv", "i1", "i3", "CloneImage", "cv", "i1", "ConvertImage", "cv", "i1", "i2", "CV_CVTIMG_FLIP", "cv", "CV_CVTIMG_SWAP_RB", "cv", "assertNotEqual", "self", "hashimg", "self", "i1", "hashimg", "self", "i2", "ConvertImage", "cv", "i2", "i3", "CV_CVTIMG_FLIP", "cv", "CV_CVTIMG_SWAP_RB", "cv", "assertEqual", "self", "hashimg", "self", "i1", "hashimg", "self", "i3", "test_ConvexHull2", "self", "polar2xy", "th", "r", "int", "r", "cos", "math", "th", "int", "r", "sin", "math", "th", "storage", "CreateMemStorage", "cv", "way", "CvSeq", "CvMat", "list", "points", "range", "scratch", "CreateImage", "cv", "SetZero", "cv", "scratch", "sides", "points", "FillPoly", "cv", "scratch", "polar2xy", "i", "pi", "math", "sides", "i", "i", "range", "sides", "seq", "FindContours", "cv", "scratch", "storage", "CV_RETR_TREE", "cv", "CV_CHAIN_APPROX_SIMPLE", "cv", "way", "CvSeq", "pts", "seq", "way", "CvMat", "arr", "CreateMat", "cv", "len", "seq", "CV_32SC2", "cv", "i", "e", "enumerate", "seq", "arr", "i", "e", "pts", "arr", "way", "list", "pts", "list", "seq", "False", "assert_", "self", "CheckContourConvexity", "cv", "pts", "hull", "ConvexHull2", "cv", "pts", "storage", "return_points", "assert_", "self", "CheckContourConvexity", "cv", "hull", "assert_", "self", "len", "hull", "points", "way", "CvSeq", "CvMat", "defects", "ConvexityDefects", "cv", "pts", "ConvexHull2", "cv", "pts", "storage", "storage", "assert_", "self", "len", "depth", "_", "_", "_", "depth", "defects", "depth", "points", "test_CreateImage", "self", "w", "h", "c", "d", "depths", "self", "a", "CreateImage", "cv", "w", "h", "d", "c", "assert_", "self", "width", "a", "w", "assert_", "self", "height", "a", "h", "assert_", "self", "nChannels", "a", "c", "assert_", "self", "depth", "a", "d", "assert_", "self", "GetSize", "cv", "a", "w", "h", "assertRaises", "self", "error", "cv", "CreateImage", "cv", "test_CreateMat", "self", "rows", "cols", "t", "mat_types", "self", "m", "CreateMat", "cv", "rows", "cols", "t", "assertEqual", "self", "GetElemType", "cv", "m", "t", "assertEqual", "self", "type", "m", "t", "assertRaises", "self", "error", "cv", "CreateMat", "cv", "CV_8SC4", "cv", "assertRaises", "self", "error", "cv", "CreateMat", "cv", "CV_8SC4", "cv", "assertRaises", "self", "error", "cv", "cvmat", "cv", "test_DrawChessboardCorners", "self", "im", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "SetZero", "cv", "im", "DrawChessboardCorners", "cv", "im", "i", "range", "assert_", "self", "Sum", "cv", "im", "assertRaises", "self", "TypeError", "DrawChessboardCorners", "cv", "im", "i", "range", "test_ExtractSURF", "self", "img", "get_sample", "self", "samples/c/lena.jpg", "w", "h", "GetSize", "cv", "img", "hessthresh", "dsize", "layers", "kp", "desc", "ExtractSURF", "cv", "img", "None", "CreateMemStorage", "cv", "dsize", "hessthresh", "layers", "assert_", "self", "len", "kp", "len", "desc", "d", "desc", "assert_", "self", "len", "d", "dsize", "pt", "laplacian", "size", "dir", "hessian", "kp", "assert_", "self", "pt", "pt", "w", "assert_", "self", "pt", "pt", "h", "assert_", "self", "laplacian", "assert_", "self", "dir", "dir", "assert_", "self", "hessian", "hessthresh", "test_FillPoly", "self", "scribble", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "seed", "random", "i", "range", "SetZero", "cv", "scribble", "assert_", "self", "CountNonZero", "cv", "scribble", "FillPoly", "cv", "scribble", "randrange", "random", "randrange", "random", "i", "range", "assert_", "self", "CountNonZero", "cv", "scribble", "test_FindChessboardCorners", "self", "im", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "Set", "cv", "im", "status", "corners", "FindChessboardCorners", "cv", "im", "xf", "i", "j", "o", "o", "i", "o", "j", "i", "range", "j", "range", "color", "i", "j", "Rectangle", "cv", "im", "xf", "i", "j", "xf", "i", "j", "color", "CV_FILLED", "cv", "status", "corners", "FindChessboardCorners", "cv", "im", "assert_", "self", "status", "assert_", "self", "len", "corners", "im3", "CreateImage", "cv", "GetSize", "cv", "im", "IPL_DEPTH_8U", "cv", "Merge", "cv", "im", "im", "im", "None", "im3", "DrawChessboardCorners", "cv", "im3", "corners", "status", "snap", "self", "im3", "Set", "cv", "im", "i", "range", "j", "range", "color", "i", "j", "x", "i", "y", "j", "Rectangle", "cv", "im", "x", "y", "x", "y", "color", "CV_FILLED", "cv", "status", "corners", "FindChessboardCorners", "cv", "im", "rng", "RNG", "cv", "RandArr", "cv", "rng", "im", "CV_RAND_UNI", "cv", "snap", "self", "im", "status", "corners", "FindChessboardCorners", "cv", "im", "test_FindContours", "self", "seed", "random", "storage", "CreateMemStorage", "cv", "mode", "CV_RETR_EXTERNAL", "cv", "CV_RETR_LIST", "cv", "CV_RETR_CCOMP", "cv", "CV_RETR_TREE", "cv", "method", "CV_CHAIN_CODE", "cv", "CV_CHAIN_APPROX_NONE", "cv", "CV_CHAIN_APPROX_SIMPLE", "cv", "CV_CHAIN_APPROX_TC89_L1", "cv", "CV_CHAIN_APPROX_TC89_KCOS", "cv", "CV_LINK_RUNS", "cv", "scratch", "CreateImage", "cv", "SetZero", "cv", "scratch", "seq", "FindContours", "cv", "scratch", "storage", "mode", "method", "x", "len", "seq", "seq", "s", "seq", "trial", "range", "scratch", "CreateImage", "cv", "SetZero", "cv", "scratch", "plot", "center", "radius", "mode", "Circle", "cv", "scratch", "center", "radius", "mode", "radius", "newmode", "mode", "subs", "choice", "random", "subs", "plot", "center", "radius", "newmode", "newradius", "int", "radius", "radius", "subs", "r", "radius", "ret", "i", "range", "subs", "th", "i", "pi", "math", "subs", "append", "ret", "plot", "int", "center", "r", "cos", "math", "th", "int", "center", "r", "sin", "math", "th", "newradius", "newmode", "sorted", "ret", "actual", "plot", "seq", "FindContours", "cv", "scratch", "storage", "CV_RETR_TREE", "cv", "CV_CHAIN_APPROX_SIMPLE", "cv", "traverse", "s", "s", "None", "assert_", "self", "abs", "ContourArea", "cv", "s", "x", "y", "w", "h", "th", "MinAreaRect2", "cv", "s", "CreateMemStorage", "cv", "assert_", "self", "w", "h", "assert_", "self", "abs", "ContourArea", "cv", "s", "r", "s", "append", "r", "traverse", "v_next", "s", "s", "h_next", "s", "sorted", "r", "assert_", "self", "traverse", "v_next", "seq", "actual", "original", "CreateImage", "cv", "SetZero", "cv", "original", "Circle", "cv", "original", "Circle", "cv", "original", "original", "get_sample", "self", "samples/c/lena.jpg", "Threshold", "cv", "original", "original", "CV_THRESH_BINARY", "cv", "contours", "FindContours", "cv", "original", "storage", "CV_RETR_CCOMP", "cv", "CV_CHAIN_APPROX_SIMPLE", "cv", "contour_iterator", "contour", "contour", "contour", "contour", "h_next", "contour", "assertEqual", "self", "len", "list", "contour_iterator", "contours", "sketch", "CreateImage", "cv", "GetSize", "cv", "original", "SetZero", "cv", "sketch", "red", "RGB", "cv", "green", "RGB", "cv", "c", "contour_iterator", "contours", "DrawContours", "cv", "sketch", "c", "red", "green", "test_GetAffineTransform", "self", "mapping", "CreateMat", "cv", "CV_32FC1", "cv", "GetAffineTransform", "cv", "mapping", "assertAlmostEqual", "self", "mapping", "assertAlmostEqual", "self", "mapping", "test_GetRotationMatrix2D", "self", "mapping", "CreateMat", "cv", "CV_32FC1", "cv", "scale", "angle", "GetRotationMatrix2D", "cv", "angle", "scale", "mapping", "r", "c", "r", "c", "e", "scale", "e", "assertAlmostEqual", "self", "mapping", "r", "c", "e", "test_GetSize", "self", "assert_", "self", "GetSize", "cv", "CreateMat", "cv", "CV_32FC1", "cv", "assert_", "self", "GetSize", "cv", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "test_GetStarKeypoints", "self", "src", "get_sample", "self", "samples/c/lena.jpg", "storage", "CreateMemStorage", "cv", "kp", "GetStarKeypoints", "cv", "src", "storage", "assert_", "self", "len", "kp", "x", "y", "scale", "r", "kp", "assert_", "self", "x", "assert_", "self", "x", "GetSize", "cv", "src", "assert_", "self", "y", "assert_", "self", "y", "GetSize", "cv", "src", "scribble", "CreateImage", "cv", "GetSize", "cv", "src", "CvtColor", "cv", "src", "scribble", "CV_GRAY2BGR", "cv", "x", "y", "scale", "r", "kp", "x", "y", "scale", "r", "Circle", "cv", "scribble", "x", "y", "scale", "RGB", "cv", "snap", "self", "scribble", "test_GetSubRect", "self", "src", "CreateImage", "cv", "data", "z", "SetData", "cv", "src", "data", "start_count", "getrefcount", "sys", "data", "iter", "subs", "i", "range", "iter", "sub", "GetSubRect", "cv", "src", "append", "subs", "sub", "assert_", "self", "getrefcount", "sys", "data", "start_count", "iter", "src", "get_sample", "self", "samples/c/lena.jpg", "made", "CreateImage", "cv", "GetSize", "cv", "src", "sub", "CreateMat", "cv", "CV_8UC1", "cv", "x", "range", "y", "range", "sub", "GetSubRect", "cv", "src", "x", "y", "SetImageROI", "cv", "made", "x", "y", "Copy", "cv", "sub", "made", "ResetImageROI", "cv", "made", "AbsDiff", "cv", "made", "src", "made", "assert_", "self", "CountNonZero", "cv", "made", "m1", "CreateMat", "cv", "CV_8UC1", "cv", "CreateImage", "cv", "i", "range", "m1", "i", "i", "aslist", "cvmat", "list", "array", "array", "B", "tostring", "cvmat", "m2", "GetSubRect", "cv", "m1", "m3", "GetSubRect", "cv", "m2", "assertEqual", "self", "aslist", "m1", "range", "assertEqual", "self", "aslist", "m2", "range", "assertEqual", "self", "aslist", "m3", "range", "xtest_grabCut", "self", "image", "get_sample", "self", "samples/c/lena.jpg", "CV_LOAD_IMAGE_COLOR", "cv", "tmp1", "CreateMat", "cv", "CV_32FC1", "cv", "tmp2", "CreateMat", "cv", "CV_32FC1", "cv", "mask", "CreateMat", "cv", "rows", "image", "cols", "image", "CV_8UC1", "cv", "GrabCut", "cv", "image", "mask", "tmp1", "tmp2", "GC_INIT_WITH_RECT", "cv", "test_HoughLines2_PROBABILISTIC", "self", "li", "HoughLines2", "cv", "yield_line_image", "self", "CreateMemStorage", "cv", "CV_HOUGH_PROBABILISTIC", "cv", "pi", "math", "assert_", "self", "len", "li", "assert_", "self", "li", "None", "test_HoughLines2_STANDARD", "self", "li", "HoughLines2", "cv", "yield_line_image", "self", "CreateMemStorage", "cv", "CV_HOUGH_STANDARD", "cv", "pi", "math", "assert_", "self", "len", "li", "assert_", "self", "li", "None", "test_InPaint", "self", "src", "get_sample", "self", "samples/cpp/building.jpg", "msk", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_8U", "cv", "damaged", "CloneMat", "cv", "src", "repaired", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_8U", "cv", "difference", "CloneImage", "cv", "repaired", "SetZero", "cv", "msk", "method", "CV_INPAINT_NS", "cv", "CV_INPAINT_TELEA", "cv", "p0", "p1", "Line", "cv", "damaged", "p0", "p1", "RGB", "cv", "Line", "cv", "msk", "p0", "p1", "Inpaint", "cv", "damaged", "msk", "repaired", "CV_INPAINT_NS", "cv", "AbsDiff", "cv", "src", "repaired", "difference", "test_InitLineIterator", "self", "scribble", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "assert_", "self", "len", "list", "InitLineIterator", "cv", "scribble", "test_InRange", "self", "sz", "Igray1", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Ilow1", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Ihi1", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Igray2", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Ilow2", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Ihi2", "CreateImage", "cv", "sz", "IPL_DEPTH_32F", "cv", "Imask", "CreateImage", "cv", "sz", "IPL_DEPTH_8U", "cv", "Imaskt", "CreateImage", "cv", "sz", "IPL_DEPTH_8U", "cv", "InRange", "cv", "Igray1", "Ilow1", "Ihi1", "Imask", "InRange", "cv", "Igray2", "Ilow2", "Ihi2", "Imaskt", "Or", "cv", "Imask", "Imaskt", "Imask", "test_Line", "self", "w", "h", "img", "CreateImage", "cv", "w", "h", "IPL_DEPTH_8U", "cv", "SetZero", "cv", "img", "tricky", "h", "h", "h", "h", "w", "w", "w", "w", "x0", "tricky", "y0", "tricky", "x1", "tricky", "y1", "tricky", "thickness", "line_type", "CV_AA", "cv", "Line", "cv", "img", "x0", "y0", "x1", "y1", "thickness", "line_type", "assert_", "self", "Sum", "cv", "img", "test_MinMaxLoc", "self", "scribble", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "los", "randrange", "random", "randrange", "random", "i", "range", "his", "randrange", "random", "randrange", "random", "i", "range", "lo", "hi", "zip", "los", "his", "Set", "cv", "scribble", "scribble", "lo", "scribble", "hi", "r", "MinMaxLoc", "cv", "scribble", "assert_", "self", "r", "tuple", "reversed", "lo", "tuple", "reversed", "hi", "xxx_test_PyrMeanShiftFiltering", "self", "src", "get_sample", "self", "samples/c/lena.jpg", "CV_LOAD_IMAGE_COLOR", "cv", "dst", "CloneMat", "cv", "src", "PyrMeanShiftFiltering", "cv", "src", "dst", "src", "dst", "snap", "self", "src", "r", "temp_test", "cv", "r", "len", "tostring", "r", "snap", "self", "r", "test_Reshape", "self", "rows", "cols", "im", "CreateMat", "cv", "rows", "cols", "CV_32FC1", "cv", "elems", "rows", "cols", "crd", "im", "GetSize", "cv", "im", "CV_MAT_CN", "cv", "GetElemType", "cv", "im", "c", "nc", "nr", "nd", "crd", "Reshape", "cv", "im", "c", "assert_", "self", "nd", "c", "assert_", "self", "nc", "nr", "nd", "elems", "nc", "nr", "nd", "crd", "Reshape", "cv", "im", "assert_", "self", "nr", "assert_", "self", "nc", "nr", "nd", "elems", "nc", "nr", "nd", "crd", "Reshape", "cv", "im", "assert_", "self", "nr", "assert_", "self", "nd", "assert_", "self", "nc", "nr", "nd", "elems", "mat", "CreateMatND", "cv", "CV_32FC1", "cv", "Set", "cv", "mat", "assertEqual", "self", "GetDims", "cv", "ReshapeMatND", "cv", "mat", "assertEqual", "self", "GetDims", "cv", "ReshapeMatND", "cv", "mat", "assertEqual", "self", "GetDims", "cv", "ReshapeMatND", "cv", "mat", "assertRaises", "self", "TypeError", "ReshapeMatND", "cv", "mat", "test_Save", "self", "o", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "CreateMat", "cv", "CV_32FC1", "cv", "CreateMatND", "cv", "CV_32FC1", "cv", "Save", "cv", "test.save", "o", "loaded", "Load", "cv", "test.save", "CreateMemStorage", "cv", "assert_", "self", "type", "o", "type", "loaded", "test_SetIdentity", "self", "r", "range", "c", "range", "t", "mat_types_single", "self", "M", "CreateMat", "cv", "r", "c", "t", "SetIdentity", "cv", "M", "rj", "range", "r", "cj", "range", "c", "rj", "cj", "expected", "expected", "assertEqual", "self", "M", "rj", "cj", "expected", "test_SnakeImage", "self", "src", "get_sample", "self", "samples/c/lena.jpg", "pts", "i", "i", "i", "range", "assertRaises", "self", "TypeError", "SnakeImage", "cv", "GetImage", "cv", "src", "pts", "CV_TERMCRIT_ITER", "cv", "r", "SnakeImage", "cv", "GetImage", "cv", "src", "pts", "CV_TERMCRIT_ITER", "cv", "PolyLine", "cv", "src", "r", "snap", "self", "src", "assertEqual", "self", "len", "r", "len", "pts", "assertNotEqual", "self", "r", "pts", "w", "len", "pts", "r2", "SnakeImage", "cv", "GetImage", "cv", "src", "pts", "w", "w", "w", "CV_TERMCRIT_ITER", "cv", "assertEqual", "self", "r", "r2", "test_KMeans2", "self", "size", "samples", "CreateMat", "cv", "size", "CV_32FC3", "cv", "labels", "CreateMat", "cv", "size", "CV_32SC1", "cv", "centers", "CreateMat", "cv", "CV_32FC1", "cv", "Zero", "cv", "samples", "Zero", "cv", "labels", "Zero", "cv", "centers", "Set", "cv", "GetSubRect", "cv", "samples", "size", "compact", "KMeans2", "cv", "samples", "labels", "CV_TERMCRIT_ITER", "cv", "centers", "assertEqual", "self", "int", "compact", "seed", "random", "i", "range", "index", "randrange", "random", "size", "index", "size", "assertEqual", "self", "samples", "index", "assertEqual", "self", "labels", "index", "assertEqual", "self", "samples", "index", "assertEqual", "self", "labels", "index", "cluster", "channel", "assertEqual", "self", "int", "centers", "cluster", "channel", "cluster", "test_Sum", "self", "r", "range", "c", "range", "t", "mat_types_single", "self", "M", "CreateMat", "cv", "r", "c", "t", "Set", "cv", "M", "assertEqual", "self", "Sum", "cv", "M", "r", "c", "test_Threshold", "self", "src", "get_sample", "self", "samples/c/lena.jpg", "results", "set", "i", "range", "dst", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_8U", "cv", "Threshold", "cv", "src", "dst", "CV_THRESH_BINARY", "cv", "add", "results", "tostring", "dst", "assert_", "self", "len", "results", "image", "get_sample", "self", "samples/c/lena.jpg", "red", "CreateImage", "cv", "GetSize", "cv", "image", "binary", "CreateImage", "cv", "GetSize", "cv", "image", "Split", "cv", "image", "red", "None", "None", "None", "Threshold", "cv", "red", "binary", "CV_THRESH_BINARY", "cv", "yield_line_image", "self", " Needed by HoughLines tests ", "src", "get_sample", "self", "samples/cpp/building.jpg", "dst", "CreateImage", "cv", "GetSize", "cv", "src", "Canny", "cv", "src", "dst", "dst", "AreaTests", "OpenCVTests", "test_numpy", "self", "fromarray", "dir", "cv", "numpy", "convert", "numpydims", " Create a numpy array with specified dims, return the OpenCV CvMat ", "a1", "astype", "reshape", "array", "numpy", "reduce", "__mul__", "operator", "numpydims", "numpydims", "float32", "numpy", "fromarray", "cv", "a1", "row_col_chan", "m", "col", "cols", "m", "row", "rows", "m", "chan", "CV_MAT_CN", "cv", "GetElemType", "cv", "m", "row", "col", "chan", "assertEqual", "self", "row_col_chan", "convert", "assertEqual", "self", "row_col_chan", "convert", "assertEqual", "self", "row_col_chan", "convert", "CV_CN_MAX", "cv", "CV_CN_MAX", "cv", "assertRaises", "self", "TypeError", "convert", "assertRaises", "self", "TypeError", "convert", "CV_CN_MAX", "cv", "t", "CV_16UC1", "cv", "CV_32SC1", "cv", "CV_32FC1", "cv", "d", "total", "reduce", "__mul__", "operator", "d", "m", "CreateMatND", "cv", "d", "t", "i", "range", "total", "Set1D", "cv", "m", "i", "i", "na", "reshape", "asarray", "numpy", "m", "total", "assertEqual", "self", "list", "na", "range", "total", "m2", "fromarray", "cv", "na", "True", "i", "range", "total", "assertEqual", "self", "Get1D", "cv", "m", "i", "i", "rows", "cols", "allowND", "False", "True", "im", "CreateMatND", "cv", "rows", "cols", "CV_16UC1", "cv", "SetZero", "cv", "im", "a", "asarray", "numpy", "im", "assertEqual", "self", "shape", "a", "rows", "cols", "cvmatnd", "fromarray", "cv", "a", "allowND", "assertEqual", "self", "GetDims", "cv", "cvmatnd", "rows", "cols", "i", "coord", "enumerate", "v", "i", "a", "coord", "v", "assertEqual", "self", "im", "coord", "v", "assertEqual", "self", "cvmatnd", "coord", "v", "im", "CreateMatND", "cv", "CV_16UC3", "cv", "assertEqual", "self", "shape", "asarray", "numpy", "im", "na", "ones", "numpy", "cm", "fromarray", "cv", "na", "True", "assertEqual", "self", "GetDims", "cv", "cm", "ones", "ones", "numpy", "r", "fromarray", "cv", "ones", "numpy", "AddS", "cv", "fromarray", "cv", "ones", "r", "assert_", "self", "alltrue", "numpy", "r", "ones", "randdim", "randrange", "random", "i", "range", "randrange", "random", "arrays", "astype", "ones", "numpy", "randdim", "uint8", "numpy", "i", "range", "cs", "fromarray", "cv", "a", "True", "a", "arrays", "i", "range", "arrays", "randrange", "random", "astype", "ones", "numpy", "randdim", "uint8", "numpy", "cs", "randrange", "random", "fromarray", "cv", "arrays", "randrange", "random", "True", "j", "range", "assert_", "self", "all", "c", "chr", "c", "tostring", "cs", "j", "m", "identity", "numpy", "dtype", "float32", "numpy", "m", "fromarray", "cv", "m", "rvec", "CreateMat", "cv", "CV_32FC1", "cv", "rvec", "rvec", "rvec", "Rodrigues2", "cv", "rvec", "m", "SKIPPING test_numpy - numpy support not built", "test_boundscatch", "self", "l2", "CreateMat", "cv", "CV_8U", "cv", "l2", "assertRaises", "self", "error", "cv", "l2", "l2", "assertRaises", "self", "error", "cv", "l2", "n", "range", "l", "CreateMatND", "cv", "n", "CV_8U", "cv", "l", "assertRaises", "self", "error", "cv", "l", "tup0", "n", "l", "tup0", "tup2", "n", "assertRaises", "self", "error", "cv", "l", "tup2", "test_stereo", "self", "bm", "CreateStereoBMState", "cv", "illegal_delete", "bm", "CreateStereoBMState", "cv", "preFilterType", "bm", "illegal_assign", "bm", "CreateStereoBMState", "cv", "preFilterType", "bm", "foo", "assertRaises", "self", "TypeError", "illegal_delete", "assertRaises", "self", "TypeError", "illegal_assign", "left", "get_sample", "self", "samples/c/lena.jpg", "right", "get_sample", "self", "samples/c/lena.jpg", "disparity", "CreateMat", "cv", "CV_16SC1", "cv", "FindStereoCorrespondenceBM", "cv", "left", "right", "disparity", "bm", "gc", "CreateStereoGCState", "cv", "left_disparity", "CreateMat", "cv", "CV_16SC1", "cv", "right_disparity", "CreateMat", "cv", "CV_16SC1", "cv", "test_stereo", "self", "bm", "CreateStereoBMState", "cv", "illegal_delete", "bm", "CreateStereoBMState", "cv", "preFilterType", "bm", "illegal_assign", "bm", "CreateStereoBMState", "cv", "preFilterType", "bm", "foo", "assertRaises", "self", "TypeError", "illegal_delete", "assertRaises", "self", "TypeError", "illegal_assign", "left", "get_sample", "self", "samples/c/lena.jpg", "right", "get_sample", "self", "samples/c/lena.jpg", "disparity", "CreateMat", "cv", "CV_16SC1", "cv", "FindStereoCorrespondenceBM", "cv", "left", "right", "disparity", "bm", "gc", "CreateStereoGCState", "cv", "left_disparity", "CreateMat", "cv", "CV_16SC1", "cv", "right_disparity", "CreateMat", "cv", "CV_16SC1", "cv", "FindStereoCorrespondenceGC", "cv", "left", "right", "left_disparity", "right_disparity", "gc", "test_kalman", "self", "k", "CreateKalman", "cv", "failing_test_exception", "self", "a", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "b", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "assertRaises", "self", "error", "cv", "Laplace", "cv", "a", "b", "test_cvmat_accessors", "self", "cvm", "CreateMat", "cv", "CV_32FC1", "cv", "test_depths", "self", "assert_", "self", "len", "depths", "self", "len", "set", "depths", "self", "test_leak", "self", "i", "range", "a", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "i", "range", "a", "CreateMat", "cv", "CV_8UC1", "cv", "test_histograms", "self", "split", "im", "nchans", "CV_MAT_CN", "cv", "GetElemType", "cv", "im", "c", "CreateImage", "cv", "GetSize", "cv", "im", "IPL_DEPTH_8U", "cv", "i", "range", "nchans", "None", "nchans", "Split", "cv", "im", "c", "c", "c", "c", "c", "nchans", "imh", "im", "s", "split", "im", "hist", "CreateHist", "cv", "len", "s", "CV_HIST_ARRAY", "cv", "len", "s", "CalcHist", "cv", "s", "hist", "hist", "dims", "ranges", "a", "CreateHist", "cv", "dims", "CV_HIST_ARRAY", "cv", "ranges", "src", "get_sample", "self", "samples/c/lena.jpg", "h", "imh", "src", "minv", "maxv", "minl", "maxl", "GetMinMaxHistValue", "cv", "h", "assert_", "self", "QueryHistValue_nD", "cv", "h", "minl", "minv", "assert_", "self", "QueryHistValue_nD", "cv", "h", "maxl", "maxv", "bp", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_8U", "cv", "CalcBackProject", "cv", "split", "src", "bp", "h", "bp", "CreateImage", "cv", "GetSize", "cv", "src", "GetSize", "cv", "src", "IPL_DEPTH_32F", "cv", "CalcBackProjectPatch", "cv", "split", "src", "bp", "h", "CV_COMP_INTERSECT", "cv", "meth", "expected", "CV_COMP_CORREL", "cv", "CV_COMP_CHISQR", "cv", "CV_COMP_INTERSECT", "cv", "CV_COMP_BHATTACHARYYA", "cv", "assertEqual", "self", "CompareHist", "cv", "h", "h", "meth", "expected", "test_remap", "self", "rng", "RNG", "cv", "maxError", "raw", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "x", "range", "Line", "cv", "raw", "x", "x", "y", "range", "Line", "cv", "raw", "y", "y", "intrinsic_mat", "CreateMat", "cv", "CV_32FC1", "cv", "distortion_coeffs", "CreateMat", "cv", "CV_32FC1", "cv", "SetZero", "cv", "intrinsic_mat", "intrinsic_mat", "intrinsic_mat", "intrinsic_mat", "intrinsic_mat", "intrinsic_mat", "SetZero", "cv", "distortion_coeffs", "distortion_coeffs", "mapx", "CreateImage", "cv", "IPL_DEPTH_32F", "cv", "mapy", "CreateImage", "cv", "IPL_DEPTH_32F", "cv", "SetZero", "cv", "mapx", "SetZero", "cv", "mapy", "InitUndistortMap", "cv", "intrinsic_mat", "distortion_coeffs", "mapx", "mapy", "rect", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "w", "h", "rMapxy", "CreateMat", "cv", "h", "w", "CV_16SC2", "cv", "rMapa", "CreateMat", "cv", "h", "w", "CV_16UC1", "cv", "ConvertMaps", "cv", "mapx", "mapy", "rMapxy", "rMapa", "Remap", "cv", "raw", "rect", "mapx", "mapy", "Remap", "cv", "raw", "rect", "rMapxy", "rMapa", "Undistort2", "cv", "raw", "rect", "intrinsic_mat", "distortion_coeffs", "w", "p", "CreateImage", "cv", "w", "up", "CreateImage", "cv", "w", "Undistort2", "cv", "p", "up", "intrinsic_mat", "distortion_coeffs", "fptypes", "CV_32FC1", "cv", "CV_64FC1", "cv", "pointsCount", "t0", "fptypes", "t1", "fptypes", "t2", "fptypes", "t3", "fptypes", "rotation_vector", "CreateMat", "cv", "t0", "translation_vector", "CreateMat", "cv", "t1", "RandArr", "cv", "rng", "rotation_vector", "CV_RAND_UNI", "cv", "RandArr", "cv", "rng", "translation_vector", "CV_RAND_UNI", "cv", "object_points", "CreateMat", "cv", "pointsCount", "t2", "image_points", "CreateMat", "cv", "pointsCount", "t3", "RandArr", "cv", "rng", "object_points", "CV_RAND_UNI", "cv", "ProjectPoints2", "cv", "object_points", "rotation_vector", "translation_vector", "intrinsic_mat", "distortion_coeffs", "image_points", "reshaped_object_points", "Reshape", "cv", "object_points", "reshaped_image_points", "CreateMat", "cv", "pointsCount", "t3", "ProjectPoints2", "cv", "object_points", "rotation_vector", "translation_vector", "intrinsic_mat", "distortion_coeffs", "reshaped_image_points", "error", "Norm", "cv", "reshaped_image_points", "Reshape", "cv", "image_points", "assert_", "self", "error", "maxError", "test_arithmetic", "self", "a", "CreateMat", "cv", "CV_8UC1", "cv", "a", "b", "CreateMat", "cv", "CV_8UC1", "cv", "b", "d", "CreateMat", "cv", "CV_8UC1", "cv", "Add", "cv", "a", "b", "d", "assertEqual", "self", "d", "Mul", "cv", "a", "b", "d", "assertEqual", "self", "d", "failing_test_cvtcolor", "self", "src3", "get_sample", "self", "samples/c/lena.jpg", "src1", "get_sample", "self", "samples/c/lena.jpg", "dst8u", "dict", "c", "CreateImage", "cv", "GetSize", "cv", "src1", "IPL_DEPTH_8U", "cv", "c", "c", "dst16u", "dict", "c", "CreateImage", "cv", "GetSize", "cv", "src1", "IPL_DEPTH_16U", "cv", "c", "c", "dst32f", "dict", "c", "CreateImage", "cv", "GetSize", "cv", "src1", "IPL_DEPTH_32F", "cv", "c", "c", "srcf", "BGR", "RGB", "dstf", "Luv", "CvtColor", "cv", "src3", "dst8u", "eval", "cv.CV_%s2%s", "srcf", "dstf", "CvtColor", "cv", "src3", "dst32f", "eval", "cv.CV_%s2%s", "srcf", "dstf", "CvtColor", "cv", "src3", "dst8u", "eval", "cv.CV_%s2%s", "dstf", "srcf", "srcf", "BayerBG", "BayerGB", "BayerGR", "dstf", "RGB", "BGR", "CvtColor", "cv", "src1", "dst8u", "eval", "cv.CV_%s2%s", "srcf", "dstf", "test_voronoi", "self", "w", "h", "storage", "CreateMemStorage", "cv", "facet_edges", "e0", "e", "e0", "True", "e", "Subdiv2DGetEdge", "cv", "e", "CV_NEXT_AROUND_LEFT", "cv", "e", "e", "e0", "areas", "edges", "seen", "seensorted", "edge", "edges", "pts", "Subdiv2DEdgeOrg", "cv", "e", "e", "facet_edges", "edge", "None", "pts", "l", "pt", "p", "p", "pts", "ls", "sorted", "l", "ls", "seensorted", "append", "seen", "l", "append", "seensorted", "ls", "seen", "npoints", "range", "points", "randrange", "random", "w", "randrange", "random", "h", "i", "range", "npoints", "subdiv", "CreateSubdivDelaunay2D", "cv", "w", "h", "storage", "p", "points", "SubdivDelaunay2DInsert", "cv", "subdiv", "p", "CalcSubdivVoronoi2D", "cv", "subdiv", "ars", "areas", "Subdiv2DRotateEdge", "cv", "e", "e", "edges", "subdiv", "Subdiv2DRotateEdge", "cv", "e", "e", "edges", "subdiv", "assert_", "self", "len", "ars", "len", "set", "points", "False", "img", "CreateImage", "cv", "w", "h", "IPL_DEPTH_8U", "cv", "SetZero", "cv", "img", "T", "x", "int", "x", "pts", "ars", "FillConvexPoly", "cv", "img", "T", "x", "T", "y", "x", "y", "pts", "RGB", "cv", "randrange", "random", "randrange", "random", "randrange", "random", "CV_AA", "cv", "x", "y", "points", "Circle", "cv", "img", "T", "x", "T", "y", "RGB", "cv", "ShowImage", "cv", "snap", "img", "WaitKey", "cv", "perf_test_pow", "self", "mt", "CreateMat", "cv", "CV_32FC1", "cv", "dst", "CreateMat", "cv", "CV_32FC1", "cv", "rng", "RNG", "cv", "RandArr", "cv", "rng", "mt", "CV_RAND_UNI", "cv", "mt", "a", "started", "time", "time", "i", "range", "Pow", "cv", "mt", "dst", "a", "took", "time", "time", "started", "%4.1f took %f ns", "a", "took", "dst", "test_access_row_col", "self", "src", "CreateImage", "cv", "r", "w", "enumerate", "Achilles", "Benedict", "Congreve", "c", "v", "enumerate", "w", "src", "r", "c", "ord", "v", "assertEqual", "self", "tostring", "src", "AchillesBenedictCongreve", "assertEqual", "self", "tostring", "src", "AchillesBenedictCongreve", "assertEqual", "self", "tostring", "src", "AchiBeneCong", "assertEqual", "self", "tostring", "src", "ABC", "assertEqual", "self", "tostring", "src", "llesdictreve", "assertEqual", "self", "tostring", "src", "AchillesCongreve", "assertEqual", "self", "tostring", "src", "BenedictCongreve", "assertEqual", "self", "tostring", "src", "Benedict", "assertEqual", "self", "tostring", "src", "AchiCong", "lastword", "src", "assertEqual", "self", "tostring", "lastword", "Congreve", "src", "ord", "K", "assertEqual", "self", "tostring", "lastword", "Kongreve", "src", "ord", "C", "mt", "CreateMatND", "cv", "CV_8UC1", "cv", "i", "range", "j", "range", "k", "range", "mt", "i", "j", "k", "ord", "A", "k", "j", "i", "assertEqual", "self", "tostring", "mt", "AEIMQU", "assertEqual", "self", "tostring", "mt", "ABCDMNOP", "assertEqual", "self", "tostring", "mt", "ABCDEFGHIJKL", "assertEqual", "self", "tostring", "mt", "QRST", "assertEqual", "self", "tostring", "mt", "ABCDIJKLMNOPUVWX", "assertEqual", "self", "tostring", "GetRows", "cv", "src", "AchillesBenedictCongreve", "assertEqual", "self", "tostring", "GetRows", "cv", "src", "AchillesBenedictCongreve", "assertEqual", "self", "tostring", "GetRows", "cv", "src", "AchillesCongreve", "assertEqual", "self", "tostring", "GetRow", "cv", "src", "Achilles", "assertEqual", "self", "tostring", "GetCols", "cv", "src", "AchiBeneCong", "assertEqual", "self", "tostring", "GetCol", "cv", "src", "ABC", "assertEqual", "self", "tostring", "GetCol", "cv", "src", "ceo", "assertEqual", "self", "tostring", "GetDiag", "cv", "src", "Aen", "mt", "mat_types", "self", "m", "CreateMat", "cv", "mt", "assertEqual", "self", "mt", "GetElemType", "cv", "GetRows", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "GetRow", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "GetCols", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "GetCol", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "GetDiag", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "m", "assertEqual", "self", "mt", "GetElemType", "cv", "m", "test_addS_3D", "self", "dim", "ty", "ac", "CV_32FC1", "cv", "f", "CV_64FC1", "cv", "d", "mat", "CreateMatND", "cv", "dim", "ty", "mat2", "CreateMatND", "cv", "dim", "ty", "increment", "SetData", "cv", "mat", "array", "array", "ac", "range", "dim", "dim", "dim", "AddS", "cv", "mat", "increment", "mat2", "i", "range", "dim", "j", "range", "dim", "k", "range", "dim", "assert_", "self", "mat2", "i", "j", "k", "mat", "i", "j", "k", "increment", "test_buffers", "self", "ar", "array", "array", "f", "m", "CreateMat", "cv", "CV_32FC1", "cv", "SetData", "cv", "m", "ar", "assert_", "self", "m", "m", "CreateMatND", "cv", "CV_32FC1", "cv", "SetData", "cv", "m", "ar", "assert_", "self", "m", "m", "CreateImage", "cv", "IPL_DEPTH_32F", "cv", "SetData", "cv", "m", "ar", "assert_", "self", "m", "xxtest_Filters", "self", "m", "CreateMat", "cv", "CV_32FC1", "cv", "d", "CreateMat", "cv", "CV_32FC1", "cv", "k", "range", "started", "time", "time", "i", "range", "Smooth", "cv", "m", "m", "param1", "k", "k", "took", "time", "time", "started", "assertSame", "self", "a", "b", "w", "h", "GetSize", "cv", "a", "d", "CreateMat", "cv", "h", "w", "CV_8UC1", "cv", "AbsDiff", "cv", "a", "b", "d", "assert_", "self", "CountNonZero", "cv", "d", "test_text", "self", "img", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "SetZero", "cv", "img", "font", "InitFont", "cv", "CV_FONT_HERSHEY_SIMPLEX", "cv", "message", "XgfooX", "PutText", "cv", "img", "message", "font", "w", "h", "bl", "GetTextSize", "cv", "message", "font", "Xs", "x", "range", "SetImageROI", "cv", "img", "x", "append", "Xs", "Sum", "cv", "img", "firstlast", "l", "index", "l", "True", "len", "l", "index", "list", "reversed", "l", "True", "Ys", "y", "range", "SetImageROI", "cv", "img", "y", "append", "Ys", "Sum", "cv", "img", "x0", "x1", "firstlast", "Xs", "y0", "y1", "firstlast", "Ys", "actual_width", "x1", "x0", "actual_height", "y1", "y0", "assert_", "self", "actual_width", "w", "assert_", "self", "w", "actual_width", "assert_", "self", "actual_height", "h", "bl", "assert_", "self", "h", "bl", "actual_height", "ResetImageROI", "cv", "img", "assert_", "self", "w", "assert_", "self", "h", "test_sizes", "self", "sizes", "w", "sizes", "h", "sizes", "im", "CreateImage", "cv", "w", "h", "IPL_DEPTH_8U", "cv", "Set", "cv", "im", "assert_", "self", "Sum", "cv", "im", "w", "h", "im", "mt", "CreateMat", "cv", "h", "w", "CV_8UC1", "cv", "Set", "cv", "mt", "assert_", "self", "Sum", "cv", "mt", "w", "h", "seed", "random", "dim", "range", "CV_MAX_DIM", "cv", "attempt", "range", "dims", "choice", "random", "i", "range", "dim", "mt", "CreateMatND", "cv", "dims", "CV_8UC1", "cv", "SetZero", "cv", "mt", "assert_", "self", "Sum", "cv", "mt", "Set", "cv", "mt", "expected", "d", "dims", "expected", "d", "assert_", "self", "Sum", "cv", "mt", "expected", "test_random", "self", "seeds", "sequences", "set", "s", "seeds", "rng", "RNG", "cv", "s", "add", "sequences", "str", "RandInt", "cv", "rng", "i", "range", "assert_", "self", "len", "seeds", "len", "sequences", "rng", "RNG", "cv", "im", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "RandArr", "cv", "rng", "im", "CV_RAND_UNI", "cv", "RandArr", "cv", "rng", "im", "CV_RAND_NORMAL", "cv", "hist", "CreateHist", "cv", "CV_HIST_ARRAY", "cv", "CalcHist", "cv", "im", "hist", "rng", "RNG", "cv", "i", "range", "v", "RandReal", "cv", "rng", "assert_", "self", "v", "assert_", "self", "v", "mode", "CV_RAND_UNI", "cv", "CV_RAND_NORMAL", "cv", "fmt", "mat_types", "self", "mat", "CreateMat", "cv", "fmt", "RandArr", "cv", "RNG", "cv", "mat", "mode", "test_MixChannels", "self", "rgba", "CreateMat", "cv", "CV_8UC4", "cv", "bgr", "CreateMat", "cv", "CV_8UC3", "cv", "alpha", "CreateMat", "cv", "CV_8UC1", "cv", "Set", "cv", "rgba", "MixChannels", "cv", "rgba", "bgr", "alpha", "assert_", "self", "bgr", "assert_", "self", "alpha", "seed", "random", "rows", "cols", "loop", "range", "sources", "choice", "random", "i", "range", "dests", "choice", "random", "i", "range", "fromTo", "randrange", "random", "sum", "sources", "randrange", "random", "sum", "dests", "i", "range", "randrange", "random", "dests_set", "list", "set", "j", "i", "j", "fromTo", "len", "dests_set", "len", "dests", "CV_8UC", "n", "CV_8UC1", "cv", "CV_8UC2", "cv", "CV_8UC3", "cv", "CV_8UC4", "cv", "n", "source_m", "CreateMat", "cv", "rows", "cols", "CV_8UC", "c", "c", "sources", "dest_m", "CreateMat", "cv", "rows", "cols", "CV_8UC", "c", "c", "dests", "m00", "m", "chans", "CV_MAT_CN", "cv", "GetElemType", "cv", "m", "chans", "m", "list", "m", "chans", "i", "range", "len", "sources", "s", "sum", "sources", "i", "Set", "cv", "source_m", "i", "s", "s", "s", "s", "assertEqual", "self", "m00", "source_m", "i", "s", "s", "s", "s", "sources", "i", "i", "range", "len", "dests", "s", "sum", "dests", "i", "Set", "cv", "dest_m", "i", "s", "s", "s", "s", "assertEqual", "self", "m00", "dest_m", "i", "s", "s", "s", "s", "dests", "i", "i", "range", "len", "sources", "s", "sum", "sources", "i", "assertEqual", "self", "m00", "source_m", "i", "s", "s", "s", "s", "sources", "i", "i", "range", "len", "dests", "s", "sum", "dests", "i", "assertEqual", "self", "m00", "dest_m", "i", "s", "s", "s", "s", "dests", "i", "MixChannels", "cv", "source_m", "dest_m", "fromTo", "expected", "range", "sum", "dests", "i", "j", "fromTo", "i", "expected", "j", "expected", "j", "i", "actual", "sum", "m00", "m", "m", "dest_m", "assertEqual", "self", "sum", "m00", "m", "m", "dest_m", "expected", "test_allocs", "self", "mats", "i", "range", "i", "range", "m", "CreateMat", "cv", "randrange", "random", "randrange", "random", "CV_8UC1", "cv", "j", "randrange", "random", "len", "mats", "mats", "j", "m", "SetZero", "cv", "m", "test_access", "self", "cnames", "CV_32FC1", "cv", "CV_32FC2", "cv", "CV_32FC3", "cv", "CV_32FC4", "cv", "w", "range", "h", "range", "c", "o", "CreateMat", "cv", "h", "w", "cnames", "c", "CreateImage", "cv", "w", "h", "IPL_DEPTH_32F", "cv", "c", "pattern", "i", "j", "i", "range", "w", "j", "range", "h", "shuffle", "random", "pattern", "k", "i", "j", "enumerate", "pattern", "c", "o", "j", "i", "k", "o", "j", "i", "k", "c", "k", "i", "j", "enumerate", "pattern", "c", "assert_", "self", "o", "j", "i", "k", "assert_", "self", "o", "j", "i", "k", "c", "test_mat", "CreateMat", "cv", "CV_32FC1", "cv", "SetData", "cv", "test_mat", "array", "array", "f", "range", "assertEqual", "self", "GetDims", "cv", "test_mat", "assertEqual", "self", "GetDims", "cv", "test_mat", "assertEqual", "self", "GetDims", "cv", "test_mat", "assertEqual", "self", "GetDims", "cv", "test_mat", "assertEqual", "self", "GetDims", "cv", "test_mat", "assertEqual", "self", "GetDims", "cv", "test_mat", "xxxtest_corners", "self", "a", "LoadImage", "cv", "foo-mono.png", "AdaptiveThreshold", "cv", "a", "a", "param1", "scribble", "CreateImage", "cv", "GetSize", "cv", "a", "CvtColor", "cv", "a", "scribble", "CV_GRAY2BGR", "cv", "eig_image", "CreateImage", "cv", "GetSize", "cv", "a", "IPL_DEPTH_32F", "cv", "temp_image", "CreateImage", "cv", "GetSize", "cv", "a", "IPL_DEPTH_32F", "cv", "pts", "GoodFeaturesToTrack", "cv", "a", "eig_image", "temp_image", "use_harris", "p", "pts", "Circle", "cv", "scribble", "p", "RGB", "cv", "snap", "self", "scribble", "canny", "CreateImage", "cv", "GetSize", "cv", "a", "SubRS", "cv", "a", "canny", "snap", "self", "canny", "li", "HoughLines2", "cv", "canny", "CreateMemStorage", "cv", "CV_HOUGH_STANDARD", "cv", "pi", "math", "rho", "theta", "li", "rho", "theta", "c", "cos", "math", "theta", "s", "sin", "math", "theta", "x0", "c", "rho", "y0", "s", "rho", "Line", "cv", "scribble", "x0", "s", "y0", "c", "x0", "s", "y0", "c", "snap", "self", "scribble", "test_calibration", "self", "get_corners", "mono", "refine", "False", "ok", "corners", "FindChessboardCorners", "cv", "mono", "num_x_ints", "num_y_ints", "CV_CALIB_CB_ADAPTIVE_THRESH", "cv", "CV_CALIB_CB_NORMALIZE_IMAGE", "cv", "refine", "ok", "corners", "FindCornerSubPix", "cv", "mono", "corners", "CV_TERMCRIT_EPS", "cv", "CV_TERMCRIT_ITER", "cv", "ok", "corners", "mk_object_points", "nimages", "squaresize", "opts", "CreateMat", "cv", "nimages", "num_pts", "CV_32FC1", "cv", "i", "range", "nimages", "j", "range", "num_pts", "opts", "i", "num_pts", "j", "j", "num_x_ints", "squaresize", "opts", "i", "num_pts", "j", "j", "num_x_ints", "squaresize", "opts", "i", "num_pts", "j", "opts", "mk_image_points", "goodcorners", "ipts", "CreateMat", "cv", "len", "goodcorners", "num_pts", "CV_32FC1", "cv", "i", "co", "enumerate", "goodcorners", "j", "range", "num_pts", "ipts", "i", "num_pts", "j", "co", "j", "ipts", "i", "num_pts", "j", "co", "j", "ipts", "mk_point_counts", "nimages", "npts", "CreateMat", "cv", "nimages", "CV_32SC1", "cv", "i", "range", "nimages", "npts", "i", "num_pts", "npts", "cvmat_iterator", "cvmat", "i", "range", "rows", "cvmat", "j", "range", "cols", "cvmat", "cvmat", "i", "j", "image_from_archive", "tar", "name", "member", "getmember", "tar", "name", "filedata", "read", "extractfile", "tar", "member", "imagefiledata", "CreateMat", "cv", "len", "filedata", "CV_8UC1", "cv", "SetData", "cv", "imagefiledata", "filedata", "len", "filedata", "DecodeImageM", "cv", "imagefiledata", "urlretrieve", "urllib", "http://opencv.itseez.com/data/camera_calibration.tar.gz", "camera_calibration.tar.gz", "tf", "open", "tarfile", "camera_calibration.tar.gz", "num_x_ints", "num_y_ints", "num_pts", "num_x_ints", "num_y_ints", "leftimages", "image_from_archive", "tf", "wide/left%04d.pgm", "i", "i", "range", "size", "GetSize", "cv", "leftimages", "True", "corners", "get_corners", "i", "i", "leftimages", "goodcorners", "co", "im", "ok", "co", "zip", "leftimages", "corners", "ok", "ipts", "mk_image_points", "goodcorners", "opts", "mk_object_points", "len", "goodcorners", "npts", "mk_point_counts", "len", "goodcorners", "intrinsics", "CreateMat", "cv", "CV_64FC1", "cv", "distortion", "CreateMat", "cv", "CV_64FC1", "cv", "SetZero", "cv", "intrinsics", "SetZero", "cv", "distortion", "intrinsics", "intrinsics", "CalibrateCamera2", "cv", "opts", "ipts", "npts", "GetSize", "cv", "leftimages", "intrinsics", "distortion", "CreateMat", "cv", "len", "goodcorners", "CV_32FC1", "cv", "CreateMat", "cv", "len", "goodcorners", "CV_32FC1", "cv", "flags", "newK", "CreateMat", "cv", "CV_64FC1", "cv", "GetOptimalNewCameraMatrix", "cv", "intrinsics", "distortion", "size", "newK", "mapx", "CreateImage", "cv", "IPL_DEPTH_32F", "cv", "mapy", "CreateImage", "cv", "IPL_DEPTH_32F", "cv", "K", "intrinsics", "newK", "InitUndistortMap", "cv", "K", "distortion", "mapx", "mapy", "img", "leftimages", "r", "CloneMat", "cv", "img", "Remap", "cv", "img", "r", "mapx", "mapy", "rightimages", "image_from_archive", "tf", "wide/right%04d.pgm", "i", "i", "range", "True", "lcorners", "get_corners", "i", "i", "leftimages", "rcorners", "get_corners", "i", "i", "rightimages", "good", "lco", "rco", "lok", "lco", "rok", "rco", "zip", "lcorners", "rcorners", "lok", "rok", "lipts", "mk_image_points", "l", "l", "r", "good", "ripts", "mk_image_points", "r", "l", "r", "good", "opts", "mk_object_points", "len", "good", "npts", "mk_point_counts", "len", "good", "flags", "CV_CALIB_FIX_ASPECT_RATIO", "cv", "CV_CALIB_FIX_INTRINSIC", "cv", "flags", "CV_CALIB_SAME_FOCAL_LENGTH", "cv", "CV_CALIB_FIX_PRINCIPAL_POINT", "cv", "CV_CALIB_ZERO_TANGENT_DIST", "cv", "flags", "T", "CreateMat", "cv", "CV_64FC1", "cv", "R", "CreateMat", "cv", "CV_64FC1", "cv", "lintrinsics", "CreateMat", "cv", "CV_64FC1", "cv", "ldistortion", "CreateMat", "cv", "CV_64FC1", "cv", "rintrinsics", "CreateMat", "cv", "CV_64FC1", "cv", "rdistortion", "CreateMat", "cv", "CV_64FC1", "cv", "lR", "CreateMat", "cv", "CV_64FC1", "cv", "rR", "CreateMat", "cv", "CV_64FC1", "cv", "lP", "CreateMat", "cv", "CV_64FC1", "cv", "rP", "CreateMat", "cv", "CV_64FC1", "cv", "lmapx", "CreateImage", "cv", "size", "IPL_DEPTH_32F", "cv", "lmapy", "CreateImage", "cv", "size", "IPL_DEPTH_32F", "cv", "rmapx", "CreateImage", "cv", "size", "IPL_DEPTH_32F", "cv", "rmapy", "CreateImage", "cv", "size", "IPL_DEPTH_32F", "cv", "SetIdentity", "cv", "lintrinsics", "SetIdentity", "cv", "rintrinsics", "lintrinsics", "size", "lintrinsics", "size", "rintrinsics", "size", "rintrinsics", "size", "SetZero", "cv", "ldistortion", "SetZero", "cv", "rdistortion", "StereoCalibrate", "cv", "opts", "lipts", "ripts", "npts", "lintrinsics", "ldistortion", "rintrinsics", "rdistortion", "size", "R", "T", "CreateMat", "cv", "CV_32FC1", "cv", "CreateMat", "cv", "CV_32FC1", "cv", "CV_TERMCRIT_ITER", "cv", "CV_TERMCRIT_EPS", "cv", "flags", "a", "StereoRectify", "cv", "lintrinsics", "rintrinsics", "ldistortion", "rdistortion", "size", "R", "T", "lR", "rR", "lP", "rP", "alpha", "a", "InitUndistortRectifyMap", "cv", "lintrinsics", "ldistortion", "lR", "lP", "lmapx", "lmapy", "InitUndistortRectifyMap", "cv", "rintrinsics", "rdistortion", "rR", "rP", "rmapx", "rmapy", "l", "r", "zip", "leftimages", "rightimages", "l_", "CloneMat", "cv", "l", "r_", "CloneMat", "cv", "r", "Remap", "cv", "l", "l_", "lmapx", "lmapy", "Remap", "cv", "r", "r_", "rmapx", "rmapy", "xxx_test_Disparity", "self", "t", "8U", "8S", "16U", "16S", "32S", "32F", "64F", "c", "nm", "%sC%d", "t", "c", "int32 CV_%s=%d", "nm", "eval", "cv.CV_%s", "nm", "integral", "CreateImage", "cv", "IPL_DEPTH_32S", "cv", "L", "LoadImage", "cv", "f0-left.png", "R", "LoadImage", "cv", "f0-right.png", "d", "CreateImage", "cv", "GetSize", "cv", "L", "IPL_DEPTH_8U", "cv", "Rn", "CreateImage", "cv", "GetSize", "cv", "L", "IPL_DEPTH_8U", "cv", "started", "time", "time", "i", "range", "AbsDiff", "cv", "L", "R", "d", "Integral", "cv", "d", "integral", "SetImageROI", "cv", "R", "SetImageROI", "cv", "Rn", "Copy", "cv", "R", "Rn", "R", "Rn", "ResetImageROI", "cv", "R", "time", "time", "started", "ms", "local_test_lk", "self", "seq", "LoadImage", "cv", "track/%06d.png", "i", "i", "range", "crit", "CV_TERMCRIT_ITER", "cv", "crit", "CV_TERMCRIT_EPS", "cv", "i", "range", "r", "CalcOpticalFlowPyrLK", "cv", "seq", "seq", "i", "None", "None", "crit", "pos", "r", "a", "CreateImage", "cv", "b", "CreateImage", "cv", "Resize", "cv", "seq", "a", "CV_INTER_NN", "cv", "Resize", "cv", "seq", "i", "b", "CV_INTER_NN", "cv", "Line", "cv", "a", "Line", "cv", "a", "x", "y", "int", "c", "c", "pos", "Line", "cv", "b", "y", "y", "Line", "cv", "b", "x", "x", "local_test_Haar", "self", "os", "hcfile", "environ", "os", "OPENCV_ROOT", "/share/opencv/haarcascades/haarcascade_frontalface_default.xml", "hc", "Load", "cv", "hcfile", "img", "LoadImage", "cv", "Stu.jpg", "faces", "HaarDetectObjects", "cv", "img", "hc", "CreateMemStorage", "cv", "assert_", "self", "len", "faces", "x", "y", "w", "h", "n", "faces", "Rectangle", "cv", "img", "x", "y", "x", "w", "y", "h", "test_create", "self", "w", "h", "data", "z", "w", "h", "im", "CreateImage", "cv", "w", "h", "SetData", "cv", "im", "data", "w", "im2", "CreateImageHeader", "cv", "w", "h", "SetData", "cv", "im2", "data", "w", "assertSame", "self", "im", "im2", "m", "CreateMat", "cv", "h", "w", "CV_8UC1", "cv", "SetData", "cv", "m", "data", "w", "m2", "CreateMatHeader", "cv", "h", "w", "CV_8UC1", "cv", "SetData", "cv", "m2", "data", "w", "assertSame", "self", "m", "m2", "assertSame", "self", "im", "m", "assertSame", "self", "im2", "m2", "test_casts", "self", "im", "GetImage", "cv", "get_sample", "self", "samples/c/lena.jpg", "data", "tostring", "im", "SetData", "cv", "im", "data", "GetSize", "cv", "im", "start_count", "getrefcount", "sys", "data", "assertSame", "self", "im", "GetImage", "cv", "im", "m", "GetMat", "cv", "im", "assertSame", "self", "im", "m", "assertSame", "self", "m", "GetImage", "cv", "m", "im2", "GetImage", "cv", "m", "assertSame", "self", "im", "im2", "assertEqual", "self", "getrefcount", "sys", "data", "start_count", "im2", "assertEqual", "self", "getrefcount", "sys", "data", "start_count", "m", "assertEqual", "self", "getrefcount", "sys", "data", "start_count", "im", "assertEqual", "self", "getrefcount", "sys", "data", "start_count", "test_morphological", "self", "im", "CreateImage", "cv", "IPL_DEPTH_8U", "cv", "Resize", "cv", "GetImage", "cv", "get_sample", "self", "samples/c/lena.jpg", "im", "dst", "CloneImage", "cv", "im", "funs", "Dilate", "cv", "im", "dst", "Dilate", "cv", "im", "dst", "None", "Dilate", "cv", "im", "dst", "iterations", "Dilate", "cv", "im", "dst", "element", "None", "Dilate", "cv", "im", "dst", "iterations", "element", "None", "Dilate", "cv", "im", "dst", "element", "None", "iterations", "src_h", "hashimg", "self", "im", "hashes", "set", "f", "funs", "f", "add", "hashes", "hashimg", "self", "dst", "assertNotEqual", "self", "src_h", "hashimg", "self", "dst", "assertEqual", "self", "hashimg", "self", "im", "src_h", "assertEqual", "self", "len", "hashes", "shapes", "eval", "cv.CV_SHAPE_%s", "s", "s", "RECT", "CROSS", "ELLIPSE", "elements", "CreateStructuringElementEx", "cv", "sz", "sz", "sz", "sz", "shape", "sz", "shape", "shapes", "elements", "CreateStructuringElementEx", "cv", "CV_SHAPE_CUSTOM", "cv", "e", "elements", "iter", "Dilate", "cv", "im", "dst", "e", "iter", "Erode", "cv", "im", "dst", "e", "iter", "temp", "CloneImage", "cv", "im", "op", "OPEN", "CLOSE", "GRADIENT", "TOPHAT", "BLACKHAT", "MorphologyEx", "cv", "im", "dst", "temp", "e", "eval", "cv.CV_MOP_%s", "op", "iter", "test_getmat_nd", "self", "matnd", "CreateMatND", "cv", "CV_8UC1", "cv", "assertEqual", "self", "GetDims", "cv", "GetMat", "cv", "matnd", "allowND", "True", "matnd", "CreateMatND", "cv", "CV_8UC1", "cv", "assertEqual", "self", "GetDims", "cv", "GetMat", "cv", "matnd", "allowND", "True", "matnd", "CreateMatND", "cv", "CV_8UC1", "cv", "assertEqual", "self", "GetDims", "cv", "GetMat", "cv", "matnd", "allowND", "True", "test_clipline", "self", "assert_", "self", "ClipLine", "cv", "assert_", "self", "ClipLine", "cv", "None", "test_smoke_image_processing", "self", "src", "get_sample", "self", "samples/c/lena.jpg", "CV_LOAD_IMAGE_GRAYSCALE", "cv", "aperture_size", "dst_16s", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_16S", "cv", "dst_32f", "CreateImage", "cv", "GetSize", "cv", "src", "IPL_DEPTH_32F", "cv", "Sobel", "cv", "src", "dst_16s", "aperture_size", "Laplace", "cv", "src", "dst_16s", "aperture_size", "PreCornerDetect", "cv", "src", "dst_32f", "eigendst", "CreateImage", "cv", "GetSize", "cv", "src", "GetSize", "cv", "src", "IPL_DEPTH_32F", "cv", "CornerEigenValsAndVecs", "cv", "src", "eigendst", "aperture_size", "CornerMinEigenVal", "cv", "src", "dst_32f", "aperture_size", "CornerHarris", "cv", "src", "dst_32f", "aperture_size", "CornerHarris", "cv", "src", "dst_32f", "aperture_size", "test_fitline", "self", "FitLine", "cv", "CV_DIST_L2", "cv", "FitLine", "cv", "CV_DIST_L2", "cv", "a", "get_sample", "self", "samples/c/lena.jpg", "eig_image", "CreateImage", "cv", "GetSize", "cv", "a", "IPL_DEPTH_32F", "cv", "temp_image", "CreateImage", "cv", "GetSize", "cv", "a", "IPL_DEPTH_32F", "cv", "pts", "GoodFeaturesToTrack", "cv", "a", "eig_image", "temp_image", "useHarris", "hull", "ConvexHull2", "cv", "pts", "CreateMemStorage", "cv", "return_points", "FitLine", "cv", "hull", "CV_DIST_L2", "cv", "test_moments", "self", "im", "get_sample", "self", "samples/c/lena.jpg", "mo", "Moments", "cv", "im", "fld", "m00", "m10", "m01", "m20", "m11", "m02", "m30", "m21", "m12", "m03", "mu20", "mu11", "mu02", "mu30", "mu21", "mu12", "mu03", "inv_sqrt_m00", "assert_", "self", "isinstance", "getattr", "mo", "fld", "float", "x", "getattr", "mo", "fld", "assert_", "self", "isinstance", "x", "float", "orders", "x_order", "range", "y_order", "range", "x_order", "append", "orders", "x_order", "y_order", "GetSpatialMoment", "cv", "mo", "xo", "yo", "xo", "yo", "orders", "GetCentralMoment", "cv", "mo", "xo", "yo", "xo", "yo", "orders", "GetNormalizedCentralMoment", "cv", "mo", "xo", "yo", "xo", "yo", "orders", "hu0", "GetHuMoments", "cv", "Moments", "cv", "im", "Flip", "cv", "im", "im", "hu1", "GetHuMoments", "cv", "Moments", "cv", "im", "assert_", "self", "len", "hu0", "assert_", "self", "len", "hu1", "i", "range", "assert_", "self", "abs", "hu0", "i", "hu1", "i", "assert_", "self", "abs", "hu0", "i", "hu1", "i", "test_encode", "self", "im", "get_sample", "self", "samples/c/lena.jpg", "jpeg", "EncodeImage", "cv", ".jpeg", "im", "sizes", "dict", "qual", "cols", "EncodeImage", "cv", ".jpeg", "im", "CV_IMWRITE_JPEG_QUALITY", "cv", "qual", "qual", "range", "assertEqual", "self", "cols", "EncodeImage", "cv", ".jpeg", "im", "sizes", "round_trip", "DecodeImage", "cv", "EncodeImage", "cv", ".jpeg", "im", "CV_IMWRITE_JPEG_QUALITY", "cv", "assert_", "self", "GetSize", "cv", "round_trip", "GetSize", "cv", "im", "test_reduce", "self", "srcmat", "CreateMat", "cv", "CV_32FC1", "cv", "srcmat", "srcmat", "srcmat", "srcmat", "srcmat", "srcmat", "doreduce", "siz", "rfunc", "dst", "CreateMat", "cv", "siz", "siz", "CV_32FC1", "cv", "rfunc", "dst", "siz", "dst", "i", "i", "range", "siz", "dst", "i", "i", "range", "siz", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "op", "CV_REDUCE_SUM", "cv", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "op", "CV_REDUCE_AVG", "cv", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "op", "CV_REDUCE_MAX", "cv", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "op", "CV_REDUCE_MIN", "cv", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "CV_REDUCE_MAX", "cv", "assertEqual", "self", "doreduce", "dst", "Reduce", "cv", "srcmat", "dst", "CV_REDUCE_MAX", "cv", "test_operations", "self", "Im", "__init__", "self", "data", "None", "m", "self", "CreateMat", "cv", "CV_32FC1", "cv", "data", "SetData", "cv", "m", "self", "array", "array", "f", "data", "__add__", "self", "other", "r", "Im", "isinstance", "other", "Im", "Add", "cv", "m", "self", "m", "other", "m", "r", "AddS", "cv", "m", "self", "other", "m", "r", "r", "__sub__", "self", "other", "r", "Im", "isinstance", "other", "Im", "Sub", "cv", "m", "self", "m", "other", "m", "r", "SubS", "cv", "m", "self", "other", "m", "r", "r", "__rsub__", "self", "other", "r", "Im", "SubRS", "cv", "m", "self", "other", "m", "r", "r", "__mul__", "self", "other", "r", "Im", "isinstance", "other", "Im", "Mul", "cv", "m", "self", "m", "other", "m", "r", "ConvertScale", "cv", "m", "self", "m", "r", "other", "r", "__rmul__", "self", "other", "r", "Im", "ConvertScale", "cv", "m", "self", "m", "r", "other", "r", "__div__", "self", "other", "r", "Im", "isinstance", "other", "Im", "Div", "cv", "m", "self", "m", "other", "m", "r", "ConvertScale", "cv", "m", "self", "m", "r", "other", "r", "__pow__", "self", "other", "r", "Im", "Pow", "cv", "m", "self", "m", "r", "other", "r", "__abs__", "self", "r", "Im", "Abs", "cv", "m", "self", "m", "r", "r", "__getitem__", "self", "i", "m", "self", "i", "verify", "op", "r", "op", "a", "b", "i", "range", "expected", "op", "a", "i", "b", "i", "assertAlmostEqual", "self", "expected", "r", "i", "a", "Im", "randrange", "random", "i", "range", "b", "Im", "randrange", "random", "i", "range", "verify", "x", "y", "x", "y", "verify", "x", "y", "x", "verify", "x", "y", "x", "verify", "x", "y", "x", "verify", "x", "y", "x", "y", "verify", "x", "y", "x", "verify", "x", "y", "x", "verify", "x", "y", "abs", "x", "verify", "x", "y", "x", "y", "verify", "x", "y", "x", "verify", "x", "y", "x", "y", "verify", "x", "y", "x", "p", "verify", "x", "y", "x", "p", "y", "p", "verify", "x", "y", "x", "abs", "y", "verify", "x", "y", "abs", "y", "x", "verify", "x", "y", "x", "y", "temp_test", "self", "temp_test", "cv", "failing_test_rand_GetStarKeypoints", "self", "CV_MAT_CN", "cv", "mat", "CreateMat", "cv", "CV_32FC2", "cv", "GetStarKeypoints", "cv", "mat", "CreateMemStorage", "cv", "mat", "test_rand_PutText", "self", "mat", "CreateMat", "cv", "CV_8UC1", "cv", "font", "InitFont", "cv", "CV_FONT_HERSHEY_SIMPLEX", "cv", "PutText", "cv", "mat", "chr", "font", "failing_test_rand_FindNearestPoint2D", "self", "subdiv", "CreateSubdivDelaunay2D", "cv", "CreateMemStorage", "cv", "SubdivDelaunay2DInsert", "cv", "subdiv", "CalcSubdivVoronoi2D", "cv", "subdiv", "e", "edges", "subdiv", "e", "  ", "Subdiv2DEdgeOrg", "cv", "e", "  ", "Subdiv2DEdgeOrg", "cv", "Subdiv2DRotateEdge", "cv", "e", "Subdiv2DEdgeDst", "cv", "Subdiv2DRotateEdge", "cv", "e", "nearest", "FindNearestPoint2D", "cv", "subdiv", "DocumentFragmentTests", "OpenCVTests", " Test the fragments of code that are included in the documentation ", "setUp", "self", "setUp", "OpenCVTests", "self", "append", "path", "sys", ".", "test_precornerdetect", "self", "precornerdetect", "precornerdetect", "im", "get_sample", "self", "samples/cpp/right01.jpg", "imf", "CreateMat", "cv", "rows", "im", "cols", "im", "CV_32FC1", "cv", "ConvertScale", "cv", "im", "imf", "r0", "r1", "precornerdetect", "imf", "r", "r0", "r1", "assertEqual", "self", "cols", "im", "cols", "r", "assertEqual", "self", "rows", "im", "rows", "r", "test_findstereocorrespondence", "self", "findstereocorrespondence", "findstereocorrespondence", "l", "r", "get_sample", "self", "samples/cpp/tsukuba_%s.png", "c", "CV_LOAD_IMAGE_GRAYSCALE", "cv", "c", "lr", "disparity_left", "disparity_right", "findstereocorrespondence", "l", "r", "disparity_left_visual", "CreateMat", "cv", "rows", "l", "cols", "l", "CV_8U", "cv", "ConvertScale", "cv", "disparity_left", "disparity_left_visual", "test_calchist", "self", "calchist", "hs_histogram", "i1", "get_sample", "self", "samples/c/lena.jpg", "i2", "get_sample", "self", "samples/cpp/building.jpg", "i3", "CloneMat", "cv", "i1", "Flip", "cv", "i3", "i3", "h1", "hs_histogram", "i1", "h2", "hs_histogram", "i2", "h3", "hs_histogram", "i3", "assertEqual", "self", "hashimg", "self", "h1", "hashimg", "self", "h3", "assertNotEqual", "self", "hashimg", "self", "h1", "hashimg", "self", "h2", "NewTests", "OpenCVTests", "__name__", "__main__", "testing", "__version__", "cv", "seed", "random", "main", "unittest", "datetime", "json", "logging", "re", "BeautifulSoup", "BeautifulSoup", "soup", "xml.sax.saxutils", "escape", "xhtml_escape", "tornado.web", "handlers.oauth", "OAuth2Handler", "util", "dateutils", "util.cache", "Cache", "util.config", "Config", "util.route", "route", "space_compress_regex", "compile", "re", "\\s+", "AtomHandler", "RequestHandler", "web", "tornado", "Fetches the public posts for a given G+ user id as an Atom feed.", "json_url", "https://www.googleapis.com/plus/v1/people/%s/activities/public?maxResults=10&userIp=%s", "cache_key_template", "pluss--gplusid--atom--2--%s", "ratelimit_key_template", "pluss--remoteip--ratelimit--1--%s", "get", "self", "user_id", "page_id", "ratelimit_key", "ratelimit_key_template", "self", "remote_ip", "request", "self", "remote_ip_rate", "incr", "Cache", "ratelimit_key", "remote_ip_rate", "None", "set", "Cache", "ratelimit_key", "time", "remote_ip_rate", "set_status", "self", "set_header", "self", "Retry-After", "60", "write", "self", "Rate limit exceeded. Please do not make more than 60 requests per minute.", "remote_ip_rate", "info", "logging", "Rate limited IP %s - %s requests/min", "remote_ip", "request", "self", "remote_ip_rate", "finish", "self", "gplus_user_id", "self", "user_id", "gplus_page_id", "self", "page_id", "len", "user_id", "write", "self", "Google+ profile IDs are exactly 21 digits long. Please specify a proper profile ID.", "finish", "self", "page_id", "len", "page_id", "write", "self", "Google+ page IDs are exactly 21 digits long. Please specify a proper page ID.", "cache_key", "self", "cache_key_template", "self", "user_id", "page_id", "cache_key", "self", "str", "page_id", "cached_result", "get", "Cache", "cache_key", "self", "flush_requested", "get", "arguments", "request", "self", "flush", "None", "cached_result", "getboolean", "Config", "cache", "allow-flush", "flush_requested", "_respond", "self", "cached_result", "page_id", "authed_fetch", "OAuth2Handler", "user_id", "json_url", "self", "page_id", "remote_ip", "request", "self", "_on_api_response", "self", "authed_fetch", "OAuth2Handler", "user_id", "json_url", "self", "me", "remote_ip", "request", "self", "_on_api_response", "self", "asynchronous", "web", "tornado", "_respond", "kwargs", "self", "headers", "body", "None", "", "headers", "None", "headers", "If-Modified-Since", "headers", "request", "self", "remote_timestamp", "from_http_format", "dateutils", "headers", "request", "self", "If-Modified-Since", "Last-Modified", "headers", "local_timestamp", "from_http_format", "dateutils", "headers", "Last-Modified", "local_timestamp", "remote_timestamp", "set_status", "self", "finish", "self", "header", "value", "iteritems", "headers", "set_header", "self", "header", "value", "write", "self", "body", "finish", "self", "_on_api_response", "self", "response", "response", "None", "error", "logging", "API request for %s failed.", "gplus_user_id", "self", "write", "self", "Unable to fetch content for this Google+ ID; it may not be authenticated. See http://%s for more information.", "host", "request", "self", "set_status", "self", "finish", "self", "error", "response", "code", "response", "error", "logging", "API Request 403: %r", "loads", "json", "body", "response", "set_status", "self", "write", "self", "Unable to fulfill request at this time - Google+ API rate limit exceeded.", "finish", "self", "error", "logging", "AsyncHTTPRequest error: %r, %r", "error", "response", "response", "send_error", "self", "data", "loads", "json", "body", "response", "headers", "Content-Type", "application/atom+xml", "params", "userid", "baseurl", "requesturi", "gplus_page_id", "self", "gplus_user_id", "self", "http://%s", "host", "request", "self", "http://%s%s", "host", "request", "self", "split", "uri", "request", "self", "?", "items", "data", "data", "items", "params", "lastupdate", "to_atom_format", "dateutils", "today", "datetime", "datetime", "_respond", "self", "headers", "format", "empty_feed_template", "params", "posts", "data", "items", "lastupdate", "max", "from_iso_format", "dateutils", "p", "updated", "p", "posts", "params", "author", "xhtml_escape", "posts", "actor", "displayName", "params", "lastupdate", "to_atom_format", "dateutils", "lastupdate", "headers", "Last-Modified", "to_http_format", "dateutils", "lastupdate", "params", "entrycontent", "join", "format", "entry_template", "get_post_params", "p", "p", "posts", "body", "format", "feed_template", "params", "set", "Cache", "cache_key", "self", "headers", "body", "headers", "body", "time", "getint", "Config", "cache", "stream-expire", "_respond", "self", "headers", "body", "route", "/atom/(\\d+)(?:/(\\d+))?", "get_post_params", "post", "post_updated", "from_iso_format", "dateutils", "post", "updated", "post_published", "from_iso_format", "dateutils", "post", "published", "post_id", "post", "id", "permalink", "post", "url", "item", "post", "object", "post", "verb", "post", "content", "item", "content", "post", "verb", "share", "content", "get", "post", "annotation", "Shared:", "actor", "item", "append", "content", "<br/><br/>", "url", "item", "actor", "displayName", "item", "actor", "append", "content", "<a href=\"%s\">%s</a>", "item", "actor", "url", "item", "actor", "displayName", "append", "content", " originally shared this post: ", "displayName", "item", "actor", "append", "content", "item", "actor", "displayName", "append", "content", " originally shared this post: ", "append", "content", "<br/><blockquote>", "append", "content", "item", "content", "append", "content", "</blockquote>", "post", "verb", "checkin", "content", "item", "content", "place", "get", "post", "placeName", "", "place", "item", "content", "append", "content", "<br/><br/>", "append", "content", "Checked in at %s", "place", "content", "attachments", "item", "attach", "item", "attachments", "append", "content", "<br/><br/>", "attach", "objectType", "article", "append", "content", "<a href=\"%s\">%s</a>", "attach", "url", "get", "attach", "displayName", "attached link", "attach", "objectType", "photo", "append", "content", "<img src=\"%s\" alt=\"%s\" />", "attach", "image", "url", "get", "attach", "image", "displayName", "attached image", "attach", "objectType", "photo-album", "attach", "objectType", "album", "append", "content", "Album: <a href=\"%s\">%s</a>", "attach", "url", "get", "attach", "displayName", "attached album", "attach", "objectType", "video", "append", "content", "Video: <a href=\"%s\">%s</a>", "attach", "url", "get", "attach", "displayName", "attached video", "append", "content", "[unsupported post attachment of type \"%s\"]", "attach", "objectType", "post_content", "join", "content", "permalink", "post_title", "join", "string", "x", "x", "findAll", "soup", "post_content", "text", "True", "post_title", "sub", "space_compress_regex", " ", "post_title", "len", "post_title", "post_title", "permalink", "post_title", "candidate_title", "post_title", "&", "candidate_title", "candidate_title", "rsplit", "candidate_title", "&", " ", "candidate_title", "candidate_title", "rsplit", "candidate_title", " ", "post_title", "candidate_title", "title", "permalink", "postatomdate", "postatompubdate", "postdate", "id", "summary", "post_title", "xhtml_escape", "permalink", "to_atom_format", "dateutils", "post_updated", "to_atom_format", "dateutils", "post_published", "strftime", "post_published", "%Y-%m-%d", "xhtml_escape", "post_id", "xhtml_escape", "post_content", "entry_template", "feed_template", "empty_feed_template", "mimetypes", "os.path", "getmtime", "getsize", "venusian", "webob", "Response", "_Response", "zope.interface", "implementer", "pyramid.interfaces", "IResponse", "init_mimetypes", "mimetypes", "hasattr", "mimetypes", "init", "init", "mimetypes", "True", "False", "init_mimetypes", "mimetypes", "_BLOCK_SIZE", "Response", "_Response", "implementer", "IResponse", "FileResponse", "Response", "\n    A Response object that can be used to serve a static file from disk\n    simply.\n\n    ``path`` is a file path on disk.\n\n    ``request`` must be a Pyramid :term:`request` object if passed.  Note\n    that a request *must* be passed if the response is meant to attempt to\n    use the ``wsgi.file_wrapper`` feature of the web server that you're using\n    to serve your Pyramid application.\n\n    ``cache_max_age`` if passed, is the number of seconds that should be used\n    to HTTP cache this response.\n\n    ``content_type``, if passed, is the content_type of the response.\n\n    ``content_encoding``, if passed is the content_encoding of the response.\n    It's generally safe to leave this set to ``None`` if you're serving a\n    binary file.  This argument will be ignored if you don't also pass\n    ``content-type``.\n    ", "__init__", "self", "path", "request", "cache_max_age", "content_type", "content_encoding", "None", "None", "None", "None", "__init__", "super", "FileResponse", "self", "conditional_response", "True", "last_modified", "self", "getmtime", "path", "content_type", "None", "content_type", "content_encoding", "guess_type", "mimetypes", "path", "strict", "False", "content_type", "None", "content_type", "application/octet-stream", "content_type", "self", "content_type", "content_encoding", "self", "content_encoding", "content_length", "getsize", "path", "f", "open", "path", "rb", "app_iter", "None", "request", "None", "environ", "environ", "request", "wsgi.file_wrapper", "environ", "app_iter", "environ", "wsgi.file_wrapper", "f", "_BLOCK_SIZE", "app_iter", "None", "app_iter", "FileIter", "f", "_BLOCK_SIZE", "app_iter", "self", "app_iter", "content_length", "self", "content_length", "cache_max_age", "None", "cache_expires", "self", "cache_max_age", "FileIter", "object", " A fixed-block-size iterator for use as a WSGI app_iter.\n\n    ``file`` is a Python file pointer (or at least an object with a ``read``\n    method that takes a size hint).\n\n    ``block_size`` is an optional block size for iteration.\n    ", "__init__", "self", "file", "block_size", "_BLOCK_SIZE", "file", "self", "file", "block_size", "self", "block_size", "__iter__", "self", "self", "next", "self", "val", "read", "file", "self", "block_size", "self", "val", "StopIteration", "val", "__next__", "next", "close", "self", "close", "file", "self", "response_adapter", "object", " Decorator activated via a :term:`scan` which treats the function\n    being decorated as a :term:`response adapter` for the set of types or\n    interfaces passed as ``*types_or_ifaces`` to the decorator constructor.\n\n    For example, if you scan the following response adapter:\n\n    .. code-block:: python\n\n        from pyramid.response import Response\n        from pyramid.response import response_adapter\n\n        @response_adapter(int)\n        def myadapter(i):\n            return Response(status=i)\n\n    You can then return an integer from your view callables, and it will be\n    converted into a response with the integer as the status code.\n\n    More than one type or interface can be passed as a constructor argument.\n    The decorated response adapter will be called for each type or interface.\n\n    .. code-block:: python\n\n        import json\n\n        from pyramid.response import Response\n        from pyramid.response import response_adapter\n\n        @response_adapter(dict, list)\n        def myadapter(ob):\n            return Response(json.dumps(ob))\n        \n    This method will have no effect until a :term:`scan` is performed\n    agains the package or module which contains it, ala:\n\n    .. code-block:: python\n\n        from pyramid.config import Configurator\n        config = Configurator()\n        config.scan('somepackage_containing_adapters')\n\n    ", "venusian", "venusian", "__init__", "types_or_ifaces", "self", "types_or_ifaces", "self", "types_or_ifaces", "register", "self", "scanner", "name", "wrapped", "config", "config", "scanner", "type_or_iface", "types_or_ifaces", "self", "add_response_adapter", "config", "wrapped", "type_or_iface", "__call__", "self", "wrapped", "attach", "venusian", "self", "wrapped", "register", "self", "category", "pyramid", "wrapped", "os", "sys", "up_path", "abspath", "path", "os", "..", "append", "path", "sys", "up_path", "matplotlib.pyplot", "plt", "sim_env", "SimEnv2D", "robot.ravebot", "BarretWAM", "optimize", "scp_solver_states", "utils", "mat2tuple", "random", "random", "openravepy", "*", "numpy", "time", "struct", "_Getch", "\ndef waitrobot(robot):\n    while not robot.GetController().IsDone():\n        time.sleep(0.01)\n", "env", "Environment", "SetViewer", "env", "qtcoin", "Load", "env", "getcwd", "os", "/data/wam_scene.env.xml", "robot", "GetRobots", "env", "arm", "BarretWAM", "robot", "env", "x0", "array", "numpy", "NX", "arm", "du", "array", "numpy", "NU", "arm", "du", "array", "numpy", "du", "mat", "numpy", "du", "T", "X", "mat", "numpy", "zeros", "numpy", "NX", "arm", "T", "U", "mat", "numpy", "zeros", "numpy", "NU", "arm", "T", "U", "mat", "numpy", "random_sample", "random", "numpy", "NU", "arm", "T", "U", "U", "t", "range", "T", "X", "t", "dynamics", "arm", "X", "t", "U", "t", "draw_trajectory", "arm", "X", "rho_x", "rho_u", "N_iter", "X", "X_copy", "copy", "X", "U_copy", "copy", "U", "opt_states", "opt_ctrls", "opt_vals", "scp_solver_states", "arm", "X_copy", "U_copy", "rho_x", "rho_u", "N_iter", "method", "shooting", "draw_trajectory", "arm", "opt_states", "color", "array", "numpy", "drawRobot", "opt_states", "getch", "_Getch", "_Getch", "t", "True", "c", "getch", "c", "c", "x", "ord", "c", "ord", "c", "exit", "c", "n", "drawRobot = X", "drawRobot", "X", "c", "m", "drawRobot", "opt_states", "c", ",", "c", "<", "t", "t", "c", ".", "c", ">", "t", "t", "t", "T", "t", "T", "t", "t", "traj_pos", "arm", "drawRobot", "t", "UpdatePublishedBodies", "env", "os", "re", "random", "hashlib", "hmac", "string", "letters", "webapp2", "jinja2", "google.appengine.ext", "db", "template_dir", "join", "path", "os", "dirname", "path", "os", "__file__", "templates", "jinja_env", "Environment", "jinja2", "loader", "FileSystemLoader", "jinja2", "template_dir", "autoescape", "True", "secret", "fart", "render_str", "params", "template", "t", "get_template", "jinja_env", "template", "render", "t", "params", "make_secure_val", "val", "%s|%s", "val", "hexdigest", "new", "hmac", "secret", "val", "check_secure_val", "secure_val", "val", "split", "secure_val", "|", "secure_val", "make_secure_val", "val", "val", "BlogHandler", "RequestHandler", "webapp2", "write", "a", "kw", "self", "write", "out", "response", "self", "a", "kw", "render_str", "params", "self", "template", "params", "user", "user", "self", "render_str", "template", "params", "render", "kw", "self", "template", "write", "self", "render_str", "self", "template", "kw", "set_secure_cookie", "self", "name", "val", "cookie_val", "make_secure_val", "val", "add_header", "headers", "response", "self", "Set-Cookie", "%s=%s; Path=/", "name", "cookie_val", "read_secure_cookie", "self", "name", "cookie_val", "get", "cookies", "request", "self", "name", "cookie_val", "check_secure_val", "cookie_val", "login", "self", "user", "set_secure_cookie", "self", "user_id", "str", "id", "key", "user", "logout", "self", "add_header", "headers", "response", "self", "Set-Cookie", "user_id=; Path=/", "initialize", "a", "kw", "self", "initialize", "RequestHandler", "webapp2", "self", "a", "kw", "uid", "read_secure_cookie", "self", "user_id", "user", "self", "uid", "by_id", "User", "int", "uid", "render_post", "response", "post", "write", "out", "response", "<b>", "subject", "post", "</b><br>", "write", "out", "response", "content", "post", "MainPage", "BlogHandler", "get", "self", "write", "self", "Hello, Udacity!", "make_salt", "length", "join", "", "choice", "random", "letters", "x", "xrange", "length", "make_pw_hash", "name", "pw", "salt", "None", "salt", "salt", "make_salt", "h", "hexdigest", "sha256", "hashlib", "name", "pw", "salt", "%s,%s", "salt", "h", "valid_pw", "name", "password", "h", "salt", "split", "h", ",", "h", "make_pw_hash", "name", "password", "salt", "users_key", "group", "default", "from_path", "Key", "db", "users", "group", "User", "Model", "db", "name", "StringProperty", "db", "required", "True", "pw_hash", "StringProperty", "db", "required", "True", "email", "StringProperty", "db", "by_id", "cls", "uid", "get_by_id", "User", "uid", "parent", "users_key", "classmethod", "by_name", "cls", "name", "u", "get", "filter", "all", "User", "name =", "name", "u", "classmethod", "register", "cls", "name", "pw", "email", "None", "pw_hash", "make_pw_hash", "name", "pw", "User", "parent", "users_key", "name", "name", "pw_hash", "pw_hash", "email", "email", "classmethod", "login", "cls", "name", "pw", "u", "by_name", "cls", "name", "u", "valid_pw", "name", "pw", "pw_hash", "u", "u", "classmethod", "blog_key", "name", "default", "from_path", "Key", "db", "blogs", "name", "Post", "Model", "db", "subject", "StringProperty", "db", "required", "True", "content", "TextProperty", "db", "required", "True", "created", "DateTimeProperty", "db", "auto_now_add", "True", "last_modified", "DateTimeProperty", "db", "auto_now", "True", "render", "self", "_render_text", "self", "replace", "content", "self", "\n", "<br>", "render_str", "post.html", "p", "self", "BlogFront", "BlogHandler", "get", "self", "posts", "greetings", "order", "all", "Post", "-created", "render", "self", "front.html", "posts", "posts", "PostPage", "BlogHandler", "get", "self", "post_id", "key", "from_path", "Key", "db", "Post", "int", "post_id", "parent", "blog_key", "post", "get", "db", "key", "post", "error", "self", "render", "self", "permalink.html", "post", "post", "NewPost", "BlogHandler", "get", "self", "user", "self", "render", "self", "newpost.html", "redirect", "self", "/login", "post", "self", "user", "self", "redirect", "self", "/blog", "subject", "get", "request", "self", "subject", "content", "get", "request", "self", "content", "subject", "content", "p", "Post", "parent", "blog_key", "subject", "subject", "content", "content", "put", "p", "redirect", "self", "/blog/%s", "str", "id", "key", "p", "error", "subject and content, please!", "render", "self", "newpost.html", "subject", "subject", "content", "content", "error", "error", "Rot13", "BlogHandler", "get", "self", "render", "self", "rot13-form.html", "post", "self", "rot13", "", "text", "get", "request", "self", "text", "text", "rot13", "encode", "text", "rot13", "render", "self", "rot13-form.html", "text", "rot13", "USER_RE", "compile", "re", "^[a-zA-Z0-9_-]{3,20}$", "valid_username", "username", "username", "match", "USER_RE", "username", "PASS_RE", "compile", "re", "^.{3,20}$", "valid_password", "password", "password", "match", "PASS_RE", "password", "EMAIL_RE", "compile", "re", "^[\\S]+@[\\S]+\\.[\\S]+$", "valid_email", "email", "email", "match", "EMAIL_RE", "email", "Signup", "BlogHandler", "get", "self", "render", "self", "signup-form.html", "post", "self", "have_error", "False", "username", "self", "get", "request", "self", "username", "password", "self", "get", "request", "self", "password", "verify", "self", "get", "request", "self", "verify", "email", "self", "get", "request", "self", "email", "params", "dict", "username", "username", "self", "email", "email", "self", "valid_username", "username", "self", "params", "error_username", "That's not a valid username.", "have_error", "True", "valid_password", "password", "self", "params", "error_password", "That wasn't a valid password.", "have_error", "True", "password", "self", "verify", "self", "params", "error_verify", "Your passwords didn't match.", "have_error", "True", "valid_email", "email", "self", "params", "error_email", "That's not a valid email.", "have_error", "True", "have_error", "render", "self", "signup-form.html", "params", "done", "self", "done", "a", "kw", "self", "NotImplementedError", "Unit2Signup", "Signup", "done", "self", "redirect", "self", "/unit2/welcome?username=", "username", "self", "Register", "Signup", "done", "self", "u", "by_name", "User", "username", "self", "u", "msg", "That user already exists.", "render", "self", "signup-form.html", "error_username", "msg", "u", "register", "User", "username", "self", "password", "self", "email", "self", "put", "u", "login", "self", "u", "redirect", "self", "/blog", "Login", "BlogHandler", "get", "self", "render", "self", "login-form.html", "post", "self", "username", "get", "request", "self", "username", "password", "get", "request", "self", "password", "u", "login", "User", "username", "password", "u", "login", "self", "u", "redirect", "self", "/blog", "msg", "Invalid login", "render", "self", "login-form.html", "error", "msg", "Logout", "BlogHandler", "get", "self", "logout", "self", "redirect", "self", "/blog", "Unit3Welcome", "BlogHandler", "get", "self", "user", "self", "render", "self", "welcome.html", "username", "name", "user", "self", "redirect", "self", "/signup", "Welcome", "BlogHandler", "get", "self", "username", "get", "request", "self", "username", "valid_username", "username", "render", "self", "welcome.html", "username", "username", "redirect", "self", "/unit2/signup", "app", "WSGIApplication", "webapp2", "/", "MainPage", "/unit2/rot13", "Rot13", "/unit2/signup", "Unit2Signup", "/unit2/welcome", "Welcome", "/blog/?", "BlogFront", "/blog/([0-9]+)", "PostPage", "/blog/newpost", "NewPost", "/signup", "Register", "/login", "Login", "/logout", "Logout", "/unit3/welcome", "Unit3Welcome", "debug", "True", "pyjd", "pyjamas.ui.RootPanel", "RootPanel", "pyjamas.ui.TextArea", "TextArea", "pyjamas.ui.Label", "Label", "pyjamas.ui.Button", "Button", "pyjamas.ui.HTML", "HTML", "pyjamas.ui.VerticalPanel", "VerticalPanel", "pyjamas.ui.HorizontalPanel", "HorizontalPanel", "pyjamas.ui.ListBox", "ListBox", "pyjamas.ui.FormPanel", "FormPanel", "pyjamas.ui.FileUpload", "FileUpload", "pyjamas.ui.TextBox", "TextBox", "pyjamas", "Window", "FormPanelExample", "onModuleLoad", "self", "form", "self", "FormPanel", "setAction", "form", "self", "/chat-service/test/", "setEncoding", "form", "self", "ENCODING_MULTIPART", "FormPanel", "setMethod", "form", "self", "METHOD_POST", "FormPanel", "panel", "VerticalPanel", "setWidget", "form", "self", "panel", "tb", "self", "TextBox", "setName", "tb", "self", "textBoxFormElement", "add", "panel", "tb", "self", "lb", "ListBox", "setName", "lb", "listBoxFormElement", "addItem", "lb", "foo", "fooValue", "addItem", "lb", "bar", "barValue", "addItem", "lb", "baz", "bazValue", "add", "panel", "lb", "upload", "FileUpload", "setName", "upload", "uploadFormElement", "add", "panel", "upload", "add", "panel", "Button", "Submit", "self", "addFormHandler", "form", "self", "self", "add", "RootPanel", "form", "self", "onClick", "self", "sender", "submit", "form", "self", "onSubmitComplete", "self", "event", "alert", "Window", "getResults", "event", "onSubmit", "self", "event", "len", "getText", "tb", "self", "alert", "Window", "The text box must not be empty", "setCancelled", "event", "True", "__name__", "__main__", "setup", "pyjd", "FormPanelExample.html", "app", "FormPanelExample", "onModuleLoad", "app", "run", "pyjd", "json", "zope.deprecation", "deprecate", "zope.deprecation.deprecation", "deprecated", "zope.interface", "implementer", "zope.interface.interface", "InterfaceClass", "webob", "BaseRequest", "pyramid.interfaces", "IRequest", "IResponse", "ISessionFactory", "IResponseFactory", "pyramid.compat", "iterkeys_", "itervalues_", "iteritems_", "text_", "bytes_", "native_", "pyramid.decorator", "reify", "pyramid.response", "Response", "pyramid.url", "URLMethodsMixin", "pyramid.util", "InstancePropertyMixin", "TemplateContext", "object", "DeprecatedRequestMethodsMixin", "object", "dictlike", "Use of the request as a dict-like object is deprecated as of Pyramid 1.1.  Use dict-like methods of \"request.environ\" instead.", "__contains__", "self", "k", "__contains__", "environ", "self", "k", "deprecate", "dictlike", "__delitem__", "self", "k", "__delitem__", "environ", "self", "k", "deprecate", "dictlike", "__getitem__", "self", "k", "__getitem__", "environ", "self", "k", "deprecate", "dictlike", "__iter__", "self", "iter", "environ", "self", "deprecate", "dictlike", "__setitem__", "self", "k", "v", "environ", "self", "k", "v", "deprecate", "dictlike", "get", "self", "k", "default", "None", "get", "environ", "self", "k", "default", "deprecate", "dictlike", "has_key", "self", "k", "k", "environ", "self", "deprecate", "dictlike", "items", "self", "items", "environ", "self", "deprecate", "dictlike", "iteritems", "self", "iteritems_", "environ", "self", "deprecate", "dictlike", "iterkeys", "self", "iterkeys_", "environ", "self", "deprecate", "dictlike", "itervalues", "self", "itervalues_", "environ", "self", "deprecate", "dictlike", "keys", "self", "keys", "environ", "self", "deprecate", "dictlike", "pop", "self", "k", "pop", "environ", "self", "k", "deprecate", "dictlike", "popitem", "self", "popitem", "environ", "self", "deprecate", "dictlike", "setdefault", "self", "v", "default", "setdefault", "environ", "self", "v", "default", "deprecate", "dictlike", "update", "kw", "self", "v", "update", "environ", "self", "v", "kw", "deprecate", "dictlike", "values", "self", "values", "environ", "self", "deprecate", "dictlike", "rr_dep", "Accessing and setting \"request.response_%s\" is deprecated as of Pyramid 1.1; access or set \"request.response.%s\" instead.", "_response_content_type_get", "self", "_response_content_type", "self", "_response_content_type_set", "self", "value", "_response_content_type", "self", "value", "_response_content_type_del", "self", "_response_content_type", "self", "response_content_type", "property", "_response_content_type_get", "_response_content_type_set", "_response_content_type_del", "response_content_type", "deprecated", "response_content_type", "rr_dep", "content_type", "content_type", "_response_headerlist_get", "self", "_response_headerlist", "self", "_response_headerlist_set", "self", "value", "_response_headerlist", "self", "value", "_response_headerlist_del", "self", "_response_headerlist", "self", "response_headerlist", "property", "_response_headerlist_get", "_response_headerlist_set", "_response_headerlist_del", "hl_dep", "Accessing and setting \"request.response_headerlist\" is deprecated as of Pyramid 1.1; access the headerlist via \"request.response.headerlist\" and extend headers via \"request.response.headerlist.extend(alist)\" instead of \"request.response_headerlist = alist\"", "response_headerlist", "deprecated", "response_headerlist", "hl_dep", "_response_status_get", "self", "_response_status", "self", "_response_status_set", "self", "value", "_response_status", "self", "value", "_response_status_del", "self", "_response_status", "self", "response_status", "property", "_response_status_get", "_response_status_set", "_response_status_del", "response_status", "deprecated", "response_status", "rr_dep", "status", "status", "_response_charset_get", "self", "_response_charset", "self", "_response_charset_set", "self", "value", "_response_charset", "self", "value", "_response_charset_del", "self", "_response_charset", "self", "response_charset", "property", "_response_charset_get", "_response_charset_set", "_response_charset_del", "response_charset", "deprecated", "response_charset", "rr_dep", "charset", "charset", "_response_cache_for_get", "self", "_response_cache_for", "self", "_response_cache_for_set", "self", "value", "_response_cache_for", "self", "value", "_response_cache_for_del", "self", "_response_cache_for", "self", "response_cache_for", "property", "_response_cache_for_get", "_response_cache_for_set", "_response_cache_for_del", "response_cache_for", "deprecated", "response_cache_for", "rr_dep", "cache_for", "cache_expires", "CallbackMethodsMixin", "object", "response_callbacks", "finished_callbacks", "add_response_callback", "self", "callback", "\n        Add a callback to the set of callbacks to be called by the\n        :term:`router` at a point after a :term:`response` object is\n        successfully created.  :app:`Pyramid` does not have a\n        global response object: this functionality allows an\n        application to register an action to be performed against the\n        response once one is created.\n\n        A 'callback' is a callable which accepts two positional\n        parameters: ``request`` and ``response``.  For example:\n\n        .. code-block:: python\n           :linenos:\n\n           def cache_callback(request, response):\n               'Set the cache_control max_age for the response'\n               response.cache_control.max_age = 360\n           request.add_response_callback(cache_callback)\n\n        Response callbacks are called in the order they're added\n        (first-to-most-recently-added).  No response callback is\n        called if an exception happens in application code, or if the\n        response object returned by :term:`view` code is invalid.\n\n        All response callbacks are called *after* the\n        :class:`pyramid.events.NewResponse` event is sent.\n\n        Errors raised by callbacks are not handled specially.  They\n        will be propagated to the caller of the :app:`Pyramid`\n        router application.\n\n        See also: :ref:`using_response_callbacks`.\n        ", "callbacks", "response_callbacks", "self", "callbacks", "callbacks", "append", "callbacks", "callback", "response_callbacks", "self", "callbacks", "_process_response_callbacks", "self", "response", "callbacks", "response_callbacks", "self", "callbacks", "callback", "pop", "callbacks", "callback", "self", "response", "add_finished_callback", "self", "callback", "\n        Add a callback to the set of callbacks to be called\n        unconditionally by the :term:`router` at the very end of\n        request processing.\n\n        ``callback`` is a callable which accepts a single positional\n        parameter: ``request``.  For example:\n\n        .. code-block:: python\n           :linenos:\n\n           import transaction\n\n           def commit_callback(request):\n               '''commit or abort the transaction associated with request'''\n               if request.exception is not None:\n                   transaction.abort()\n               else:\n                   transaction.commit()\n           request.add_finished_callback(commit_callback)\n\n        Finished callbacks are called in the order they're added (\n        first- to most-recently- added).  Finished callbacks (unlike\n        response callbacks) are *always* called, even if an exception\n        happens in application code that prevents a response from\n        being generated.\n\n        The set of finished callbacks associated with a request are\n        called *very late* in the processing of that request; they are\n        essentially the last thing called by the :term:`router`. They\n        are called after response processing has already occurred in a\n        top-level ``finally:`` block within the router request\n        processing code.  As a result, mutations performed to the\n        ``request`` provided to a finished callback will have no\n        meaningful effect, because response processing will have\n        already occurred, and the request's scope will expire almost\n        immediately after all finished callbacks have been processed.\n\n        Errors raised by finished callbacks are not handled specially.\n        They will be propagated to the caller of the :app:`Pyramid`\n        router application.\n\n        See also: :ref:`using_finished_callbacks`.\n        ", "callbacks", "finished_callbacks", "self", "callbacks", "callbacks", "append", "callbacks", "callback", "finished_callbacks", "self", "callbacks", "_process_finished_callbacks", "self", "callbacks", "finished_callbacks", "self", "callbacks", "callback", "pop", "callbacks", "callback", "self", "Request", "BaseRequest", "DeprecatedRequestMethodsMixin", "URLMethodsMixin", "CallbackMethodsMixin", "InstancePropertyMixin", "\n    A subclass of the :term:`WebOb` Request class.  An instance of\n    this class is created by the :term:`router` and is provided to a\n    view callable (and to other subsystems) as the ``request``\n    argument.\n\n    The documentation below (save for the ``add_response_callback`` and\n    ``add_finished_callback`` methods, which are defined in this subclass\n    itself, and the attributes ``context``, ``registry``, ``root``,\n    ``subpath``, ``traversed``, ``view_name``, ``virtual_root`` , and\n    ``virtual_root_path``, each of which is added to the request by the\n    :term:`router` at request ingress time) are autogenerated from the WebOb\n    source code used when this documentation was generated.\n\n    Due to technical constraints, we can't yet display the WebOb\n    version number from which this documentation is autogenerated, but\n    it will be the 'prevailing WebOb version' at the time of the\n    release of this :app:`Pyramid` version.  See\n    http://pythonpaste.org/webob/ for further information.\n    ", "exception", "None", "exc_info", "None", "matchdict", "None", "matched_route", "None", "tmpl_context", "self", "TemplateContext", "reify", "session", "self", " Obtain the :term:`session` object associated with this\n        request.  If a :term:`session factory` has not been registered\n        during application configuration, a\n        :class:`pyramid.exceptions.ConfigurationError` will be raised", "factory", "queryUtility", "registry", "self", "ISessionFactory", "factory", "None", "AttributeError", "No session factory registered (see the Sessions chapter of the Pyramid documentation)", "factory", "self", "reify", "response", "self", "This attribute is actually a \"reified\" property which returns an\n        instance of the :class:`pyramid.response.Response`. class.  The\n        response object returned does not exist until this attribute is\n        accessed.  Once it is accessed, subsequent accesses will return the\n        same Response object.\n\n        The ``request.response`` API is used by renderers.  A render obtains\n        the response object it will return from a view that uses that renderer\n        by accessing ``request.response``.  Therefore, it's possible to use the\n        ``request.response`` API to set up a response object with \"the\n        right\" attributes (e.g. by calling ``request.response.set_cookie()``)\n        within a view that uses a renderer.  Mutations to this response object\n        will be preserved in the response sent to the client.", "registry", "registry", "self", "response_factory", "queryUtility", "registry", "IResponseFactory", "default", "Response", "response_factory", "reify", "is_response", "self", "ob", " Return ``True`` if the object passed as ``ob`` is a valid\n        response object, ``False`` otherwise.", "registry", "registry", "self", "adapted", "queryAdapterOrSelf", "registry", "ob", "IResponse", "adapted", "None", "False", "adapted", "ob", "json_body", "self", "loads", "json", "text_", "body", "self", "charset", "self", "property", "implementer", "IRequest", "route_request_iface", "name", "bases", "iface", "InterfaceClass", "%s_IRequest", "name", "bases", "bases", "__doc__", "route_request_iface-generated interface", "combined", "iface", "InterfaceClass", "%s_combined_IRequest", "name", "bases", "iface", "IRequest", "__doc__", "route_request_iface-generated combined interface", "iface", "add_global_response_headers", "request", "headerlist", "add_headers", "request", "response", "k", "v", "headerlist", "append", "headerlist", "response", "k", "v", "add_response_callback", "request", "add_headers", "call_app_with_subpath_as_path_info", "request", "app", "environ", "environ", "request", "script_name", "get", "environ", "SCRIPT_NAME", "", "path_info", "get", "environ", "PATH_INFO", "/", "subpath", "list", "getattr", "request", "subpath", "new_script_name", "", "new_path_info", "/", "join", "/", "native_", "encode", "x", "utf-8", "latin-1", "x", "subpath", "new_path_info", "/", "path_info", "/", "endswith", "path_info", "/", "new_path_info", "/", "workback", "split", "script_name", "path_info", "/", "tmp", "workback", "tmp", "subpath", "el", "pop", "workback", "el", "insert", "tmp", "text_", "bytes_", "el", "latin-1", "utf-8", "workback", "workback", "", "workback", "workback", "new_script_name", "join", "/", "workback", "new_request", "copy", "request", "environ", "new_request", "SCRIPT_NAME", "new_script_name", "environ", "new_request", "PATH_INFO", "new_path_info", "bfg.routes.route", "environ", "new_request", "environ", "new_request", "bfg.routes.route", "bfg.routes.matchdict", "environ", "new_request", "environ", "new_request", "bfg.routes.matchdict", "get_response", "new_request", "app", "numpy", "np", "numpy.random", "nr", "numpy.linalg", "linalg", "networkx", "nx", "maths", "mvn", "normal_inverse_wishart", "gaussian_network", "gaussian_clique_tree", "evaluate_distribution", "d", "test", "name", "lpdf", "logpdf", "d", "test", "s", "sum", "np", "lpdf", "name", " log score = ", "s", "s", "test_mvn", "n", "train", "test", "mvn_", "learn_ml", "mvn", "train", "mvn_", "evaluate_distribution", "mvn_", "test", "ML-MVN", "test_inverse_wishart", "n", "train", "test", "niw", "prior_2", "normal_inverse_wishart", "n", "n", "incorporate_evidence", "niw", "train", "t", "get_posterior_predictive_distribution", "niw", "t", "evaluate_distribution", "t", "test", "BMA-NIW", "test_gaussian_network", "n", "train", "test", "s", "DiGraph", "nx", "i", "range", "n", "j", "range", "i", "add_edge", "s", "j", "i", "gn", "learn_ml", "gaussian_network", "train", "s", "gn", "evaluate_distribution", "gn", "test", "ML-GN", "test_gct", "n", "train", "test", "clique_domains", "range", "n", "separator_domains", "h", "prior", "gaussian_clique_tree", "n", "clique_domains", "separator_domains", "incorporate_evidence", "h", "train", "t", "get_posterior_predictive_distribution", "h", "h", "evaluate_distribution", "t", "test", "BMA-GCT", "make_multidimensional_normal", "n_vars", "mu", "randn", "nr", "n_vars", "s", "randn", "nr", "n_vars", "n_vars", "sigma", "make_symmetric", "maths", "dot", "np", "transpose", "s", "s", "ei", "eig", "linalg", "sigma", "all", "np", "ei", "s", "randn", "nr", "n_vars", "sigma", "make_symmetric", "maths", "dot", "np", "transpose", "s", "s", "ei", "eig", "linalg", "sigma", "sigma", "inv", "linalg", "sigma", "mvn", "mvn", "mu", "sigma", "__name__", "__main__", "NVARS", "m", "make_multidimensional_normal", "NVARS", "NTRAIN", "train", "sample", "m", "NTRAIN", "NLOO", "test", "sample", "m", "gn", "s_gn", "test_gaussian_network", "NVARS", "train", "test", "loo_train", "train", "NTRAIN", "NLOO", "loo_out", "train", "NTRAIN", "NLOO", "NTRAIN", "gn_loo_1", "s_gn_loo_1", "test_gaussian_network", "NVARS", "loo_train", "test", "gn_loo_2", "get_loo_model", "gn", "loo_out", "s_gn_loo_2", "evaluate_distribution", "gn_loo_2", "test", "LOO_2", "gct", "s_gct", "test_gct", "NVARS", "train", "test", "gct_loo_1", "s_gct_loo_1", "test_gct", "NVARS", "loo_train", "test", "gct_loo_2", "get_loo_model", "gct", "loo_out", "s_gn_loo_2", "evaluate_distribution", "gct_loo_2", "test", "LOO_2", "wx", "time", "threading", "Thread", "os", "glob", "sys", "datetime", "datetime", "pysqlite2", "dbapi2", "sqlite", "atexit", "sys", "ostype", "platform", "sys", "g_processid", "getpid", "os", "win", "ostype", "win32api", "win32con", "terminateparentprocess", "terminating process id on exit", "handle", "OpenProcess", "win32api", "PROCESS_TERMINATE", "win32con", "g_processid", "TerminateProcess", "win32api", "handle", "CloseHandle", "win32api", "handle", "register", "atexit", "terminateparentprocess", "close_connection", "some_con", "commit", "some_con", "close", "some_con", "MyFrame", "Frame", "wx", "g_fileclickedindex", "mypath", "", "OnDelete", "self", "event", "filename", "GetItemText", "lc", "self", "g_fileclickedindex", "self", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "extn", "row", "extn", "chars", "fullfilename", "row", "row", "fullfilename", "filename", "cursor", "cursor", "connection", "commit", "connection", "execute", "cursor", "delete from filenames where filename = ? and modifiedFilename = ?", "row", "row", "dlg", "MessageDialog", "wx", "self", "filename deleted from database", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "DeleteItem", "lc", "self", "g_fileclickedindex", "self", "extn", "exact", "row", "filename", "cursor", "cursor", "connection", "commit", "connection", "execute", "cursor", "delete from filenames where filename = ?", "row", "dlg", "MessageDialog", "wx", "self", "filename deleted from database", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "DeleteItem", "lc", "self", "g_fileclickedindex", "self", "extn", "extn", "row", "filename", "cursor", "cursor", "connection", "commit", "connection", "execute", "cursor", "delete from filenames where filename = ?", "row", "dlg", "MessageDialog", "wx", "self", "filename deleted from database", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "DeleteItem", "lc", "self", "g_fileclickedindex", "self", "OnSelect", "self", "event", "window", "FindWindowByName", "self", "Filenames", "index", "GetIndex", "event", "g_fileclickedindex", "self", "index", "filename", "GetItemText", "lc", "self", "index", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "bDeleteButton", "False", "StaticText", "wx", "pnl3", "self", "                                                             ", "style", "ALIGN_LEFT", "wx", "row", "cursor", "extn", "row", "extn", "chars", "fullfilename", "row", "row", "fullfilename", "filename", "bDeleteButton", "True", "fulldisplaytext", "File name: ", "str", "filename", "StaticText", "wx", "pnl3", "self", "fulldisplaytext", "style", "ALIGN_LEFT", "wx", "StaticText", "wx", "pnl3", "self", "Your file will be deleted every : ", "str", "row", " minutes", "style", "ALIGN_LEFT", "wx", "extn", "exact", "row", "filename", "bDeleteButton", "True", "StaticText", "wx", "pnl3", "self", "File name: ", "str", "filename", "style", "ALIGN_LEFT", "wx", "StaticText", "wx", "pnl3", "self", "Your file will be deleted every : ", "str", "row", " minutes", "style", "ALIGN_LEFT", "wx", "extn", "extn", "row", "filename", "bDeleteButton", "True", "StaticText", "wx", "pnl3", "self", "File name: ", "str", "filename", "style", "ALIGN_LEFT", "wx", "StaticText", "wx", "pnl3", "self", "Your file will be deleted every : ", "str", "row", " minutes", "style", "ALIGN_LEFT", "wx", "bDeleteButton", "True", "bbutton", "self", "Button", "wx", "pnl3", "self", "I no longer want to delete this file.", "Bind", "bbutton", "self", "EVT_BUTTON", "wx", "OnDelete", "self", "id", "__init__", "self", "parent", "id", "title", "__init__", "Frame", "wx", "self", "parent", "id", "title", "menubar", "MenuBar", "wx", "file", "Menu", "wx", "edit", "Menu", "wx", "help", "Menu", "wx", "Append", "file", "&Open", "Open a new document", "fileReset", "self", "Append", "file", "&Reset Database", "Reset the database", "Bind", "self", "EVT_MENU", "wx", "menuFileReset", "self", "fileReset", "self", "AppendSeparator", "file", "quit", "MenuItem", "wx", "file", "&Quit\tCtrl+Q", "Quit the Application", "EVT_MENU", "wx", "self", "OnQuit", "self", "about", "self", "Append", "help", "&About", "About", "Bind", "self", "EVT_MENU", "wx", "OnAbout", "self", "about", "self", "AppendItem", "file", "quit", "Append", "menubar", "file", "&File", "Append", "menubar", "edit", "&Edit", "Append", "menubar", "help", "&Help", "SetMenuBar", "self", "menubar", "hbox", "BoxSizer", "wx", "HORIZONTAL", "wx", "pnl1", "self", "Panel", "wx", "self", "style", "SIMPLE_BORDER", "wx", "pnl2", "self", "Panel", "wx", "self", "style", "SIMPLE_BORDER", "wx", "pnl3", "self", "Panel", "wx", "self", "style", "SIMPLE_BORDER", "wx", "StaticBox", "wx", "pnl3", "self", "File Information", "size", "lc", "self", "ListCtrl", "wx", "pnl2", "self", "id", "size", "style", "LC_REPORT", "wx", "InsertColumn", "lc", "self", "Files 2 be deleted", "SetColumnWidth", "lc", "self", "SetName", "lc", "self", "Filenames", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "localfname", "row", "extn", "row", "extn", "chars", "localfname", "row", "row", "num_items", "GetItemCount", "lc", "self", "InsertStringItem", "lc", "self", "num_items", "localfname", "SetStringItem", "lc", "self", "num_items", "localfname", "Bind", "lc", "self", "EVT_LIST_ITEM_SELECTED", "wx", "OnSelect", "self", "m_addfiles", "Button", "wx", "pnl1", "self", "Browse", "Bind", "m_addfiles", "EVT_BUTTON", "wx", "openfile", "self", "m_text", "StaticText", "wx", "pnl1", "self", "label", "File: ", "pos", "name", "File: ", "SetFont", "m_text", "Font", "wx", "SWISS", "wx", "NORMAL", "wx", "NORMAL", "wx", "SetSize", "m_text", "GetBestSize", "m_text", "m_filename", "self", "TextCtrl", "wx", "pnl1", "self", "pos", "size", "cb", "self", "CheckBox", "wx", "pnl1", "self", "Delete exact filename", "SetValue", "cb", "self", "True", "EVT_CHECKBOX", "wx", "self", "GetId", "cb", "self", "uncheckothers1", "self", "cb1", "self", "CheckBox", "wx", "pnl1", "self", "Delete extensions. (*.txt)", "SetValue", "cb1", "self", "False", "EVT_CHECKBOX", "wx", "self", "GetId", "cb1", "self", "uncheckothers2", "self", "cb2", "self", "CheckBox", "wx", "pnl1", "self", "Delete with ", "number of chars. (vc*.txt) ", "SetValue", "cb2", "self", "False", "EVT_CHECKBOX", "wx", "self", "GetId", "cb2", "self", "showText", "self", "rb1", "self", "RadioButton", "wx", "pnl1", "self", "Hourly", "style", "RB_GROUP", "wx", "rb2", "self", "RadioButton", "wx", "pnl1", "self", "24 Hour", "rb3", "self", "RadioButton", "wx", "pnl1", "self", "Every 30 minutes", "sld", "self", "Slider", "wx", "pnl1", "self", "value", "minValue", "maxValue", "pos", "size", "style", "SL_HORIZONTAL", "wx", "SL_LABELS", "wx", "m_finaladdfiles", "self", "Button", "wx", "pnl1", "self", "ADD FILE", "Bind", "m_finaladdfiles", "self", "EVT_BUTTON", "wx", "addtodb", "self", "Add", "hbox", "pnl1", "self", "EXPAND", "wx", "ALL", "wx", "Add", "hbox", "pnl2", "self", "EXPAND", "wx", "ALL", "wx", "Add", "hbox", "pnl3", "self", "EXPAND", "wx", "ALL", "wx", "SetSize", "self", "SetSizer", "self", "hbox", "statusbar", "self", "CreateStatusBar", "self", "SetStatusText", "statusbar", "self", "Welcome to SpaceClaimer. Please refer help.", "Centre", "self", "OnAbout", "self", "event", "dlg", "MessageDialog", "wx", "self", "K M Darshan\t\n2011\t", "About", "OK", "wx", "ICON_INFORMATION", "wx", "ShowModal", "dlg", "Destroy", "dlg", "OnQuit", "self", "event", "close_connection", "connection", "Close", "self", "handle", "OpenProcess", "win32api", "PROCESS_TERMINATE", "win32con", "g_processid", "TerminateProcess", "win32api", "handle", "CloseHandle", "win32api", "handle", "menuFileReset", "self", "event", "dlg", "MessageDialog", "wx", "self", "Database will be reset", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "cursor", "cursor", "connection", "execute", "cursor", "delete from filenames", "DeleteAllItems", "lc", "self", "commit", "connection", "uncheckothers1", "self", "event", "SetValue", "cb2", "self", "False", "SetValue", "cb1", "self", "False", "uncheckothers2", "self", "event", "SetValue", "cb", "self", "False", "SetValue", "cb2", "self", "False", "showText", "self", "event", "SetValue", "cb", "self", "False", "SetValue", "cb1", "self", "False", "SetBackgroundColour", "statusbar", "self", "RED", "SetStatusText", "statusbar", "self", "Eg: file name-> apple.txt. If you select 2 using the slider, it will be ap*.txt. All files starting with 'ap' and with extensions .txt will be deleted.", "openfile", "self", "event", "dlg", "FileDialog", "wx", "self", "Choose a file", "getcwd", "os", "", "*.*", "OPEN", "wx", "ShowModal", "dlg", "ID_OK", "wx", "path", "GetPath", "dlg", "mypath", "basename", "path", "os", "path", "fullname", "GetDirectory", "dlg", "\\", "GetFilename", "dlg", "SetValue", "m_filename", "self", "fullname", "Destroy", "dlg", "addtodb", "self", "event", "localfilename", "", "cursor", "cursor", "connection", "localfilename", "GetValue", "m_filename", "self", "len", "localfilename", "bfilename", "GetValue", "cb", "self", "bextn", "GetValue", "cb1", "self", "bchars", "GetValue", "cb2", "self", "brb1", "GetValue", "rb1", "self", "brb2", "GetValue", "rb2", "self", "brb3", "GetValue", "rb3", "self", "timelimit", "brb1", "True", "timelimit", "brb2", "True", "timelimit", "brb3", "True", "timelimit", "bfilename", "True", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "row", "localfilename", "row", "exact", "dlg", "MessageDialog", "wx", "self", "Exact filename already in database, try different option", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "valtype", "exact", "execute", "cursor", "INSERT INTO filenames VALUES (null, ?, ?, ?, ?)", "localfilename", "localfilename", "timelimit", "valtype", "commit", "connection", "num_items", "GetItemCount", "lc", "self", "InsertStringItem", "lc", "self", "num_items", "localfilename", "bextn", "True", "valtype", "extn", "fileName", "fileExtension", "splitext", "path", "os", "localfilename", "pos", "rfind", "unicode", "localfilename", "tempfilename", "fileName", "pos", "tempfilename", "tempfilename", "*", "fileExtension", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "row", "localfilename", "row", "extn", "dlg", "MessageDialog", "wx", "self", "Exact extension filename already in database, try different option", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "execute", "cursor", "INSERT INTO filenames VALUES (null, ?, ?, ?,?)", "localfilename", "tempfilename", "timelimit", "valtype", "commit", "connection", "num_items", "GetItemCount", "lc", "self", "InsertStringItem", "lc", "self", "num_items", "tempfilename", "bchars", "True", "valtype", "chars", "nchars", "GetValue", "sld", "self", "fileName", "fileExtension", "splitext", "path", "os", "localfilename", "pos", "rfind", "unicode", "localfilename", "posextn", "rfind", "unicode", "localfilename", "fileExtension", "tempfilename", "fileName", "pos", "posextn", "tempfulldir", "fileName", "pos", "nchars", "len", "tempfilename", "tempfilename", "tempfilename", "nchars", "tempfilenameExtn", "tempfilename", "*", "fileExtension", "tempFullfilename", "tempfulldir", "tempfilenameExtn", "execute", "cursor", "SELECT * FROM filenames", "bEmptydb", "True", "row", "cursor", "bEmptydb", "False", "tempdbname", "row", "row", "tempdbname", "tempFullfilename", "dlg", "MessageDialog", "wx", "self", "Exact filename already in database, try different option", "Important", "OK", "wx", "ShowModal", "dlg", "Destroy", "dlg", "execute", "cursor", "INSERT INTO filenames VALUES (null, ?,?,?,?)", "tempfulldir", "tempfilenameExtn", "timelimit", "valtype", "commit", "connection", "num_items", "GetItemCount", "lc", "self", "InsertStringItem", "lc", "self", "num_items", "tempfulldir", "tempfilenameExtn", "bEmptydb", "True", "execute", "cursor", "INSERT INTO filenames VALUES (null, ?, ?, ?, ?)", "tempfulldir", "tempfilenameExtn", "timelimit", "valtype", "commit", "connection", "num_items", "GetItemCount", "lc", "self", "InsertStringItem", "lc", "self", "num_items", "tempFullfilename", "helper_delete_files", "typeDeletion", "tempfilenamewithextn", "localfilename", "listExtn", "fileName", "fileExtension", "splitext", "path", "os", "localfilename", "pos", "rfind", "unicode", "localfilename", "\\", "tempfilename", "fileName", "pos", "typeDeletion", "extn", "fileExtension", "*", "fileExtension", "typeDeletion", "chars", "fileExtension", "tempfilenamewithextn", "append", "listExtn", "fileExtension", "listExtn", "files_removed", "file_list", "root", "dirs", "files", "walk", "os", "tempfilename", "trace", "listExtn", "win_trace_path", "join", "path", "os", "root", "trace", "filename", "glob", "glob", "win_trace_path", "exists", "path", "os", "filename", "filename", "append", "file_list", "filename", "No files found", "file", "file_list", "removing ", "file", "isfile", "path", "os", "file", "remove", "os", "file", "files_removed", "querydb", "True", "localtime", "now", "datetime", "localmin", "minute", "localtime", "local24", "hour", "localtime", " ", "localmin", "localmin", "connection", "connect", "sqlite", "spaceclaimer.db", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "row", "localfilename", "row", "deletiontype", "row", "deletiontype", "deletiontype", "exact", "exists", "path", "os", "localfilename", "remove", "os", "localfilename", "deletiontype", "extn", "deleting files with extension", "helper_delete_files", "extn", "", "localfilename", "deletiontype", "chars", "tempfilenamewithextn", "row", "deleting files with chars", "helper_delete_files", "chars", "tempfilenamewithextn", "localfilename", "localmin", "connection", "connect", "sqlite", "spaceclaimer.db", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "row", "localfilename", "row", "deletiontype", "row", "deletiontype", "deletiontype", "exact", "exists", "path", "os", "localfilename", "remove", "os", "localfilename", "deletiontype", "extn", "deleting files with extension", "helper_delete_files", "extn", "", "localfilename", "deletiontype", "chars", "tempfilenamewithextn", "row", "deleting files with chars", "helper_delete_files", "chars", "tempfilenamewithextn", "localfilename", "local24", "localmin", "listExtn", "connection", "connect", "sqlite", "spaceclaimer.db", "cursor", "cursor", "connection", "execute", "cursor", "SELECT * FROM filenames", "row", "cursor", "row", "localfilename", "row", "deletiontype", "row", "deletiontype", "deletiontype", "exact", "exists", "path", "os", "localfilename", "remove", "os", "localfilename", "deletiontype", "extn", "deleting files with extension", "helper_delete_files", "extn", "", "localfilename", "deletiontype", "chars", "tempfilenamewithextn", "row", "deleting files with chars", "helper_delete_files", "chars", "tempfilenamewithextn", "localfilename", "sleep", "time", "createdummythread", "True", "sleep", "time", "t", "Thread", "target", "querydb", "start", "t", "MyTaskBarIcon", "TaskBarIcon", "wx", "__init__", "self", "frame", "__init__", "TaskBarIcon", "wx", "self", "frame", "self", "frame", "SetIcon", "self", "Icon", "wx", "refresh-icon.png", "BITMAP_TYPE_PNG", "wx", "mytaskbaricon.py", "Bind", "self", "EVT_MENU", "wx", "OnTaskBarClose", "self", "id", "CreatePopupMenu", "self", "menu", "Menu", "wx", "Append", "menu", "Close", "menu", "OnTaskBarClose", "self", "event", "handle", "OpenProcess", "win32api", "PROCESS_TERMINATE", "win32con", "g_processid", "TerminateProcess", "win32api", "handle", "CloseHandle", "win32api", "handle", "OnTaskBarActivate", "self", "event", "IsShown", "frame", "self", "Show", "frame", "self", "OnTaskBarDeactivate", "self", "event", "IsShown", "frame", "self", "Hide", "frame", "self", "MyApp", "App", "wx", "OnInit", "self", "cursor", "cursor", "connection", "execute", "cursor", "CREATE TABLE if not exists filenames                         (id INTEGER PRIMARY KEY,                         filename VARCHAR(500), modifiedFilename VARCHAR(500),                         timelimit INT, typeofdeletion VARCHAR(10))", "tskic", "self", "MyTaskBarIcon", "self", "commit", "connection", "frame", "self", "MyFrame", "None", "space claimer", "Show", "frame", "self", "True", "t", "Thread", "target", "querydb", "start", "t", "True", "connection", "connect", "sqlite", "spaceclaimer.db", "app", "MyApp", "MainLoop", "app", "os", "django.core.exceptions", "ImproperlyConfigured", "django.core.files.storage", "Storage", "django.utils.datastructures", "SortedDict", "django.utils.functional", "memoize", "LazyObject", "django.utils.importlib", "import_module", "django.utils._os", "safe_join", "staticfiles", "utils", "storage", "staticfiles.conf", "settings", "_finders", "SortedDict", "BaseFinder", "object", "\n    A base file finder to be used for custom staticfiles finder classes.\n    ", "find", "self", "path", "all", "False", "\n        Given a relative file path this ought to find an\n        absolute file path.\n\n        If the ``all`` parameter is ``False`` (default) only\n        the first found file path will be returned; if set\n        to ``True`` a list of all found files paths is returned.\n        ", "NotImplementedError", "list", "self", "ignore_patterns", "\n        Given an optional list of paths to ignore, this should return\n        a three item iterable with path, prefix and a storage instance.\n        ", "NotImplementedError", "FileSystemFinder", "BaseFinder", "\n    A static files finder that uses the ``STATICFILES_DIRS`` setting\n    to locate files.\n    ", "__init__", "args", "kwargs", "self", "apps", "None", "locations", "self", "storages", "self", "SortedDict", "isinstance", "STATICFILES_DIRS", "settings", "list", "tuple", "ImproperlyConfigured", "Your STATICFILES_DIRS setting is not a tuple or list; perhaps you forgot a trailing comma?", "root", "STATICFILES_DIRS", "settings", "isinstance", "root", "list", "tuple", "prefix", "root", "root", "prefix", "", "abspath", "path", "os", "STATIC_ROOT", "settings", "abspath", "path", "os", "root", "ImproperlyConfigured", "The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting", "prefix", "root", "locations", "self", "append", "locations", "self", "prefix", "root", "prefix", "root", "locations", "self", "filesystem_storage", "TimeAwareFileSystemStorage", "storage", "location", "root", "prefix", "filesystem_storage", "prefix", "storages", "self", "root", "filesystem_storage", "__init__", "super", "FileSystemFinder", "self", "args", "kwargs", "find", "self", "path", "all", "False", "\n        Looks for files in the extra locations\n        as defined in ``STATICFILES_DIRS``.\n        ", "matches", "prefix", "root", "locations", "self", "matched_path", "find_location", "self", "root", "path", "prefix", "matched_path", "all", "matched_path", "append", "matches", "matched_path", "matches", "find_location", "self", "root", "path", "prefix", "None", "\n        Finds a requested static file in a location, returning the found\n        absolute path (or ``None`` if no match).\n        ", "prefix", "prefix", "%s%s", "prefix", "sep", "os", "startswith", "path", "prefix", "None", "path", "path", "len", "prefix", "path", "safe_join", "root", "path", "exists", "path", "os", "path", "path", "list", "self", "ignore_patterns", "\n        List all files in all locations.\n        ", "prefix", "root", "locations", "self", "storage", "storages", "self", "root", "path", "get_files", "utils", "storage", "ignore_patterns", "path", "storage", "AppDirectoriesFinder", "BaseFinder", "\n    A static files finder that looks in the directory of each app as\n    specified in the source_dir attribute of the given storage class.\n    ", "storage_class", "AppStaticStorage", "storage", "__init__", "args", "kwargs", "self", "apps", "None", "apps", "self", "storages", "self", "SortedDict", "apps", "None", "apps", "INSTALLED_APPS", "settings", "app", "apps", "app", "STATICFILES_EXCLUDED_APPS", "settings", "app_storage", "storage_class", "self", "app", "isdir", "path", "os", "location", "app_storage", "storages", "self", "app", "app_storage", "app", "apps", "self", "append", "apps", "self", "app", "__init__", "super", "AppDirectoriesFinder", "self", "args", "kwargs", "list", "self", "ignore_patterns", "\n        List all files in all app storages.\n        ", "storage", "itervalues", "storages", "self", "exists", "storage", "", "path", "get_files", "utils", "storage", "ignore_patterns", "path", "storage", "find", "self", "path", "all", "False", "\n        Looks for files in the app directories.\n        ", "matches", "app", "apps", "self", "match", "find_in_app", "self", "app", "path", "match", "all", "match", "append", "matches", "match", "matches", "find_in_app", "self", "app", "path", "\n        Find a requested static file in an app's static locations.\n        ", "storage", "get", "storages", "self", "app", "None", "storage", "prefix", "storage", "prefix", "%s%s", "prefix", "storage", "sep", "os", "startswith", "path", "prefix", "None", "path", "path", "len", "prefix", "exists", "storage", "path", "matched_path", "path", "storage", "path", "matched_path", "matched_path", "LegacyAppDirectoriesFinder", "AppDirectoriesFinder", "\n    A legacy file finder that provides a migration path for the\n    default directory name in previous versions of staticfiles, \"media\".\n    ", "storage_class", "LegacyAppMediaStorage", "storage", "BaseStorageFinder", "BaseFinder", "\n    A base static files finder to be used to extended\n    with an own storage class.\n    ", "storage", "None", "__init__", "args", "kwargs", "self", "storage", "None", "storage", "None", "storage", "self", "storage", "storage", "self", "None", "ImproperlyConfigured", "The staticfiles storage finder %r doesn't have a storage class assigned.", "__class__", "self", "isinstance", "storage", "self", "Storage", "LazyObject", "storage", "self", "storage", "self", "__init__", "super", "BaseStorageFinder", "self", "args", "kwargs", "find", "self", "path", "all", "False", "\n        Looks for files in the default file storage, if it's local.\n        ", "path", "storage", "self", "", "NotImplementedError", "exists", "storage", "self", "path", "match", "path", "storage", "self", "path", "all", "match", "match", "match", "list", "self", "ignore_patterns", "\n        List all files of the storage.\n        ", "path", "get_files", "utils", "storage", "self", "ignore_patterns", "path", "storage", "self", "DefaultStorageFinder", "BaseStorageFinder", "\n    A static files finder that uses the default storage backend.\n    ", "storage", "default_storage", "storage", "find", "path", "all", "False", "\n    Find a static file with the given path using all enabled finders.\n\n    If ``all`` is ``False`` (default), return the first matching\n    absolute path (or ``None`` if no match). Otherwise return a list.\n    ", "matches", "finder", "get_finders", "result", "find", "finder", "path", "all", "all", "all", "result", "result", "isinstance", "result", "list", "tuple", "result", "result", "extend", "matches", "result", "matches", "matches", "all", "None", "get_finders", "\n    Function to yield finder instances.\n    ", "finder_path", "STATICFILES_FINDERS", "settings", "get_finder", "finder_path", "_get_finder", "import_path", "\n    Imports the staticfiles finder class described by import_path, where\n    import_path is the full Python path to the class.\n    ", "module", "attr", "rsplit", "import_path", ".", "mod", "import_module", "module", "ImportError", "e", "ImproperlyConfigured", "Error importing module %s: \"%s\"", "module", "e", "Finder", "getattr", "mod", "attr", "AttributeError", "ImproperlyConfigured", "Module \"%s\" does not define a \"%s\" class.", "module", "attr", "issubclass", "Finder", "BaseFinder", "ImproperlyConfigured", "Finder \"%s\" is not a subclass of \"%s\"", "Finder", "BaseFinder", "Finder", "get_finder", "memoize", "_get_finder", "_finders", "decimal", "datetime", "django.conf", "settings", "django.utils.translation", "get_language", "to_locale", "check_for_language", "django.utils.importlib", "import_module", "django.utils.encoding", "smart_str", "django.utils", "dateformat", "numberformat", "datetime_safe", "django.utils.safestring", "mark_safe", "_format_cache", "_format_modules_cache", "reset_format_cache", "Clear any cached formats.\n\n    This method is provided primarily for testing purposes,\n    so that the effects of cached formats can be removed.\n    ", "_format_cache", "_format_modules_cache", "iter_format_modules", "lang", "\n    Does the heavy lifting of finding format modules.\n    ", "check_for_language", "lang", "format_locations", "django.conf.locale.%s", "FORMAT_MODULE_PATH", "settings", "append", "format_locations", "FORMAT_MODULE_PATH", "settings", ".%s", "reverse", "format_locations", "locale", "to_locale", "lang", "locales", "locale", "_", "locale", "append", "locales", "split", "locale", "_", "location", "format_locations", "loc", "locales", "import_module", ".formats", "location", "loc", "ImportError", "get_format_modules", "reverse", "False", "\n    Returns a list of the format modules found\n    ", "lang", "get_language", "modules", "setdefault", "_format_modules_cache", "lang", "list", "iter_format_modules", "lang", "reverse", "list", "reversed", "modules", "modules", "get_format", "format_type", "lang", "use_l10n", "None", "None", "\n    For a specific format type, returns the format for the current\n    language (locale), defaults to the format in the settings.\n    format_type is the name of the format, e.g. 'DATE_FORMAT'\n\n    If use_l10n is provided and is not None, that will force the value to\n    be localized (or not), overriding the value of settings.USE_L10N.\n    ", "format_type", "smart_str", "format_type", "use_l10n", "use_l10n", "None", "USE_L10N", "settings", "lang", "None", "lang", "get_language", "cache_key", "format_type", "lang", "_format_cache", "cache_key", "getattr", "settings", "format_type", "KeyError", "module", "get_format_modules", "val", "getattr", "module", "format_type", "_format_cache", "cache_key", "val", "val", "AttributeError", "_format_cache", "cache_key", "None", "getattr", "settings", "format_type", "date_format", "value", "format", "use_l10n", "None", "None", "\n    Formats a datetime.date or datetime.datetime object using a\n    localizable format\n\n    If use_l10n is provided and is not None, that will force the value to\n    be localized (or not), overriding the value of settings.USE_L10N.\n    ", "format", "dateformat", "value", "get_format", "format", "DATE_FORMAT", "use_l10n", "use_l10n", "time_format", "value", "format", "use_l10n", "None", "None", "\n    Formats a datetime.time object using a localizable format\n\n    If use_l10n is provided and is not None, that will force the value to\n    be localized (or not), overriding the value of settings.USE_L10N.\n    ", "time_format", "dateformat", "value", "get_format", "format", "TIME_FORMAT", "use_l10n", "use_l10n", "number_format", "value", "decimal_pos", "use_l10n", "None", "None", "\n    Formats a numeric value using localization settings\n\n    If use_l10n is provided and is not None, that will force the value to\n    be localized (or not), overriding the value of settings.USE_L10N.\n    ", "use_l10n", "use_l10n", "None", "USE_L10N", "settings", "lang", "get_language", "lang", "None", "format", "numberformat", "value", "get_format", "DECIMAL_SEPARATOR", "lang", "use_l10n", "use_l10n", "decimal_pos", "get_format", "NUMBER_GROUPING", "lang", "use_l10n", "use_l10n", "get_format", "THOUSAND_SEPARATOR", "lang", "use_l10n", "use_l10n", "localize", "value", "use_l10n", "None", "\n    Checks if value is a localizable type (date, number...) and returns it\n    formatted as a string using current locale format.\n\n    If use_l10n is provided and is not None, that will force the value to\n    be localized (or not), overriding the value of settings.USE_L10N.\n    ", "isinstance", "value", "bool", "mark_safe", "unicode", "value", "isinstance", "value", "Decimal", "decimal", "float", "int", "long", "number_format", "value", "use_l10n", "use_l10n", "isinstance", "value", "datetime", "datetime", "date_format", "value", "DATETIME_FORMAT", "use_l10n", "use_l10n", "isinstance", "value", "date", "datetime", "date_format", "value", "use_l10n", "use_l10n", "isinstance", "value", "time", "datetime", "time_format", "value", "TIME_FORMAT", "use_l10n", "use_l10n", "value", "localize_input", "value", "default", "None", "\n    Checks if an input value is a localizable type and returns it\n    formatted with the appropriate formatting string of the current locale.\n    ", "isinstance", "value", "Decimal", "decimal", "float", "int", "long", "number_format", "value", "isinstance", "value", "datetime", "datetime", "value", "new_datetime", "datetime_safe", "value", "format", "smart_str", "default", "get_format", "DATETIME_INPUT_FORMATS", "strftime", "value", "format", "isinstance", "value", "date", "datetime", "value", "new_date", "datetime_safe", "value", "format", "smart_str", "default", "get_format", "DATE_INPUT_FORMATS", "strftime", "value", "format", "isinstance", "value", "time", "datetime", "format", "smart_str", "default", "get_format", "TIME_INPUT_FORMATS", "strftime", "value", "format", "value", "sanitize_separators", "value", "\n    Sanitizes a value according to the current decimal and\n    thousand separator setting. Used with form field input.\n    ", "USE_L10N", "settings", "decimal_separator", "get_format", "DECIMAL_SEPARATOR", "isinstance", "value", "basestring", "parts", "decimal_separator", "value", "value", "decimals", "split", "value", "decimal_separator", "append", "parts", "decimals", "USE_THOUSAND_SEPARATOR", "settings", "append", "parts", "replace", "value", "get_format", "THOUSAND_SEPARATOR", "", "append", "parts", "value", "value", "join", ".", "reversed", "parts", "value", "datetime", "cPickle", "pickle", "ImportError", "pickle", "django.db", "models", "django.db.models.query", "QuerySet", "django.conf", "settings", "django.core.urlresolvers", "reverse", "django.template", "Context", "django.template.loader", "render_to_string", "django.core.exceptions", "ImproperlyConfigured", "django.contrib.sites.models", "Site", "django.contrib.auth.models", "User", "django.contrib.auth.models", "AnonymousUser", "django.contrib.contenttypes.models", "ContentType", "django.contrib.contenttypes", "generic", "django.utils.translation", "ugettext_lazy", "_", "django.utils.translation", "ugettext", "get_language", "activate", "django.core.mail", "EmailMultiAlternatives", "mailer", "INSTALLED_APPS", "settings", "mailer", "send_mail", "django.core.mail", "send_mail", "QUEUE_ALL", "getattr", "settings", "NOTIFICATION_QUEUE_ALL", "False", "LanguageStoreNotAvailable", "Exception", "NoticeType", "Model", "models", "label", "CharField", "models", "_", "label", "max_length", "display", "CharField", "models", "_", "display", "max_length", "description", "CharField", "models", "_", "description", "max_length", "default", "IntegerField", "models", "_", "default", "__unicode__", "self", "label", "self", "Meta", "verbose_name", "_", "notice type", "verbose_name_plural", "_", "notice types", "NOTICE_MEDIA", "1", "_", "Email", "NOTICE_MEDIA_DEFAULTS", "1", "NoticeSetting", "Model", "models", "\n    Indicates, for a given user, whether to send notifications\n    of a given type to a given medium.\n    ", "user", "ForeignKey", "models", "User", "verbose_name", "_", "user", "notice_type", "ForeignKey", "models", "NoticeType", "verbose_name", "_", "notice type", "medium", "CharField", "models", "_", "medium", "max_length", "choices", "NOTICE_MEDIA", "send", "BooleanField", "models", "_", "send", "Meta", "verbose_name", "_", "notice setting", "verbose_name_plural", "_", "notice settings", "unique_together", "user", "notice_type", "medium", "get_notification_setting", "user", "notice_type", "medium", "get", "objects", "NoticeSetting", "user", "user", "notice_type", "notice_type", "medium", "medium", "DoesNotExist", "NoticeSetting", "default", "NOTICE_MEDIA_DEFAULTS", "medium", "default", "notice_type", "setting", "NoticeSetting", "user", "user", "notice_type", "notice_type", "medium", "medium", "send", "default", "save", "setting", "setting", "should_send", "user", "notice_type", "medium", "send", "get_notification_setting", "user", "notice_type", "medium", "NoticeManager", "Manager", "models", "notices_for", "self", "user", "archived", "unseen", "on_site", "False", "None", "None", "\n        returns Notice objects for the given user.\n\n        If archived=False, it only include notices not archived.\n        If archived=True, it returns all notices for that user.\n\n        If unseen=None, it includes all notices.\n        If unseen=True, return only unseen notices.\n        If unseen=False, return only seen notices.\n        ", "archived", "qs", "filter", "self", "user", "user", "qs", "filter", "self", "user", "user", "archived", "archived", "unseen", "None", "qs", "filter", "qs", "unseen", "unseen", "on_site", "None", "qs", "filter", "qs", "on_site", "on_site", "qs", "unseen_count_for", "kwargs", "self", "user", "\n        returns the number of unseen notices for the given user but does not\n        mark them seen\n        ", "count", "notices_for", "self", "user", "unseen", "True", "kwargs", "Notice", "Model", "models", "user", "ForeignKey", "models", "User", "verbose_name", "_", "user", "message", "TextField", "models", "_", "message", "notice_type", "ForeignKey", "models", "NoticeType", "verbose_name", "_", "notice type", "added", "DateTimeField", "models", "_", "added", "default", "now", "datetime", "datetime", "unseen", "BooleanField", "models", "_", "unseen", "default", "True", "archived", "BooleanField", "models", "_", "archived", "default", "False", "on_site", "BooleanField", "models", "_", "on site", "objects", "NoticeManager", "__unicode__", "self", "message", "self", "__str__", "self", "message", "self", "archive", "self", "archived", "self", "True", "save", "self", "is_unseen", "self", "\n        returns value of self.unseen but also changes it to false.\n\n        Use this in a template to mark an unseen notice differently the first\n        time it is shown.\n        ", "unseen", "unseen", "self", "unseen", "unseen", "self", "False", "save", "self", "unseen", "Meta", "ordering", "-added", "verbose_name", "_", "notice", "verbose_name_plural", "_", "notices", "get_absolute_url", "self", "notification_notice", "str", "pk", "self", "get_absolute_url", "permalink", "models", "get_absolute_url", "NoticeQueueBatch", "Model", "models", "\n    A queued notice.\n    Denormalized data for a notice.\n    ", "pickled_data", "TextField", "models", "create_notice_type", "label", "display", "description", "default", "verbosity", "\n    Creates a new NoticeType.\n\n    This is intended to be used by other apps as a post_syncdb manangement step.\n    ", "notice_type", "get", "objects", "NoticeType", "label", "label", "updated", "False", "display", "display", "notice_type", "display", "notice_type", "display", "updated", "True", "default", "default", "notice_type", "default", "notice_type", "default", "updated", "True", "updated", "save", "notice_type", "verbosity", "Updated %s NoticeType", "label", "DoesNotExist", "NoticeType", "save", "NoticeType", "label", "label", "display", "display", "description", "description", "default", "default", "verbosity", "Created %s NoticeType", "label", "get_notification_language", "user", "\n    Returns site-specific notification language for this user. Raises\n    LanguageStoreNotAvailable if this site does not use translated\n    notifications.\n    ", "getattr", "settings", "NOTIFICATION_LANGUAGE_MODULE", "False", "app_label", "model_name", "split", "NOTIFICATION_LANGUAGE_MODULE", "settings", ".", "model", "get_model", "models", "app_label", "model_name", "language_model", "get", "_default_manager", "model", "user__id__exact", "id", "user", "hasattr", "language_model", "language", "language", "language_model", "ImportError", "ImproperlyConfigured", "DoesNotExist", "model", "LanguageStoreNotAvailable", "LanguageStoreNotAvailable", "get_formatted_messages", "formats", "label", "context", "\n    Returns a dictionary with the format identifier as the key. The values are\n    are fully rendered templates with the given context.\n    ", "format_templates", "format", "formats", "endswith", "format", ".txt", "autoescape", "context", "False", "autoescape", "context", "True", "format_templates", "format", "render_to_string", "notification/%s/%s", "label", "format", "notification/%s", "format", "context_instance", "context", "format_templates", "send_now", "users", "label", "extra_context", "on_site", "preference", "None", "True", "None", "\n    Creates a new notice.\n\n    This is intended to be how other apps create new notices.\n\n    notification.send(user, 'friends_invite_sent', {\n        'spam': 'eggs',\n        'foo': 'bar',\n    )\n    \n    You can pass in on_site=False to prevent the notice emitted from being\n    displayed on the site.\n    ", "extra_context", "None", "extra_context", "notice_type", "get", "objects", "NoticeType", "label", "label", "current_site", "get_current", "objects", "Site", "notices_url", "unicode", "current_site", "reverse", "notification_notices", "current_language", "get_language", "formats", "short.txt", "full.txt", "notice.html", "full.html", "user", "users", "preference", "get_preference", "get_profile", "user", "preference", "off", "recipients", "language", "get_notification_language", "user", "LanguageStoreNotAvailable", "language", "None", "language", "None", "activate", "language", "context", "Context", "user", "notice", "notices_url", "current_site", "user", "ugettext", "display", "notice_type", "notices_url", "current_site", "update", "context", "extra_context", "messages", "get_formatted_messages", "formats", "label", "context", "subject", "join", "", "splitlines", "render_to_string", "notification/email_subject.txt", "message", "messages", "short.txt", "context", "body_html", "render_to_string", "notification/email_body.html", "message", "messages", "full.txt", "context", "body_txt", "render_to_string", "notification/email_body.txt", "message", "messages", "full.txt", "context", "notice", "create", "objects", "Notice", "user", "user", "message", "body_html", "notice_type", "notice_type", "on_site", "on_site", "should_send", "user", "notice_type", "1", "email", "user", "append", "recipients", "email", "user", "msg", "EmailMultiAlternatives", "subject", "body_txt", "DEFAULT_FROM_EMAIL", "settings", "email", "user", "attach_alternative", "msg", "body_html", "text/html", "send", "msg", "fail_silently", "True", "activate", "current_language", "send", "args", "kwargs", "\n    A basic interface around both queue and send_now. This honors a global\n    flag NOTIFICATION_QUEUE_ALL that helps determine whether all calls should\n    be queued or not. A per call ``queue`` or ``now`` keyword argument can be\n    used to always override the default global behavior.\n    ", "queue_flag", "pop", "kwargs", "queue", "False", "now_flag", "pop", "kwargs", "now", "False", "queue_flag", "now_flag", "'queue' and 'now' cannot both be True.", "queue_flag", "queue", "args", "kwargs", "now_flag", "send_now", "args", "kwargs", "QUEUE_ALL", "queue", "args", "kwargs", "send_now", "args", "kwargs", "queue", "users", "label", "extra_context", "on_site", "None", "True", "\n    Queue the notification in NoticeQueueBatch. This allows for large amounts\n    of user notifications to be deferred to a seperate process running outside\n    the webserver.\n    ", "extra_context", "None", "extra_context", "isinstance", "users", "QuerySet", "users", "row", "pk", "row", "values", "users", "pk", "users", "pk", "user", "user", "users", "notices", "user", "users", "append", "notices", "user", "label", "extra_context", "on_site", "save", "NoticeQueueBatch", "pickled_data", "encode", "dumps", "pickle", "notices", "base64", "ObservedItemManager", "Manager", "models", "all_for", "self", "observed", "signal", "\n        Returns all ObservedItems for an observed object,\n        to be sent when a signal is emited.\n        ", "content_type", "get_for_model", "objects", "ContentType", "observed", "observed_items", "filter", "self", "content_type", "content_type", "object_id", "id", "observed", "signal", "signal", "observed_items", "get_for", "self", "observed", "observer", "signal", "content_type", "get_for_model", "objects", "ContentType", "observed", "observed_item", "get", "self", "content_type", "content_type", "object_id", "id", "observed", "user", "observer", "signal", "signal", "observed_item", "ObservedItem", "Model", "models", "user", "ForeignKey", "models", "User", "verbose_name", "_", "user", "content_type", "ForeignKey", "models", "ContentType", "object_id", "PositiveIntegerField", "models", "observed_object", "GenericForeignKey", "generic", "content_type", "object_id", "notice_type", "ForeignKey", "models", "NoticeType", "verbose_name", "_", "notice type", "added", "DateTimeField", "models", "_", "added", "default", "now", "datetime", "datetime", "signal", "TextField", "models", "verbose_name", "_", "signal", "objects", "ObservedItemManager", "Meta", "ordering", "-added", "verbose_name", "_", "observed item", "verbose_name_plural", "_", "observed items", "send_notice", "self", "send", "user", "self", "label", "notice_type", "self", "observed", "observed_object", "self", "observe", "observed", "observer", "notice_type_label", "signal", "post_save", "\n    Create a new ObservedItem.\n\n    To be used by applications to register a user as an observer for some object.\n    ", "notice_type", "get", "objects", "NoticeType", "label", "notice_type_label", "observed_item", "ObservedItem", "user", "observer", "observed_object", "observed", "notice_type", "notice_type", "signal", "signal", "save", "observed_item", "observed_item", "stop_observing", "observed", "observer", "signal", "post_save", "\n    Remove an observed item.\n    ", "observed_item", "get_for", "objects", "ObservedItem", "observed", "observer", "signal", "delete", "observed_item", "send_observation_notices_for", "observed", "signal", "post_save", "\n    Send a notice for each registered user about an observed object.\n    ", "observed_items", "all_for", "objects", "ObservedItem", "observed", "signal", "observed_item", "observed_items", "send_notice", "observed_item", "observed_items", "is_observing", "observed", "observer", "signal", "post_save", "isinstance", "observer", "AnonymousUser", "False", "observed_items", "get_for", "objects", "ObservedItem", "observed", "observer", "signal", "True", "DoesNotExist", "ObservedItem", "False", "MultipleObjectsReturned", "ObservedItem", "True", "handle_observations", "args", "kw", "sender", "instance", "send_observation_notices_for", "instance", "numpy", "csb.test", "test", "csb.statmech.ensembles", "BoltzmannEnsemble", "csb.statmech.wham", "WHAM", "NonparametricWHAM", "FunnyGaussian", "object", "__init__", "self", "d", "k", "d", "self", "int", "d", "k", "self", "float", "k", "sample", "self", "n_samples", "inv_T", "numpy.random", "standard_normal", "numpy", "sqrt", "sum", "csb.statistics.rand", "truncated_gamma", "x", "standard_normal", "d", "self", "n_samples", "x", "sqrt", "sum", "x", "r", "truncated_gamma", "n_samples", "d", "self", "k", "self", "inv_T", "r", "r", "T", "x", "r", "energy", "self", "x", "x", "array", "numpy", "x", "k", "self", "sum", "numpy", "x", "log_Z", "self", "beta", "csb.numeric", "log", "scipy.special", "gammainc", "gammaln", "log", "d", "self", "log", "gammainc", "d", "self", "k", "self", "gammaln", "d", "self", "d", "self", "log", "log", "k", "self", "log_g", "self", "energies", "csb.numeric", "log", "d", "self", "log", "energies", "k", "self", "log", "d", "self", "k", "self", "TestWHAM", "Case", "test", "setUp", "self", "betas", "self", "linspace", "numpy", "n", "self", "n", "gaussian", "FunnyGaussian", "samples", "self", "raw_energies", "self", "beta", "betas", "self", "append", "samples", "self", "sample", "gaussian", "n", "beta", "append", "raw_energies", "self", "energy", "gaussian", "samples", "self", "raw_energies", "self", "array", "numpy", "raw_energies", "self", "ensembles", "self", "BoltzmannEnsemble", "beta", "beta", "beta", "betas", "self", "log_z", "self", "log_Z", "gaussian", "log_g", "self", "log_g", "gaussian", "ravel", "numpy", "raw_energies", "self", "testWHAM", "self", "w", "WHAM", "ensembles", "self", "ravel", "numpy", "raw_energies", "self", "array", "numpy", "n", "self", "len", "betas", "self", "estimate", "w", "assertAlmostEqual", "self", "dot", "numpy", "array", "numpy", "log_z", "w", "array", "numpy", "log_z", "self", "delta", "testNonparametricWHAM", "self", "w", "NonparametricWHAM", "ensembles", "self", "ravel", "numpy", "raw_energies", "self", "n", "self", "len", "betas", "self", "estimate", "w", "ens", "BoltzmannEnsemble", "beta", "BoltzmannEnsemble", "beta", "assertAlmostEqual", "self", "dot", "numpy", "array", "numpy", "log_z", "w", "ensembles", "ens", "log_z", "self", "delta", "functional", "test", "__name__", "__main__", "Console", "test", "datetime", "os", "django.utils.copycompat", "copy", "django.conf", "settings", "django.db.models.fields", "Field", "django.core.files.base", "File", "ContentFile", "django.core.files.storage", "default_storage", "django.core.files.images", "ImageFile", "get_image_dimensions", "django.core.files.uploadedfile", "UploadedFile", "django.utils.functional", "curry", "django.db.models", "signals", "django.utils.encoding", "force_unicode", "smart_str", "django.utils.translation", "ugettext_lazy", "ugettext", "_", "django", "forms", "django.db.models.loading", "cache", "FieldFile", "File", "__init__", "self", "instance", "field", "name", "__init__", "super", "FieldFile", "self", "None", "name", "instance", "self", "instance", "field", "self", "field", "storage", "self", "storage", "field", "_committed", "self", "True", "__eq__", "self", "other", "hasattr", "other", "name", "name", "self", "name", "other", "name", "self", "other", "__ne__", "self", "other", "__eq__", "self", "other", "__hash__", "self", "hash", "name", "self", "_require_file", "self", "self", "ValueError", "The '%s' attribute has no file associated with it.", "name", "field", "self", "_get_file", "self", "_require_file", "self", "hasattr", "self", "_file", "_file", "self", "None", "_file", "self", "open", "storage", "self", "name", "self", "rb", "_file", "self", "_set_file", "self", "file", "_file", "self", "file", "_del_file", "self", "_file", "self", "file", "property", "_get_file", "_set_file", "_del_file", "_get_path", "self", "_require_file", "self", "path", "storage", "self", "name", "self", "path", "property", "_get_path", "_get_url", "self", "_require_file", "self", "url", "storage", "self", "name", "self", "url", "property", "_get_url", "_get_size", "self", "_require_file", "self", "_committed", "self", "size", "file", "self", "size", "storage", "self", "name", "self", "size", "property", "_get_size", "open", "self", "mode", "rb", "_require_file", "self", "open", "file", "self", "mode", "alters_data", "open", "True", "save", "self", "name", "content", "save", "True", "name", "generate_filename", "field", "self", "instance", "self", "name", "name", "self", "save", "storage", "self", "name", "content", "setattr", "instance", "self", "name", "field", "self", "name", "self", "_size", "self", "size", "content", "_committed", "self", "True", "save", "save", "instance", "self", "alters_data", "save", "True", "delete", "self", "save", "True", "hasattr", "self", "_file", "close", "self", "file", "self", "delete", "storage", "self", "name", "self", "name", "self", "None", "setattr", "instance", "self", "name", "field", "self", "name", "self", "hasattr", "self", "_size", "_size", "self", "_committed", "self", "False", "save", "save", "instance", "self", "alters_data", "delete", "True", "_get_closed", "self", "file", "getattr", "self", "_file", "None", "file", "None", "closed", "file", "closed", "property", "_get_closed", "close", "self", "file", "getattr", "self", "_file", "None", "file", "None", "close", "file", "__getstate__", "self", "name", "closed", "_committed", "_file", "name", "self", "False", "True", "None", "FileDescriptor", "object", "\n    The descriptor for the file attribute on the model instance. Returns a\n    FieldFile when accessed so you can do stuff like::\n\n        >>> instance.file.size\n\n    Assigns a file object on assignment so you can do::\n\n        >>> instance.file = File(...)\n\n    ", "__init__", "self", "field", "field", "self", "field", "__get__", "self", "instance", "owner", "None", "None", "instance", "None", "AttributeError", "The '%s' attribute can only be accessed from %s instances.", "name", "field", "self", "__name__", "owner", "file", "__dict__", "instance", "name", "field", "self", "isinstance", "file", "basestring", "file", "None", "attr", "attr_class", "field", "self", "instance", "field", "self", "file", "__dict__", "instance", "name", "field", "self", "attr", "isinstance", "file", "File", "isinstance", "file", "FieldFile", "file_copy", "attr_class", "field", "self", "instance", "field", "self", "name", "file", "file", "file_copy", "file", "_committed", "file_copy", "False", "__dict__", "instance", "name", "field", "self", "file_copy", "isinstance", "file", "FieldFile", "hasattr", "file", "field", "instance", "file", "instance", "field", "file", "field", "self", "storage", "file", "storage", "field", "self", "__dict__", "instance", "name", "field", "self", "__set__", "self", "instance", "value", "__dict__", "instance", "name", "field", "self", "value", "FileField", "Field", "attr_class", "FieldFile", "descriptor_class", "FileDescriptor", "description", "ugettext_lazy", "File path", "__init__", "kwargs", "self", "verbose_name", "name", "upload_to", "storage", "None", "None", "", "None", "arg", "primary_key", "unique", "arg", "kwargs", "TypeError", "'%s' is not a valid argument for %s.", "arg", "__class__", "self", "storage", "self", "storage", "default_storage", "upload_to", "self", "upload_to", "callable", "upload_to", "generate_filename", "self", "upload_to", "kwargs", "max_length", "get", "kwargs", "max_length", "__init__", "super", "FileField", "self", "verbose_name", "name", "kwargs", "get_internal_type", "self", "FileField", "get_prep_lookup", "self", "lookup_type", "value", "hasattr", "value", "name", "value", "name", "value", "get_prep_lookup", "super", "FileField", "self", "lookup_type", "value", "get_prep_value", "self", "value", "Returns field's value prepared for saving into a database.", "value", "None", "None", "unicode", "value", "pre_save", "self", "model_instance", "add", "Returns field's value just before saving.", "file", "pre_save", "super", "FileField", "self", "model_instance", "add", "file", "_committed", "file", "save", "file", "name", "file", "file", "save", "False", "file", "contribute_to_class", "self", "cls", "name", "contribute_to_class", "super", "FileField", "self", "cls", "name", "setattr", "cls", "name", "self", "descriptor_class", "self", "self", "get_directory_name", "self", "normpath", "path", "os", "force_unicode", "strftime", "now", "datetime", "datetime", "smart_str", "upload_to", "self", "get_filename", "self", "filename", "normpath", "path", "os", "get_valid_name", "storage", "self", "basename", "path", "os", "filename", "generate_filename", "self", "instance", "filename", "join", "path", "os", "get_directory_name", "self", "get_filename", "self", "filename", "save_form_data", "self", "instance", "data", "data", "None", "data", "data", "", "setattr", "instance", "name", "self", "data", "formfield", "kwargs", "self", "defaults", "form_class", "max_length", "FileField", "forms", "max_length", "self", "initial", "kwargs", "defaults", "required", "False", "update", "defaults", "kwargs", "formfield", "super", "FileField", "self", "defaults", "ImageFileDescriptor", "FileDescriptor", "\n    Just like the FileDescriptor, but for ImageFields. The only difference is\n    assigning the width/height to the width_field/height_field, if appropriate.\n    ", "__set__", "self", "instance", "value", "previous_file", "get", "__dict__", "instance", "name", "field", "self", "__set__", "super", "ImageFileDescriptor", "self", "instance", "value", "previous_file", "None", "update_dimension_fields", "field", "self", "instance", "force", "True", "ImageFieldFile", "ImageFile", "FieldFile", "delete", "self", "save", "True", "hasattr", "self", "_dimensions_cache", "_dimensions_cache", "self", "delete", "super", "ImageFieldFile", "self", "save", "ImageField", "FileField", "attr_class", "ImageFieldFile", "descriptor_class", "ImageFileDescriptor", "description", "ugettext_lazy", "File path", "__init__", "kwargs", "self", "verbose_name", "name", "width_field", "height_field", "None", "None", "None", "None", "width_field", "self", "height_field", "self", "width_field", "height_field", "__init__", "FileField", "self", "verbose_name", "name", "kwargs", "contribute_to_class", "self", "cls", "name", "contribute_to_class", "super", "ImageField", "self", "cls", "name", "connect", "post_init", "signals", "update_dimension_fields", "self", "sender", "cls", "update_dimension_fields", "args", "kwargs", "self", "instance", "force", "False", "\n        Updates field's width and height fields, if defined.\n\n        This method is hooked up to model's post_init signal to update\n        dimensions after instantiating a model instance.  However, dimensions\n        won't be updated if the dimensions fields are already populated.  This\n        avoids unnecessary recalculation when loading an object from the\n        database.\n\n        Dimensions can be forced to update with force=True, which is how\n        ImageFileDescriptor.__set__ calls this method.\n        ", "has_dimension_fields", "width_field", "self", "height_field", "self", "has_dimension_fields", "file", "getattr", "instance", "attname", "self", "file", "force", "dimension_fields_filled", "width_field", "self", "getattr", "instance", "width_field", "self", "height_field", "self", "getattr", "instance", "height_field", "self", "dimension_fields_filled", "force", "file", "width", "width", "file", "height", "height", "file", "width", "None", "height", "None", "width_field", "self", "setattr", "instance", "width_field", "self", "width", "height_field", "self", "setattr", "instance", "height_field", "self", "height", "formfield", "kwargs", "self", "defaults", "form_class", "ImageField", "forms", "update", "defaults", "kwargs", "formfield", "super", "ImageField", "self", "defaults", "maya.cmds", "mc", "maya.mel", "mel", "cgm.lib.zoo.zooPyMaya.baseMelUI", "*", "cgm.lib.classes.OptionVarFactory", "*", "cgm.lib.classes.ObjectFactory", "*", "cgm.lib", "guiFactory", "cgm.lib", "search", "cgm.tools.lib", "animToolsLib", "cgm.tools.lib", "tdToolsLib", "cgm.tools.lib", "locinatorLib", "cgm.lib", "locators", "cgmToolbox", "reload", "locinatorLib", "reload", "tdToolsLib", "reload", "animToolsLib", "run", "cgmSetKeyMM", "setKeyMarkingMenu", "eval", "mel", "performSetKeyframeArgList 1 {\"0\", \"animationList\"};", "setKeyMarkingMenu", "BaseMelWindow", "_DEFAULT_MENU_PARENT", "viewPanes", "__init__", "self", "\n\t\tInitializes the pop up menu class call\n\t\t", "optionVars", "self", "IsClickedOptionVar", "OptionVarFactory", "cgmVar_IsClicked", "mmActionOptionVar", "OptionVarFactory", "cgmVar_mmAction", "panel", "getPanel", "mc", "up", "True", "panel", "MayaWindow", "panel", "mc", "panel", "q", "True", "ctl", "True", "panel", "viewPanes", "sel", "selectCheck", "search", "set", "IsClickedOptionVar", "set", "mmActionOptionVar", "popupMenu", "mc", "cgmMM", "ex", "True", "deleteUI", "mc", "cgmMM", "panel", "control", "mc", "panel", "ex", "True", "popupMenu", "mc", "cgmMM", "ctl", "alt", "sh", "mm", "b", "aob", "p", "panel", "pmc", "a", "createUI", "self", "cgmMM", "warning", "guiFactory", "Exception on set key marking menu", "eval", "mel", "performSetKeyframeArgList 1 {\"0\", \"animationList\"};", "setupVariables", "self", "KeyTypeOptionVar", "self", "OptionVarFactory", "cgmVar_KeyType", "defaultValue", "appendOptionVarList", "guiFactory", "self", "name", "KeyTypeOptionVar", "self", "KeyModeOptionVar", "self", "OptionVarFactory", "cgmVar_KeyMode", "defaultValue", "appendOptionVarList", "guiFactory", "self", "name", "KeyModeOptionVar", "self", "mmActionOptionVar", "self", "OptionVarFactory", "cgmVar_mmAction", "createUI", "self", "parent", "\n\t\tCreate the UI\n\t\t", "IsClickedOptionVar", "OptionVarFactory", "cgmVar_IsClicked", "value", "setupVariables", "self", "buttonAction", "command", "\n\t\t\texecute a command and let the menu know not do do the default button action but just kill the ui\n\t\t\t", "set", "mmActionOptionVar", "self", "command", "killUI", "sel", "selectCheck", "search", "selPair", "checkSelectionLength", "search", "ShowMatch", "matchObjectCheck", "search", "set", "IsClickedOptionVar", "menu", "mc", "parent", "e", "True", "deleteAllItems", "True", "MelMenuItem", "parent", "en", "sel", "l", "Reset Selected", "c", "a", "buttonAction", "ml_resetChannelsCall", "animToolsLib", "rp", "N", "MelMenuItem", "parent", "en", "sel", "l", "dragBreakdown", "c", "a", "buttonAction", "ml_breakdownDraggerCall", "animToolsLib", "rp", "S", "KeyMenu", "MelMenuItem", "parent", "l", "Key type", "subMenu", "True", "KeyMenuCollection", "MelRadioMenuCollection", "value", "KeyTypeOptionVar", "self", "regKeyOption", "True", "bdKeyOption", "False", "regKeyOption", "False", "bdKeyOption", "True", "createButton", "KeyMenuCollection", "KeyMenu", "l", " Reg ", "c", "Callback", "toggleVarAndReset", "self", "KeyTypeOptionVar", "self", "rb", "regKeyOption", "createButton", "KeyMenuCollection", "KeyMenu", "l", " Breakdown ", "c", "Callback", "toggleVarAndReset", "self", "KeyTypeOptionVar", "self", "rb", "bdKeyOption", "KeyMenu", "MelMenuItem", "parent", "l", "Key Mode", "subMenu", "True", "KeyMenuCollection", "MelRadioMenuCollection", "value", "KeyModeOptionVar", "self", "regModeOption", "True", "cbModeOption", "False", "regModeOption", "False", "cbModeOption", "True", "createButton", "KeyMenuCollection", "KeyMenu", "l", " Default ", "c", "Callback", "toggleVarAndReset", "self", "KeyModeOptionVar", "self", "rb", "regModeOption", "createButton", "KeyMenuCollection", "KeyMenu", "l", " Channelbox ", "c", "Callback", "toggleVarAndReset", "self", "KeyModeOptionVar", "self", "rb", "cbModeOption", "MelMenuItemDiv", "parent", "MelMenuItem", "parent", "l", "autoTangent", "c", "a", "buttonAction", "eval", "mel", "autoTangent", "MelMenuItem", "parent", "l", "tweenMachine", "c", "a", "buttonAction", "eval", "mel", "tweenMachine", "MelMenuItem", "parent", "l", "cgm.animTools", "c", "a", "buttonAction", "loadAnimTools", "cgmToolbox", "MelMenuItemDiv", "parent", "MelMenuItem", "parent", "l", "ml Set Key", "c", "a", "buttonAction", "ml_setKeyCall", "animToolsLib", "MelMenuItem", "parent", "l", "ml Hold", "c", "a", "buttonAction", "ml_holdCall", "animToolsLib", "MelMenuItem", "parent", "l", "ml Delete Key", "c", "a", "buttonAction", "ml_deleteKeyCall", "animToolsLib", "MelMenuItem", "parent", "l", "ml Arc Tracer", "c", "a", "buttonAction", "ml_arcTracerCall", "animToolsLib", "MelMenuItemDiv", "parent", "MelMenuItem", "parent", "l", "Reset", "c", "a", "resetGuiInstanceOptionVars", "guiFactory", "optionVars", "self", "toggleVarAndReset", "self", "optionVar", "toggle", "optionVar", "reload", "self", "MM change var and reset failed!", "killUI", "IsClickedOptionVar", "OptionVarFactory", "cgmVar_IsClicked", "mmActionOptionVar", "OptionVarFactory", "cgmVar_mmAction", "sel", "selectCheck", "search", "popupMenu", "mc", "cgmMM", "ex", "True", "deleteUI", "mc", "cgmMM", "sel", "value", "mmActionOptionVar", "setKey", "setKey", "KeyTypeOptionVar", "OptionVarFactory", "cgmVar_KeyType", "defaultValue", "KeyModeOptionVar", "OptionVarFactory", "cgmVar_KeyMode", "defaultValue", "value", "KeyModeOptionVar", "selection", "ls", "mc", "sl", "True", "selection", "warning", "guiFactory", "Nothing selected!", "value", "KeyTypeOptionVar", "setKeyframe", "mc", "selection", "setKeyframe", "mc", "breakdown", "True", "cb mode", "selection", "returnSelectedAttributesFromChannelBox", "search", "False", "selection", "selection", "ls", "mc", "sl", "True", "selection", "warning", "guiFactory", "Nothing selected!", "value", "KeyTypeOptionVar", "setKeyframe", "mc", "selection", "setKeyframe", "mc", "selection", "breakdown", "True", "tempfile", "os", "shutil", "tarfile", "gzip", "logging", "re", "subprocess", "Popen", "PIPE", "STDOUT", "lzma", "debian.deb822", "Sources", "ImportError", "debian_bundle.deb822", "Sources", "irgsh.utils", "find_debian", "get_package_version", "retrieve", "error", "SourcePackageBuildError", "SourcePackagePreparationError", "re_extra_orig", "compile", "re", ".+\\.orig-([a-z0-9-]+)\\.tar", "extract_tarball", "fname", "target", "tmp", "None", "endswith", "fname", ".tar.xz", "__", "tmp", "mkstemp", "tempfile", "-irgsh-xz.tar", "d", "LZMADecompressor", "lzma", "fin", "open", "fname", "rb", "fout", "open", "tmp", "wb", "write", "fout", "decompress", "d", "read", "fin", "close", "fout", "fname", "tmp", "tar", "open", "tarfile", "fname", "extractall", "tar", "target", "close", "tar", "tmp", "None", "unlink", "os", "tmp", "SourcePackageBuilder", "object", "__init__", "self", "source", "source_type", "source_opts", "orig", "extra_orig", "tarball", "None", "None", "None", "source_opts", "None", "source_opts", "source", "self", "source", "source_type", "self", "source_type", "source_opts", "self", "source_opts", "orig", "self", "orig", "orig", "None", "extra_orig", "None", "extra_orig", "extra_orig", "self", "extra_orig", "source_type", "patch", "tarball", "bzr", "ValueError", "Unsupported source type: %s", "source_type", "source_type", "patch", "orig", "None", "ValueError", "A patch has to be accompanied with an orig file", "log", "self", "getLogger", "logging", "irgsh.source.packager", "build", "self", "target", "logger", "None", "Build source package.\n\n        This function returns the .dsc filename\n        ", "cwd", "getcwd", "os", "build_path", "mkdtemp", "tempfile", "-irgsh-srcpkg", "slog", "self", "logger", "# Preparing source code directory", "package", "version", "prepare_source", "self", "build_path", "logger", "source", "%s-%s", "package", "version", "slog", "self", "logger", "chdir", "os", "build_path", "slog", "self", "logger", "# File listing", "cmd", "find -ls", "p", "Popen", "split", "cmd", "stdout", "logger", "stderr", "STDOUT", "preexec_fn", "setsid", "os", "out", "err", "communicate", "p", "slog", "self", "logger", "debug", "log", "self", "Building source package: source=%s type=%s opts=%s orig=%s extra_orig=%s", "source", "self", "source_type", "self", "source_opts", "self", "orig", "self", "extra_orig", "self", "slog", "self", "logger", "# Building source package", "cmd", "dpkg-source -b %s", "source", "slog", "self", "logger", "# Command:", "cmd", "p", "Popen", "split", "cmd", "stdout", "logger", "stderr", "STDOUT", "preexec_fn", "setsid", "os", "out", "err", "communicate", "p", "slog", "self", "logger", "# Return code:", "returncode", "p", "\n", "returncode", "p", "SourcePackageBuildError", "returncode", "p", "out", "err", "dsc", "%s_%s.dsc", "package", "version", "files", "dsc", "dsc_path", "join", "path", "os", "build_path", "dsc", "src", "Sources", "open", "dsc_path", "has_key", "src", "Files", "KeyError", "Invalid source package", "files", "item", "name", "item", "src", "Files", "debug", "log", "self", "Moving source package files: %s", "join", ", ", "files", "fname", "files", "target_path", "join", "path", "os", "target", "fname", "exists", "path", "os", "target_path", "unlink", "os", "target_path", "move", "shutil", "join", "path", "os", "build_path", "fname", "target_path", "chmod", "os", "target_path", "debug", "log", "self", "Source package built: %s", "dsc", "dsc", "rmtree", "shutil", "build_path", "chdir", "os", "cwd", "prepare_source", "self", "target", "logger", "None", "tmp", "mkdtemp", "tempfile", "-irgsh-srcpkg-prepare", "debug", "log", "self", "Preparing source code directory", "source_path", "join", "path", "os", "tmp", "source", "makedirs", "os", "source_path", "debug", "log", "self", "Downloading source code, type: %s", "source_type", "self", "source", "download_source", "self", "source_path", "logger", "debug", "log", "self", "Source code downloaded", "orig", "None", "orig_path", "join", "path", "os", "tmp", "orig", "makedirs", "os", "orig_path", "orig", "self", "None", "debug", "log", "self", "Downloading original file", "orig", "download_orig", "self", "orig_path", "logger", "debug", "log", "self", "Original file downloaded", "extra_orig", "len", "extra_orig", "self", "debug", "log", "self", "Downloading additional original files", "extra_orig", "download_extra_orig", "self", "orig_path", "logger", "debug", "log", "self", "additional original files downloaded", "combined_path", "join", "path", "os", "tmp", "combine", "makedirs", "os", "combined_path", "debug", "log", "self", "Combining source and orig, type: %s", "source_type", "self", "combined_path", "combine", "self", "source", "orig", "extra_orig", "combined_path", "logger", "debug", "log", "self", "Source and orig combined", "combined_path", "find_debian", "combined_path", "combined_path", "None", "ValueError", "Unable to find debian directory", "package", "version", "get_package_version", "combined_path", "debug", "log", "self", "Package: %s_%s", "package", "version", "debug", "log", "self", "Moving source code directory", "final_path", "join", "path", "os", "target", "%s-%s", "package", "version", "move", "shutil", "combined_path", "final_path", "orig", "None", "upstream", "split", "version", "-", "fname", "ext", "splitext", "path", "os", "orig", "self", "orig_path", "join", "path", "os", "target", "%s_%s.orig.tar%s", "package", "upstream", "ext", "move", "shutil", "orig", "orig_path", "orig", "extra_orig", "move", "shutil", "orig", "target", "package", "version", "Exception", "e", "SourcePackagePreparationError", "e", "rmtree", "shutil", "tmp", "download_orig", "self", "target", "logger", "None", "slog", "self", "logger", "# Downloading", "orig", "self", "fname", "retrieve", "orig", "self", "orig_name", "basename", "path", "os", "orig", "self", "orig_path", "join", "path", "os", "target", "orig_name", "move", "shutil", "fname", "orig_path", "orig_path", "download_extra_orig", "self", "target", "logger", "None", "items", "url", "extra_orig", "self", "slog", "self", "logger", "# Downloading", "url", "fname", "retrieve", "url", "orig_name", "basename", "path", "os", "url", "orig_path", "join", "path", "os", "target", "orig_name", "move", "shutil", "fname", "orig_path", "append", "items", "orig_path", "items", "download_source", "self", "target", "logger", "None", "func", "getattr", "self", "download_source_%s", "source_type", "self", "func", "target", "logger", "download_source_patch", "self", "target", "logger", "None", "slog", "self", "logger", "# Downloading patch:", "source", "self", "fname", "retrieve", "source", "self", "patch_name", "basename", "path", "os", "source", "self", "patch_path", "join", "path", "os", "target", "patch_name", "move", "shutil", "fname", "patch_path", "patch_path", "download_source_tarball", "self", "target", "logger", "None", "tmp", "mkdtemp", "tempfile", "-irgsh-tarball", "slog", "self", "logger", "# Downloading tarball:", "source", "self", "tmpname", "retrieve", "source", "self", "source_name", "basename", "path", "os", "source", "self", "source_path", "join", "path", "os", "tmp", "source_name", "move", "shutil", "tmpname", "source_path", "extract_tarball", "source_path", "target", "target", "ReadError", "tarfile", "e", "StandardError", "e", "rmtree", "shutil", "tmp", "download_source_bzr", "self", "target", "logger", "None", "slog", "self", "logger", "# Downloading bazaar tree:", "source", "self", "source_opts", "self", "bazaar", "BazaarExporter", "bzr", "BazaarExporter", "source", "self", "source_opts", "self", "export", "bzr", "target", "target", "extract_orig", "self", "orig", "target", "logger", "None", "debug", "log", "self", "Extracting orig file", "slog", "self", "logger", "# Extracting", "basename", "path", "os", "orig", "extract_tarball", "orig", "target", "find_orig_path", "self", "target", "extract_extra_orig", "self", "extra_orig", "target", "logger", "None", "debug", "log", "self", "Extracting additional orig files", "orig", "extra_orig", "fname", "basename", "path", "os", "orig", "m", "match", "re_extra_orig", "fname", "component", "groups", "m", "tmp", "mkdtemp", "tempfile", "-extra-orig", "extra", "join", "path", "os", "tmp", "component", "makedirs", "os", "extra", "slog", "self", "logger", "# Extracting", "basename", "path", "os", "orig", "extract_tarball", "orig", "extra", "subdir", "join", "path", "os", "extra", "component", "exists", "path", "os", "subdir", "isdir", "path", "os", "subdir", "extra", "subdir", "exists", "path", "os", "join", "path", "os", "target", "component", "rmtree", "shutil", "join", "path", "os", "target", "component", "move", "shutil", "extra", "target", "rmtree", "shutil", "tmp", "combine", "self", "source", "orig", "extra_orig", "target", "logger", "None", "debug", "log", "self", "Combining source and orig, type: %s", "source_type", "self", "func", "getattr", "self", "combine_%s", "source_type", "self", "func", "source", "orig", "extra_orig", "target", "combine_patch", "self", "source", "orig", "extra_orig", "target", "logger", "None", "orig", "None", "ValueError", "A patch has to be accompanied with an orig file", "orig_path", "extract_orig", "self", "orig", "join", "path", "os", "target", "build", "logger", "extract_extra_orig", "self", "extra_orig", "orig_path", "logger", "cwd", "getcwd", "os", "patch_path", "abspath", "path", "os", "source", "patch", "open", "gzip", "patch_path", "rb", "slog", "self", "logger", "# Patching orig file(s)", "chdir", "os", "orig_path", "cmd", "patch -p1", "p", "Popen", "split", "cmd", "stdin", "PIPE", "stdout", "logger", "stderr", "STDOUT", "preexec_fn", "setsid", "os", "write", "stdin", "p", "read", "patch", "communicate", "p", "returncode", "p", "ValueError", "Patch application failed", "orig_path", "chdir", "os", "cwd", "combine_tarball", "self", "source", "orig", "extra_orig", "target", "logger", "None", "orig", "None", "combine_tarball_orig", "self", "source", "orig", "extra_orig", "target", "logger", "source", "combine_tarball_orig", "self", "source", "orig", "extra_orig", "target", "logger", "None", "orig_path", "extract_orig", "self", "orig", "target", "logger", "extract_extra_orig", "self", "extra_orig", "orig_path", "logger", "exists", "path", "os", "join", "path", "os", "orig_path", "debian", "rmtree", "shutil", "join", "path", "os", "orig_path", "debian", "slog", "self", "logger", "# Combining source and orig file(s)", "cmd", "cp -a %s/* %s/", "rstrip", "source", "/", "rstrip", "orig_path", "/", "p", "Popen", "cmd", "shell", "True", "stdout", "logger", "stderr", "STDOUT", "preexec_fn", "setsid", "os", "communicate", "p", "find_debian", "orig_path", "combine_bzr", "self", "source", "orig", "extra_orig", "target", "logger", "None", "combine_tarball", "self", "source", "orig", "extra_orig", "target", "logger", "find_orig_path", "self", "dirname", "items", "listdir", "os", "dirname", "len", "items", "isdir", "path", "os", "join", "path", "os", "dirname", "items", "dirname", "join", "path", "os", "dirname", "items", "dirname", "slog", "msgs", "self", "logger", "logger", "None", "write", "logger", "%s\n", "join", " ", "map", "str", "msgs", "flush", "logger", "functools", "tempfile", "os", "sublime", "sublime_plugin", "git", "GitTextCommand", "GitWindowCommand", "plugin_file", "view_contents", "_make_text_safeish", "add", "history", "GitQuickCommitCommand", "GitTextCommand", "run", "self", "edit", "show_input_panel", "get_window", "self", "Message", "", "on_input", "self", "None", "None", "on_input", "self", "message", "strip", "message", "", "panel", "self", "No commit message provided", "run_command", "self", "git", "add", "get_file_name", "self", "partial", "functools", "add_done", "self", "message", "add_done", "self", "message", "result", "strip", "result", "error_message", "sublime", "Error adding file:\n", "result", "run_command", "self", "git", "commit", "-m", "message", "GitCommitCommand", "GitWindowCommand", "active_message", "False", "extra_options", "", "run", "self", "lines", "self", "working_dir", "self", "get_working_dir", "self", "run_command", "self", "git", "status", "--untracked-files=no", "--porcelain", "porcelain_status_done", "self", "porcelain_status_done", "self", "result", "has_staged_files", "False", "result_lines", "split", "rstrip", "result", "\n", "line", "result_lines", "line", "isspace", "line", "has_staged_files", "True", "has_staged_files", "panel", "self", "Nothing to commit", "s", "load_settings", "sublime", "Git.sublime-settings", "get", "s", "verbose_commits", "run_command", "self", "git", "diff", "--staged", "--no-color", "diff_done", "self", "run_command", "self", "git", "status", "diff_done", "self", "diff_done", "self", "result", "settings", "load_settings", "sublime", "Git.sublime-settings", "historySize", "get", "settings", "history_size", "format", "line", "# ", "replace", "line", "\n", " ", "len", "lines", "self", "lines", "self", "", "", "extend", "lines", "self", "map", "format", "history", "historySize", "extend", "lines", "self", "# --------------", "# Please enter the commit message for your changes. Everything below", "# this paragraph is ignored, and an empty message aborts the commit.", "# Just close the window to accept your message.", "strip", "result", "template", "join", "\n", "lines", "self", "msg", "new_file", "window", "self", "set_scratch", "msg", "True", "set_name", "msg", "COMMIT_EDITMSG", "_output_to_view", "self", "msg", "template", "syntax", "plugin_file", "syntax/Git Commit Message.tmLanguage", "clear", "sel", "msg", "add", "sel", "msg", "Region", "sublime", "active_message", "GitCommitCommand", "self", "message_done", "self", "message", "settings", "load_settings", "sublime", "Git.sublime-settings", "historySize", "get", "settings", "history_size", "lines", "line", "line", "split", "split", "message", "\n# --------------", "\n", "startswith", "lstrip", "line", "#", "message", "strip", "join", "\n", "lines", "len", "message", "historySize", "insert", "history", "message", "message_file", "NamedTemporaryFile", "tempfile", "delete", "False", "write", "message_file", "_make_text_safeish", "message", "fallback_encoding", "self", "encode", "close", "message_file", "message_file", "self", "message_file", "run_command", "self", "git", "commit", "-F", "name", "message_file", "extra_options", "self", "commit_done", "self", "working_dir", "working_dir", "self", "commit_done", "self", "result", "remove", "os", "name", "message_file", "self", "panel", "self", "result", "GitCommitAmendCommand", "GitCommitCommand", "extra_options", "--amend", "diff_done", "self", "result", "after_show", "self", "result", "run_command", "self", "git", "log", "-n", "1", "--format=format:%B", "amend_diff_done", "self", "amend_diff_done", "self", "result", "lines", "self", "split", "result", "\n", "diff_done", "super", "GitCommitAmendCommand", "self", "after_show", "self", "GitCommitMessageListener", "EventListener", "sublime_plugin", "on_close", "self", "view", "name", "view", "COMMIT_EDITMSG", "command", "active_message", "GitCommitCommand", "command", "message", "view_contents", "view", "message_done", "command", "message", "GitCommitHistoryCommand", "TextCommand", "sublime_plugin", "run", "self", "edit", "edit", "self", "edit", "show_quick_panel", "window", "view", "self", "history", "panel_done", "self", "MONOSPACE_FONT", "sublime", "panel_done", "self", "index", "index", "replace", "view", "self", "edit", "self", "sel", "view", "self", "history", "index", "\n", "GitCommitSelectedHunk", "GitAddSelectedHunkCommand", "add", "run", "self", "edit", "run_command", "self", "git", "diff", "--no-color", "get_file_name", "self", "cull_diff", "self", "run_command", "get_window", "self", "git_commit", "hmac", "django.conf", "settings", "django_messages_framework", "constants", "django_messages_framework.storage.base", "BaseStorage", "Message", "django_messages_framework.backport.http", "CompatCookie", "django.utils", "simplejson", "json", "django_messages_framework.backport.hashcompat", "sha_hmac", "MessageEncoder", "JSONEncoder", "json", "\n    Compactly serializes instances of the ``Message`` class as JSON.\n    ", "message_key", "__json_message", "default", "self", "obj", "isinstance", "obj", "Message", "message", "message_key", "self", "level", "obj", "message", "obj", "extra_tags", "obj", "append", "message", "extra_tags", "obj", "message", "default", "super", "MessageEncoder", "self", "obj", "MessageDecoder", "JSONDecoder", "json", "\n    Decodes JSON that includes serialized ``Message`` instances.\n    ", "process_messages", "self", "obj", "isinstance", "obj", "list", "obj", "obj", "message_key", "MessageEncoder", "Message", "obj", "process_messages", "self", "item", "item", "obj", "isinstance", "obj", "dict", "dict", "key", "process_messages", "self", "value", "key", "value", "iteritems", "obj", "obj", "decode", "kwargs", "self", "s", "decoded", "decode", "super", "MessageDecoder", "self", "s", "kwargs", "process_messages", "self", "decoded", "CookieStorage", "BaseStorage", "\n    Stores messages in a cookie.\n    ", "cookie_name", "messages", "max_cookie_size", "not_finished", "__messagesnotfinished__", "_get", "args", "kwargs", "self", "\n        Retrieves a list of messages from the messages cookie.  If the\n        not_finished sentinel value is found at the end of the message list,\n        remove it and return a result indicating that not all messages were\n        retrieved by this storage.\n        ", "data", "get", "COOKIES", "request", "self", "cookie_name", "self", "messages", "_decode", "self", "data", "all_retrieved", "messages", "messages", "not_finished", "self", "messages", "all_retrieved", "pop", "messages", "messages", "all_retrieved", "_update_cookie", "self", "encoded_data", "response", "\n        Either sets the cookie with the encoded data if there is any data to\n        store, or deletes the cookie.\n        ", "encoded_data", "set_cookie", "response", "cookie_name", "self", "encoded_data", "delete_cookie", "response", "cookie_name", "self", "_store", "args", "kwargs", "self", "messages", "response", "remove_oldest", "True", "\n        Stores the messages to a cookie, returning a list of any messages which\n        could not be stored.\n\n        If the encoded data is larger than ``max_cookie_size``, removes\n        messages until the data fits (these are the messages which are\n        returned), and add the not_finished sentinel value to indicate as much.\n        ", "unstored_messages", "encoded_data", "_encode", "self", "messages", "max_cookie_size", "self", "cookie", "CompatCookie", "stored_length", "val", "len", "value_encode", "cookie", "val", "encoded_data", "stored_length", "encoded_data", "max_cookie_size", "self", "remove_oldest", "append", "unstored_messages", "pop", "messages", "insert", "unstored_messages", "pop", "messages", "encoded_data", "_encode", "self", "messages", "not_finished", "self", "encode_empty", "unstored_messages", "_update_cookie", "self", "encoded_data", "response", "unstored_messages", "_hash", "self", "value", "\n        Creates an HMAC/SHA1 hash based on the value and the project setting's\n        SECRET_KEY, modified to make it unique for the present purpose.\n        ", "key", "django_messages_framework", "SECRET_KEY", "settings", "hexdigest", "new", "hmac", "key", "value", "sha_hmac", "_encode", "self", "messages", "encode_empty", "False", "\n        Returns an encoded version of the messages list which can be stored as\n        plain text.\n\n        Since the data will be retrieved from the client-side, the encoded data\n        also contains a hash to ensure that the data was not tampered with.\n        ", "messages", "encode_empty", "encoder", "MessageEncoder", "separators", ",", ":", "value", "encode", "encoder", "messages", "%s$%s", "_hash", "self", "value", "value", "_decode", "self", "data", "\n        Safely decodes a encoded text stream back into a list of messages.\n\n        If the encoded text stream contained an invalid hash or was in an\n        invalid format, ``None`` is returned.\n        ", "data", "None", "bits", "split", "data", "$", "len", "bits", "hash", "value", "bits", "hash", "_hash", "self", "value", "loads", "json", "value", "cls", "MessageDecoder", "ValueError", "used", "self", "True", "None", "unittest", "win32api", "win32file", "win32pipe", "pywintypes", "winerror", "win32event", "win32con", "ntsecuritycon", "sys", "os", "tempfile", "sets", "threading", "time", "shutil", "socket", "TestSimpleOps", "TestCase", "unittest", "testSimpleFiles", "self", "fd", "filename", "mkstemp", "tempfile", "AttributeError", "fail", "self", "This test requires Python 2.3 or later", "close", "os", "fd", "unlink", "os", "filename", "handle", "CreateFile", "win32file", "filename", "GENERIC_WRITE", "win32file", "None", "CREATE_NEW", "win32con", "None", "test_data", "Hello\u0000there", "WriteFile", "win32file", "handle", "test_data", "Close", "handle", "handle", "CreateFile", "win32file", "filename", "GENERIC_READ", "win32file", "None", "OPEN_EXISTING", "win32con", "None", "rc", "data", "ReadFile", "win32file", "handle", "assertEquals", "self", "data", "test_data", "Close", "handle", "unlink", "os", "filename", "error", "os", "testMoreFiles", "self", "testName", "join", "path", "os", "GetTempPath", "win32api", "win32filetest.dat", "desiredAccess", "GENERIC_READ", "win32file", "GENERIC_WRITE", "win32file", "fileFlags", "FILE_FLAG_DELETE_ON_CLOSE", "win32file", "h", "CreateFile", "win32file", "testName", "desiredAccess", "FILE_SHARE_READ", "win32file", "None", "CREATE_ALWAYS", "win32file", "fileFlags", "data", "z", "WriteFile", "win32file", "h", "data", "failUnless", "self", "GetFileSize", "win32file", "h", "len", "data", "WARNING: Written file does not have the same size as the length of the data in it!", "SetFilePointer", "win32file", "h", "FILE_BEGIN", "win32file", "hr", "read_data", "ReadFile", "win32file", "h", "len", "data", "failUnless", "self", "hr", "Readfile returned %d", "hr", "failUnless", "self", "read_data", "data", "Read data is not what we wrote!", "newSize", "len", "data", "SetFilePointer", "win32file", "h", "newSize", "FILE_BEGIN", "win32file", "SetEndOfFile", "win32file", "h", "failUnless", "self", "GetFileSize", "win32file", "h", "newSize", "Truncated file does not have the expected size!", "failUnless", "self", "GetFileAttributesEx", "win32file", "testName", "GetFileAttributesExW", "win32file", "testName", "ERROR: Expected GetFileAttributesEx and GetFileAttributesExW to return the same data", "attr", "ct", "at", "wt", "size", "GetFileAttributesEx", "win32file", "testName", "failUnless", "self", "size", "newSize", "Expected GetFileAttributesEx to return the same size as GetFileSize()", "failUnless", "self", "attr", "GetFileAttributes", "win32file", "testName", "Expected GetFileAttributesEx to return the same attributes as GetFileAttributes", "h", "None", "failUnless", "self", "isfile", "path", "os", "testName", "After closing the file, it still exists!", "testFilePointer", "self", "filename", "join", "path", "os", "GetTempPath", "win32api", "win32filetest.dat", "f", "CreateFile", "win32file", "filename", "GENERIC_READ", "win32file", "GENERIC_WRITE", "win32file", "None", "CREATE_ALWAYS", "win32file", "FILE_ATTRIBUTE_NORMAL", "win32file", "data", "Some data", "res", "written", "WriteFile", "win32file", "f", "data", "failIf", "self", "res", "assertEqual", "self", "written", "len", "data", "SetFilePointer", "win32file", "f", "FILE_BEGIN", "win32file", "res", "s", "ReadFile", "win32file", "f", "len", "data", "failIf", "self", "res", "assertEqual", "self", "s", "data", "SetFilePointer", "win32file", "f", "len", "data", "FILE_END", "win32file", "res", "s", "ReadFile", "win32file", "f", "len", "data", "failIf", "self", "res", "failUnlessEqual", "self", "s", "data", "Close", "f", "unlink", "os", "filename", "TestOverlapped", "TestCase", "unittest", "testSimpleOverlapped", "self", "win32event", "testName", "join", "path", "os", "GetTempPath", "win32api", "win32filetest.dat", "desiredAccess", "GENERIC_WRITE", "win32file", "overlapped", "OVERLAPPED", "pywintypes", "evt", "CreateEvent", "win32event", "None", "None", "hEvent", "overlapped", "evt", "h", "CreateFile", "win32file", "testName", "desiredAccess", "None", "CREATE_ALWAYS", "win32file", "chunk_data", "z", "num_loops", "expected_size", "num_loops", "len", "chunk_data", "i", "range", "num_loops", "WriteFile", "win32file", "h", "chunk_data", "overlapped", "WaitForSingleObject", "win32event", "hEvent", "overlapped", "INFINITE", "win32event", "Offset", "overlapped", "Offset", "overlapped", "len", "chunk_data", "Close", "h", "overlapped", "OVERLAPPED", "pywintypes", "evt", "CreateEvent", "win32event", "None", "None", "hEvent", "overlapped", "evt", "desiredAccess", "GENERIC_READ", "win32file", "h", "CreateFile", "win32file", "testName", "desiredAccess", "None", "OPEN_EXISTING", "win32file", "buffer", "AllocateReadBuffer", "win32file", "hr", "data", "ReadFile", "win32file", "h", "buffer", "overlapped", "WaitForSingleObject", "win32event", "hEvent", "overlapped", "INFINITE", "win32event", "Offset", "overlapped", "Offset", "overlapped", "len", "data", "data", "buffer", "fail", "self", "Unexpected result from ReadFile - should be the same buffer we passed it", "error", "win32api", "Close", "h", "testCompletionPortsMultiple", "self", "ioport", "CreateIoCompletionPort", "win32file", "INVALID_HANDLE_VALUE", "win32file", "socks", "PORT", "range", "sock", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM", "socket", "setsockopt", "sock", "SOL_SOCKET", "socket", "SO_REUSEADDR", "socket", "bind", "sock", "", "PORT", "listen", "sock", "append", "socks", "sock", "new", "CreateIoCompletionPort", "win32file", "fileno", "sock", "ioport", "PORT", "new", "ioport", "s", "socks", "close", "s", "hv", "int", "ioport", "ioport", "new", "None", "CloseHandle", "win32file", "hv", "RuntimeError", "Expected close to fail!", "error", "win32file", "hr", "func", "msg", "failUnlessEqual", "self", "hr", "ERROR_INVALID_HANDLE", "winerror", "testCompletionPortsQueued", "self", "Foo", "io_req_port", "CreateIoCompletionPort", "win32file", "None", "overlapped", "OVERLAPPED", "pywintypes", "object", "overlapped", "Foo", "PostQueuedCompletionStatus", "win32file", "io_req_port", "overlapped", "errCode", "bytes", "key", "overlapped", "GetQueuedCompletionStatus", "win32file", "io_req_port", "INFINITE", "win32event", "failUnlessEqual", "self", "errCode", "failUnless", "self", "isinstance", "object", "overlapped", "Foo", "_IOCPServerThread", "self", "handle", "port", "drop_overlapped_reference", "overlapped", "OVERLAPPED", "pywintypes", "ConnectNamedPipe", "win32pipe", "handle", "overlapped", "drop_overlapped_reference", "overlapped", "None", "failUnlessRaises", "self", "RuntimeError", "GetQueuedCompletionStatus", "win32file", "port", "Close", "handle", "result", "GetQueuedCompletionStatus", "win32file", "port", "ol2", "result", "failUnless", "self", "ol2", "overlapped", "data", "ReadFile", "win32file", "handle", "WriteFile", "win32file", "handle", "data", "testCompletionPortsNonQueued", "self", "test_overlapped_death", "BUFSIZE", "pipe_name", "\\\\.\\pipe\\pywin32_test_pipe", "handle", "CreateNamedPipe", "win32pipe", "pipe_name", "PIPE_ACCESS_DUPLEX", "win32pipe", "FILE_FLAG_OVERLAPPED", "win32file", "PIPE_TYPE_MESSAGE", "win32pipe", "PIPE_READMODE_MESSAGE", "win32pipe", "PIPE_WAIT", "win32pipe", "BUFSIZE", "BUFSIZE", "NMPWAIT_WAIT_FOREVER", "win32pipe", "None", "port", "CreateIoCompletionPort", "win32file", "CreateIoCompletionPort", "win32file", "handle", "port", "thread", "Thread", "threading", "target", "_IOCPServerThread", "self", "args", "handle", "port", "test_overlapped_death", "start", "thread", "sleep", "time", "CallNamedPipe", "win32pipe", "\\\\.\\pipe\\pywin32_test_pipe", "Hello there", "BUFSIZE", "error", "win32pipe", "test_overlapped_death", "Close", "handle", "join", "thread", "testCompletionPortsNonQueuedBadReference", "self", "testCompletionPortsNonQueued", "self", "True", "testHashable", "self", "overlapped", "OVERLAPPED", "pywintypes", "d", "d", "overlapped", "hello", "TestSocketExtensions", "TestCase", "unittest", "acceptWorker", "self", "port", "running_event", "stopped_event", "listener", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM", "socket", "bind", "listener", "", "port", "listen", "listener", "accepter", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM", "socket", "overlapped", "OVERLAPPED", "pywintypes", "hEvent", "overlapped", "CreateEvent", "win32event", "None", "None", "buffer", " ", "assertRaises", "self", "TypeError", "AcceptEx", "win32file", "listener", "accepter", "buffer", "overlapped", "buffer", "AllocateReadBuffer", "win32file", "rc", "AcceptEx", "win32file", "listener", "accepter", "buffer", "overlapped", "failUnlessEqual", "self", "rc", "ERROR_IO_PENDING", "winerror", "set", "running_event", "rc", "WaitForSingleObject", "win32event", "hEvent", "overlapped", "rc", "WAIT_TIMEOUT", "win32event", "fail", "self", "timed out waiting for a connection", "nbytes", "GetOverlappedResult", "win32file", "fileno", "listener", "overlapped", "False", "send", "accepter", "buffer", "nbytes", "set", "stopped_event", "testAcceptEx", "self", "port", "running", "Event", "threading", "stopped", "Event", "threading", "t", "Thread", "threading", "target", "acceptWorker", "self", "args", "port", "running", "stopped", "start", "t", "wait", "running", "isSet", "running", "fail", "self", "AcceptEx Worker thread failed to start", "s", "create_connection", "socket", "127.0.0.1", "port", "WSASend", "win32file", "s", "hello", "None", "overlapped", "OVERLAPPED", "pywintypes", "hEvent", "overlapped", "CreateEvent", "win32event", "None", "None", "buffer", " ", "assertRaises", "self", "TypeError", "WSARecv", "win32file", "s", "buffer", "overlapped", "buffer", "AllocateReadBuffer", "win32file", "WSARecv", "win32file", "s", "buffer", "overlapped", "nbytes", "GetOverlappedResult", "win32file", "fileno", "s", "overlapped", "True", "got", "buffer", "nbytes", "failUnlessEqual", "self", "got", "hello", "wait", "stopped", "isSet", "stopped", "fail", "self", "AcceptEx Worker thread failed to successfully stop", "TestFindFiles", "TestCase", "unittest", "testIter", "self", "dir", "join", "path", "os", "getcwd", "os", "*", "files", "FindFilesW", "win32file", "dir", "set1", "Set", "sets", "update", "set1", "files", "set2", "Set", "sets", "file", "FindFilesIterator", "win32file", "dir", "add", "set2", "file", "len", "set2", "This directory has less than 5 files!?", "failUnlessEqual", "self", "set1", "set2", "testBadDir", "self", "dir", "join", "path", "os", "getcwd", "os", "a dir that doesnt exist", "*", "assertRaises", "self", "error", "win32file", "FindFilesIterator", "win32file", "dir", "testEmptySpec", "self", "spec", "join", "path", "os", "getcwd", "os", "*.foo_bar", "num", "i", "FindFilesIterator", "win32file", "spec", "num", "failUnlessEqual", "self", "num", "testEmptyDir", "self", "test_path", "join", "path", "os", "GetTempPath", "win32api", "win32file_test_directory", "rmdir", "os", "test_path", "error", "os", "mkdir", "os", "test_path", "num", "i", "FindFilesIterator", "win32file", "join", "path", "os", "test_path", "*", "num", "failUnlessEqual", "self", "num", "rmdir", "os", "test_path", "TestDirectoryChanges", "TestCase", "unittest", "num_test_dirs", "setUp", "self", "watcher_threads", "self", "watcher_thread_changes", "self", "dir_names", "self", "dir_handles", "self", "i", "range", "num_test_dirs", "self", "td", "mktemp", "tempfile", "-test-directory-changes-%d", "i", "mkdir", "os", "td", "append", "dir_names", "self", "td", "hdir", "CreateFile", "win32file", "td", "FILE_LIST_DIRECTORY", "ntsecuritycon", "FILE_SHARE_READ", "win32con", "None", "OPEN_EXISTING", "win32con", "FILE_FLAG_BACKUP_SEMANTICS", "win32con", "FILE_FLAG_OVERLAPPED", "win32con", "None", "append", "dir_handles", "self", "hdir", "changes", "t", "Thread", "threading", "target", "_watcherThreadOverlapped", "self", "args", "td", "hdir", "changes", "start", "t", "append", "watcher_threads", "self", "t", "append", "watcher_thread_changes", "self", "changes", "_watcherThread", "self", "dn", "dh", "changes", "flags", "FILE_NOTIFY_CHANGE_FILE_NAME", "win32con", "waiting", "dh", "changes", "ReadDirectoryChangesW", "win32file", "dh", "False", "flags", "got", "changes", "xx", "xx", "extend", "changes", "changes", "_watcherThreadOverlapped", "self", "dn", "dh", "changes", "flags", "FILE_NOTIFY_CHANGE_FILE_NAME", "win32con", "buf", "AllocateReadBuffer", "win32file", "overlapped", "OVERLAPPED", "pywintypes", "hEvent", "overlapped", "CreateEvent", "win32event", "None", "None", "ReadDirectoryChangesW", "win32file", "dh", "buf", "False", "flags", "overlapped", "rc", "WaitForSingleObject", "win32event", "hEvent", "overlapped", "rc", "WAIT_OBJECT_0", "win32event", "nbytes", "GetOverlappedResult", "win32file", "dh", "overlapped", "True", "nbytes", "bits", "FILE_NOTIFY_INFORMATION", "win32file", "buf", "nbytes", "extend", "changes", "bits", "ERROR: Watcher thread timed-out!", "tearDown", "self", "h", "dir_handles", "self", "Close", "h", "dn", "dir_names", "self", "rmtree", "shutil", "dn", "OSError", "FAILED to remove directory", "dn", "t", "watcher_threads", "self", "join", "t", "isAlive", "t", "FAILED to wait for thread termination", "stablize", "self", "sleep", "time", "testSimple", "self", "stablize", "self", "dn", "dir_names", "self", "fn", "join", "path", "os", "dn", "test_file", "close", "open", "fn", "w", "stablize", "self", "changes", "watcher_thread_changes", "self", "failUnlessEqual", "self", "changes", "test_file", "testSmall", "self", "stablize", "self", "dn", "dir_names", "self", "fn", "join", "path", "os", "dn", "x", "close", "open", "fn", "w", "stablize", "self", "changes", "watcher_thread_changes", "self", "failUnlessEqual", "self", "changes", "x", "TestEncrypt", "TestCase", "unittest", "testEncrypt", "self", "fname", "mktemp", "tempfile", "win32file_test", "f", "open", "fname", "wb", "write", "f", "hello", "close", "f", "f", "None", "EncryptFile", "win32file", "fname", "error", "win32file", "details", "details", "ERROR_ACCESS_DENIED", "winerror", "It appears this is not NTFS - cant encrypt/decrypt", "DecryptFile", "win32file", "fname", "f", "None", "close", "f", "unlink", "os", "fname", "__name__", "__main__", "main", "unittest", "imp", "os", "sys", "shutil", "os.path", "join", "numpy.distutils", "log", "distutils.dep_util", "newer", "distutils.sysconfig", "get_config_var", "warnings", "re", "setup_common", "*", "environ", "os", "NPY_SEPARATE_COMPILATION", "ENABLE_SEPARATE_COMPILATION", "True", "KeyError", "ENABLE_SEPARATE_COMPILATION", "False", "cPickle", "_pik", "ImportError", "pickle", "_pik", "copy", "CallOnceOnly", "object", "__init__", "self", "_check_types", "self", "None", "_check_ieee_macros", "self", "None", "_check_complex", "self", "None", "check_types", "a", "kw", "self", "_check_types", "self", "None", "out", "check_types", "a", "kw", "_check_types", "self", "dumps", "_pik", "out", "out", "deepcopy", "copy", "loads", "_pik", "_check_types", "self", "out", "check_ieee_macros", "a", "kw", "self", "_check_ieee_macros", "self", "None", "out", "check_ieee_macros", "a", "kw", "_check_ieee_macros", "self", "dumps", "_pik", "out", "out", "deepcopy", "copy", "loads", "_pik", "_check_ieee_macros", "self", "out", "check_complex", "a", "kw", "self", "_check_complex", "self", "None", "out", "check_complex", "a", "kw", "_check_complex", "self", "dumps", "_pik", "out", "out", "deepcopy", "copy", "loads", "_pik", "_check_complex", "self", "out", "PYTHON_HAS_UNICODE_WIDE", "True", "pythonlib_dir", "return path where libpython* is.", "platform", "sys", "win32", "join", "path", "os", "prefix", "sys", "libs", "get_config_var", "LIBDIR", "is_npy_no_signal", "Return True if the NPY_NO_SIGNAL symbol must be defined in configuration\n    header.", "platform", "sys", "win32", "is_npy_no_smp", "Return True if the NPY_NO_SMP symbol must be defined in public\n    header (when SMP support cannot be reliably enabled).", "version", "sys", "2.4.2", "nosmp", "nosmp", "environ", "os", "NPY_NOSMP", "nosmp", "KeyError", "nosmp", "nosmp", "win32_checks", "deflist", "numpy.distutils.misc_util", "get_build_architecture", "a", "get_build_architecture", "BUILD_ARCHITECTURE: %r, os.name=%r, sys.platform=%r", "a", "name", "os", "platform", "sys", "a", "AMD64", "append", "deflist", "DISTUTILS_USE_SDK", "a", "Intel", "a", "AMD64", "append", "deflist", "FORCE_NO_LONG_DOUBLE_FORMATTING", "check_math_capabilities", "config", "moredefs", "mathlibs", "check_func", "func_name", "check_func", "config", "func_name", "libraries", "mathlibs", "decl", "True", "call", "True", "check_funcs_once", "funcs_name", "decl", "dict", "f", "True", "f", "funcs_name", "st", "check_funcs_once", "config", "funcs_name", "libraries", "mathlibs", "decl", "decl", "call", "decl", "st", "extend", "moredefs", "fname2def", "f", "f", "funcs_name", "st", "check_funcs", "funcs_name", "check_funcs_once", "funcs_name", "f", "funcs_name", "check_func", "f", "append", "moredefs", "fname2def", "f", "check_funcs_once", "MANDATORY_FUNCS", "SystemError", "One of the required function to build numpy is not available (the list is %s).", "str", "MANDATORY_FUNCS", "version_info", "sys", "f", "OPTIONAL_STDFUNCS_MAYBE", "check_decl", "config", "fname2def", "f", "headers", "Python.h", "math.h", "remove", "OPTIONAL_STDFUNCS", "f", "check_funcs", "OPTIONAL_STDFUNCS", "check_funcs", "C99_FUNCS_SINGLE", "check_funcs", "C99_FUNCS_EXTENDED", "check_complex", "config", "mathlibs", "priv", "pub", "uname", "os", "Interix", "warn", "warnings", "Disabling broken complex support. See #1365", "priv", "pub", "st", "check_header", "config", "complex.h", "st", "append", "priv", "HAVE_COMPLEX_H", "append", "pub", "NPY_USE_C99_COMPLEX", "t", "C99_COMPLEX_TYPES", "st", "check_type", "config", "t", "headers", "complex.h", "st", "append", "pub", "NPY_HAVE_%s", "type2def", "t", "check_prec", "prec", "flist", "f", "prec", "f", "C99_COMPLEX_FUNCS", "decl", "dict", "f", "True", "f", "flist", "check_funcs_once", "config", "flist", "call", "decl", "decl", "decl", "libraries", "mathlibs", "f", "flist", "check_func", "config", "f", "call", "True", "decl", "True", "libraries", "mathlibs", "append", "priv", "fname2def", "f", "extend", "priv", "fname2def", "f", "f", "flist", "check_prec", "", "check_prec", "f", "check_prec", "l", "priv", "pub", "check_ieee_macros", "config", "priv", "pub", "macros", "_add_decl", "f", "append", "priv", "fname2def", "decl_%s", "f", "append", "pub", "NPY_%s", "fname2def", "decl_%s", "f", "_macros", "isnan", "isinf", "signbit", "isfinite", "version_info", "sys", "f", "_macros", "py_symbol", "fname2def", "decl_%s", "f", "already_declared", "check_decl", "config", "py_symbol", "headers", "Python.h", "math.h", "already_declared", "check_macro_true", "config", "py_symbol", "headers", "Python.h", "math.h", "append", "pub", "NPY_%s", "fname2def", "decl_%s", "f", "append", "macros", "f", "macros", "_macros", "f", "macros", "st", "check_decl", "config", "f", "headers", "Python.h", "math.h", "st", "_add_decl", "f", "priv", "pub", "check_types", "config_cmd", "ext", "build_dir", "private_defines", "public_defines", "expected", "expected", "short", "expected", "int", "expected", "long", "expected", "float", "expected", "double", "expected", "long double", "expected", "Py_intptr_t", "expected", "PY_LONG_LONG", "expected", "long long", "result", "check_header", "config_cmd", "Python.h", "result", "SystemError", "Cannot compile 'Python.h'. Perhaps you need to install python-dev|python-devel.", "res", "check_header", "config_cmd", "endian.h", "res", "append", "private_defines", "HAVE_ENDIAN_H", "append", "public_defines", "NPY_HAVE_ENDIAN_H", "type", "short", "int", "long", "res", "check_decl", "config_cmd", "SIZEOF_%s", "sym2def", "type", "headers", "Python.h", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "type", "SIZEOF_%s", "sym2def", "type", "res", "check_type_size", "config_cmd", "type", "expected", "expected", "type", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "type", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "type", "type", "float", "double", "long double", "already_declared", "check_decl", "config_cmd", "SIZEOF_%s", "sym2def", "type", "headers", "Python.h", "res", "check_type_size", "config_cmd", "type", "expected", "expected", "type", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "type", "%d", "res", "already_declared", "type", "long double", "append", "private_defines", "SIZEOF_%s", "sym2def", "type", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "type", "complex_def", "struct {%s __x; %s __y;}", "type", "type", "res", "check_type_size", "config_cmd", "complex_def", "expected", "expected", "type", "res", "append", "public_defines", "NPY_SIZEOF_COMPLEX_%s", "sym2def", "type", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "complex_def", "type", "Py_intptr_t", "res", "check_type_size", "config_cmd", "type", "headers", "Python.h", "library_dirs", "pythonlib_dir", "expected", "expected", "type", "res", "append", "private_defines", "SIZEOF_%s", "sym2def", "type", "%d", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "type", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "type", "check_decl", "config_cmd", "PY_LONG_LONG", "headers", "Python.h", "res", "check_type_size", "config_cmd", "PY_LONG_LONG", "headers", "Python.h", "library_dirs", "pythonlib_dir", "expected", "expected", "PY_LONG_LONG", "res", "append", "private_defines", "SIZEOF_%s", "sym2def", "PY_LONG_LONG", "%d", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "PY_LONG_LONG", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "PY_LONG_LONG", "res", "check_type_size", "config_cmd", "long long", "expected", "expected", "long long", "res", "append", "public_defines", "NPY_SIZEOF_%s", "sym2def", "long long", "%d", "res", "SystemError", "Checking sizeof (%s) failed !", "long long", "check_decl", "config_cmd", "CHAR_BIT", "headers", "Python.h", "RuntimeError", "Config wo CHAR_BIT is not supported, please contact the maintainers", "private_defines", "public_defines", "check_mathlib", "config_cmd", "mathlibs", "mathlibs_choices", "m", "cpml", "mathlib", "get", "environ", "os", "MATHLIB", "mathlib", "insert", "mathlibs_choices", "split", "mathlib", ",", "libs", "mathlibs_choices", "check_func", "config_cmd", "exp", "libraries", "libs", "decl", "True", "call", "True", "mathlibs", "libs", "EnvironmentError", "math library missing; rerun setup.py after setting the MATHLIB env variable", "mathlibs", "visibility_define", "config", "Return the define value to use for NPY_VISIBILITY_HIDDEN (may be empty\n    string).", "check_compiler_gcc4", "config", "__attribute__((visibility(\"hidden\")))", "", "configuration", "parent_package", "top_path", "", "None", "numpy.distutils.misc_util", "Configuration", "dot_join", "numpy.distutils.system_info", "get_info", "default_lib_dirs", "config", "Configuration", "core", "parent_package", "top_path", "local_dir", "local_path", "config", "codegen_dir", "join", "local_dir", "code_generators", "is_released", "config", "simplefilter", "warnings", "error", "MismatchCAPIWarning", "check_api_version", "C_API_VERSION", "codegen_dir", "generate_umath_py", "join", "codegen_dir", "generate_umath.py", "n", "dot_join", "name", "config", "generate_umath", "generate_umath", "load_module", "imp", "join", "_", "split", "n", ".", "open", "generate_umath_py", "U", "generate_umath_py", ".py", "U", "header_dir", "include/numpy", "cocache", "CallOnceOnly", "generate_config_h", "ext", "build_dir", "target", "join", "build_dir", "header_dir", "config.h", "d", "dirname", "path", "os", "target", "exists", "path", "os", "d", "makedirs", "os", "d", "newer", "__file__", "target", "config_cmd", "get_config_cmd", "config", "info", "log", "Generating %s", "target", "moredefs", "ignored", "check_types", "cocache", "config_cmd", "ext", "build_dir", "mathlibs", "check_mathlib", "config_cmd", "append", "moredefs", "MATHLIB", "join", ",", "mathlibs", "check_math_capabilities", "config_cmd", "moredefs", "mathlibs", "extend", "moredefs", "check_ieee_macros", "cocache", "config_cmd", "extend", "moredefs", "check_complex", "cocache", "config_cmd", "mathlibs", "is_npy_no_signal", "append", "moredefs", "__NPY_PRIVATE_NO_SIGNAL", "platform", "sys", "win32", "name", "os", "nt", "win32_checks", "moredefs", "inline", "check_inline", "config_cmd", "check_decl", "config_cmd", "Py_UNICODE_WIDE", "headers", "Python.h", "PYTHON_HAS_UNICODE_WIDE", "True", "PYTHON_HAS_UNICODE_WIDE", "False", "ENABLE_SEPARATE_COMPILATION", "append", "moredefs", "ENABLE_SEPARATE_COMPILATION", "platform", "sys", "darwin", "rep", "check_long_double_representation", "config_cmd", "rep", "INTEL_EXTENDED_12_BYTES_LE", "INTEL_EXTENDED_16_BYTES_LE", "IEEE_QUAD_LE", "IEEE_QUAD_BE", "IEEE_DOUBLE_LE", "IEEE_DOUBLE_BE", "DOUBLE_DOUBLE_BE", "append", "moredefs", "HAVE_LDOUBLE_%s", "rep", "ValueError", "Unrecognized long double format: %s", "rep", "version_info", "sys", "append", "moredefs", "NPY_PY3K", "target_f", "open", "target", "w", "d", "moredefs", "isinstance", "d", "str", "write", "target_f", "#define %s\n", "d", "write", "target_f", "#define %s %s\n", "d", "d", "write", "target_f", "#ifndef __cplusplus\n", "inline", "inline", "write", "target_f", "/* #undef inline */\n", "write", "target_f", "#define inline %s\n", "inline", "write", "target_f", "#endif\n", "write", "target_f", "\n#ifndef _NPY_NPY_CONFIG_H_\n#error config.h should never be included directly, include npy_config.h instead\n#endif\n", "close", "target_f", "File:", "target", "target_f", "open", "target", "read", "target_f", "close", "target_f", "EOF", "mathlibs", "target_f", "open", "target", "line", "readlines", "target_f", "s", "#define MATHLIB", "startswith", "line", "s", "value", "strip", "line", "len", "s", "value", "extend", "mathlibs", "split", "value", ",", "close", "target_f", "hasattr", "ext", "libraries", "extend", "libraries", "ext", "mathlibs", "incl_dir", "dirname", "path", "os", "target", "incl_dir", "numpy_include_dirs", "config", "append", "numpy_include_dirs", "config", "incl_dir", "target", "generate_numpyconfig_h", "ext", "build_dir", "Depends on config.h: generate_config_h has to be called before !", "target", "join", "build_dir", "header_dir", "_numpyconfig.h", "d", "dirname", "path", "os", "target", "exists", "path", "os", "d", "makedirs", "os", "d", "newer", "__file__", "target", "config_cmd", "get_config_cmd", "config", "info", "log", "Generating %s", "target", "ignored", "moredefs", "check_types", "cocache", "config_cmd", "ext", "build_dir", "is_npy_no_signal", "append", "moredefs", "NPY_NO_SIGNAL", "is_npy_no_smp", "append", "moredefs", "NPY_NO_SMP", "append", "moredefs", "NPY_NO_SMP", "mathlibs", "check_mathlib", "config_cmd", "extend", "moredefs", "check_ieee_macros", "cocache", "config_cmd", "extend", "moredefs", "check_complex", "cocache", "config_cmd", "mathlibs", "ENABLE_SEPARATE_COMPILATION", "append", "moredefs", "NPY_ENABLE_SEPARATE_COMPILATION", "check_decl", "config_cmd", "PRIdPTR", "headers", "inttypes.h", "append", "moredefs", "NPY_USE_C99_FORMATS", "hidden_visibility", "visibility_define", "config_cmd", "append", "moredefs", "NPY_VISIBILITY_HIDDEN", "hidden_visibility", "append", "moredefs", "NPY_ABI_VERSION", "0x%.8X", "C_ABI_VERSION", "append", "moredefs", "NPY_API_VERSION", "0x%.8X", "C_API_VERSION", "target_f", "open", "target", "w", "d", "moredefs", "isinstance", "d", "str", "write", "target_f", "#define %s\n", "d", "write", "target_f", "#define %s %s\n", "d", "d", "write", "target_f", "\n#ifndef __STDC_FORMAT_MACROS\n#define __STDC_FORMAT_MACROS 1\n#endif\n", "close", "target_f", "File: %s", "target", "target_f", "open", "target", "read", "target_f", "close", "target_f", "EOF", "add_data_files", "config", "header_dir", "target", "target", "generate_api_func", "module_name", "generate_api", "ext", "build_dir", "script", "join", "codegen_dir", "module_name", ".py", "insert", "path", "sys", "codegen_dir", "m", "__import__", "module_name", "info", "log", "executing %s", "script", "h_file", "c_file", "doc_file", "generate_api", "m", "join", "path", "os", "build_dir", "header_dir", "path", "sys", "add_data_files", "config", "header_dir", "h_file", "header_dir", "doc_file", "h_file", "generate_api", "generate_numpy_api", "generate_api_func", "generate_numpy_api", "generate_ufunc_api", "generate_api_func", "generate_ufunc_api", "add_include_dirs", "config", "join", "local_dir", "src", "private", "add_include_dirs", "config", "join", "local_dir", "src", "add_include_dirs", "config", "join", "local_dir", "generate_multiarray_templated_sources", "ext", "build_dir", "numpy.distutils.misc_util", "get_cmd", "subpath", "join", "src", "multiarray", "sources", "join", "local_dir", "subpath", "scalartypes.c.src", "join", "local_dir", "subpath", "arraytypes.c.src", "join", "local_dir", "subpath", "nditer.c.src", "join", "local_dir", "subpath", "lowlevel_strided_loops.c.src", "join", "local_dir", "subpath", "einsum.c.src", "add_include_dirs", "config", "join", "build_dir", "subpath", "cmd", "get_cmd", "build_src", "ensure_finalized", "cmd", "template_sources", "cmd", "sources", "ext", "generate_umath_templated_sources", "ext", "build_dir", "numpy.distutils.misc_util", "get_cmd", "subpath", "join", "src", "umath", "sources", "join", "local_dir", "subpath", "loops.c.src", "join", "local_dir", "subpath", "umathmodule.c.src", "add_include_dirs", "config", "join", "build_dir", "subpath", "cmd", "get_cmd", "build_src", "ensure_finalized", "cmd", "template_sources", "cmd", "sources", "ext", "generate_umath_c", "ext", "build_dir", "target", "join", "build_dir", "header_dir", "__umath_generated.c", "dir", "dirname", "path", "os", "target", "exists", "path", "os", "dir", "makedirs", "os", "dir", "script", "generate_umath_py", "newer", "script", "target", "f", "open", "target", "w", "write", "f", "make_code", "generate_umath", "defdict", "generate_umath", "__file__", "generate_umath", "close", "f", "add_data_files", "config", "include/numpy/*.h", "add_include_dirs", "config", "join", "src", "npymath", "add_include_dirs", "config", "join", "src", "multiarray", "add_include_dirs", "config", "join", "src", "umath", "extend", "numpy_include_dirs", "config", "paths", "config", "include", "deps", "join", "src", "npymath", "_signbit.c", "join", "include", "numpy", "*object.h", "include/numpy/fenv/fenv.c", "include/numpy/fenv/fenv.h", "join", "codegen_dir", "genapi.py", "platform", "sys", "cygwin", "add_data_dir", "config", "include/numpy/fenv", "add_extension", "config", "_sort", "sources", "join", "src", "_sortmodule.c.src", "generate_config_h", "generate_numpyconfig_h", "generate_numpy_api", "libraries", "npymath", "subst_dict", "dict", "sep", "sep", "path", "os", "pkgname", "numpy.core", "get_mathlib_info", "args", "config_cmd", "get_config_cmd", "config", "st", "try_link", "config_cmd", "int main(void) { return 0;}", "st", "RuntimeError", "Broken toolchain: cannot link a simple C program", "mlibs", "check_mathlib", "config_cmd", "posix_mlib", "join", " ", "-l%s", "l", "l", "mlibs", "msvc_mlib", "join", " ", "%s.lib", "l", "l", "mlibs", "subst_dict", "posix_mathlib", "posix_mlib", "subst_dict", "msvc_mathlib", "msvc_mlib", "add_installed_library", "config", "npymath", "sources", "join", "src", "npymath", "npy_math.c.src", "join", "src", "npymath", "ieee754.c.src", "join", "src", "npymath", "npy_math_complex.c.src", "join", "src", "npymath", "halffloat.c", "get_mathlib_info", "install_dir", "lib", "add_npy_pkg_config", "config", "npymath.ini.in", "lib/npy-pkg-config", "subst_dict", "add_npy_pkg_config", "config", "mlib.ini.in", "lib/npy-pkg-config", "subst_dict", "multiarray_deps", "join", "src", "multiarray", "arrayobject.h", "join", "src", "multiarray", "arraytypes.h", "join", "src", "multiarray", "buffer.h", "join", "src", "multiarray", "calculation.h", "join", "src", "multiarray", "common.h", "join", "src", "multiarray", "convert_datatype.h", "join", "src", "multiarray", "convert.h", "join", "src", "multiarray", "conversion_utils.h", "join", "src", "multiarray", "ctors.h", "join", "src", "multiarray", "descriptor.h", "join", "src", "multiarray", "getset.h", "join", "src", "multiarray", "hashdescr.h", "join", "src", "multiarray", "iterators.h", "join", "src", "multiarray", "mapping.h", "join", "src", "multiarray", "methods.h", "join", "src", "multiarray", "multiarraymodule.h", "join", "src", "multiarray", "numpymemoryview.h", "join", "src", "multiarray", "number.h", "join", "src", "multiarray", "numpyos.h", "join", "src", "multiarray", "refcount.h", "join", "src", "multiarray", "scalartypes.h", "join", "src", "multiarray", "sequence.h", "join", "src", "multiarray", "shape.h", "join", "src", "multiarray", "ucsnarrow.h", "join", "src", "multiarray", "usertypes.h", "join", "src", "private", "lowlevel_strided_loops.h", "multiarray_src", "join", "src", "multiarray", "multiarraymodule.c", "join", "src", "multiarray", "hashdescr.c", "join", "src", "multiarray", "arrayobject.c", "join", "src", "multiarray", "numpymemoryview.c", "join", "src", "multiarray", "buffer.c", "join", "src", "multiarray", "datetime.c", "join", "src", "multiarray", "numpyos.c", "join", "src", "multiarray", "conversion_utils.c", "join", "src", "multiarray", "flagsobject.c", "join", "src", "multiarray", "descriptor.c", "join", "src", "multiarray", "iterators.c", "join", "src", "multiarray", "mapping.c", "join", "src", "multiarray", "number.c", "join", "src", "multiarray", "getset.c", "join", "src", "multiarray", "sequence.c", "join", "src", "multiarray", "methods.c", "join", "src", "multiarray", "ctors.c", "join", "src", "multiarray", "convert_datatype.c", "join", "src", "multiarray", "convert.c", "join", "src", "multiarray", "shape.c", "join", "src", "multiarray", "item_selection.c", "join", "src", "multiarray", "calculation.c", "join", "src", "multiarray", "common.c", "join", "src", "multiarray", "usertypes.c", "join", "src", "multiarray", "scalarapi.c", "join", "src", "multiarray", "refcount.c", "join", "src", "multiarray", "arraytypes.c.src", "join", "src", "multiarray", "scalartypes.c.src", "join", "src", "multiarray", "nditer.c.src", "join", "src", "multiarray", "lowlevel_strided_loops.c.src", "join", "src", "multiarray", "dtype_transfer.c", "join", "src", "multiarray", "nditer_pywrap.c", "join", "src", "multiarray", "einsum.c.src", "PYTHON_HAS_UNICODE_WIDE", "append", "multiarray_src", "join", "src", "multiarray", "ucsnarrow.c", "umath_src", "join", "src", "umath", "umathmodule.c.src", "join", "src", "umath", "funcs.inc.src", "join", "src", "umath", "loops.c.src", "join", "src", "umath", "ufunc_object.c", "umath_deps", "generate_umath_py", "join", "codegen_dir", "generate_ufunc_api.py", "ENABLE_SEPARATE_COMPILATION", "extend", "multiarray_deps", "multiarray_src", "multiarray_src", "join", "src", "multiarray", "multiarraymodule_onefile.c", "append", "multiarray_src", "generate_multiarray_templated_sources", "extend", "umath_deps", "umath_src", "umath_src", "join", "src", "umath", "umathmodule_onefile.c", "append", "umath_src", "generate_umath_templated_sources", "append", "umath_src", "join", "src", "umath", "funcs.inc.src", "add_include_dirs", "config", "join", "..", "..", "bohrium", "include", "append", "multiarray_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge.h", "append", "multiarray_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge_api.h", "append", "multiarray_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge_types.h", "append", "umath_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge.h", "append", "umath_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge_api.h", "append", "umath_deps", "join", "..", "..", "bohrium", "include", "bohriumbridge_types.h", "bohrium_install_dir", "join", "..", "..", "..", "..", "bohrium_install_dir", "abspath", "path", "os", "environ", "os", "BH_INSTALL_DIR", "KeyError", "bohrium_install_dir", "join", "bohrium_install_dir", "include", "add_include_dirs", "config", "bohrium_install_dir", "add_extension", "config", "multiarray", "sources", "multiarray_src", "generate_config_h", "generate_numpyconfig_h", "generate_numpy_api", "join", "codegen_dir", "generate_numpy_api.py", "join", "*.py", "depends", "deps", "multiarray_deps", "libraries", "npymath", "add_extension", "config", "umath", "sources", "generate_config_h", "generate_numpyconfig_h", "generate_umath_c", "generate_ufunc_api", "umath_src", "depends", "deps", "umath_deps", "libraries", "npymath", "add_extension", "config", "scalarmath", "sources", "join", "src", "scalarmathmodule.c.src", "generate_config_h", "generate_numpyconfig_h", "generate_numpy_api", "generate_ufunc_api", "libraries", "npymath", "blas_info", "get_info", "blas_opt", "get_dotblas_sources", "ext", "build_dir", "blas_info", "NO_ATLAS_INFO", "get", "blas_info", "define_macros", "None", "depends", "ext", "None", "add_extension", "config", "_dotblas", "sources", "get_dotblas_sources", "depends", "join", "blasdot", "_dotblas.c", "join", "blasdot", "cblas.h", "include_dirs", "blasdot", "extra_info", "blas_info", "add_extension", "config", "umath_tests", "sources", "join", "src", "umath", "umath_tests.c.src", "add_extension", "config", "multiarray_tests", "sources", "join", "src", "multiarray", "multiarray_tests.c.src", "add_data_dir", "config", "tests", "add_data_dir", "config", "tests/data", "make_svn_version_py", "config", "config", "__name__", "__main__", "numpy.distutils.core", "setup", "setup", "configuration", "configuration", "re", "logging", "formalchemy", "helpers", "fa_h", "formalchemy", "genshi", "pylons.templating", "render_genshi", "render", "pylons", "c", "config", "pylons.i18n", "_", "ungettext", "N_", "gettext", "ckan.lib.helpers", "literal", "ckan.authz", "Authorizer", "ckan.model", "model", "ckan.lib.helpers", "h", "ckan.lib.field_types", "field_types", "ckan.misc", "ckan.lib.dictization.model_save", "model_save", "log", "getLogger", "logging", "__name__", "name_match", "compile", "re", "[a-z0-9_\\-]*$", "name_validator", "val", "field", "None", "min_length", "len", "val", "min_length", "ValidationError", "formalchemy", "_", "Name must be at least %s characters long", "min_length", "match", "name_match", "val", "ValidationError", "formalchemy", "_", "Name must be purely lowercase alphanumeric (ascii) characters and these symbols: -_", "package_exists", "val", "count", "filter_by", "autoflush", "query", "Session", "model", "Package", "model", "False", "name", "val", "True", "False", "package_name_validator", "val", "field", "None", "name_validator", "val", "field", "pkgs", "filter_by", "autoflush", "query", "Session", "model", "Package", "model", "False", "name", "val", "pkg", "pkgs", "pkg", "model", "parent", "field", "ValidationError", "formalchemy", "_", "Dataset name already exists in database", "group_exists", "val", "count", "filter_by", "autoflush", "query", "Session", "model", "Group", "model", "False", "name", "val", "True", "False", "group_name_validator", "val", "field", "None", "name_validator", "val", "field", "groups", "filter_by", "autoflush", "query", "Session", "model", "Group", "model", "False", "name", "val", "group", "groups", "group", "model", "parent", "field", "ValidationError", "formalchemy", "_", "Group name already exists in database", "field_readonly_renderer", "key", "value", "newline_reqd", "False", "value", "None", "value", "", "html", "literal", "<p>%s</p>", "value", "newline_reqd", "html", "literal", "<br/>", "html", "CoreField", "Field", "fields", "formalchemy", "A field which can sync to a core field in the model.\n    Use this for overriding AttributeFields when you want to be able\n    to set a default value without having to change the sqla Column default.", "sync", "self", "is_readonly", "self", "setattr", "model", "self", "name", "self", "_deserialize", "self", "DateTimeFieldRenderer", "DateTimeFieldRenderer", "fields", "formalchemy", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "render_readonly", "DateTimeFieldRenderer", "fields", "formalchemy", "self", "kwargs", "CheckboxFieldRenderer", "CheckBoxFieldRenderer", "fields", "formalchemy", "render_readonly", "kwargs", "self", "value", "raw_value", "self", "field_readonly_renderer", "key", "field", "self", "value", "TextRenderer", "TextFieldRenderer", "fields", "formalchemy", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "raw_value", "self", "SelectFieldRenderer", "SelectFieldRenderer", "fields", "formalchemy", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "render_readonly", "SelectFieldRenderer", "fields", "formalchemy", "self", "kwargs", "TextAreaRenderer", "TextAreaFieldRenderer", "fields", "formalchemy", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "raw_value", "self", "TextExtraRenderer", "TextFieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "kwargs", "size", "40", "text_field", "fa_h", "name", "self", "value", "value", "self", "maxlength", "length", "self", "kwargs", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "value", "self", "ConfiguredField", "object", "A parent class for a form field and its configuration.\n    Derive specific field classes which should contain:\n    * a formalchemy Field class\n    * a formalchemy Renderer class\n    * possible a field validator method\n    * a get_configured method which returns the Field configured to use\n      the Renderer (and validator if it is used)\n    ", "__init__", "kwargs", "self", "name", "name", "self", "name", "kwargs", "self", "kwargs", "RegExValidatingField", "ConfiguredField", "Inherit from this for fields that need a regex validator.\n    @param validate_re - (\"regex\", \"equivalent format but human readable\")\n    ", "__init__", "kwargs", "self", "name", "validate_re", "None", "__init__", "super", "RegExValidatingField", "self", "name", "kwargs", "_validate_re", "self", "validate_re", "validate_re", "isinstance", "validate_re", "tuple", "isinstance", "validate_re", "str", "isinstance", "validate_re", "str", "unicode", "get_configured", "self", "field", "_validate_re", "self", "field", "validate", "field", "validate_re", "self", "field", "validate_re", "self", "value", "field", "None", "value", "match", "match", "re", "_validate_re", "self", "value", "match", "ValidationError", "formalchemy", "_", "Value does not match required format: %s", "_validate_re", "self", "RegExRangeValidatingField", "RegExValidatingField", "Validates a range field (each value is validated on the same regex)", "validate_re", "self", "values", "field", "None", "value", "values", "validate_re", "RegExValidatingField", "self", "value", "field", "field", "TextExtraField", "RegExValidatingField", "A form field for basic text in an \"extras\" field.", "get_configured", "self", "field", "with_renderer", "TextExtraField", "self", "name", "self", "TextExtraRenderer", "self", "kwargs", "self", "get_configured", "RegExValidatingField", "self", "field", "TextExtraField", "Field", "formalchemy", "__init__", "args", "kwargs", "self", "_null_option", "self", "_", "(None)", "__init__", "super", "__class__", "self", "self", "args", "kwargs", "raw_value", "self", "get", "extras", "model", "self", "name", "self", "property", "sync", "self", "is_readonly", "self", "pkg", "model", "self", "val", "_deserialize", "self", "extras", "pkg", "name", "self", "val", "TextExtraRenderer", "TextExtraRenderer", "TextAreaExtraField", "RegExValidatingField", "A form field for basic text in an \"extras\" field.", "get_configured", "self", "field", "with_renderer", "TextAreaExtraField", "self", "name", "self", "TextAreaRenderer", "self", "kwargs", "self", "get_configured", "RegExValidatingField", "self", "field", "TextAreaExtraField", "Field", "formalchemy", "__init__", "args", "kwargs", "self", "__init__", "super", "__class__", "self", "self", "args", "kwargs", "raw_value", "self", "get", "extras", "model", "self", "name", "self", "property", "sync", "self", "is_readonly", "self", "pkg", "model", "self", "val", "_deserialize", "self", "extras", "pkg", "name", "self", "val", "TextAreaRenderer", "TextAreaRenderer", "DateExtraField", "ConfiguredField", "A form field for DateType data stored in an 'extra' field.", "get_configured", "self", "validate", "with_renderer", "DateExtraFieldField", "self", "name", "self", "DateExtraRenderer", "self", "form_validator", "DateType", "field_types", "DateExtraFieldField", "Field", "formalchemy", "raw_value", "self", "db_date", "get", "extras", "model", "self", "name", "self", "db_date", "db_to_form", "DateType", "field_types", "db_date", "None", "property", "sync", "self", "is_readonly", "self", "form_date", "_deserialize", "self", "date_db", "form_to_db", "DateType", "field_types", "form_date", "may_except", "False", "extras", "model", "self", "name", "self", "date_db", "DateExtraRenderer", "TextExtraRenderer", "__init__", "self", "field", "__init__", "super", "DateExtraRenderer", "DateExtraField", "self", "field", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "value", "self", "DateRangeExtraField", "ConfiguredField", "A form field for two DateType fields, representing a date range,\n    stored in 'extra' fields.", "get_configured", "self", "validate", "with_renderer", "DateRangeField", "self", "name", "self", "DateRangeRenderer", "self", "validator", "self", "validator", "self", "form_date_tuple", "field", "None", "isinstance", "form_date_tuple", "tuple", "list", "form_date_tuple", "from_", "to_", "form_date_tuple", "form_validator", "DateType", "field_types", "from_", "form_validator", "DateType", "field_types", "to_", "DateRangeField", "Field", "formalchemy", "raw_value", "self", "extras", "extras", "model", "self", "from_", "get", "extras", "name", "self", "-from", "to", "get", "extras", "name", "self", "-to", "from_form", "db_to_form", "DateType", "field_types", "from_", "to_form", "db_to_form", "DateType", "field_types", "to", "from_form", "to_form", "property", "is_collection", "self", "True", "property", "sync", "self", "is_readonly", "self", "pkg", "model", "self", "vals", "_deserialize", "self", "extras", "pkg", "name", "self", "-from", "form_to_db", "DateType", "field_types", "vals", "may_except", "False", "extras", "pkg", "name", "self", "-to", "form_to_db", "DateType", "field_types", "vals", "may_except", "False", "DateRangeRenderer", "FieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "from_", "to", "value", "self", "from_html", "text_field", "fa_h", "name", "self", "-from", "value", "from_", "class_", "medium-width", "kwargs", "to_html", "text_field", "fa_h", "name", "self", "-to", "value", "to", "class_", "medium-width", "kwargs", "html", "%s - %s", "from_html", "to_html", "html", "render_readonly", "kwargs", "self", "from_", "to", "value", "self", "to", "val_str", "%s - %s", "from_", "to", "val_str", "%s", "from_", "field_readonly_renderer", "key", "field", "self", "val_str", "_serialized_value", "self", "param_val_from", "get", "params", "self", "name", "self", "-from", "param_val_to", "get", "params", "self", "name", "self", "-to", "param_val_from", "param_val_to", "TextRangeExtraField", "RegExRangeValidatingField", "A form field for two TextType fields, representing a range,\n    stored in 'extra' fields.", "get_configured", "self", "field", "with_renderer", "TextRangeField", "self", "name", "self", "TextRangeRenderer", "self", "get_configured", "RegExRangeValidatingField", "self", "field", "TextRangeField", "Field", "formalchemy", "sync", "self", "is_readonly", "self", "pkg", "model", "self", "vals", "_deserialize", "self", "extras", "pkg", "name", "self", "-from", "vals", "extras", "pkg", "name", "self", "-to", "vals", "TextRangeRenderer", "FieldRenderer", "fields", "formalchemy", "_get_value", "self", "extras", "extras", "model", "parent", "field", "self", "value", "self", "from_form", "to_form", "value", "self", "from_", "get", "extras", "name", "field", "self", "-from", "to", "get", "extras", "name", "field", "self", "-to", "from_form", "from_", "to_form", "to", "from_form", "to_form", "render", "kwargs", "self", "from_", "to", "_get_value", "self", "from_html", "text_field", "fa_h", "name", "self", "-from", "value", "from_", "class_", "medium-width", "kwargs", "to_html", "text_field", "fa_h", "name", "self", "-to", "value", "to", "class_", "medium-width", "kwargs", "html", "%s - %s", "from_html", "to_html", "html", "render_readonly", "kwargs", "self", "val", "_get_value", "self", "val", "val", "from_", "to", "val", "to", "val_str", "%s - %s", "from_", "to", "val_str", "%s", "from_", "field_readonly_renderer", "key", "field", "self", "val_str", "_serialized_value", "self", "param_val_from", "get", "params", "self", "name", "self", "-from", "param_val_to", "get", "params", "self", "name", "self", "-to", "param_val_from", "param_val_to", "deserialize", "self", "_serialized_value", "self", "ResourcesField", "ConfiguredField", "A form field for multiple dataset resources.", "__init__", "self", "name", "hidden_label", "fields_required", "False", "None", "__init__", "super", "ResourcesField", "self", "name", "_hidden_label", "self", "hidden_label", "fields_required", "self", "fields_required", "set", "url", "isinstance", "fields_required", "self", "set", "resource_validator", "self", "val", "field", "None", "resources_data", "val", "isinstance", "resources_data", "list", "not_nothing_regex", "compile", "re", "\\S", "errormsg", "_", "Dataset resource(s) incomplete.", "not_nothing_validator", "regex", "validators", "formalchemy", "not_nothing_regex", "errormsg", "resource_data", "resources_data", "isinstance", "resource_data", "dict", "field", "fields_required", "self", "value", "get", "resource_data", "field", "", "not_nothing_validator", "value", "field", "get_configured", "self", "field", "validate", "with_renderer", "ResourcesField", "self", "name", "self", "ResourcesRenderer", "self", "resource_validator", "self", "_hidden_label", "field", "_hidden_label", "self", "fields_required", "field", "fields_required", "self", "set", "field", "multiple", "True", "field", "ResourcesField", "Field", "formalchemy", "sync", "self", "is_readonly", "self", "pkg", "model", "self", "res_dicts", "_deserialize", "self", "update_resources", "pkg", "res_dicts", "autoflush", "False", "requires_label", "self", "_hidden_label", "self", "requires_label", "property", "requires_label", "raw_value", "self", "getattr", "model", "self", "name", "self", "property", "is_required", "self", "field_name", "None", "field_name", "False", "field_name", "fields_required", "self", "ResourcesRenderer", "FieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "resources", "c", "value", "self", "resources", "c", "resources", "c", "extend", "resources", "c", "None", "id", "c", "name", "self", "columns", "c", "get_columns", "Resource", "model", "field", "c", "field", "self", "fieldset", "c", "parent", "field", "self", "render", "package/form_resources.html", "stringify_value", "self", "v", "res_dict", "v", "isinstance", "v", "Resource", "model", "col", "get_columns", "Resource", "model", "id", "res_dict", "col", "getattr", "v", "col", "res_dict", "_serialized_value", "self", "package", "model", "parent", "field", "self", "params", "params", "self", "new_resources", "rest_key", "name", "self", "has_key", "params", "rest_key", "any", "getall", "params", "rest_key", "new_resources", "getall", "params", "rest_key", "row", "base_columns", "url", "format", "description", "hash", "id", "True", "has_key", "params", "%s-%i-url", "name", "self", "row", "new_resource", "blank_row", "True", "col", "get_columns", "Resource", "model", "id", "col", "base_columns", "value", "get", "params", "%s-%i-%s", "name", "self", "row", "col", "value", "get", "params", "%s-%i-%s", "name", "self", "row", "col", "new_resource", "col", "value", "col", "id", "value", "blank_row", "False", "blank_row", "append", "new_resources", "new_resource", "row", "new_resources", "TagField", "ConfiguredField", "A form field for tags", "get_configured", "self", "validate", "with_renderer", "TagField", "self", "name", "self", "TagEditRenderer", "self", "tag_name_validator", "self", "TagField", "Field", "formalchemy", "raw_value", "self", "tag_objects", "get_tags", "model", "self", "tag_names", "name", "tag", "tag", "tag_objects", "tag_names", "property", "sync", "self", "is_readonly", "self", "_update_tags", "self", "_update_tags", "self", "pkg", "model", "self", "updated_tags", "set", "_deserialize", "self", "existing_tags", "set", "raw_value", "self", "tag", "updated_tags", "existing_tags", "add_tag_by_name", "pkg", "tag", "autoflush", "False", "tags_to_delete", "existing_tags", "updated_tags", "pkgtag", "package_tags", "pkg", "name", "tag", "pkgtag", "tags_to_delete", "delete", "pkgtag", "is_collection", "self", "True", "property", "TagEditRenderer", "FieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "kwargs", "value", "join", ", ", "value", "self", "kwargs", "size", "api_url", "rstrip", "get", "config", "ckan.api_url", "/", "/", "tagcomplete_url", "api_url", "url_for", "h", "controller", "api", "action", "tag_autocomplete", "id", "None", "ver", "kwargs", "data-tagcomplete-url", "tagcomplete_url", "kwargs", "data-tagcomplete-queryparam", "incomplete", "kwargs", "class", "long tagComplete", "html", "literal", "text_field", "fa_h", "name", "self", "kwargs", "html", "_tag_links", "self", "tags", "value", "self", "tag_links", "link_to", "h", "tagname", "url_for", "h", "controller", "tag", "action", "read", "id", "tagname", "tagname", "tags", "literal", "join", ", ", "tag_links", "render_readonly", "kwargs", "self", "tag_links", "_tag_links", "self", "field_readonly_renderer", "key", "field", "self", "tag_links", "_serialized_value", "self", "tags_as_string", "strip", "getone", "params", "self", "name", "self", "tags_as_string", "", "tags", "map", "s", "strip", "s", "split", "tags_as_string", ",", "tags", "tagname_match", "compile", "re", "[^\"]*$", "tag_name_validator", "self", "val", "field", "tag", "val", "tag", "None", "tag", "min_length", "len", "tag", "min_length", "ValidationError", "formalchemy", "_", "Tag \"%s\" length is less than minimum %s", "tag", "min_length", "match", "tagname_match", "self", "tag", "ValidationError", "formalchemy", "_", "Tag \"%s\" must not contain any quotation marks: \"", "tag", "ExtrasField", "ConfiguredField", "A form field for arbitrary \"extras\" dataset data.", "__init__", "self", "name", "hidden_label", "False", "__init__", "super", "ExtrasField", "self", "name", "_hidden_label", "self", "hidden_label", "get_configured", "self", "field", "validate", "with_renderer", "ExtrasField", "self", "name", "self", "ExtrasRenderer", "self", "extras_validator", "self", "_hidden_label", "field", "_hidden_label", "self", "field", "extras_validator", "self", "val", "field", "None", "val_dict", "dict", "val", "key", "value", "val", "value", "val_dict", "key", "ValidationError", "formalchemy", "_", "Duplicate key \"%s\"", "key", "value", "key", "ValidationError", "formalchemy", "_", "Extra key-value pair: key is not set for value \"%s\".", "value", "ExtrasField", "Field", "formalchemy", "raw_value", "self", "items", "extras", "model", "self", "property", "is_collection", "self", "True", "property", "sync", "self", "is_readonly", "self", "_update_extras", "self", "_update_extras", "self", "pkg", "model", "self", "extra_list", "_deserialize", "self", "current_extra_keys", "keys", "extras", "pkg", "extra_keys", "key", "value", "extra_list", "append", "extra_keys", "key", "key", "current_extra_keys", "extras", "pkg", "key", "value", "extras", "pkg", "key", "value", "extras", "pkg", "key", "value", "key", "current_extra_keys", "key", "extra_keys", "extras", "pkg", "key", "requires_label", "self", "_hidden_label", "self", "requires_label", "property", "requires_label", "ExtrasRenderer", "FieldRenderer", "fields", "formalchemy", "value", "self", "\n            Override 'value' method to avoid stringifying each\n            extra key-value pair.\n            ", "is_readonly", "field", "self", "params", "self", "None", "v", "deserialize", "self", "v", "None", "v", "model_value", "field", "self", "property", "render", "kwargs", "self", "extras", "value", "self", "html", "", "field_values", "key", "value", "extras", "append", "field_values", "name", "key", "value", "name", "self", "-", "key", "capitalize", "key", "value", "i", "range", "append", "field_values", "name", "%s-newfield%s", "name", "self", "i", "fields", "c", "field_values", "html", "render", "package/form_extra_fields.html", "literal", "h", "html", "render_readonly", "kwargs", "self", "html_items", "key", "value", "value", "self", "append", "html_items", "field_readonly_renderer", "key", "value", "html_items", "deserialize", "self", "hasattr", "self", "extras_re", "extras_re", "self", "compile", "re", "([a-zA-Z0-9-]*)-([a-f0-9-]*)-extras(?:-(.+))?$", "newfield_re", "self", "compile", "re", "newfield(\\d+)-(.*)", "extra_fields", "key", "value", "items", "params", "self", "extras_match", "match", "extras_re", "self", "key", "extras_match", "key_parts", "groups", "extras_match", "entity_name", "key_parts", "entity_id", "key_parts", "key_parts", "None", "isinstance", "value", "dict", "extend", "extra_fields", "items", "value", "startswith", "key_parts", "newfield", "newfield_match", "match", "newfield_re", "self", "key_parts", "newfield_match", "warn", "log", "Did not parse newfield correctly: %r", "key_parts", "new_field_index", "key_or_value", "groups", "newfield_match", "key_or_value", "key", "new_key", "value", "value_key", "%s-%s-extras-newfield%s-value", "entity_name", "entity_id", "new_field_index", "new_value", "get", "params", "self", "value_key", "", "new_key", "new_value", "append", "extra_fields", "new_key", "new_value", "key_or_value", "value", "key_key", "%s-%s-extras-newfield%s-key", "entity_name", "entity_id", "new_field_index", "has_key", "params", "self", "key_key", "append", "extra_fields", "", "value", "warn", "log", "Expected key or value for newfield: %r", "key", "endswith", "key_parts", "-checkbox", "key", "decode", "key_parts", "utf8", "checkbox_key", "%s-%s-extras-%s-checkbox", "entity_name", "entity_id", "key", "delete", "get", "params", "self", "checkbox_key", "", "on", "delete", "append", "extra_fields", "key", "value", "extra_fields", "GroupSelectField", "ConfiguredField", "A form field for selecting groups", "__init__", "self", "name", "allow_empty", "multiple", "user_editable_groups", "True", "True", "None", "__init__", "super", "GroupSelectField", "self", "name", "allow_empty", "self", "allow_empty", "multiple", "self", "multiple", "user_editable_groups", "None", "user_editable_groups", "self", "user_editable_groups", "get_configured", "self", "field", "with_renderer", "GroupSelectionField", "self", "name", "self", "allow_empty", "self", "GroupSelectEditRenderer", "self", "set", "field", "multiple", "multiple", "self", "user_editable_groups", "field", "user_editable_groups", "self", "field", "GroupSelectionField", "Field", "formalchemy", "__init__", "self", "name", "allow_empty", "__init__", "Field", "formalchemy", "self", "name", "allow_empty", "self", "allow_empty", "sync", "self", "is_readonly", "self", "_update_groups", "self", "_update_groups", "self", "new_group_ids", "_deserialize", "self", "group_dicts", "dict", "id", "group_id", "group_id", "new_group_ids", "context", "model", "session", "model", "Session", "model", "package_membership_list_save", "model_save", "group_dicts", "model", "parent", "self", "context", "requires_label", "self", "False", "requires_label", "property", "requires_label", "GroupSelectEditRenderer", "FieldRenderer", "fields", "formalchemy", "_get_value", "kwargs", "self", "get_groups", "model", "parent", "field", "self", "_get_user_editable_groups", "self", "user_editable_groups", "field", "self", "render", "kwargs", "self", "editable_groups", "_get_user_editable_groups", "self", "selected_groups", "_get_value", "self", "checkboxes_html", "", "checkbox_action", "<input type=\"checkbox\" name=\"%(name)s\" checked=\"checked\" value=\"%(id)s\" />", "checkbox_noaction", "&nbsp;", "checkbox_template", "\n            <dt>\n                %(action)s\n            </dt>\n            <dd>\n                <label for=\"%(name)s\">%(title)s</label><br/>\n            </dd>\n            ", "group", "selected_groups", "checkbox_context", "id", "name", "title", "id", "group", "name", "self", "-", "id", "group", "display_name", "group", "action", "checkbox_noaction", "group", "editable_groups", "context", "id", "name", "id", "group", "name", "self", "-", "id", "group", "action", "checkbox_action", "context", "checkbox_context", "action", "name", "title", "action", "name", "self", "-", "id", "group", "display_name", "group", "checkbox_html", "checkbox_template", "checkbox_context", "checkboxes_html", "checkbox_html", "addable_groups", "group", "editable_groups", "group", "selected_groups", "append", "addable_groups", "group", "options", "len", "addable_groups", "allow_empty", "field", "self", "len", "selected_groups", "append", "options", "", "_", "(None)", "group", "addable_groups", "append", "options", "id", "group", "display_name", "group", "len", "options", "new_name", "name", "self", "-new", "select_html", "select", "h", "new_name", "None", "options", "select_html", "_", "Cannot add any groups.", "field_template", "  \n        <dl> %(checkboxes)s      \n            <dt>\n                %(label)s\n            </dt>\n            <dd> %(select)s\n            </dd>\n        </dl>\n            ", "field_context", "checkboxes", "select", "label", "checkboxes_html", "select_html", "_", "Group", "field_html", "field_template", "field_context", "literal", "h", "field_html", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "_get_value", "self", "_serialized_value", "self", "name", "encode", "name", "self", "utf-8", "v", "k", "v", "items", "params", "self", "startswith", "k", "name", "deserialize", "self", "new_group_ids", "_serialized_value", "self", "new_group_ids", "isinstance", "new_group_ids", "list", "len", "new_group_ids", "nested_value", "new_group_ids", "isinstance", "new_group_ids", "list", "new_group_ids", "nested_value", "i", "nested_value", "enumerate", "new_group_ids", "nested_value", "isinstance", "nested_value", "list", "len", "nested_value", "msg", "_", "Can't derived new group selection from serialized value structured like this: %s", "nested_value", "Exception", "msg", "new_group_ids", "i", "nested_value", "new_group_ids", "isinstance", "new_group_ids", "basestring", "new_group_ids", "new_group_ids", "new_group_ids", "SelectExtraField", "TextExtraField", "A form field for text suggested from from a list of options, that is\n    stored in an \"extras\" field.", "__init__", "self", "name", "options", "allow_empty", "True", "options", "self", "options", "is_required", "self", "allow_empty", "i", "option", "enumerate", "options", "self", "isinstance", "option", "tuple", "list", "options", "self", "i", "option", "option", "__init__", "super", "SelectExtraField", "self", "name", "get_configured", "self", "field", "TextExtraField", "self", "name", "self", "options", "options", "self", "field_configured", "validate", "with_renderer", "field", "SelectRenderer", "self", "validate", "self", "is_required", "self", "field_configured", "required", "field_configured", "field_configured", "validate", "self", "value", "field", "None", "value", "value", "id_", "label", "id_", "options", "self", "ValidationError", "formalchemy", "Value %r is not one of the options.", "id_", "SelectRenderer", "SelectFieldRenderer", "fields", "formalchemy", "_serialized_value", "self", "get", "params", "self", "name", "self", "render", "kwargs", "self", "options", "is_required", "field", "self", "options", "list", "options", "options", "isinstance", "options", "tuple", "list", "null_option", "_null_option", "field", "self", "null_option", "_null_option", "field", "self", "insert", "options", "_null_option", "field", "self", "render", "SelectFieldRenderer", "fields", "formalchemy", "self", "options", "kwargs", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "value", "self", "SuggestedTextExtraField", "TextExtraField", "A form field for text suggested from from a list of options, that is\n    stored in an \"extras\" field.", "__init__", "self", "name", "options", "default", "None", "options", "self", "options", "default", "self", "default", "i", "option", "enumerate", "options", "self", "isinstance", "option", "tuple", "list", "options", "self", "i", "option", "option", "__init__", "super", "SuggestedTextExtraField", "self", "name", "get_configured", "self", "field", "TextExtraField", "self", "name", "self", "options", "options", "self", "default", "field", "default", "self", "with_renderer", "field", "SelectRenderer", "self", "SelectRenderer", "FieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "options", "selected", "value", "self", "selected", "None", "selected", "default", "field", "self", "options", "", "", "options", "_", "other - please specify", "other", "option_keys", "key", "value", "key", "options", "selected", "option_keys", "select_field_selected", "selected", "text_field_value", "selected", "select_field_selected", "text_field_value", "selected", "select_field_selected", "text_field_value", "fa_version_nums", "split", "__version__", "formalchemy", ".", "html", "literal", "select", "fa_h", "name", "self", "select_field_selected", "options", "class_", "short", "kwargs", "other_name", "name", "self", "-other", "html", "literal", "<label class=\"inline\" for=\"%s\">%s: %s</label>", "other_name", "_", "Other", "literal", "text_field", "fa_h", "other_name", "value", "text_field_value", "class_", "medium-width", "kwargs", "html", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "value", "self", "_serialized_value", "self", "main_value", "get", "params", "self", "name", "self", "other_value", "get", "params", "self", "name", "self", "-other", "main_value", "", "other", "other_value", "main_value", "CheckboxExtraField", "TextExtraField", "A form field for a checkbox value, stored in an \"extras\" field as\n    \"yes\" or \"no\".", "get_configured", "self", "with_renderer", "CheckboxExtraField", "self", "name", "self", "CheckboxExtraRenderer", "self", "CheckboxExtraField", "Field", "fields", "formalchemy", "raw_value", "self", "extras", "extras", "model", "self", "get", "extras", "name", "self", "property", "sync", "self", "is_readonly", "self", "store_value", "_deserialize", "self", "extras", "model", "self", "name", "self", "store_value", "CheckboxExtraRenderer", "CheckBoxFieldRenderer", "fields", "formalchemy", "render", "kwargs", "self", "kwargs", "size", "40", "bool_value", "value", "self", "check_box", "fa_h", "name", "self", "checked", "bool_value", "kwargs", "text_field", "fa_h", "name", "self", "value", "bool_value", "maxlength", "length", "self", "kwargs", "render_readonly", "kwargs", "self", "field_readonly_renderer", "key", "field", "self", "value", "self", "PackageNameField", "ConfiguredField", "get_configured", "self", "with_renderer", "PackageNameField", "self", "name", "self", "PackageNameRenderer", "self", "PackageNameField", "Field", "formalchemy", "PackageNameRenderer", "FieldRenderer", "fields", "formalchemy", "UserNameField", "ConfiguredField", "get_configured", "self", "with_renderer", "UserNameField", "self", "name", "self", "UserNameRenderer", "self", "UserNameField", "Field", "formalchemy", "UserNameRenderer", "FieldRenderer", "fields", "formalchemy", "prettify", "field_name", "Generates a field label based on the field name.\n    Used by the FormBuilder in method set_label_prettifier.\n    Also does i18n.", "field_name", "capitalize", "field_name", "field_name", "replace", "field_name", "_", " ", "_", "field_name", "sys", "os", "re", "imp", "itertools", "count", "Tkinter", "*", "tkSimpleDialog", "tkMessageBox", "webbrowser", "idlever", "WindowList", "SearchDialog", "GrepDialog", "ReplaceDialog", "PyParse", "configHandler", "idleConf", "aboutDialog", "textView", "configDialog", "TK_TABWIDTH_DEFAULT", "_find_module", "fullname", "path", "None", "Version of imp.find_module() that handles hierarchical module names", "file", "None", "tgt", "split", "fullname", ".", "file", "None", "close", "file", "file", "filename", "descr", "find_module", "imp", "tgt", "path", "descr", "PY_SOURCE", "imp", "module", "load_module", "imp", "tgt", "file", "filename", "descr", "path", "__path__", "module", "AttributeError", "ImportError", "No source for module ", "__name__", "module", "file", "filename", "descr", "EditorWindow", "Percolator", "Percolator", "ColorDelegator", "ColorDelegator", "UndoDelegator", "UndoDelegator", "IOBinding", "IOBinding", "Bindings", "Tkinter", "Toplevel", "MultiStatusBar", "MultiStatusBar", "help_url", "None", "__init__", "self", "flist", "filename", "key", "root", "None", "None", "None", "None", "help_url", "EditorWindow", "None", "dochome", "join", "path", "os", "prefix", "sys", "Doc", "index.html", "count", "platform", "sys", "linux", "pyver", "python-docs-", "%s.%s.%s", "version_info", "sys", "isdir", "path", "os", "/var/www/html/python/", "dochome", "/var/www/html/python/index.html", "basepath", "/usr/share/doc/", "dochome", "join", "path", "os", "basepath", "pyver", "Doc", "index.html", "platform", "sys", "win", "chmfile", "join", "path", "os", "prefix", "sys", "Doc", "Python%d%d.chm", "version_info", "sys", "isfile", "path", "os", "chmfile", "dochome", "chmfile", "dochome", "normpath", "path", "os", "dochome", "isfile", "path", "os", "dochome", "help_url", "EditorWindow", "dochome", "help_url", "EditorWindow", "http://www.python.org/doc/current", "currentTheme", "CurrentTheme", "idleConf", "flist", "self", "flist", "root", "root", "root", "flist", "root", "self", "root", "menubar", "self", "Menu", "root", "top", "self", "top", "ListedToplevel", "WindowList", "root", "menu", "menubar", "self", "flist", "tkinter_vars", "self", "vars", "flist", "instance_dict", "top", "self", "inversedict", "flist", "tkinter_vars", "self", "recent_files_path", "self", "join", "path", "os", "GetUserCfgDir", "idleConf", "recent-files.lst", "vbar", "self", "vbar", "Scrollbar", "top", "name", "vbar", "text_frame", "self", "text_frame", "Frame", "top", "width", "self", "GetOption", "idleConf", "main", "EditorWindow", "width", "text", "self", "text", "Text", "text_frame", "name", "text", "padx", "wrap", "none", "foreground", "GetHighlight", "idleConf", "currentTheme", "normal", "fgBg", "fg", "background", "GetHighlight", "idleConf", "currentTheme", "normal", "fgBg", "bg", "highlightcolor", "GetHighlight", "idleConf", "currentTheme", "hilite", "fgBg", "fg", "highlightbackground", "GetHighlight", "idleConf", "currentTheme", "hilite", "fgBg", "bg", "insertbackground", "GetHighlight", "idleConf", "currentTheme", "cursor", "fgBg", "fg", "width", "width", "self", "height", "GetOption", "idleConf", "main", "EditorWindow", "height", "focused_widget", "top", "self", "text", "self", "createmenubar", "self", "apply_bindings", "self", "protocol", "top", "self", "WM_DELETE_WINDOW", "close", "self", "bind", "top", "self", "<<close-window>>", "close_event", "self", "bind", "text", "<<cut>>", "cut", "self", "bind", "text", "<<copy>>", "copy", "self", "bind", "text", "<<paste>>", "paste", "self", "bind", "text", "<<center-insert>>", "center_insert_event", "self", "bind", "text", "<<help>>", "help_dialog", "self", "bind", "text", "<<python-docs>>", "python_docs", "self", "bind", "text", "<<about-idle>>", "about_dialog", "self", "bind", "text", "<<open-config-dialog>>", "config_dialog", "self", "bind", "text", "<<open-module>>", "open_module", "self", "bind", "text", "<<do-nothing>>", "event", "break", "bind", "text", "<<select-all>>", "select_all", "self", "bind", "text", "<<remove-selection>>", "remove_selection", "self", "bind", "text", "<<find>>", "find_event", "self", "bind", "text", "<<find-again>>", "find_again_event", "self", "bind", "text", "<<find-in-files>>", "find_in_files_event", "self", "bind", "text", "<<find-selection>>", "find_selection_event", "self", "bind", "text", "<<replace>>", "replace_event", "self", "bind", "text", "<<goto-line>>", "goto_line_event", "self", "bind", "text", "<3>", "right_menu_event", "self", "bind", "text", "<<smart-backspace>>", "smart_backspace_event", "self", "bind", "text", "<<newline-and-indent>>", "newline_and_indent_event", "self", "bind", "text", "<<smart-indent>>", "smart_indent_event", "self", "bind", "text", "<<indent-region>>", "indent_region_event", "self", "bind", "text", "<<dedent-region>>", "dedent_region_event", "self", "bind", "text", "<<comment-region>>", "comment_region_event", "self", "bind", "text", "<<uncomment-region>>", "uncomment_region_event", "self", "bind", "text", "<<tabify-region>>", "tabify_region_event", "self", "bind", "text", "<<untabify-region>>", "untabify_region_event", "self", "bind", "text", "<<toggle-tabs>>", "toggle_tabs_event", "self", "bind", "text", "<<change-indentwidth>>", "change_indentwidth_event", "self", "bind", "text", "<Left>", "move_at_edge_if_selection", "self", "bind", "text", "<Right>", "move_at_edge_if_selection", "self", "flist", "inversedict", "flist", "self", "key", "key", "dict", "flist", "key", "self", "bind", "text", "<<open-new-window>>", "new_callback", "self", "bind", "text", "<<close-all-windows>>", "close_all_callback", "flist", "self", "bind", "text", "<<open-class-browser>>", "open_class_browser", "self", "bind", "text", "<<open-path-browser>>", "open_path_browser", "self", "set_status_bar", "self", "vbar", "command", "yview", "text", "pack", "vbar", "side", "RIGHT", "fill", "Y", "text", "yscrollcommand", "set", "vbar", "fontWeight", "normal", "GetOption", "idleConf", "main", "EditorWindow", "font-bold", "type", "bool", "fontWeight", "bold", "config", "text", "font", "GetOption", "idleConf", "main", "EditorWindow", "font", "GetOption", "idleConf", "main", "EditorWindow", "font-size", "fontWeight", "pack", "text_frame", "side", "LEFT", "fill", "BOTH", "expand", "pack", "text", "side", "TOP", "fill", "BOTH", "expand", "focus_set", "text", "per", "self", "per", "Percolator", "self", "text", "ispythonsource", "self", "filename", "color", "self", "color", "ColorDelegator", "self", "insertfilter", "per", "color", "color", "self", "None", "undo", "self", "undo", "UndoDelegator", "self", "insertfilter", "per", "undo", "undo_block_start", "text", "undo_block_start", "undo", "undo_block_stop", "text", "undo_block_stop", "undo", "set_saved_change_hook", "undo", "saved_change_hook", "self", "io", "self", "io", "IOBinding", "self", "self", "set_filename_change_hook", "io", "filename_change_hook", "self", "recent_files_menu", "self", "Menu", "menubar", "self", "insert_cascade", "menudict", "self", "file", "label", "Recent Files", "underline", "menu", "recent_files_menu", "self", "update_recent_files_list", "self", "filename", "exists", "path", "os", "filename", "isdir", "path", "os", "filename", "loadfile", "io", "filename", "set_filename", "io", "filename", "saved_change_hook", "self", "load_extensions", "self", "menu", "get", "menudict", "self", "windows", "menu", "end", "index", "menu", "end", "end", "None", "end", "end", "add_separator", "menu", "end", "end", "wmenu_end", "self", "end", "register_callback", "WindowList", "postwindowsmenu", "self", "askyesno", "self", "askyesno", "tkMessageBox", "askinteger", "self", "askinteger", "tkSimpleDialog", "showerror", "self", "showerror", "tkMessageBox", "has_key", "extensions", "self", "AutoIndent", "set_indentation_params", "extensions", "self", "AutoIndent", "ispythonsource", "self", "filename", "new_callback", "self", "event", "dirname", "basename", "defaultfilename", "io", "self", "new", "flist", "self", "dirname", "break", "set_status_bar", "self", "status_bar", "self", "MultiStatusBar", "self", "top", "self", "set_label", "status_bar", "self", "column", "Col: ?", "side", "RIGHT", "set_label", "status_bar", "self", "line", "Ln: ?", "side", "RIGHT", "pack", "status_bar", "self", "side", "BOTTOM", "fill", "X", "bind", "text", "self", "<KeyRelease>", "set_line_and_column", "self", "bind", "text", "self", "<ButtonRelease>", "set_line_and_column", "self", "after_idle", "text", "self", "set_line_and_column", "self", "set_line_and_column", "self", "event", "None", "line", "column", "split", "index", "text", "self", "INSERT", ".", "set_label", "status_bar", "self", "column", "Col: %s", "column", "set_label", "status_bar", "self", "line", "Ln: %s", "line", "menu_specs", "file", "_File", "edit", "_Edit", "format", "F_ormat", "run", "_Run", "options", "_Options", "windows", "_Windows", "help", "_Help", "createmenubar", "self", "mbar", "menubar", "self", "menudict", "self", "menudict", "name", "label", "menu_specs", "self", "underline", "label", "prepstr", "label", "menudict", "name", "menu", "Menu", "mbar", "name", "name", "add_cascade", "mbar", "label", "label", "menu", "menu", "underline", "underline", "fill_menus", "self", "base_helpmenu_length", "self", "index", "menudict", "self", "help", "END", "reset_help_menu_entries", "self", "postwindowsmenu", "self", "menu", "menudict", "self", "windows", "end", "index", "menu", "end", "end", "None", "end", "end", "wmenu_end", "self", "delete", "menu", "wmenu_end", "self", "end", "add_windows_to_menu", "WindowList", "menu", "rmenu", "None", "right_menu_event", "self", "event", "tag_remove", "text", "self", "sel", "1.0", "end", "mark_set", "text", "self", "insert", "@%d,%d", "x", "event", "y", "event", "rmenu", "self", "make_rmenu", "self", "rmenu", "rmenu", "self", "event", "self", "event", "iswin", "platform", "sys", "win", "iswin", "config", "text", "self", "cursor", "arrow", "tk_popup", "rmenu", "x_root", "event", "y_root", "event", "iswin", "config", "text", "self", "cursor", "ibeam", "rmenu_specs", "Close", "<<close-window>>", "make_rmenu", "self", "rmenu", "Menu", "text", "self", "tearoff", "label", "eventname", "rmenu_specs", "self", "command", "text", "eventname", "text", "self", "eventname", "event_generate", "text", "eventname", "add_command", "rmenu", "label", "label", "command", "command", "rmenu", "self", "rmenu", "about_dialog", "self", "event", "None", "AboutDialog", "aboutDialog", "top", "self", "About IDLE", "config_dialog", "self", "event", "None", "ConfigDialog", "configDialog", "top", "self", "Settings", "help_dialog", "self", "event", "None", "fn", "join", "path", "os", "abspath", "path", "os", "dirname", "path", "os", "__file__", "help.txt", "TextViewer", "textView", "top", "self", "Help", "fn", "python_docs", "self", "event", "None", "platform", "sys", "win", "startfile", "os", "help_url", "self", "open", "webbrowser", "help_url", "self", "break", "cut", "self", "event", "event_generate", "text", "self", "<<Cut>>", "break", "copy", "self", "event", "event_generate", "text", "self", "<<Copy>>", "break", "paste", "self", "event", "event_generate", "text", "self", "<<Paste>>", "break", "select_all", "self", "event", "None", "tag_add", "text", "self", "sel", "1.0", "end-1c", "mark_set", "text", "self", "insert", "1.0", "see", "text", "self", "insert", "break", "remove_selection", "self", "event", "None", "tag_remove", "text", "self", "sel", "1.0", "end", "see", "text", "self", "insert", "move_at_edge_if_selection", "self", "edge_index", "Cursor move begins at start or end of selection\n\n        When a left/right cursor key is pressed create and return to Tkinter a\n        function which causes a cursor move from the associated edge of the\n        selection.\n\n        ", "self_text_index", "index", "text", "self", "self_text_mark_set", "mark_set", "text", "self", "edges_table", "sel.first+1c", "sel.last-1c", "move_at_edge", "event", "state", "event", "self_text_index", "sel.first", "self_text_mark_set", "insert", "edges_table", "edge_index", "TclError", "move_at_edge", "find_event", "self", "event", "find", "SearchDialog", "text", "self", "break", "find_again_event", "self", "event", "find_again", "SearchDialog", "text", "self", "break", "find_selection_event", "self", "event", "find_selection", "SearchDialog", "text", "self", "break", "find_in_files_event", "self", "event", "grep", "GrepDialog", "text", "self", "io", "self", "flist", "self", "break", "replace_event", "self", "event", "replace", "ReplaceDialog", "text", "self", "break", "goto_line_event", "self", "event", "text", "text", "self", "lineno", "askinteger", "tkSimpleDialog", "Goto", "Go to line number:", "parent", "text", "lineno", "None", "break", "lineno", "bell", "text", "break", "mark_set", "text", "insert", "%d.0", "lineno", "see", "text", "insert", "open_module", "self", "event", "None", "name", "get", "text", "self", "sel.first", "sel.last", "TclError", "name", "", "name", "strip", "name", "name", "askstring", "tkSimpleDialog", "Module", "Enter the name of a Python module\nto search on sys.path and open:", "parent", "text", "self", "initialvalue", "name", "name", "name", "strip", "name", "name", "f", "file", "suffix", "mode", "type", "_find_module", "name", "NameError", "ImportError", "msg", "showerror", "tkMessageBox", "Import error", "str", "msg", "parent", "text", "self", "type", "PY_SOURCE", "imp", "showerror", "tkMessageBox", "Unsupported type", "%s is not a source module", "name", "parent", "text", "self", "f", "close", "f", "flist", "self", "open", "flist", "self", "file", "loadfile", "io", "self", "file", "open_class_browser", "self", "event", "None", "filename", "filename", "io", "self", "filename", "showerror", "tkMessageBox", "No filename", "This buffer has no associated filename", "master", "text", "self", "focus_set", "text", "self", "None", "head", "tail", "split", "path", "os", "filename", "base", "ext", "splitext", "path", "os", "tail", "ClassBrowser", "ClassBrowser", "ClassBrowser", "flist", "self", "base", "head", "open_path_browser", "self", "event", "None", "PathBrowser", "PathBrowser", "PathBrowser", "flist", "self", "gotoline", "self", "lineno", "lineno", "None", "lineno", "mark_set", "text", "self", "insert", "%d.0", "lineno", "tag_remove", "text", "self", "sel", "1.0", "end", "tag_add", "text", "self", "sel", "insert", "insert +1l", "center", "self", "ispythonsource", "self", "filename", "filename", "True", "base", "ext", "splitext", "path", "os", "basename", "path", "os", "filename", "normcase", "path", "os", "ext", ".py", ".pyw", "True", "f", "open", "filename", "line", "readline", "f", "close", "f", "IOError", "False", "startswith", "line", "#!", "find", "line", "python", "close_hook", "self", "flist", "self", "close_edit", "flist", "self", "self", "set_close_hook", "self", "close_hook", "close_hook", "self", "close_hook", "filename_change_hook", "self", "flist", "self", "filename_changed_edit", "flist", "self", "self", "saved_change_hook", "self", "update_windowlist_registry", "top", "self", "self", "ispythonsource", "self", "filename", "io", "self", "addcolorizer", "self", "rmcolorizer", "self", "addcolorizer", "self", "color", "self", "removefilter", "per", "self", "undo", "self", "color", "self", "ColorDelegator", "self", "insertfilter", "per", "self", "color", "self", "insertfilter", "per", "self", "undo", "self", "rmcolorizer", "self", "color", "self", "removefilter", "per", "self", "undo", "self", "removefilter", "per", "self", "color", "self", "color", "self", "None", "insertfilter", "per", "self", "undo", "self", "ResetColorizer", "self", "Update the colour theme if it is changed", "color", "self", "color", "self", "ColorDelegator", "self", "insertfilter", "per", "self", "color", "self", "theme", "GetOption", "idleConf", "main", "Theme", "name", "config", "text", "self", "GetHighlight", "idleConf", "theme", "normal", "ResetFont", "self", "Update the text widgets' font if it is changed", "fontWeight", "normal", "GetOption", "idleConf", "main", "EditorWindow", "font-bold", "type", "bool", "fontWeight", "bold", "config", "text", "self", "font", "GetOption", "idleConf", "main", "EditorWindow", "font", "GetOption", "idleConf", "main", "EditorWindow", "font-size", "fontWeight", "ResetKeybindings", "self", "Update the keybindings if they are changed", "default_keydefs", "Bindings", "self", "GetCurrentKeySet", "idleConf", "keydefs", "default_keydefs", "Bindings", "self", "event", "keylist", "items", "keydefs", "event_delete", "text", "self", "event", "apply_bindings", "self", "menuEventDict", "menu", "menudefs", "Bindings", "self", "menuEventDict", "menu", "item", "menu", "item", "menuEventDict", "menu", "prepstr", "item", "item", "menubarItem", "keys", "menudict", "self", "menu", "menudict", "self", "menubarItem", "end", "index", "menu", "END", "index", "range", "end", "type", "menu", "index", "command", "accel", "entrycget", "menu", "index", "accelerator", "accel", "itemName", "entrycget", "menu", "index", "label", "event", "", "has_key", "menuEventDict", "menubarItem", "has_key", "menuEventDict", "menubarItem", "itemName", "event", "menuEventDict", "menubarItem", "itemName", "event", "accel", "get_accelerator", "keydefs", "event", "entryconfig", "menu", "index", "accelerator", "accel", "reset_help_menu_entries", "self", "Update the additional help entries on the Help menu", "help_list", "GetAllExtraHelpSourcesList", "idleConf", "helpmenu", "menudict", "self", "help", "helpmenu_length", "index", "helpmenu", "END", "helpmenu_length", "base_helpmenu_length", "self", "delete", "helpmenu", "base_helpmenu_length", "self", "helpmenu_length", "help_list", "add_separator", "helpmenu", "entry", "help_list", "cmd", "__extra_help_callback", "self", "entry", "add_command", "helpmenu", "label", "entry", "command", "cmd", "menudict", "self", "help", "helpmenu", "__extra_help_callback", "self", "helpfile", "Create a callback with the helpfile value frozen at definition time", "display_extra_help", "helpfile", "helpfile", "startswith", "helpfile", "www", "startswith", "helpfile", "http", "url", "normpath", "path", "os", "helpfile", "platform", "sys", "win", "startfile", "os", "helpfile", "open", "webbrowser", "helpfile", "display_extra_help", "update_recent_files_list", "self", "new_file", "None", "Load and update the recent files list and menus", "rf_list", "exists", "path", "os", "recent_files_path", "self", "rf_list_file", "open", "recent_files_path", "self", "r", "rf_list", "readlines", "rf_list_file", "close", "rf_list_file", "new_file", "new_file", "abspath", "path", "os", "new_file", "\n", "new_file", "rf_list", "remove", "rf_list", "new_file", "insert", "rf_list", "new_file", "bad_paths", "path", "rf_list", "\u0000", "path", "exists", "path", "os", "path", "append", "bad_paths", "path", "rf_list", "path", "path", "rf_list", "path", "bad_paths", "ulchars", "1234567890ABCDEFGHIJK", "rf_list", "rf_list", "len", "ulchars", "rf_file", "open", "recent_files_path", "self", "w", "writelines", "rf_file", "rf_list", "close", "rf_file", "instance", "keys", "instance_dict", "top", "self", "menu", "recent_files_menu", "instance", "delete", "menu", "END", "i", "file", "zip", "count", "rf_list", "file_name", "file", "callback", "__recent_file_callback", "instance", "file_name", "add_command", "menu", "label", "ulchars", "i", " ", "file_name", "command", "callback", "underline", "__recent_file_callback", "self", "file_name", "open_recent_file", "fn_closure", "file_name", "open", "io", "self", "editFile", "fn_closure", "open_recent_file", "saved_change_hook", "self", "short", "short_title", "self", "long", "long_title", "self", "short", "long", "title", "short", " - ", "long", "short", "title", "short", "long", "title", "long", "title", "Untitled", "icon", "short", "long", "title", "get_saved", "self", "title", "*%s*", "title", "icon", "*%s", "icon", "wm_title", "top", "self", "title", "wm_iconname", "top", "self", "icon", "get_saved", "self", "get_saved", "undo", "self", "set_saved", "self", "flag", "set_saved", "undo", "self", "flag", "reset_undo", "self", "reset_undo", "undo", "self", "short_title", "self", "filename", "filename", "io", "self", "filename", "filename", "basename", "path", "os", "filename", "filename", "long_title", "self", "filename", "io", "self", "", "center_insert_event", "self", "event", "center", "self", "center", "self", "mark", "insert", "text", "text", "self", "top", "bot", "getwindowlines", "self", "lineno", "getlineno", "self", "mark", "height", "bot", "top", "newtop", "max", "lineno", "height", "yview", "text", "float", "newtop", "getwindowlines", "self", "text", "text", "self", "top", "getlineno", "self", "@0,0", "bot", "getlineno", "self", "@0,65535", "top", "bot", "winfo_height", "text", "height", "int", "text", "height", "bot", "top", "height", "top", "bot", "getlineno", "self", "mark", "insert", "text", "text", "self", "int", "float", "index", "text", "mark", "get_geometry", "self", "Return (width, height, x, y)", "geom", "wm_geometry", "top", "self", "m", "match", "re", "(\\d+)x(\\d+)\\+(-?\\d+)\\+(-?\\d+)", "geom", "tuple", "map", "int", "groups", "m", "tuple", "close_event", "self", "event", "close", "self", "maybesave", "self", "io", "self", "get_saved", "self", "state", "top", "self", "normal", "deiconify", "top", "self", "lower", "top", "self", "lift", "top", "self", "maybesave", "io", "self", "close", "self", "reply", "maybesave", "self", "reply", "cancel", "_close", "self", "reply", "_close", "self", "filename", "io", "self", "update_recent_files_list", "self", "new_file", "filename", "io", "self", "unregister_callback", "WindowList", "postwindowsmenu", "self", "close_hook", "self", "close_hook", "self", "flist", "self", "None", "colorizing", "unload_extensions", "self", "close", "io", "self", "io", "self", "None", "undo", "self", "None", "color", "self", "colorizing", "colorizing", "color", "self", "doh", "colorizing", "top", "self", "close", "color", "self", "doh", "text", "self", "None", "tkinter_vars", "self", "None", "close", "per", "self", "per", "self", "None", "colorizing", "destroy", "top", "self", "load_extensions", "self", "extensions", "self", "load_standard_extensions", "self", "unload_extensions", "self", "ins", "values", "extensions", "self", "hasattr", "ins", "close", "close", "ins", "extensions", "self", "load_standard_extensions", "self", "name", "get_standard_extension_names", "self", "load_extension", "self", "name", "Failed to load extension", "repr", "name", "traceback", "print_exc", "traceback", "get_standard_extension_names", "self", "GetExtensions", "idleConf", "editor_only", "True", "load_extension", "self", "name", "mod", "__import__", "name", "globals", "locals", "ImportError", "\nFailed to import extension: ", "name", "None", "cls", "getattr", "mod", "name", "keydefs", "GetExtensionBindings", "idleConf", "name", "hasattr", "cls", "menudefs", "fill_menus", "self", "menudefs", "cls", "keydefs", "ins", "cls", "self", "extensions", "self", "name", "ins", "keydefs", "apply_bindings", "self", "keydefs", "vevent", "keys", "keydefs", "methodname", "replace", "vevent", "-", "_", "methodname", "<", "methodname", "methodname", "methodname", ">", "methodname", "methodname", "methodname", "methodname", "_event", "hasattr", "ins", "methodname", "bind", "text", "self", "vevent", "getattr", "ins", "methodname", "ins", "apply_bindings", "self", "keydefs", "None", "keydefs", "None", "keydefs", "default_keydefs", "Bindings", "self", "text", "text", "self", "keydefs", "text", "keydefs", "event", "keylist", "items", "keydefs", "keylist", "event_add", "text", "event", "keylist", "fill_menus", "self", "menudefs", "keydefs", "None", "None", "Add appropriate entries to the menus and submenus\n\n        Menus that are absent or None in self.menudict are ignored.\n        ", "menudefs", "None", "menudefs", "menudefs", "Bindings", "self", "keydefs", "None", "keydefs", "default_keydefs", "Bindings", "self", "menudict", "menudict", "self", "text", "text", "self", "mname", "entrylist", "menudefs", "menu", "get", "menudict", "mname", "menu", "entry", "entrylist", "entry", "add_separator", "menu", "label", "eventname", "entry", "checkbutton", "label", "!", "checkbutton", "label", "label", "underline", "label", "prepstr", "label", "accelerator", "get_accelerator", "keydefs", "eventname", "command", "text", "eventname", "text", "eventname", "event_generate", "text", "eventname", "checkbutton", "var", "get_var_obj", "self", "eventname", "BooleanVar", "add_checkbutton", "menu", "label", "label", "underline", "underline", "command", "command", "accelerator", "accelerator", "variable", "var", "add_command", "menu", "label", "label", "underline", "underline", "command", "command", "accelerator", "accelerator", "getvar", "self", "name", "var", "get_var_obj", "self", "name", "var", "value", "get", "var", "value", "NameError", "name", "setvar", "self", "name", "value", "vartype", "None", "var", "get_var_obj", "self", "name", "vartype", "var", "set", "var", "value", "NameError", "name", "get_var_obj", "self", "name", "vartype", "None", "var", "get", "tkinter_vars", "self", "name", "var", "vartype", "tkinter_vars", "self", "name", "var", "vartype", "text", "self", "var", "is_char_in_string", "self", "text_index", "color", "self", "tag_prevrange", "text", "self", "TODO", "text_index", "STRING", "tag_names", "text", "self", "text_index", "get_selection_indices", "self", "first", "index", "text", "self", "sel.first", "last", "index", "text", "self", "sel.last", "first", "last", "TclError", "None", "None", "get_tabwidth", "self", "current", "text", "self", "tabs", "TK_TABWIDTH_DEFAULT", "int", "current", "set_tabwidth", "self", "newtabwidth", "text", "text", "self", "get_tabwidth", "self", "newtabwidth", "pixels", "call", "tk", "text", "font", "measure", "text", "font", "-displayof", "master", "text", "n", "newtabwidth", "configure", "text", "tabs", "pixels", "usetabs", "indentwidth", "tabwidth", "context_use_ps1", "num_context_lines", "config", "options", "self", "key", "value", "items", "options", "key", "usetabs", "usetabs", "self", "value", "key", "indentwidth", "indentwidth", "self", "value", "key", "tabwidth", "tabwidth", "self", "value", "key", "context_use_ps1", "context_use_ps1", "self", "value", "KeyError", "bad option name: %r", "key", "set_indentation_params", "self", "ispythonsource", "guess", "guess", "ispythonsource", "i", "guess_indent", "self", "i", "indentwidth", "self", "i", "indentwidth", "self", "tabwidth", "self", "usetabs", "self", "set_tabwidth", "self", "tabwidth", "self", "smart_backspace_event", "self", "event", "text", "text", "self", "first", "last", "get_selection_indices", "self", "first", "last", "delete", "text", "first", "last", "mark_set", "text", "insert", "first", "break", "chars", "get", "text", "insert linestart", "insert", "chars", "", "compare", "text", "insert", ">", "1.0", "delete", "text", "insert-1c", "bell", "text", "break", "chars", " \t", "delete", "text", "insert-1c", "break", "tabwidth", "tabwidth", "self", "have", "len", "expandtabs", "chars", "tabwidth", "have", "want", "have", "indentwidth", "self", "indentwidth", "self", "last_line_of_prompt", "split", "ps1", "sys", "\n", "ncharsdeleted", "chars", "last_line_of_prompt", "chars", "chars", "ncharsdeleted", "ncharsdeleted", "have", "len", "expandtabs", "chars", "tabwidth", "have", "want", "chars", " \t", "undo_block_start", "text", "delete", "text", "insert-%dc", "ncharsdeleted", "insert", "have", "want", "insert", "text", "insert", " ", "want", "have", "undo_block_stop", "text", "break", "smart_indent_event", "self", "event", "text", "text", "self", "first", "last", "get_selection_indices", "self", "undo_block_start", "text", "first", "last", "index2line", "first", "index2line", "last", "indent_region_event", "self", "event", "delete", "text", "first", "last", "mark_set", "text", "insert", "first", "prefix", "get", "text", "insert linestart", "insert", "raw", "effective", "classifyws", "prefix", "tabwidth", "self", "raw", "len", "prefix", "reindent_to", "self", "effective", "indentwidth", "self", "usetabs", "self", "pad", "\t", "effective", "len", "expandtabs", "prefix", "tabwidth", "self", "n", "indentwidth", "self", "pad", " ", "n", "effective", "n", "insert", "text", "insert", "pad", "see", "text", "insert", "break", "undo_block_stop", "text", "newline_and_indent_event", "self", "event", "text", "text", "self", "first", "last", "get_selection_indices", "self", "undo_block_start", "text", "first", "last", "delete", "text", "first", "last", "mark_set", "text", "insert", "first", "line", "get", "text", "insert linestart", "insert", "i", "n", "len", "line", "i", "n", "line", "i", " \t", "i", "i", "i", "n", "insert", "text", "insert linestart", "\n", "break", "indent", "line", "i", "i", "last_line_of_prompt", "split", "ps1", "sys", "\n", "line", "line", " \t", "line", "last_line_of_prompt", "line", "line", "i", "i", "i", "delete", "text", "insert - %d chars", "i", "insert", "get", "text", "insert", " \t", "delete", "text", "insert", "insert", "text", "insert", "\n", "lno", "index2line", "index", "text", "insert", "y", "Parser", "PyParse", "indentwidth", "self", "tabwidth", "self", "context", "num_context_lines", "self", "startat", "max", "lno", "context", "startatindex", "repr", "startat", ".0", "rawtext", "get", "text", "startatindex", "insert", "set_str", "y", "rawtext", "bod", "find_good_parse_start", "y", "context_use_ps1", "self", "_build_char_in_string_func", "self", "startatindex", "bod", "None", "startat", "set_lo", "y", "bod", "c", "get_continuation_type", "y", "c", "C_NONE", "PyParse", "c", "C_STRING", "PyParse", "insert", "text", "insert", "indent", "c", "C_BRACKET", "PyParse", "reindent_to", "self", "compute_bracket_indent", "y", "c", "C_BACKSLASH", "PyParse", "get_num_lines_in_stmt", "y", "insert", "text", "insert", "indent", "reindent_to", "self", "compute_backslash_indent", "y", "bogus continuation type %r", "c", "break", "indent", "get_base_indent_string", "y", "insert", "text", "insert", "indent", "is_block_opener", "y", "smart_indent_event", "self", "event", "indent", "is_block_closer", "y", "smart_backspace_event", "self", "event", "break", "see", "text", "insert", "undo_block_stop", "text", "_build_char_in_string_func", "self", "startindex", "inner", "offset", "_startindex", "_icis", "startindex", "is_char_in_string", "self", "_icis", "_startindex", "+%dc", "offset", "inner", "indent_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "pos", "range", "len", "lines", "line", "lines", "pos", "line", "raw", "effective", "classifyws", "line", "tabwidth", "self", "effective", "effective", "indentwidth", "self", "lines", "pos", "_make_blanks", "self", "effective", "line", "raw", "set_region", "self", "head", "tail", "chars", "lines", "break", "dedent_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "pos", "range", "len", "lines", "line", "lines", "pos", "line", "raw", "effective", "classifyws", "line", "tabwidth", "self", "effective", "max", "effective", "indentwidth", "self", "lines", "pos", "_make_blanks", "self", "effective", "line", "raw", "set_region", "self", "head", "tail", "chars", "lines", "break", "comment_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "pos", "range", "len", "lines", "line", "lines", "pos", "lines", "pos", "##", "line", "set_region", "self", "head", "tail", "chars", "lines", "uncomment_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "pos", "range", "len", "lines", "line", "lines", "pos", "line", "line", "##", "line", "line", "line", "#", "line", "line", "lines", "pos", "line", "set_region", "self", "head", "tail", "chars", "lines", "tabify_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "tabwidth", "_asktabwidth", "self", "pos", "range", "len", "lines", "line", "lines", "pos", "line", "raw", "effective", "classifyws", "line", "tabwidth", "ntabs", "nspaces", "divmod", "effective", "tabwidth", "lines", "pos", "\t", "ntabs", " ", "nspaces", "line", "raw", "set_region", "self", "head", "tail", "chars", "lines", "untabify_region_event", "self", "event", "head", "tail", "chars", "lines", "get_region", "self", "tabwidth", "_asktabwidth", "self", "pos", "range", "len", "lines", "lines", "pos", "expandtabs", "lines", "pos", "tabwidth", "set_region", "self", "head", "tail", "chars", "lines", "toggle_tabs_event", "self", "event", "askyesno", "self", "Toggle tabs", "Turn tabs ", "on", "off", "usetabs", "self", "?", "parent", "text", "self", "usetabs", "self", "usetabs", "self", "break", "change_tabwidth_event", "self", "event", "new", "_asktabwidth", "self", "new", "tabwidth", "self", "tabwidth", "self", "new", "set_indentation_params", "self", "guess", "break", "change_indentwidth_event", "self", "event", "new", "askinteger", "self", "Indent width", "New indent width (2-16)", "parent", "text", "self", "initialvalue", "indentwidth", "self", "minvalue", "maxvalue", "new", "new", "indentwidth", "self", "indentwidth", "self", "new", "break", "get_region", "self", "text", "text", "self", "first", "last", "get_selection_indices", "self", "first", "last", "head", "index", "text", "first", " linestart", "tail", "index", "text", "last", "-1c lineend +1c", "head", "index", "text", "insert linestart", "tail", "index", "text", "insert lineend +1c", "chars", "get", "text", "head", "tail", "lines", "split", "chars", "\n", "head", "tail", "chars", "lines", "set_region", "self", "head", "tail", "chars", "lines", "text", "text", "self", "newchars", "join", "\n", "lines", "newchars", "chars", "bell", "text", "tag_remove", "text", "sel", "1.0", "end", "mark_set", "text", "insert", "head", "undo_block_start", "text", "delete", "text", "head", "tail", "insert", "text", "head", "newchars", "undo_block_stop", "text", "tag_add", "text", "sel", "head", "insert", "_make_blanks", "self", "n", "usetabs", "self", "ntabs", "nspaces", "divmod", "n", "tabwidth", "self", "\t", "ntabs", " ", "nspaces", " ", "n", "reindent_to", "self", "column", "text", "text", "self", "undo_block_start", "text", "compare", "text", "insert linestart", "!=", "insert", "delete", "text", "insert linestart", "insert", "column", "insert", "text", "insert", "_make_blanks", "self", "column", "undo_block_stop", "text", "_asktabwidth", "self", "askinteger", "self", "Tab width", "Spaces per tab? (2-16)", "parent", "text", "self", "initialvalue", "indentwidth", "self", "minvalue", "maxvalue", "tabwidth", "self", "guess_indent", "self", "opener", "indented", "run", "IndentSearcher", "text", "self", "tabwidth", "self", "opener", "indented", "raw", "indentsmall", "classifyws", "opener", "tabwidth", "self", "raw", "indentlarge", "classifyws", "indented", "tabwidth", "self", "indentsmall", "indentlarge", "indentlarge", "indentsmall", "index2line", "index", "int", "float", "index", "classifyws", "s", "tabwidth", "raw", "effective", "ch", "s", "ch", " ", "raw", "raw", "effective", "effective", "ch", "\t", "raw", "raw", "effective", "effective", "tabwidth", "tabwidth", "raw", "effective", "tokenize", "_tokenize", "tokenize", "tokenize", "IndentSearcher", "__init__", "self", "text", "tabwidth", "text", "self", "text", "tabwidth", "self", "tabwidth", "i", "self", "finished", "self", "blkopenline", "self", "indentedline", "self", "None", "readline", "self", "finished", "self", "", "i", "i", "self", "i", "self", "mark", "repr", "i", ".0", "compare", "text", "self", "mark", ">=", "end", "", "get", "text", "self", "mark", "mark", " lineend+1c", "tokeneater", "self", "type", "token", "start", "end", "line", "INDENT", "NAME", "OPENERS", "INDENT", "_tokenize", "NAME", "_tokenize", "class", "def", "for", "if", "try", "while", "finished", "self", "type", "NAME", "token", "OPENERS", "blkopenline", "self", "line", "type", "INDENT", "blkopenline", "self", "indentedline", "self", "line", "finished", "self", "run", "self", "save_tabsize", "tabsize", "_tokenize", "tabsize", "_tokenize", "tabwidth", "self", "tokenize", "_tokenize", "readline", "self", "tokeneater", "self", "TokenError", "_tokenize", "tabsize", "_tokenize", "save_tabsize", "blkopenline", "self", "indentedline", "self", "prepstr", "s", "i", "find", "s", "_", "i", "s", "s", "i", "s", "i", "i", "s", "keynames", "bracketleft", "bracketright", "slash", "[", "]", "/", "get_accelerator", "keydefs", "eventname", "keylist", "get", "keydefs", "eventname", "keylist", "", "s", "keylist", "s", "sub", "re", "-[a-z]\\b", "m", "upper", "group", "m", "s", "s", "sub", "re", "\\b\\w+\\b", "m", "get", "keynames", "group", "m", "group", "m", "s", "s", "sub", "re", "Key-", "", "s", "s", "sub", "re", "Cancel", "Ctrl-Break", "s", "s", "sub", "re", "Control-", "Ctrl-", "s", "s", "sub", "re", "-", "+", "s", "s", "sub", "re", "><", " ", "s", "s", "sub", "re", "<", "", "s", "s", "sub", "re", ">", "", "s", "s", "fixwordbreaks", "root", "tk", "tk", "root", "call", "tk", "tcl_wordBreakAfter", "a b", "call", "tk", "set", "tcl_wordchars", "[a-zA-Z0-9_]", "call", "tk", "set", "tcl_nonwordchars", "[^a-zA-Z0-9_]", "test", "root", "Tk", "fixwordbreaks", "root", "withdraw", "root", "argv", "sys", "filename", "argv", "sys", "filename", "None", "edit", "EditorWindow", "root", "root", "filename", "filename", "set_close_hook", "edit", "quit", "root", "mainloop", "root", "destroy", "root", "__name__", "__main__", "test", "numpy", "np", "copy", "cp", "struct", "st", "math", "os", "sys", "progressbar", "pylab", "matplotlib", "mpl", "matplotlib", "pyplot", "plt", "numpy.lib", "recfunctions", "scipy", "spatial", "sp", "scipy", "special", "scipy.interpolate", "griddata", "interp1d", "scipy.ndimage", "map_coordinates", "gauss_kern", "size", "sizey", "None", " Returns a normalized 2D gauss kernel array for convolutions ", "size", "int", "size", "sizey", "sizey", "size", "sizey", "int", "sizey", "x", "y", "mgrid", "size", "size", "sizey", "sizey", "g", "exp", "x", "float", "size", "y", "float", "sizey", "g", "sum", "g", "blur_image", "im", "n", "ny", "None", " blurs the image by convolving with a gaussian kernel of typical\n       size n. The optional keyword argument ny allows for a different\n       size in the y direction.\n   ", "g", "gauss_kern", "n", "sizey", "ny", "improc", "convolve", "signal", "im", "g", "mode", "valid", "improc", "sround", "x", "figs", "pw", "floor", "np", "log10", "np", "abs", "np", "x", "pw", "round", "x", "pw", "propspace", "a", "b", "n", "Basically just logspace, but I wanted to be able to \"see\" what I was\n    doing.", "K", "b", "a", "n", "out", "zeros", "np", "n", "i", "xrange", "n", "out", "i", "a", "K", "i", "out", "polar2cartesian", "r", "t", "grid", "x", "y", "order", "Coordinate transform for converting a polar array to Cartesian\n    coordinates.  r and t are the coordinates on the current polar grid, grid\n    are the values at each location and x,y, are the points where we are to\n    interpolate in cartesian space.  A spline controls the interpolation, where\n    order specificies the spline order (0-5).", "X", "Y", "meshgrid", "np", "x", "y", "new_r", "sqrt", "np", "X", "X", "Y", "Y", "new_t", "arctan2", "np", "X", "Y", "ir", "interp1d", "r", "arange", "np", "len", "r", "bounds_error", "False", "it", "interp1d", "t", "arange", "np", "len", "t", "new_ir", "ir", "ravel", "new_r", "new_it", "it", "ravel", "new_t", "new_ir", "ravel", "new_r", "max", "r", "len", "r", "new_ir", "ravel", "new_r", "min", "r", "reshape", "map_coordinates", "grid", "array", "np", "new_ir", "new_it", "order", "order", "shape", "new_r", "plot", "kw", "x", "y", "hline", "vline", "box", "xlab", "ylab", "title", "fontsize", "log", "pch", "add", "None", "None", "True", "", "", "", "rcParams", "mpl", "font.size", "", ".", "False", " General purpose plotting function.  Use log on xy axis if x or y or\n    both appears in the string log.  box plots a boxplot to the left of data\n    range and hline and vline include vertical and horizontal lines. \n    \n    Returns list of [[fig],[box],main]\n    ", "pchConvert", ".", "o", "^", "v", "<", ">", "p", "s", "+", "*", "x", "isinstance", "pch", "str", "pch", "pchConvert", "pch", "len", "pchConvert", "ret", "add", "figobj", "figure", "plt", "append", "ret", "figobj", "pltfunc", "plot", "plt", "find", "log", "x", "find", "log", "y", "pltfunc", "loglog", "plt", "find", "log", "x", "pltfunc", "semilogx", "plt", "find", "log", "y", "pltfunc", "semilogy", "plt", "box", "add", "qs", "percentile", "np", "y", "whis", "max", "np", "qs", "qs", "qs", "qs", "qs", "qs", "xsize", "sround", "max", "x", "min", "x", "boxobj", "boxplot", "plt", "y", "positions", "min", "x", "xsize", "widths", "xsize", "whis", "whis", "append", "ret", "boxobj", "col", "kw", "kw", "color", "pop", "kw", "col", "main", "pltfunc", "x", "y", "pch", "kw", "append", "ret", "main", "box", "add", "xticks", "pylab", "arange", "np", "sround", "min", "x", "sround", "max", "x", "xsize", "hline", "None", "hline", "isinstance", "hline", "list", "hline", "hline", "l", "hline", "pltfunc", "min", "x", "max", "x", "l", "l", "r", "vline", "None", "vline", "isinstance", "vline", "list", "vline", "vline", "l", "vline", "pltfunc", "l", "l", "min", "y", "max", "y", "r", "add", "xlabel", "plt", "xlab", "fontsize", "fontsize", "ylabel", "plt", "ylab", "fontsize", "fontsize", "title", "plt", "title", "fontsize", "fontsize", "ret", "heatMap", "x", "y", "z", "xres", "yres", "bar", "log", "xlab", "ylab", "title", "True", "True", "", "", "", "Given a set of coordinates {(x,y,z)}, grids up x and y and converts\n    the z values into a colour scaling.", "xi", "linspace", "np", "min", "x", "max", "x", "xres", "yi", "linspace", "np", "min", "y", "max", "y", "yres", "zi", "griddata", "x", "y", "log10", "np", "z", "xi", "None", "yi", "None", "method", "cubic", "ex", "min", "xi", "max", "xi", "max", "yi", "min", "yi", "ret", "imshow", "plt", "zi", "extent", "ex", "xlabel", "plt", "xlab", "ylabel", "plt", "ylab", "title", "plt", "title", "bar", "colorbar", "plt", "ret", "Disc", "object", "This object is used to store information about an SPH disc, to calculate\n    infromation from this data and to plot the data in a useful way.  At it's\n    core is an object called \"data\", which is populated from the SPH data.\n    This is a structured (named) array, SPH particles as all entries.  \n    Unknown or missing data is represented with np.nan.  The star is stored\n    seperately", "DTYPE", "f8", "__init__", "self", "G", "loaded", "self", "False", "subset", "self", "None", "G", "self", "G", "dt", "self", "dtype", "np", "x", "DTYPE", "self", "y", "DTYPE", "self", "z", "DTYPE", "self", "m", "DTYPE", "self", "init_tree", "s", "force", "False", "force", "hasattr", "s", "tree2", "tree2", "s", "KDTree", "sp", "column_stack", "np", "data", "s", "x", "data", "s", "y", "force", "hasattr", "s", "tree3", "tree3", "s", "KDTree", "sp", "column_stack", "np", "data", "s", "x", "data", "s", "y", "data", "s", "z", "addCol", "self", "name", "Ensure the column mentioned exists.", "name", "names", "dtype", "data", "self", "data", "self", "append_fields", "recfunctions", "data", "self", "name", "repeat", "np", "nan", "np", "shape", "data", "self", "dtypes", "DTYPE", "self", "usemask", "False", "swapStar", "self", "data", "st", "tmp", "deepcopy", "cp", "data", "data", "data", "st", "data", "st", "tmp", "data", "fromFolder", "s", "folder", "chdir", "os", "folder", "pos", "s", "genfromtxt", "np", "Position.txt", "grav", "s", "genfromtxt", "np", "Acceleration.txt", "pot", "s", "genfromtxt", "np", "GravPotential.txt", "mass", "s", "genfromtxt", "np", "Masses.txt", "smooth", "s", "genfromtxt", "np", "Smoothing.txt", "rho", "s", "genfromtxt", "np", "Density.txt", "energy", "s", "genfromtxt", "np", "Energy.txt", "strarg", "s", "argmax", "mass", "s", "strarg", "strarg", "s", "star", "s", "pos", "s", "strarg", "Mstar", "s", "max", "mass", "s", "pos", "s", "pos", "s", "star", "s", "row", "tuple", "repeat", "np", "nan", "np", "len", "dt", "s", "data", "s", "array", "np", "row", "i", "xrange", "shape", "pos", "s", "dtype", "dt", "s", "pos", "s", "swapStar", "s", "pos", "s", "strarg", "star", "s", "pos", "s", "n", "s", "data", "s", "x", "pos", "s", "n", "s", "data", "s", "y", "pos", "s", "n", "s", "data", "s", "z", "pos", "s", "n", "s", "mass", "s", "swapStar", "s", "mass", "s", "strarg", "data", "s", "m", "mass", "s", "n", "s", "star", "s", "concatenate", "np", "star", "s", "mass", "s", "n", "s", "grav", "s", "swapStar", "s", "grav", "s", "strarg", "star", "s", "concatenate", "np", "star", "s", "grav", "s", "n", "s", "addCol", "s", "gz", "data", "s", "gz", "grav", "s", "n", "s", "addCol", "s", "R", "data", "s", "R", "sqrt", "np", "data", "s", "x", "data", "s", "y", "addCol", "s", "r", "data", "s", "r", "sqrt", "np", "data", "s", "x", "data", "s", "y", "data", "s", "z", "addCol", "s", "theta", "data", "s", "theta", "arctan2", "np", "data", "s", "y", "data", "s", "x", "loaded", "s", "True", "fromFile", "s", "file", "format", "x y z m rho iphase", "Lodato format is x,y,z,m,rho,iphase", "format", "split", "format", "x", "format", "y", "format", "z", "format", "fdat", "s", "genfromtxt", "np", "file", "row", "tuple", "repeat", "np", "nan", "np", "len", "dt", "s", "data", "s", "array", "np", "row", "i", "xrange", "shape", "fdat", "s", "dtype", "dt", "s", "x", "fdat", "s", "index", "format", "x", "y", "fdat", "s", "index", "format", "y", "z", "fdat", "s", "index", "format", "z", "m", "fdat", "s", "index", "format", "m", "strarg", "s", "argmax", "m", "Mstar", "s", "max", "m", "star", "s", "array", "np", "x", "strarg", "s", "y", "strarg", "s", "z", "strarg", "s", "x", "x", "x", "strarg", "s", "y", "y", "y", "strarg", "s", "z", "z", "z", "strarg", "s", "addCol", "s", "x", "addCol", "s", "y", "addCol", "s", "z", "tmp", "swapStar", "s", "x", "strarg", "s", "data", "s", "x", "tmp", "n", "s", "tmp", "swapStar", "s", "y", "strarg", "s", "data", "s", "y", "tmp", "n", "s", "tmp", "swapStar", "s", "z", "strarg", "s", "data", "s", "z", "tmp", "n", "s", "i", "var", "enumerate", "format", "var", "x", "y", "z", "addCol", "s", "var", "tmp", "fdat", "s", "i", "tmp", "swapStar", "s", "tmp", "strarg", "s", "data", "s", "var", "tmp", "n", "s", "addCol", "s", "R", "data", "s", "R", "sqrt", "np", "data", "s", "x", "data", "s", "y", "addCol", "s", "r", "data", "s", "r", "sqrt", "np", "data", "s", "x", "data", "s", "y", "data", "s", "z", "addCol", "s", "theta", "data", "s", "theta", "arctan2", "np", "data", "s", "y", "data", "s", "x", "loaded", "s", "True", "fromBinaryFile", "s", "file", "format", "type", "gx gy gz", "f", "type should be a valid python struct variable type, e.g. f= 4-byte\n        float.  Assumes the (idiotic) fortran binary format and that every\n        variable has been written in blocks of equal size.", "bsize", "calcsize", "st", "type", "format", "split", "format", "f", "open", "file", "rb", "fdat", "read", "f", "regionend", "i", "regionend", "len", "fdat", "i", "len", "format", "size", "unpack", "st", "i", "fdat", "regionend", "regionend", "bsize", "regionstart", "regionend", "regionend", "regionstart", "size", "bsize", "addCol", "s", "format", "i", "tmp", "array", "np", "unpack", "st", "type", "size", "fdat", "regionstart", "regionend", "len", "tmp", "n", "s", "tmp", "swapStar", "s", "tmp", "strarg", "s", "data", "s", "format", "i", "tmp", "n", "s", "i", "i", "N", "self", "subset", "self", "None", "len", "subset", "self", "n", "self", "property", "n", "s", "hasattr", "s", "data", "shape", "data", "s", "property", "fetch", "self", "variable", "subset", "self", "None", "len", "variable", "n", "self", "variable", "subset", "self", "variable", "subsetoff", "s", "hasattr", "s", "subset", "subset", "s", "None", "__subset", "s", "subset", "s", "subset", "s", "None", "subseton", "self", "fields", "N", "force", "None", "False", "All functions will act on just a subset of the data, rather than the\n        entirety of it.  You can either supply N in which case the particles\n        will be randomly chosen (N of them) or supply any number of fields, in\n        which case the praticles will be set to those rows where there is data\n        available.  If this is all entries or None, or you enter a stupid value\n        for N, the current subset will not be changed", "subset", "self", "None", "None", "force", "hasattr", "self", "__subset", "subset", "self", "__subset", "self", "None", "fields", "None", "isinstance", "fields", "list", "subset", "where", "np", "isfinite", "np", "data", "self", "fields", "subset", "arange", "np", "n", "self", "field", "fields", "subset", "subset", "where", "np", "isfinite", "np", "data", "self", "field", "subset", "len", "subset", "len", "subset", "n", "self", "Invalid fields, subset is unchanged", "subset", "self", "subset", "N", "N", "n", "self", "Invalid N, subset is unchanged", "rand", "permutation", "random", "np", "n", "self", "subset", "self", "rand", "min", "len", "rand", "N", "calcBands", "self", "data", "boundaries", "Assigns a factor to the table depending on which side of the\n        bondaries the data specified falls on.  Can be used to colour data\n        later when plotting...", "isinstance", "boundaries", "list", "boundaries", "boundaries", "addCol", "self", "bands", "bandBoundaries", "self", "boundaries", "data", "abs", "np", "fetch", "self", "data", "len", "boundaries", "data", "self", "bands", "where", "np", "data", "boundaries", "count", "i", "cut", "enumerate", "boundaries", "count", "count", "data", "self", "bands", "where", "np", "data", "boundaries", "i", "data", "cut", "count", "data", "self", "bands", "where", "np", "data", "boundaries", "count", "nBands", "self", "bands", "names", "dtype", "data", "self", "all", "np", "isnan", "np", "data", "self", "bands", "int", "nanmax", "np", "data", "self", "bands", "property", "plot", "kw", "s", "x", "y", "newBands", "useBands", "hline", "False", "True", "General purpose plotting function to be used by other things. We can\n        calculate bands or display pre-calculated banding.  If boundaries is\n        passed to this function, we pass it on to calcBands.\n        \n        Returns the figure object and the series of line segments [fig,[lines]]\n        ", "ret", "isinstance", "x", "str", "xlab", "kw", "kw", "xlab", "x", "x", "data", "s", "x", "isinstance", "y", "str", "ylab", "kw", "kw", "ylab", "y", "y", "data", "s", "y", "x", "fetch", "s", "x", "y", "fetch", "s", "y", "newBands", "boundaries", "kw", "calcBands", "s", "y", "boundaries", "pop", "kw", "boundaries", "calcBands", "s", "y", "boundaries", "kw", "tmp", "pop", "kw", "boundaries", "useBands", "bands", "names", "dtype", "data", "s", "tmp", "plot", "x", "y", "pch", "hline", "hline", "kw", "append", "ret", "tmp", "lines", "i", "xrange", "nBands", "s", "o", "where", "np", "data", "s", "bands", "i", "tmp", "plot", "x", "o", "y", "o", "pch", "i", "add", "True", "append", "lines", "tmp", "append", "ret", "lines", "tmp", "plot", "x", "y", "hline", "hline", "kw", "append", "ret", "tmp", "append", "ret", "tmp", "ret", "ratioScatter", "kw", "s", "x", "y1", "y2", "boundaries", "legend", "loc", "None", "True", "upper right", " Designed for plotting log ratios.  If y1 and y2 both given, the y\n        axis becomes log2(|y1|/|y2|), otherwise y1 is assumed to be a valid log\n        ratio of two values.", "isinstance", "x", "str", "x", "data", "s", "x", "isinstance", "y1", "str", "y1", "data", "s", "y1", "isinstance", "y2", "str", "y2", "data", "s", "y2", "x", "fetch", "s", "x", "y1", "fetch", "s", "y1", "y2", "None", "y2", "fetch", "s", "y2", "y", "log2", "np", "abs", "np", "y1", "abs", "np", "y2", "y", "y1", "ret", "plot", "s", "x", "y", "boundaries", "boundaries", "kw", "legend", "bands", "names", "dtype", "data", "s", "len", "bandBoundaries", "s", "len", "ret", "labs", "< %s", "str", "bandBoundaries", "s", "i", "xrange", "len", "bandBoundaries", "s", "append", "labs", "%s - %s", "str", "bandBoundaries", "s", "i", "str", "bandBoundaries", "s", "i", "append", "labs", "> %s", "str", "bandBoundaries", "s", "legend", "plt", "ret", "labs", "loc", "loc", "ret", "relerrorScatter", "kw", "s", "x", "y1", "y2", "boundaries", "legend", "loc", "None", "True", "upper right", " Calculates the relative error and then passes it to plot", "isinstance", "x", "str", "x", "data", "s", "x", "isinstance", "y1", "str", "y1", "data", "s", "y1", "isinstance", "y2", "str", "y2", "data", "s", "y2", "x", "fetch", "s", "x", "y1", "fetch", "s", "y1", "y2", "None", "y2", "fetch", "s", "y2", "y", "abs", "np", "y2", "y1", "abs", "np", "y1", "y", "y1", "ret", "plot", "s", "x", "y", "boundaries", "boundaries", "kw", "legend", "bands", "names", "dtype", "data", "s", "len", "bandBoundaries", "s", "len", "ret", "labs", "< %s %%", "str", "bandBoundaries", "s", "i", "xrange", "len", "bandBoundaries", "s", "append", "labs", "%s %% - %s %%", "str", "bandBoundaries", "s", "i", "str", "bandBoundaries", "s", "i", "append", "labs", "> %s %%", "str", "bandBoundaries", "s", "legend", "plt", "ret", "labs", "loc", "loc", "ret", "surfacePlot", "kw", "s", "x", "y", "z", "Given a set of coordinates {(x,y,z)}, grids up x and y and converts\n        the z values into a colour scaling.", "isinstance", "x", "str", "x", "data", "s", "x", "isinstance", "y", "str", "y", "data", "s", "y", "isinstance", "z", "str", "z", "data", "s", "z", "x", "fetch", "s", "x", "y", "fetch", "s", "y", "z", "fetch", "s", "z", "heatMap", "x", "y", "z", "kw", "findIndex", "self", "x", "y", "z", "toll", "Given x, y and z, return the indecies in data that match to within\n        toll.  If multiple indicies match, -1 is returned", "len", "x", "len", "y", "len", "y", "len", "z", "len", "x", "len", "z", "index", "repeat", "np", "len", "x", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "len", "x", "i", "xrange", "len", "x", "tmp", "where", "np", "abs", "np", "data", "self", "x", "x", "i", "toll", "abs", "np", "data", "self", "y", "y", "i", "toll", "abs", "np", "data", "self", "z", "z", "i", "toll", "len", "tmp", "index", "i", "tmp", "update", "pbar", "i", "index", "calcsumgz", "self", "recalculate", "False", "Calculates direct sum gravity and inserts it into the table", "s", "self", "x", "data", "s", "x", "y", "data", "s", "y", "z", "data", "s", "z", "ptx", "fetch", "self", "x", "pty", "fetch", "self", "y", "ptz", "fetch", "self", "z", "index", "fetch", "self", "arange", "np", "n", "self", "addCol", "s", "sumgz", "recalculate", "o", "where", "np", "isnan", "np", "data", "self", "sumgz", "index", "ptx", "ptx", "o", "pty", "pty", "o", "ptz", "ptz", "o", "index", "index", "o", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "len", "index", "count", "i", "enumerate", "index", "rtmp", "sqrt", "np", "ptx", "count", "data", "s", "x", "pty", "count", "data", "s", "y", "ptz", "count", "data", "s", "z", "rtmp", "rtmp", "Infinity", "np", "data", "s", "sumgz", "i", "sum", "np", "G", "s", "data", "s", "m", "data", "s", "z", "ptz", "count", "rtmp", "update", "pbar", "count", "calcmidplaneCD", "s", "tgtN", "maxR", "init_tree", "s", "addCol", "s", "cdMid", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "N", "s", "count", "i", "enumerate", "subset", "s", "update", "pbar", "count", "pts", "array", "np", "query_ball_point", "tree2", "s", "list", "data", "s", "x", "y", "i", "maxR", "o", "where", "np", "abs", "np", "data", "s", "z", "pts", "abs", "np", "data", "s", "z", "i", "pts", "pts", "o", "dist", "sqrt", "np", "data", "s", "x", "pts", "data", "s", "x", "i", "data", "s", "y", "pts", "data", "s", "y", "i", "pts", "pts", "argsort", "dist", "dist", "dist", "argsort", "dist", "stop", "len", "pts", "tgtN", "tgtN", "len", "pts", "stop", "data", "s", "cdMid", "i", "h", "dist", "stop", "data", "s", "cdMid", "i", "sum", "np", "data", "s", "m", "pts", "stop", "pi", "math", "h", "calcsurCD", "s", "tgtN", "maxR", "init_tree", "s", "addCol", "s", "cdSur", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "N", "s", "count", "i", "enumerate", "subset", "s", "update", "pbar", "count", "pts", "array", "np", "query_ball_point", "tree2", "s", "list", "data", "s", "x", "y", "i", "maxR", "o", "where", "np", "abs", "np", "data", "s", "z", "pts", "abs", "np", "data", "s", "z", "i", "pts", "pts", "o", "dist", "sqrt", "np", "data", "s", "x", "pts", "data", "s", "x", "i", "data", "s", "y", "pts", "data", "s", "y", "i", "pts", "pts", "argsort", "dist", "dist", "dist", "argsort", "dist", "stop", "len", "pts", "tgtN", "tgtN", "len", "pts", "stop", "data", "s", "cdSur", "i", "h", "dist", "stop", "data", "s", "cdSur", "i", "sum", "np", "data", "s", "m", "pts", "stop", "pi", "math", "h", "calcPotential", "s", "Calculate the potential energy for a subset of particles...", "addCol", "s", "Pot", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "N", "s", "x", "fetch", "s", "data", "s", "x", "y", "fetch", "s", "data", "s", "y", "z", "fetch", "s", "data", "s", "z", "xall", "data", "s", "x", "yall", "data", "s", "y", "zall", "data", "s", "z", "pot", "zeros", "np", "N", "s", "mass", "median", "np", "data", "s", "m", "i", "xrange", "N", "s", "update", "pbar", "i", "tmp", "sqrt", "np", "xall", "x", "i", "yall", "y", "i", "zall", "z", "i", "tmp", "tmp", "inf", "np", "pot", "i", "mass", "G", "s", "sum", "np", "tmp", "data", "s", "Pot", "subset", "s", "pot", "seedMap", "s", "subset", "nn", "subsetFrac", "maxR", "False", "Calculate the column density at a subset of particles.  If subset is\n        set to true then we calculate it at the points specified in subset,\n        otherwise a random set is chosen.  nn is the number of neighbours to\n        use to calculate the surface density at each point and subsetFrac is\n        the fraction of total particles to calculate it for.", "init_tree", "s", "subset", "subset", "s", "None", "npts", "N", "s", "rr", "subset", "s", "npts", "int", "n", "s", "subsetFrac", "rr", "permutation", "random", "np", "n", "s", "npts", "addCol", "s", "cdTot", "ghost", "zeros", "np", "npts", "ghost", "data", "s", "x", "rr", "ghost", "data", "s", "y", "rr", "mm", "data", "s", "m", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "npts", "i", "xrange", "npts", "update", "pbar", "i", "pts", "query", "tree2", "s", "ghost", "i", "nn", "ghost", "i", "sum", "np", "mm", "pts", "pi", "math", "max", "np", "pts", "data", "s", "cdTot", "rr", "ghost", "interpolateMap", "s", "grid", "False", "Interpolates the surface density to surface using either the grid or\n        the 10% column calculation.", "addCol", "s", "cdTotInt", "grid", "cdTot", "names", "dtype", "data", "s", "seedMap", "s", "grid", "hasattr", "s", "gridArray", "gridMap", "s", "rr", "subset", "s", "rr", "None", "rr", "arange", "np", "n", "s", "tmp", "zeros", "np", "shape", "rr", "tmp", "data", "s", "x", "rr", "tmp", "data", "s", "y", "rr", "widgets", "Percentage", "progressbar", "Bar", "progressbar", " ", "FormatLabel", "progressbar", "Time elapsed: %(elapsed)s", " ", "ETA", "progressbar", "pbar", "start", "ProgressBar", "progressbar", "widgets", "widgets", "maxval", "N", "s", "grid", "gtree", "KDTree", "sp", "gridArray", "s", "tt", "gridArray", "s", "src", "isfinite", "np", "data", "s", "cdTot", "gtree", "KDTree", "sp", "column_stack", "np", "data", "s", "x", "src", "data", "s", "y", "src", "tt", "data", "s", "cdTot", "src", "i", "xrange", "shape", "rr", "update", "pbar", "i", "pts", "query", "gtree", "tmp", "i", "tmp", "i", "tt", "pts", "data", "s", "cdTotInt", "rr", "tmp", "gridMap", "s", "Rres", "tres", "log", "minCount", "True", "log", "Rspace", "array", "np", "percentile", "np", "data", "s", "R", "list", "linspace", "np", "Rres", "Rspace", "linspace", "np", "min", "np", "data", "s", "R", "max", "np", "data", "s", "R", "Rres", "tspace", "linspace", "np", "min", "np", "data", "s", "theta", "max", "np", "data", "s", "theta", "tres", "grid", "Redges", "tedges", "histogram2d", "np", "data", "s", "R", "data", "s", "theta", "Rspace", "tspace", "area", "outer", "np", "Redges", "diff", "np", "Redges", "Redges", "diff", "np", "tedges", "mass", "median", "np", "data", "s", "m", "counts", "grid", "grid", "grid", "mass", "area", "Rcenter", "Redges", "diff", "np", "Redges", "tcenter", "tedges", "diff", "np", "tedges", "gridArray", "s", "zeros", "np", "Rres", "tres", "Rflat", "flatten", "ndarray", "np", "outer", "np", "Rcenter", "ones", "np", "tres", "tflat", "flatten", "ndarray", "np", "outer", "np", "ones", "np", "Rres", "tcenter", "gridArray", "s", "Rflat", "cos", "np", "tflat", "gridArray", "s", "Rflat", "sin", "np", "tflat", "gridArray", "s", "flatten", "ndarray", "np", "grid", "gridArray", "s", "flatten", "ndarray", "np", "counts", "gridArray", "s", "gridArray", "s", "flatten", "ndarray", "np", "counts", "minCount", "AnalyticDisc", "Disc", "MMwrite", "self", "file", "/home/my304/data/Output/MMtmp_data.txt", "f", "open", "file", "w", "s", "self", "params", "Hfact", "s", "max", "abs", "data", "s", "z", "T0", "s", "plIndex", "s", "TIndex", "s", "Rout", "s", "Rin", "s", "Mstar", "s", "Mdisc", "s", "G", "s", "D", "s", "len", "params", "append", "params", "tmp", "str", "p", "p", "params", "write", "f", "join", "\t", "tmp", "write", "f", "\n", "R", "fetch", "s", "data", "s", "R", "t", "fetch", "s", "data", "s", "theta", "z", "fetch", "s", "data", "s", "z", "i", "xrange", "N", "s", "write", "f", "str", "R", "i", "\t", "str", "t", "i", "\t", "str", "z", "i", "\n", "close", "f", "MMsubset", "s", "subset", "s", "MMread", "s", "file", "subset", "/home/my304/data/Output/MMtmp_processed.txt", "None", "We need to know which indexes to insert this information into the\n        data object, one way is to use a supplied subset (s.MMsubest is saved\n        by MMwrite).  If subset is None, we attempt to guess the index based on\n        the positions given in the MM file.", "MMdata", "s", "genfromtxt", "np", "file", "addCol", "s", "Agznostar", "addCol", "s", "MMapprox", "subset", "None", "data", "s", "Agznostar", "subset", "MMdata", "s", "x", "MMdata", "s", "cos", "np", "MMdata", "s", "y", "MMdata", "s", "sin", "np", "MMdata", "s", "o", "findIndex", "s", "x", "y", "MMdata", "s", "any", "np", "o", "No indicies provided and failed to find match for %s points", "sum", "np", "o", "data", "s", "Agznostar", "o", "MMdata", "s", "data", "s", "MMapprox", "o", "MMdata", "s", "describeDisc", "self", "Hfact", "T0", "plIndex", "TIndex", "Rin", "Rout", "Mstar", "Mdisc", "G", "loaded", "self", "Hfact", "self", "Hfact", "T0", "self", "T0", "plIndex", "self", "plIndex", "TIndex", "self", "TIndex", "Rin", "self", "Rin", "Rout", "self", "Rout", "Mstar", "self", "Mstar", "Mdisc", "self", "Mdisc", "G", "self", "G", "Mdisc", "self", "sum", "np", "data", "self", "m", "Rin", "self", "min", "data", "self", "R", "Rout", "self", "max", "data", "self", "R", "plIndex", "D", "self", "log2", "np", "Rout", "self", "Rin", "self", "D", "self", "plIndex", "self", "Rout", "self", "plIndex", "self", "Rin", "self", "plIndex", "self", "addCol", "self", "AscaleH", "data", "self", "AscaleH", "Hfact", "self", "sqrt", "np", "T0", "self", "Mstar", "self", "Rin", "self", "TIndex", "self", "data", "self", "R", "TIndex", "self", "addCol", "self", "Arho", "data", "self", "Arho", "Mdisc", "self", "pi", "math", "D", "self", "data", "self", "R", "plIndex", "self", "exp", "np", "data", "self", "z", "data", "self", "AscaleH", "sqrt", "np", "pi", "math", "data", "self", "AscaleH", "addCol", "self", "AcdSur", "data", "self", "AcdSur", "Mdisc", "self", "data", "self", "R", "plIndex", "self", "pi", "math", "D", "self", "erf", "special", "abs", "np", "data", "self", "z", "sqrt", "np", "data", "self", "AscaleH", "addCol", "self", "AcdMid", "data", "self", "AcdMid", "data", "self", "R", "plIndex", "self", "Mdisc", "self", "pi", "math", "D", "self", "erf", "special", "abs", "np", "data", "self", "z", "sqrt", "np", "data", "self", "AscaleH", "addCol", "self", "AcdTot", "data", "self", "AcdTot", "Mdisc", "self", "pi", "math", "D", "self", "data", "self", "R", "plIndex", "self", "addCol", "self", "Agzstar", "data", "self", "Agzstar", "G", "self", "Mstar", "self", "data", "self", "z", "data", "self", "r", "addCol", "self", "Agzapprox", "data", "self", "Agzapprox", "pi", "math", "G", "self", "data", "self", "AcdMid", "sign", "np", "data", "self", "z", "addCol", "self", "gznostar", "data", "self", "gznostar", "data", "self", "gz", "data", "self", "Agzstar", "W", "q", "h", "ndim", "math", "isinstance", "q", "int", "isinstance", "q", "float", "q", "array", "np", "q", "sigma3", "pi", "math", "sigma2", "pi", "math", "sigma1", "ndim", "sigma", "sigma1", "ndim", "sigma", "sigma2", "ndim", "sigma", "sigma3", "NameError", "ndim must be between 1-3", "out", "copy", "q", "c1", "q", "q", "c2", "q", "q", "c3", "q", "out", "c1", "sigma", "h", "ndim", "q", "c1", "q", "c1", "out", "c2", "sigma", "h", "ndim", "q", "c2", "out", "c3", "out", "py_poinc", "pygame", "pygame.locals", "*", "pprint", "pprint", "pp", "math", "random", "os", "sys", "SCREEN", "Rect", "pygame", "pygame.colordict", "THECOLORS", "update", "globals", "dict", "upper", "k", "v", "k", "v", "iteritems", "THECOLORS", "THECOLORS", "Point", "object", "Cartesian 2d point", "__init__", "self", "x", "y", "x", "self", "float", "x", "y", "self", "float", "y", "screen", "self", "int", "x", "self", "int", "bottom", "SCREEN", "y", "self", "property", "line_intersect", "x1", "y1", "x2", "y2", "x3", "y3", "x4", "y4", "d", "y4", "y3", "x2", "x1", "x4", "x3", "y2", "y1", "d", "ua", "x4", "x3", "y1", "y3", "y4", "y3", "x1", "x3", "d", "x", "x1", "ua", "x2", "x1", "y", "y1", "ua", "y2", "y1", "Point", "x", "y", "pointlist", "points", "w", "points_l", "points_r", "_rot_points", "p1", "p2", "w", "x1", "y1", "x", "p1", "y", "p1", "x2", "y2", "x", "p2", "y", "p2", "dx", "x1", "x2", "dy", "y1", "y2", "a", "atan2", "math", "dy", "dx", "pi", "math", "px", "x1", "cos", "math", "a", "w", "py", "y1", "sin", "math", "a", "w", "lp", "Point", "px", "py", "px", "x1", "cos", "math", "a", "w", "py", "y1", "sin", "math", "a", "w", "rp", "Point", "px", "py", "lp", "rp", "lp", "rp", "_rot_points", "points", "points", "w", "append", "points_l", "lp", "insert", "points_r", "rp", "npoints", "len", "points", "_intersect_point", "p1", "p2", "p3", "w", "x1", "y1", "x", "p1", "y", "p1", "x2", "y2", "x", "p2", "y", "p2", "x3", "y3", "x", "p3", "y", "p3", "a", "atan2", "math", "y1", "y2", "x1", "x2", "pi", "math", "x1", "cos", "math", "a", "w", "y1", "sin", "math", "a", "w", "x2", "cos", "math", "a", "w", "y2", "sin", "math", "a", "w", "a", "atan2", "math", "y2", "y3", "x2", "x3", "pi", "math", "x2", "cos", "math", "a", "w", "y2", "sin", "math", "a", "w", "x3", "cos", "math", "a", "w", "y3", "sin", "math", "a", "w", "line_intersect", "x1", "y1", "x2", "y2", "x2", "y2", "x3", "y3", "i", "range", "npoints", "p1", "p2", "p3", "points", "i", "i", "append", "points_l", "_intersect_point", "p1", "p2", "p3", "w", "insert", "points_r", "_intersect_point", "p1", "p2", "p3", "w", "lp", "rp", "_rot_points", "points", "points", "w", "append", "points_l", "lp", "insert", "points_r", "rp", "points_l", "points_r", "main", "environ", "os", "SDL_VIDEO_CENTERED", "1", "npass", "nfail", "init", "pygame", "screen", "set_mode", "display", "pygame", "size", "SCREEN", "clock", "Clock", "time", "pygame", "framerate", "points", "running", "True", "running", "elapsed", "tick", "clock", "framerate", "event", "get", "event", "pygame", "type", "event", "QUIT", "running", "False", "type", "event", "KEYDOWN", "key", "event", "K_ESCAPE", "post", "event", "pygame", "Event", "event", "pygame", "QUIT", "key", "event", "K_r", "points", "randompoints", "post", "event", "pygame", "event", "type", "event", "MOUSEBUTTONUP", "button", "event", "x", "y", "pos", "event", "y", "bottom", "SCREEN", "y", "p", "Point", "x", "y", "append", "points", "p", "fill", "screen", "WHITE", "len", "points", "lines", "draw", "pygame", "screen", "BLACK", "True", "screen", "p", "p", "pointlist", "points", "lines", "draw", "pygame", "screen", "RED", "False", "screen", "p", "p", "points", "flip", "display", "pygame", "__name__", "__main__", "main", "datetime", "urlparse", "requests", "caching.base", "django.db", "models", "django.db.models", "*", "app.trackers.backends", "*", "app.trackers.managers", "*", "Tracker", "CachingMixin", "base", "caching", "Model", "models", "\n    Model for storing the trackers\n    ", "url", "URLField", "models", "max_length", "protocol", "CharField", "models", "null", "False", "max_length", "secured", "BooleanField", "models", "default", "False", "private", "BooleanField", "models", "default", "False", "date", "DateField", "models", "auto_now_add", "True", "torrents", "ManyToManyField", "models", "torrents.Torrent", "verbose_name", "Torrents", "latitude", "DecimalField", "models", "null", "True", "decimal_places", "max_digits", "longitude", "DecimalField", "models", "null", "True", "decimal_places", "max_digits", "country", "CharField", "models", "null", "True", "max_length", "objects", "TrackerManager", "__unicode__", "self", "\n        String representation method.\n        ", "url", "self", "Meta", "\n        Meta.\n        ", "unique_together", "url", "secured", "ordering", "-id", "save", "args", "kwargs", "self", "\n        Save method which saves the record.\n        ", "id", "self", "None", "latitude", "self", "longitude", "self", "country", "self", "process", "LocationInformation", "url", "self", "save", "super", "Tracker", "self", "args", "kwargs", "Exception", "e", "e", "host", "self", "\n        Returns the hotname of the tracker.\n        ", "url", "urlparse", "urlparse", "url", "self", "host", "netloc", "url", "host", "Exception", "e", "None", "property", "latency_times", "self", "\n        Returns the latency times of the tracker over the period.\n        ", "queries", "filter", "objects", "Query", "success", "True", "tracker", "self", "latency_times", "latency", "query", "query", "queries", "latency_times", "Exception", "e", "None", "property", "average_latency", "self", "\n        Average latency of tracker over the period.\n        ", "queries", "filter", "objects", "Query", "success", "True", "tracker", "self", "latency", "values", "aggregate", "queries", "Avg", "latency", "latency", "Exception", "e", "None", "property", "uptime_percentage", "self", "\n        Returns the amount of time this tracker has been available.\n        ", "total_queries", "values", "aggregate", "filter", "objects", "Query", "tracker", "self", "Count", "id", "successful_queries", "values", "aggregate", "filter", "objects", "Query", "success", "True", "tracker", "self", "Count", "id", "successful_queries", "total_queries", "total_queries", "Exception", "e", "None", "property", "last_checked", "self", "\n        Returns the last time this tracker was checked.\n        ", "query", "latest", "filter", "objects", "Query", "tracker", "self", "date", "last_checked", "date", "query", "last_checked", "Exception", "e", "None", "property", "first_few_tries", "self", "\n        Returns whether this tracker has only been checked a few times\n        ", "tries", "count", "filter", "objects", "Query", "tracker", "self", "first_few_tries", "tries", "False", "True", "first_few_tries", "Exception", "e", "False", "property", "is_working", "self", "\n        Returns whether this tracker is working or not.\n        ", "queries", "order_by", "filter", "objects", "Query", "tracker", "self", "-date", "len", "queries", "True", "all", "query", "success", "False", "query", "values", "queries", "success", "Exception", "e", "False", "property", "app.torrents.models", "*", "Query", "Model", "models", "\n    Model for storing the queries\n    ", "torrent", "ForeignKey", "models", "Torrent", "tracker", "ForeignKey", "models", "Tracker", "date", "DateTimeField", "models", "auto_now_add", "True", "latency", "FloatField", "models", "null", "True", "peers", "BigIntegerField", "models", "null", "True", "success", "BooleanField", "models", "default", "False", "message", "CharField", "models", "max_length", "null", "True", "__unicode__", "self", "\n        String representation method.\n        ", "str", "date", "self", "Meta", "\n        Meta.\n        ", "unique_together", "tracker", "torrent", "date", "ordering", "-date", "web", "json", "twisted.internet", "reactor", "defer", "util", "Singleton", "time", "datetime", "opennsa.topology", "opennsa.setup", "opennsa.nsa", "opennsa.cli.commands", "opennsa.cli.options", "random", "uuid", "json", "twisted.python.failure", "onsa_jeroen", "createClient", "getNSA", "parseStpList", "render_xml", "result", "<result>%s</result>", "result", "render_json", "result", "dumps", "json", "result", "sort_keys", "True", "indent", "render_html", "result", "<html><body>%s</body></html>", "result", "render_txt", "result", "result", "onsaClient", "__init__", "self", "topology", "topo", "self", "parseTopology", "gole", "topology", "opennsa", "open", "topology", "startRunning", "reactor", "installSignalHandlers", "client", "self", "client_nsa", "self", "createClient", "result", "self", "None", "error", "self", "None", "syncCall", "func", "sync_func", "args", "kwargs", "self", "result", "self", "None", "error", "self", "None", "d", "maybeDeferred", "defer", "func", "self", "args", "kwargs", "_runDefer", "self", "d", "res", "result", "self", "error", "self", "error", "self", "res", "sync_func", "_runDefer", "self", "d", "timeout", "handleError", "x", "error", "self", "x", "addErrback", "d", "handleError", "count", "result", "self", "None", "error", "self", "None", "count", "timeout", "runUntilCurrent", "reactor", "doSelect", "reactor", "count", "count", "error", "self", "error", "self", "stop", "self", "stop", "reactor", "syncCall", "query", "self", "nsa", "cid", "gid", "None", "None", "nsa", "getNSA", "nsa", "cid", "gid", "cid and gid isn't good defaulting to cid", "cid", "qr", "query", "client", "self", "client_nsa", "self", "nsa", "None", "Summary", "connection_ids", "cid", "gid", "qr", "query", "client", "self", "client_nsa", "self", "nsa", "None", "Summary", "global_reservation_ids", "gid", "qr", "query", "client", "self", "client_nsa", "self", "nsa", "None", "Summary", "connection_ids", "result", "self", "qr", "syncCall", "inlineCallbacks", "defer", "reserve", "self", "srcNet", "srcSTP", "dstNet", "dstSTP", "start_time", "length", "gid", "nsa", "None", "None", "None", "None", "srcNet", "getNetwork", "topo", "self", "srcNet", "srcSTP", "getEndpoint", "srcNet", "srcSTP", "dstNet", "getNetwork", "topo", "self", "dstNet", "dstSTP", "getEndpoint", "dstNet", "dstSTP", "nsa", "provider_nsa", "getNSA", "nsa", "provider_nsa", "nsa", "srcNet", "Reserving (%s,%s) to (%s,%s) \n at %s (%s)", "srcNet", "srcSTP", "dstNet", "dstSTP", "provider_nsa", "url", "provider_nsa", "start_time", "None", "end_time", "None", "description", "CLI Test Connection", "start_time", "start_time", "utcfromtimestamp", "datetime", "datetime", "time", "time", "length", "end_time", "start_time", "timedelta", "datetime", "minutes", "length", "end_time", "start_time", "timedelta", "datetime", "minutes", "gid", "global_reservation_id", "gid", "global_reservation_id", "opennsa-cli:gid-%s", "randrange", "random", "connection_id", "urn:uuid:%s", "uuid1", "uuid", "bwp", "BandwidthParameters", "nsa", "opennsa", "service_params", "ServiceParameters", "nsa", "opennsa", "start_time", "end_time", "srcSTP", "dstSTP", "bandwidth", "bwp", "r", "reserve", "client", "self", "client_nsa", "self", "provider_nsa", "None", "global_reservation_id", "description", "connection_id", "service_params", "Reservation created.\nReservation ID: %s\nConnection ID: %s", "global_reservation_id", "connection_id", "result", "self", "global_reservation_id", "connection_id", "global_reservation_id", "connection_id", "syncCall", "inlineCallbacks", "defer", "terminate", "self", "nsa", "cid", "http", "nsa", "nsa", "getNSA", "nsa", "Terminating %s at %s", "cid", "nsa", "qr", "terminate", "client", "self", "client_nsa", "self", "nsa", "None", "connection_id", "cid", "result", "self", "qr", "syncCall", "inlineCallbacks", "defer", "provision", "self", "nsa", "cid", "http", "nsa", "nsa", "getNSA", "nsa", "Provisioning %s at %s", "cid", "nsa", "qr", "provision", "client", "self", "client_nsa", "self", "nsa", "None", "connection_id", "cid", "result", "self", "qr", "syncCall", "inlineCallbacks", "defer", "Singleton", "querier", "GET", "self", "name", "name", "terminate", "ocli", "Instance", "onsaClient", "/Users/ralph/4k-topo.owl", "q", "input", "web", "nsa", "", "cid", "", "terminate", "ocli", "nsa", "q", "cid", "q", "name", "provision", "ocli", "Instance", "onsaClient", "/Users/ralph/4k-topo.owl", "q", "input", "web", "nsa", "", "cid", "", "provision", "ocli", "nsa", "q", "cid", "q", "name", "query", "ocli", "Instance", "onsaClient", "/Users/ralph/4k-topo.owl", "_queryToJSON", "self", "query", "ocli", "uva4k", "name", "reserve", "ocli", "Instance", "onsaClient", "/Users/ralph/4k-topo.owl", "q", "input", "web", "fromNSA", "", "fromSTP", "", "toNSA", "", "toSTP", "", "Reserving (%s, %s) to (%s, %s)", "fromNSA", "q", "fromSTP", "q", "toNSA", "q", "toSTP", "q", "dumps", "json", "reserve", "ocli", "fromNSA", "q", "fromSTP", "q", "toNSA", "q", "toSTP", "q", "result", "Hello world!", "Failure", "failure", "python", "twisted", "e", "dumps", "json", "error", "str", "e", "POST", "self", "name", "name", "register", "name", "unregister", "_queryToJSON", "self", "qr", "hasattr", "qr", "reservationSummary", "reslist", "res", "reservationSummary", "qr", "resdict", "resdict", "global-reservation-id", "str", "globalReservationId", "res", "hasattr", "res", "description", "resdict", "description", "str", "description", "res", "resdict", "startTime", "startTime", "schedule", "serviceParameters", "res", "resdict", "endTime", "endTime", "schedule", "serviceParameters", "res", "resdict", "bandwidth", "str", "desired", "bandwidth", "serviceParameters", "res", "resdict", "status", "str", "connectionState", "res", "hasattr", "res", "path", "hasattr", "path", "res", "stpList", "resdict", "stplist", "stp", "stpList", "path", "res", "resdict", "parsedList", "parseStpList", "stp", "stpList", "path", "res", "resdict", "stpList", "stpId", "sourceSTP", "path", "res", "stpId", "destSTP", "path", "res", "append", "reslist", "resdict", "dumps", "json", "reslist", "sort_keys", "True", "indent", "None", "__name__", "__main__", "ocli", "Instance", "onsaClient", "/Users/ralph/4k-topo.owl", "urls", "/(.*)", "querier", "app", "application", "web", "urls", "globals", "run", "app", "stop", "ocli", "shutil", "sys", "django.core.cache", "cache", "django.core.files.base", "ContentFile", "django.core.files.uploadedfile", "SimpleUploadedFile", "django.test", "TestCase", "models", "Storage", "temp_storage", "temp_storage_location", "version_info", "sys", "tests_25", "FileObjTests", "FileTests", "TestCase", "tearDown", "self", "rmtree", "shutil", "temp_storage_location", "test_files", "self", "assertRaises", "self", "AttributeError", "normal", "Storage", "obj1", "Storage", "assertEqual", "self", "name", "normal", "obj1", "", "assertRaises", "self", "ValueError", "size", "normal", "obj1", "save", "normal", "obj1", "django_test.txt", "ContentFile", "content", "assertEqual", "self", "name", "normal", "obj1", "tests/django_test.txt", "assertEqual", "self", "size", "normal", "obj1", "assertEqual", "self", "read", "normal", "obj1", "content", "close", "normal", "obj1", "normal", "obj1", "SimpleUploadedFile", "assignment.txt", "content", "dirs", "files", "listdir", "temp_storage", "tests", "assertEqual", "self", "dirs", "assertEqual", "self", "sorted", "files", "default.txt", "django_test.txt", "save", "obj1", "dirs", "files", "listdir", "temp_storage", "tests", "assertEqual", "self", "sorted", "files", "assignment.txt", "default.txt", "django_test.txt", "open", "normal", "obj1", "assertEqual", "self", "read", "normal", "obj1", "con", "assertEqual", "self", "read", "normal", "obj1", "tent", "assertEqual", "self", "list", "chunks", "normal", "obj1", "chunk_size", "co", "nt", "en", "t", "close", "normal", "obj1", "obj2", "Storage", "save", "normal", "obj2", "django_test.txt", "ContentFile", "more content", "assertEqual", "self", "name", "normal", "obj2", "tests/django_test_1.txt", "assertEqual", "self", "size", "normal", "obj2", "set", "cache", "obj1", "obj1", "set", "cache", "obj2", "obj2", "assertEqual", "self", "name", "normal", "get", "cache", "obj2", "tests/django_test_1.txt", "delete", "obj2", "save", "normal", "obj2", "django_test.txt", "ContentFile", "more content", "assertEqual", "self", "name", "normal", "obj2", "tests/django_test_2.txt", "objs", "Storage", "i", "range", "o", "objs", "save", "normal", "o", "multiple_files.txt", "ContentFile", "Same Content", "assertEqual", "self", "name", "normal", "o", "o", "objs", "tests/multiple_files.txt", "tests/multiple_files_1.txt", "tests/multiple_files_2.txt", "o", "objs", "delete", "o", "obj3", "create", "objects", "Storage", "assertEqual", "self", "name", "default", "obj3", "tests/default.txt", "assertEqual", "self", "read", "default", "obj3", "default content", "close", "default", "obj3", "delete", "obj3", "obj3", "Storage", "assertEqual", "self", "read", "default", "obj3", "default content", "close", "default", "obj3", "obj4", "Storage", "save", "random", "obj4", "random_file", "ContentFile", "random content", "assertTrue", "self", "endswith", "name", "random", "obj4", "/random_file", "delete", "normal", "obj1", "delete", "normal", "obj2", "delete", "default", "obj3", "delete", "random", "obj4", "os", "math", "urllib", "re", "dulwich.errors", "HangupException", "GitProtocolError", "dulwich.index", "commit_tree", "dulwich.objects", "Blob", "Commit", "Tag", "Tree", "parse_timezone", "dulwich.pack", "create_delta", "apply_delta", "dulwich.repo", "Repo", "dulwich", "client", "mercurial", "bookmarks", "update", "bookmarks", "mercurial", "commands", "ImportError", "hgext", "bookmarks", "mercurial.error", "RepoError", "ImportError", "mercurial.repo", "RepoError", "mercurial.i18n", "_", "mercurial.node", "hex", "bin", "nullid", "mercurial", "context", "util", "hgutil", "mercurial", "error", "_ssh", "util", "overlay", "overlayrepo", "GitProgress", "object", "convert git server progress strings into mercurial progress", "__init__", "self", "ui", "ui", "self", "ui", "lasttopic", "self", "None", "msgbuf", "self", "", "progress", "self", "msg", "msgs", "split", "re", "[\r\n]", "msgbuf", "self", "msg", "msgbuf", "self", "pop", "msgs", "msg", "msgs", "td", "split", "msg", ":", "data", "pop", "td", "td", "flush", "self", "data", "topic", "td", "m", "search", "re", "\\((\\d+)/(\\d+)\\)", "data", "m", "lasttopic", "self", "lasttopic", "self", "topic", "flush", "self", "lasttopic", "self", "topic", "pos", "total", "map", "int", "group", "m", "progress", "util", "ui", "self", "topic", "pos", "total", "total", "flush", "self", "msg", "flush", "self", "msg", "None", "lasttopic", "self", "progress", "util", "ui", "self", "lasttopic", "self", "None", "lasttopic", "self", "None", "msg", "note", "ui", "self", "msg", "\n", "GitHandler", "object", "mapfile", "git-mapfile", "tagsfile", "git-tags", "__init__", "self", "dest_repo", "ui", "repo", "self", "dest_repo", "ui", "self", "ui", "configbool", "ui", "git", "intree", "gitdir", "self", "wjoin", "repo", "self", ".git", "gitdir", "self", "join", "repo", "self", "git", "init_author_file", "self", "paths", "self", "configitems", "ui", "paths", "branch_bookmark_suffix", "self", "config", "ui", "git", "branch_bookmark_suffix", "load_map", "self", "load_tags", "self", "init_if_missing", "self", "exists", "path", "os", "gitdir", "self", "git", "self", "Repo", "gitdir", "self", "mkdir", "os", "gitdir", "self", "git", "self", "init_bare", "Repo", "gitdir", "self", "init_author_file", "self", "author_map", "self", "config", "ui", "self", "git", "authors", "open", "wjoin", "repo", "self", "config", "ui", "self", "git", "authors", "f", "line", "f", "line", "strip", "line", "line", "startswith", "line", "#", "from_", "to", "split", "re", "\\s*=\\s*", "line", "author_map", "self", "from_", "to", "map_set", "self", "gitsha", "hgsha", "_map_git", "self", "gitsha", "hgsha", "_map_hg", "self", "hgsha", "gitsha", "map_hg_get", "self", "gitsha", "get", "_map_git", "self", "gitsha", "map_git_get", "self", "hgsha", "get", "_map_hg", "self", "hgsha", "load_map", "self", "_map_git", "self", "_map_hg", "self", "exists", "path", "os", "join", "repo", "self", "mapfile", "self", "line", "opener", "repo", "self", "mapfile", "self", "gitsha", "hgsha", "split", "strip", "line", " ", "_map_git", "self", "gitsha", "hgsha", "_map_hg", "self", "hgsha", "gitsha", "save_map", "self", "file", "opener", "repo", "self", "mapfile", "self", "w+", "atomictemp", "True", "hgsha", "gitsha", "sorted", "iteritems", "_map_hg", "self", "write", "file", "%s %s\n", "gitsha", "hgsha", "getattr", "file", "rename", "getattr", "file", "close", "None", "load_tags", "self", "tags", "self", "exists", "path", "os", "join", "repo", "self", "tagsfile", "self", "line", "opener", "repo", "self", "tagsfile", "self", "sha", "name", "split", "strip", "line", " ", "tags", "self", "name", "sha", "save_tags", "self", "file", "opener", "repo", "self", "tagsfile", "self", "w+", "atomictemp", "True", "name", "sha", "sorted", "iteritems", "tags", "self", "tagtype", "repo", "self", "name", "global", "write", "file", "%s %s\n", "sha", "name", "getattr", "file", "rename", "getattr", "file", "close", "None", "import_commits", "self", "remote_name", "import_git_objects", "self", "remote_name", "update_hg_bookmarks", "self", "get_refs", "git", "self", "save_map", "self", "fetch", "self", "remote", "heads", "export_commits", "self", "refs", "fetch_pack", "self", "remote", "heads", "remote_name", "remote_name", "self", "remote", "oldrefs", "get_refs", "git", "self", "refs", "import_git_objects", "self", "remote_name", "refs", "import_tags", "self", "refs", "update_hg_bookmarks", "self", "refs", "remote_name", "update_remote_branches", "self", "remote_name", "refs", "paths", "self", "update_remote_branches", "self", "default", "refs", "bms", "getattr", "repo", "self", "tip", "bookmarks", "None", "bms", "setcurrent", "bookmarks", "repo", "self", "bms", "remoteref", "ref", "rn", "remote_name", "default", "refs/remotes/", "rn", "ref", "modheads", "refs", "k", "k", "refs", "startswith", "k", "refs/heads/", "endswith", "k", "^{}", "refs", "k", "get", "oldrefs", "remoteref", "k", "modheads", "status", "ui", "self", "_", "no changes found\n", "save_map", "self", "len", "modheads", "export_commits", "self", "export_git_objects", "self", "export_hg_tags", "self", "update_references", "self", "save_map", "self", "get_refs", "self", "remote", "export_commits", "self", "client", "path", "get_transport_and_path", "self", "remote", "old_refs", "new_refs", "changed", "refs", "update", "old_refs", "refs", "to_push", "set", "values", "local_heads", "self", "values", "tags", "self", "update", "new_refs", "get_changed_refs", "self", "refs", "to_push", "True", "send_pack", "client", "path", "changed", "have", "want", "changed_refs", "ref", "ref", "sha", "iteritems", "new_refs", "sha", "get", "old_refs", "ref", "new", "bin", "map_hg_get", "self", "new_refs", "ref", "ref", "changed_refs", "old", "r", "old_refs", "old_ref", "map_hg_get", "self", "old_refs", "r", "old_ref", "old", "bin", "old_ref", "old", "new", "HangupException", "GitProtocolError", "e", "Abort", "hgutil", "_", "git remote error: ", "str", "e", "push", "self", "remote", "revs", "force", "export_commits", "self", "changed_refs", "upload_pack", "self", "remote", "revs", "force", "remote_name", "remote_name", "self", "remote", "remote_name", "changed_refs", "ref", "sha", "iteritems", "changed_refs", "status", "ui", "self", "    %s::%s => GIT:%s\n", "remote_name", "ref", "sha", "update_remote_branches", "self", "remote_name", "changed_refs", "clear", "self", "mapfile", "join", "repo", "self", "mapfile", "self", "exists", "path", "os", "gitdir", "self", "root", "dirs", "files", "walk", "os", "gitdir", "self", "topdown", "False", "name", "files", "remove", "os", "join", "path", "os", "root", "name", "name", "dirs", "rmdir", "os", "join", "path", "os", "root", "name", "rmdir", "os", "gitdir", "self", "exists", "path", "os", "mapfile", "remove", "os", "mapfile", "getremotechanges", "self", "remote", "revs", "export_commits", "self", "refs", "fetch_pack", "self", "path", "remote", "revs", "revs", "reqrefs", "rev", "revs", "n", "refs/heads/", "rev", "refs/tags/", "rev", "n", "refs", "reqrefs", "n", "refs", "n", "reqrefs", "refs", "commits", "bin", "c", "c", "getnewgitcommits", "self", "reqrefs", "b", "overlayrepo", "self", "commits", "refs", "b", "commits", "None", "export_git_objects", "self", "init_if_missing", "self", "nodes", "lookup", "repo", "self", "n", "n", "repo", "self", "export", "node", "node", "nodes", "hex", "node", "_map_hg", "self", "total", "len", "export", "total", "status", "ui", "self", "_", "exporting hg objects to git\n", "i", "rev", "enumerate", "export", "progress", "util", "ui", "self", "exporting", "i", "total", "total", "ctx", "changectx", "repo", "self", "rev", "state", "get", "extra", "ctx", "hg-git", "None", "state", "octopus", "debug", "ui", "self", "revision %d is a part of octopus explosion\n", "rev", "ctx", "export_hg_commit", "self", "rev", "progress", "util", "ui", "self", "importing", "None", "total", "total", "export_hg_commit", "self", "rev", "note", "ui", "self", "_", "converting revision %s\n", "hex", "rev", "oldenc", "swap_out_encoding", "self", "ctx", "changectx", "repo", "self", "rev", "extra", "extra", "ctx", "commit", "Commit", "time", "timezone", "date", "ctx", "author", "commit", "get_git_author", "self", "ctx", "author_time", "commit", "int", "time", "author_timezone", "commit", "timezone", "committer", "extra", "name", "timestamp", "timezone", "rsplit", "extra", "committer", " ", "committer", "commit", "name", "commit_time", "commit", "timestamp", "int", "timezone", "timezone", "parse_timezone", "timezone", "isinstance", "timezone", "tuple", "timezone", "neg_utc", "timezone", "_commit_timezone_neg_utc", "commit", "neg_utc", "timezone", "int", "timezone", "commit_timezone", "commit", "timezone", "committer", "commit", "author", "commit", "commit_time", "commit", "author_time", "commit", "commit_timezone", "commit", "author_timezone", "commit", "parents", "commit", "parent", "get_git_parents", "self", "ctx", "hgsha", "hex", "node", "parent", "git_sha", "map_git_get", "self", "hgsha", "git_sha", "append", "parents", "commit", "git_sha", "message", "commit", "get_git_message", "self", "ctx", "encoding", "extra", "encoding", "commit", "extra", "encoding", "tree_sha", "commit_tree", "object_store", "git", "self", "iterblobs", "self", "ctx", "tree", "commit", "tree_sha", "add_object", "object_store", "git", "self", "commit", "map_set", "self", "id", "commit", "hex", "ctx", "swap_out_encoding", "self", "oldenc", "id", "commit", "get_valid_git_username_email", "self", "name", "Sanitize usernames and emails to fit git's restrictions.\n\n        The following is taken from the man page of git's fast-import\n        command:\n\n            [...] Likewise LF means one (and only one) linefeed [...]\n\n            committer\n                The committer command indicates who made this commit,\n                and when they made it.\n\n                Here <name> is the person's display name (for example\n                \"Com M Itter\") and <email> is the person's email address\n                (\"cm@example.com[1]\"). LT and GT are the literal\n                less-than (\\x3c) and greater-than (\\x3e) symbols. These\n                are required to delimit the email address from the other\n                fields in the line. Note that <name> and <email> are\n                free-form and may contain any sequence of bytes, except\n                LT, GT and LF. <name> is typically UTF-8 encoded.\n\n        Accordingly, this function makes sure that there are none of the\n        characters <, >, or \\n in any string which will be used for\n        a git username or email. Before this, it first removes left\n        angle brackets and spaces from the beginning, and right angle\n        brackets and spaces from the end, of this string, to convert\n        such things as \" <john@doe.com> \" to \"john@doe.com\" for\n        convenience.\n\n        TESTS:\n\n        >>> from mercurial.ui import ui\n        >>> g = GitHandler('', ui()).get_valid_git_username_email\n        >>> g('John Doe')\n        'John Doe'\n        >>> g('john@doe.com')\n        'john@doe.com'\n        >>> g(' <john@doe.com> ')\n        'john@doe.com'\n        >>> g('    <random<\\n<garbage\\n>  > > ')\n        'random???garbage?'\n        >>> g('Typo in hgrc >but.hg-git@handles.it.gracefully>')\n        'Typo in hgrc ?but.hg-git@handles.it.gracefully'\n        ", "sub", "re", "[<>\n]", "?", "rstrip", "lstrip", "name", "< ", "> ", "get_git_author", "self", "ctx", "author", "user", "ctx", "author", "author_map", "self", "author", "author_map", "self", "author", "regex", "compile", "re", "^(.*?) ?\\<(.*?)(?:\\>(.*))?$", "a", "match", "regex", "author", "a", "name", "get_valid_git_username_email", "self", "group", "a", "email", "get_valid_git_username_email", "self", "group", "a", "group", "a", "None", "len", "group", "a", "name", " ext:(", "quote", "urllib", "group", "a", ")", "author", "get_valid_git_username_email", "self", "name", " <", "get_valid_git_username_email", "self", "email", ">", "@", "author", "author", "get_valid_git_username_email", "self", "author", " <", "get_valid_git_username_email", "self", "author", ">", "author", "get_valid_git_username_email", "self", "author", " <none@none>", "author", "extra", "ctx", "author", "join", "", "apply_delta", "author", "extra", "ctx", "author", "author", "get_git_parents", "self", "ctx", "is_octopus_part", "ctx", "get", "extra", "ctx", "hg-git", "None", "octopus", "octopus-done", "parents", "get", "extra", "ctx", "hg-git", "None", "octopus-done", "part", "ctx", "is_octopus_part", "part", "p1", "p2", "parents", "part", "is_octopus_part", "p1", "append", "parents", "p1", "part", "p2", "append", "parents", "p2", "parents", "parents", "ctx", "parents", "get_git_message", "self", "ctx", "extra", "extra", "ctx", "message", "description", "ctx", "\n", "message", "extra", "message", "join", "", "apply_delta", "message", "extra", "message", "add_extras", "False", "extra_message", "", "branch", "ctx", "default", "add_extras", "True", "extra_message", "branch : ", "branch", "ctx", "\n", "renames", "f", "files", "ctx", "f", "manifest", "ctx", "rename", "renamed", "filectx", "ctx", "f", "rename", "append", "renames", "rename", "f", "renames", "add_extras", "True", "oldfile", "newfile", "renames", "extra_message", "rename : ", "oldfile", " => ", "newfile", "\n", "key", "value", "iteritems", "extra", "key", "author", "committer", "encoding", "message", "branch", "hg-git", "add_extras", "True", "extra_message", "extra : ", "key", " : ", "quote", "urllib", "value", "\n", "add_extras", "message", "\n--HG--\n", "extra_message", "message", "iterblobs", "self", "ctx", "f", "ctx", "fctx", "ctx", "f", "blobid", "map_git_get", "self", "hex", "filenode", "fctx", "blobid", "blob", "from_string", "Blob", "data", "fctx", "add_object", "object_store", "git", "self", "blob", "map_set", "self", "id", "blob", "hex", "filenode", "fctx", "blobid", "id", "blob", "l", "flags", "ctx", "f", "mode", "x", "flags", "ctx", "f", "mode", "mode", "f", "blobid", "mode", "getnewgitcommits", "self", "refs", "None", "init_if_missing", "self", "todo", "done", "set", "convert_list", "seenheads", "set", "refs", "None", "refs", "as_dict", "refs", "git", "self", "refs", "sha", "itervalues", "refs", "sha", "object_store", "git", "self", "obj", "get_object", "git", "self", "sha", "isinstance", "obj", "Tag", "obj_type", "sha", "object", "obj", "obj", "get_object", "git", "self", "sha", "isinstance", "obj", "Commit", "sha", "seenheads", "add", "seenheads", "sha", "append", "todo", "sha", "commitdate", "sha", "obj", "get_object", "git", "self", "sha", "commit_time", "obj", "commit_timezone", "obj", "sort", "todo", "key", "commitdate", "reverse", "True", "commits", "seen", "set", "todo", "todo", "sha", "todo", "sha", "done", "pop", "todo", "isinstance", "sha", "str", "obj", "get_object", "git", "self", "sha", "isinstance", "obj", "Commit", "p", "parents", "obj", "p", "done", "append", "todo", "p", "append", "commits", "sha", "convert_list", "sha", "obj", "add", "done", "sha", "pop", "todo", "convert_list", "commit", "commit", "commits", "commit", "_map_git", "self", "import_git_objects", "self", "remote_name", "refs", "None", "None", "convert_list", "commits", "getnewgitcommits", "self", "refs", "total", "len", "commits", "total", "status", "ui", "self", "_", "importing git objects into hg\n", "i", "csha", "enumerate", "commits", "progress", "util", "ui", "self", "importing", "i", "total", "total", "unit", "commits", "commit", "convert_list", "csha", "import_git_commit", "self", "commit", "progress", "util", "ui", "self", "importing", "None", "total", "total", "unit", "commits", "name", "rev", "items", "tags", "repo", "self", "rev", "repo", "self", "hasattr", "self", "tagscache", "tagscache", "self", "name", "tagscache", "self", "tagscache", "repo", "self", "name", "hasattr", "self", "_tags", "_tags", "self", "name", "_tags", "self", "_tags", "repo", "self", "name", "name", "_tagtypes", "repo", "self", "_tagtypes", "repo", "self", "name", "import_git_commit", "self", "commit", "debug", "ui", "self", "_", "importing: %s\n", "id", "commit", "strip_message", "hg_renames", "hg_branch", "extra", "extract_hg_metadata", "self", "message", "commit", "files", "get_files_changed", "self", "commit", "date", "author_time", "commit", "author_timezone", "commit", "text", "strip_message", "origtext", "text", "decode", "text", "utf-8", "UnicodeDecodeError", "text", "decode_guess", "self", "text", "encoding", "commit", "text", "strip", "join", "\n", "rstrip", "l", "l", "splitlines", "text", "\n", "text", "\n", "origtext", "extra", "message", "create_delta", "text", "\n", "origtext", "author", "author", "commit", " ext:", "author", "commit", "regex", "compile", "re", "^(.*?)\\ ext:\\((.*)\\) <(.*)\\>$", "m", "match", "regex", "author", "commit", "m", "name", "group", "m", "ex", "unquote", "urllib", "group", "m", "email", "group", "m", "author", "name", " <", "email", ">", "ex", " <none@none>", "author", "commit", "author", "author", "commit", "decode", "author", "utf-8", "UnicodeDecodeError", "origauthor", "author", "author", "decode_guess", "self", "author", "encoding", "commit", "extra", "author", "create_delta", "author", "origauthor", "oldenc", "swap_out_encoding", "self", "findconvergedfiles", "p1", "p2", "p2", "nullid", "manifest1", "manifest", "changectx", "repo", "self", "p1", "manifest2", "manifest", "changectx", "repo", "self", "p2", "path", "path", "node1", "iteritems", "manifest1", "path", "files", "get", "manifest2", "path", "node1", "node1", "getfilectx", "repo", "memctx", "f", "info", "get", "files", "f", "info", "None", "delete", "mode", "sha", "info", "delete", "IOError", "data", "data", "git", "self", "sha", "copied_path", "get", "hg_renames", "f", "e", "convert_git_int_mode", "self", "mode", "fc", "filectx", "context", "repo", "self", "f", "changeid", "rev", "p1", "memctx", "data", "data", "fc", "e", "flags", "fc", "copied_path", "renamed", "fc", "memfilectx", "context", "f", "data", "l", "e", "x", "e", "copied_path", "gparents", "map", "map_hg_get", "self", "parents", "commit", "p1", "p2", "nullid", "nullid", "octopus", "False", "len", "gparents", "commit_octopus", "p1", "p2", "ctx", "memctx", "context", "repo", "self", "p1", "p2", "text", "list", "files", "findconvergedfiles", "p1", "p2", "getfilectx", "author", "date", "hg-git", "octopus", "hex", "commitctx", "repo", "self", "ctx", "octopus", "len", "gparents", "p2", "pop", "gparents", "p1", "pop", "gparents", "len", "gparents", "p2", "commit_octopus", "p1", "p2", "p1", "pop", "gparents", "gparents", "p1", "pop", "gparents", "pa", "None", "p2", "nullid", "node1", "changectx", "repo", "self", "p1", "node2", "changectx", "repo", "self", "p2", "pa", "ancestor", "node1", "node2", "hg_branch", "extra", "branch", "hg_branch", "author", "commit", "committer", "commit", "author_time", "commit", "commit_time", "commit", "author_timezone", "commit", "commit_timezone", "commit", "extra", "committer", "%s %d %d", "committer", "commit", "commit_time", "commit", "commit_timezone", "commit", "encoding", "commit", "extra", "encoding", "encoding", "commit", "hg_branch", "extra", "branch", "hg_branch", "octopus", "extra", "hg-git", "octopus-done", "repo_contains", "n", "bool", "lookup", "repo", "self", "n", "RepoLookupError", "error", "False", "repo_contains", "p1", "repo_contains", "p2", "Abort", "hgutil", "_", "you appear to have run strip - please run hg git-cleanup", "ctx", "memctx", "context", "repo", "self", "p1", "p2", "text", "list", "files", "findconvergedfiles", "p1", "p2", "getfilectx", "author", "date", "extra", "node", "commitctx", "repo", "self", "ctx", "swap_out_encoding", "self", "oldenc", "cs", "hex", "node", "map_set", "self", "id", "commit", "cs", "upload_pack", "self", "remote", "revs", "force", "client", "path", "get_transport_and_path", "self", "remote", "changed", "refs", "to_push", "revs", "set", "values", "local_heads", "self", "values", "tags", "self", "get_changed_refs", "self", "refs", "to_push", "force", "genpack", "generate_pack_contents", "object_store", "git", "self", "status", "ui", "self", "_", "creating and sending data\n", "changed_refs", "send_pack", "client", "path", "changed", "genpack", "changed_refs", "HangupException", "GitProtocolError", "e", "Abort", "hgutil", "_", "git remote error: ", "str", "e", "get_changed_refs", "self", "refs", "revs", "force", "new_refs", "copy", "refs", "keys", "refs", "capabilities^{}", "new_refs", "capabilities^{}", "local_heads", "self", "tip", "hex", "lookup", "repo", "self", "tip", "bookmark", "commands", "ui", "self", "repo", "self", "master", "tip", "force", "True", "NameError", "bookmark", "bookmarks", "ui", "self", "repo", "self", "master", "tip", "force", "True", "setcurrent", "bookmarks", "repo", "self", "master", "new_refs", "refs/heads/master", "map_git_get", "self", "tip", "rev", "revs", "ctx", "repo", "self", "rev", "getattr", "ctx", "bookmarks", "None", "labels", "c", "tags", "ctx", "fltr", "fltr", "bm", "_filter_for_bookmarks", "self", "bookmarks", "ctx", "labels", "c", "tags", "ctx", "prep", "itr", "replace", "i", " ", "_", "i", "itr", "heads", "t", "t", "prep", "labels", "ctx", "t", "local_heads", "self", "tags", "t", "t", "prep", "labels", "ctx", "t", "tags", "self", "heads", "tags", "Abort", "hgutil", "revision %s cannot be pushed since it doesn't have a ref", "ctx", "uptodate_annotated_tags", "r", "tags", "ref", "refs/tags/", "r", "ref", "refs", "tag", "get_object", "git", "self", "refs", "ref", "isinstance", "tag", "Tag", "KeyError", "append", "uptodate_annotated_tags", "ref", "r", "heads", "tags", "r", "heads", "ref", "refs/heads/", "r", "ref", "refs/tags/", "r", "ref", "refs", "new_refs", "ref", "map_git_get", "self", "hex", "ctx", "new_refs", "ref", "_map_git", "self", "rctx", "repo", "self", "map_hg_get", "self", "new_refs", "ref", "ancestor", "rctx", "ctx", "rctx", "force", "new_refs", "ref", "map_git_get", "self", "hex", "ctx", "Abort", "hgutil", "pushing %s overwrites %s", "ref", "ctx", "ref", "uptodate_annotated_tags", "Abort", "hgutil", "%s changed on the server, please pull and merge before pushing", "ref", "new_refs", "fetch_pack", "self", "remote_name", "heads", "client", "path", "get_transport_and_path", "self", "remote_name", "graphwalker", "get_graph_walker", "git", "self", "determine_wants", "refs", "heads", "want", "stripped_refs", "r", "r", "find", "r", "/", "find", "r", "/", "r", "refs", "h", "heads", "r", "pair", "pair", "stripped_refs", "pair", "h", "r", "Abort", "hgutil", "ref %s not found on remote server", "h", "len", "r", "append", "want", "refs", "r", "Abort", "hgutil", "ambiguous reference %s: %r", "h", "r", "want", "sha", "ref", "sha", "iteritems", "refs", "endswith", "ref", "^{}", "startswith", "ref", "refs/heads/", "startswith", "ref", "refs/tags/", "want", "x", "x", "want", "x", "git", "self", "want", "f", "commit", "add_pack", "object_store", "git", "self", "progress", "GitProgress", "ui", "self", "ret", "fetch_pack", "client", "path", "determine_wants", "graphwalker", "write", "f", "progress", "progress", "flush", "progress", "ret", "HangupException", "GitProtocolError", "e", "Abort", "hgutil", "_", "git remote error: ", "str", "e", "commit", "update_references", "self", "heads", "local_heads", "self", "key", "heads", "git_ref", "map_git_get", "self", "heads", "key", "git_ref", "refs", "git", "self", "refs/heads/", "key", "map_git_get", "self", "heads", "key", "export_hg_tags", "self", "tag", "sha", "iteritems", "tags", "repo", "self", "tagtype", "repo", "self", "tag", "global", "git", "tag", "replace", "tag", " ", "_", "refs", "git", "self", "refs/tags/", "tag", "map_git_get", "self", "hex", "sha", "tags", "self", "tag", "hex", "sha", "_filter_for_bookmarks", "self", "bms", "branch_bookmark_suffix", "self", "bm", "bm", "bm", "bms", "_filter_bm", "bm", "endswith", "bm", "branch_bookmark_suffix", "self", "bm", "len", "branch_bookmark_suffix", "self", "bm", "_filter_bm", "bm", "bm", "bm", "bms", "local_heads", "self", "getattr", "bookmarks", "parse", "None", "bms", "parse", "bookmarks", "repo", "self", "bms", "_bookmarks", "repo", "self", "dict", "filtered_bm", "hex", "bms", "bm", "filtered_bm", "bm", "_filter_for_bookmarks", "self", "bms", "AttributeError", "import_tags", "self", "refs", "keys", "keys", "refs", "keys", "k", "keys", "ref_name", "k", "parts", "split", "k", "/", "parts", "refs", "parts", "tags", "ref_name", "join", "/", "v", "v", "parts", "refs", "k", "object_store", "git", "self", "ref_name", "^{}", "ref_name", "ref_name", "ref_name", "tags", "repo", "self", "obj", "get_object", "git", "self", "refs", "k", "sha", "None", "isinstance", "obj", "Commit", "sha", "map_hg_get", "self", "refs", "k", "tags", "self", "ref_name", "sha", "isinstance", "obj", "Tag", "obj_type", "obj_sha", "object", "obj", "obj", "get_object", "git", "self", "obj_sha", "isinstance", "obj", "Commit", "sha", "map_hg_get", "self", "obj_sha", "tags", "self", "ref_name", "sha", "save_tags", "self", "update_hg_bookmarks", "self", "refs", "oldbm", "getattr", "bookmarks", "parse", "None", "oldbm", "bms", "parse", "bookmarks", "repo", "self", "bms", "_bookmarks", "repo", "self", "heads", "dict", "ref", "refs", "ref", "ref", "refs", "startswith", "ref", "refs/heads/", "head", "sha", "iteritems", "heads", "sha", "object_store", "git", "self", "hgsha", "bin", "map_hg_get", "self", "sha", "head", "bms", "bms", "head", "hgsha", "bm", "repo", "self", "bms", "head", "ancestor", "bm", "repo", "self", "hgsha", "bm", "bms", "head", "hgsha", "branch_bookmark_suffix", "self", "real_branch_names", "branchmap", "repo", "self", "bms", "dict", "bm_name", "real_branch_names", "bm_name", "branch_bookmark_suffix", "self", "bm_name", "bms", "bm_name", "bm_name", "bms", "heads", "oldbm", "write", "bookmarks", "repo", "self", "bms", "_bookmarks", "repo", "self", "bms", "write", "bookmarks", "repo", "self", "AttributeError", "warn", "ui", "self", "_", "creating bookmarks failed, do you have bookmarks enabled?\n", "update_remote_branches", "self", "remote_name", "refs", "tagfile", "join", "repo", "self", "join", "path", "os", "git-remote-refs", "tags", "gitrefs", "repo", "self", "t", "list", "tags", "startswith", "t", "remote_name", "/", "tags", "t", "tags", "dict", "k", "hex", "v", "k", "v", "iteritems", "tags", "store", "object_store", "git", "self", "ref_name", "sha", "iteritems", "refs", "startswith", "ref_name", "refs/heads", "sha", "store", "hgsha", "map_hg_get", "self", "sha", "head", "ref_name", "tags", "join", "/", "remote_name", "head", "hgsha", "new_ref", "refs/remotes/%s/%s", "remote_name", "head", "refs", "git", "self", "new_ref", "sha", "startswith", "ref_name", "refs/tags", "endswith", "ref_name", "^{}", "refs", "git", "self", "ref_name", "sha", "tf", "open", "tagfile", "wb", "tag", "node", "iteritems", "tags", "write", "tf", "%s %s\n", "node", "tag", "close", "tf", "convert_git_int_mode", "self", "mode", "convert", "", "x", "l", "mode", "convert", "convert", "mode", "", "extract_hg_metadata", "self", "message", "split", "split", "message", "\n--HG--\n", "renames", "extra", "branch", "False", "len", "split", "message", "meta", "split", "lines", "split", "meta", "\n", "line", "lines", "line", "", " : ", "line", "command", "data", "split", "line", " : ", "command", "rename", "before", "after", "split", "data", " => ", "renames", "after", "before", "command", "branch", "branch", "data", "command", "extra", "before", "after", "split", "data", " : ", "extra", "before", "unquote", "urllib", "after", "message", "renames", "branch", "extra", "get_file", "self", "commit", "f", "otree", "tree", "git", "self", "tree", "commit", "parts", "split", "f", "/", "part", "parts", "mode", "sha", "otree", "part", "obj", "get_object", "git", "self", "sha", "isinstance", "obj", "Blob", "mode", "sha", "_text", "obj", "isinstance", "obj", "Tree", "otree", "obj", "get_files_changed", "self", "commit", "tree", "tree", "commit", "btree", "None", "parents", "commit", "btree", "tree", "git", "self", "parents", "commit", "changes", "tree_changes", "object_store", "git", "self", "btree", "tree", "files", "oldfile", "newfile", "oldmode", "newmode", "oldsha", "newsha", "changes", "newmode", "oldfile", "newfile", "newmode", "None", "None", "oldmode", "newfile", "oldfile", "oldmode", "None", "None", "newfile", "None", "file", "oldfile", "delete", "True", "file", "newfile", "delete", "False", "files", "file", "delete", "newmode", "newsha", "files", "remote_name", "self", "remote", "names", "name", "name", "path", "paths", "self", "path", "remote", "names", "names", "swap_out_encoding", "self", "new_encoding", "UTF-8", "mercurial", "encoding", "old", "encoding", "encoding", "encoding", "encoding", "new_encoding", "ImportError", "old", "_encoding", "hgutil", "_encoding", "hgutil", "new_encoding", "old", "decode_guess", "self", "string", "encoding", "encoding", "encode", "decode", "string", "encoding", "utf-8", "UnicodeDecodeError", "encode", "decode", "string", "latin-1", "utf-8", "UnicodeDecodeError", "encode", "decode", "string", "ascii", "replace", "utf-8", "get_transport_and_path", "self", "uri", "issubclass", "get_ssh_vendor", "client", "SSHVendor", "_ssh", "get_ssh_vendor", "client", "generate_ssh_vendor", "_ssh", "ui", "self", "git_pattern", "compile", "re", "^(?P<scheme>git([+]ssh)?://)(?P<host>.*?)(:(?P<port>\\d+))?(?P<sepr>[:/])(?P<path>.*)$", "git_match", "match", "git_pattern", "uri", "git_match", "res", "groupdict", "git_match", "transport", "ssh", "res", "scheme", "SSHGitClient", "client", "TCPGitClient", "client", "host", "port", "sepr", "path", "res", "host", "res", "port", "res", "sepr", "res", "path", "sepr", "/", "path", "/", "path", "sepr", ":", "endswith", "path", ".git/", "path", "rstrip", "path", "/", "port", "port", "client", "port", "transport", "host", "thin_packs", "False", "port", "port", "path", "httpclient", "getattr", "client", "HttpGitClient", "None", "startswith", "uri", "git+http://", "startswith", "uri", "git+https://", "uri", "uri", "startswith", "uri", "http://", "startswith", "uri", "https://", "httpclient", "RepoError", "git via HTTP requires dulwich 0.8.1 or later", "HttpGitClient", "client", "uri", "thin_packs", "False", "uri", "SubprocessGitClient", "client", "thin_packs", "False", "uri", "sys", "Ice", "pc1d", "PC1DGrid", "device", "SimulatedDevice", "simpledevice", "SimpleDevice", "opaquedevice", "OpaqueDevice", "encased_device", "EncasedDevice", "simulation", "*", "uc_enhanced", "UCEnhancedDevice", "combined_device", "CombinedDevice", "ice", "initialize", "Ice", "argv", "sys", "os", "unittest", "support", "html5lib_test_files", "json", "ImportError", "simplejson", "json", "html5lib", "html5lib", "html5parser", "serializer", "constants", "html5lib.treewalkers._base", "TreeWalker", "optionals_loaded", "lxml", "etree", "append", "optionals_loaded", "lxml", "ImportError", "default_namespace", "namespaces", "constants", "html", "JsonWalker", "TreeWalker", "__iter__", "self", "token", "tree", "self", "type", "token", "type", "StartTag", "len", "token", "namespace", "name", "attrib", "token", "namespace", "default_namespace", "name", "attrib", "token", "startTag", "self", "namespace", "name", "_convertAttrib", "self", "attrib", "type", "EndTag", "len", "token", "namespace", "name", "token", "namespace", "default_namespace", "name", "token", "endTag", "self", "namespace", "name", "type", "EmptyTag", "len", "token", "namespace", "name", "attrib", "token", "namespace", "default_namespace", "name", "attrib", "token", "token", "emptyTag", "self", "namespace", "name", "_convertAttrib", "self", "attrib", "token", "type", "Comment", "comment", "self", "token", "type", "Characters", "SpaceCharacters", "token", "text", "self", "token", "token", "type", "Doctype", "len", "token", "doctype", "self", "token", "token", "token", "len", "token", "doctype", "self", "token", "token", "doctype", "self", "token", "ValueError", "Unknown token type: ", "type", "_convertAttrib", "self", "attribs", "html5lib tree-walkers use a dict of (namespace, name): value for\n        attributes, but JSON cannot represent this. Convert from the format\n        in the serializer tests (a list of dicts with \"namespace\", \"name\",\n        and \"value\" as keys) to html5lib's tree-walker format.", "attrs", "attrib", "attribs", "name", "attrib", "namespace", "attrib", "name", "name", "attrs", "attrs", "name", "attrib", "value", "attrs", "serialize_html", "input", "options", "options", "dict", "str", "k", "v", "k", "v", "iteritems", "options", "render", "HTMLSerializer", "serializer", "options", "JsonWalker", "input", "get", "options", "encoding", "None", "serialize_xhtml", "input", "options", "options", "dict", "str", "k", "v", "k", "v", "iteritems", "options", "render", "XHTMLSerializer", "serializer", "options", "JsonWalker", "input", "get", "options", "encoding", "None", "TestCase", "TestCase", "unittest", "addTest", "cls", "name", "description", "input", "expected", "xhtml", "options", "func", "self", "mockTest", "self", "input", "options", "expected", "xhtml", "__doc__", "func", "join", "\t", "name", "description", "str", "input", "str", "options", "setattr", "cls", "name", "func", "addTest", "classmethod", "addTest", "mockTest", "self", "input", "options", "expected", "xhtml", "result", "serialize_html", "input", "options", "len", "expected", "assertEquals", "self", "expected", "result", "Expected:\n%s\nActual:\n%s\nOptions\nxhtml:False\n%s", "expected", "result", "str", "options", "result", "expected", "fail", "self", "Expected: %s, Received: %s", "expected", "result", "xhtml", "result", "serialize_xhtml", "input", "options", "len", "xhtml", "assertEquals", "self", "xhtml", "result", "Expected:\n%s\nActual:\n%s\nOptions\nxhtml:True\n%s", "xhtml", "result", "str", "options", "result", "xhtml", "fail", "self", "Expected: %s, Received: %s", "xhtml", "result", "EncodingTestCase", "TestCase", "unittest", "throwsWithLatin1", "self", "input", "assertRaises", "self", "UnicodeEncodeError", "serialize_html", "input", "encoding", "iso-8859-1", "testDoctypeName", "self", "throwsWithLatin1", "self", "Doctype", "testDoctypePublicId", "self", "throwsWithLatin1", "self", "Doctype", "testDoctypeSystemId", "self", "throwsWithLatin1", "self", "Doctype", "testCdataCharacters", "self", "assertEquals", "self", "<style>&amacr;", "serialize_html", "StartTag", "http://www.w3.org/1999/xhtml", "style", "Characters", "encoding", "iso-8859-1", "testCharacters", "self", "assertEquals", "self", "&amacr;", "serialize_html", "Characters", "encoding", "iso-8859-1", "testStartTagName", "self", "throwsWithLatin1", "self", "StartTag", "testEmptyTagName", "self", "throwsWithLatin1", "self", "EmptyTag", "testAttributeName", "self", "throwsWithLatin1", "self", "StartTag", "namespace", "name", "value", "None", "testAttributeValue", "self", "assertEquals", "self", "<span potato=&amacr;>", "serialize_html", "StartTag", "namespace", "name", "value", "None", "encoding", "iso-8859-1", "testEndTagName", "self", "throwsWithLatin1", "self", "EndTag", "testComment", "self", "throwsWithLatin1", "self", "Comment", "LxmlTestCase", "TestCase", "unittest", "setUp", "self", "parser", "self", "XMLParser", "etree", "resolve_entities", "False", "treewalker", "self", "getTreeWalker", "html5lib", "lxml", "serializer", "self", "HTMLSerializer", "serializer", "testEntityReplacement", "self", "doc", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>&beta;</html>", "tree", "getroottree", "fromstring", "etree", "doc", "parser", "parser", "self", "result", "serialize", "serializer", "tree", "tree", "lxml", "omit_optional_tags", "False", "assertEquals", "self", "result", "testEntityXML", "self", "doc", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>&gt;</html>", "tree", "getroottree", "fromstring", "etree", "doc", "parser", "parser", "self", "result", "serialize", "serializer", "tree", "tree", "lxml", "omit_optional_tags", "False", "assertEquals", "self", "result", "testEntityNoResolve", "self", "doc", "<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html>&beta;</html>", "tree", "getroottree", "fromstring", "etree", "doc", "parser", "parser", "self", "result", "serialize", "serializer", "tree", "tree", "lxml", "omit_optional_tags", "False", "resolve_entities", "False", "assertEquals", "self", "result", "buildBasicTestSuite", "filename", "html5lib_test_files", "serializer", "*.test", "test_name", "replace", "basename", "path", "os", "filename", ".test", "", "tests", "load", "json", "file", "filename", "index", "test", "enumerate", "tests", "tests", "xhtml", "get", "test", "xhtml", "test", "expected", "test_name", "optionaltags", "xhtml", "None", "addTest", "TestCase", "test_%s_%d", "test_name", "index", "test", "description", "test", "input", "test", "expected", "xhtml", "get", "test", "options", "loadTestsFromTestCase", "TestLoader", "unittest", "TestCase", "buildTestSuite", "allTests", "buildBasicTestSuite", "append", "allTests", "loadTestsFromTestCase", "TestLoader", "unittest", "EncodingTestCase", "lxml", "optionals_loaded", "append", "allTests", "loadTestsFromTestCase", "TestLoader", "unittest", "LxmlTestCase", "TestSuite", "unittest", "allTests", "main", "buildTestSuite", "main", "unittest", "__name__", "__main__", "main", "os", "re", "urllib", "uuid", "datetime", "datetime", "cgi", "FieldStorage", "ofs", "get_impl", "pylons", "request", "response", "pylons.controllers.util", "abort", "redirect_to", "pylons", "config", "paste.fileapp", "FileApp", "paste.deploy.converters", "asbool", "ckan.lib.base", "BaseController", "c", "request", "render", "config", "h", "abort", "ckan.lib.jsonp", "jsonpify", "ckan.model", "model", "ckan.authz", "authz", "cStringIO", "StringIO", "ImportError", "StringIO", "StringIO", "json", "simplejson", "json", "logging", "getLogger", "log", "getLogger", "__name__", "BUCKET", "get", "config", "ckan.storage.bucket", "default", "key_prefix", "get", "config", "ckan.storage.key_prefix", "file/", "_eq_re", "compile", "re", "^(.*)(=[0-9]*)$", "fix_stupid_pylons_encoding", "data", "\n    Fix an apparent encoding problem when calling request.body\n    TODO: Investigate whether this is fixed in later versions?\n    ", "startswith", "data", "%", "startswith", "data", "+", "data", "unquote_plus", "urllib", "data", "m", "match", "_eq_re", "data", "m", "data", "groups", "m", "data", "get_ofs", "Return a configured instance of the appropriate OFS driver.\n    ", "storage_backend", "config", "ofs.impl", "kw", "k", "v", "items", "config", "startswith", "k", "ofs.", "k", "ofs.impl", "kw", "k", "v", "ofs", "get_impl", "storage_backend", "kw", "ofs", "authorize", "method", "bucket", "key", "user", "ofs", "\n    Check authz for the user with a given bucket/key combo within a \n    particular ofs implementation.\n    ", "method", "POST", "GET", "PUT", "DELETE", "abort", "method", "GET", "exists", "ofs", "bucket", "key", "abort", "username", "user", "name", "user", "", "is_authorized", "is_authorized", "Authorizer", "authz", "username", "file-upload", "System", "model", "is_authorized", "flash_error", "h", "Not authorized to upload files.", "abort", "StorageController", "BaseController", "Upload to storage backend.\n    ", "ofs", "self", "get_ofs", "property", "upload", "self", "label", "key_prefix", "get", "params", "request", "filepath", "str", "uuid4", "uuid", "data", "c", "action", "fields", "url_for", "h", "storage_upload_handle", "name", "value", "key", "label", "render", "storage/index.html", "upload_handle", "self", "bucket_id", "BUCKET", "params", "dict", "items", "params", "request", "stream", "get", "params", "file", "label", "get", "params", "key", "authorize", "POST", "BUCKET", "label", "userobj", "c", "ofs", "self", "label", "abort", "No label", "isinstance", "stream", "FieldStorage", "abort", "No file stream.", "params", "file", "params", "filename-original", "filename", "stream", "params", "uploaded-by", "userobj", "c", "name", "userobj", "c", "", "put_stream", "ofs", "self", "bucket_id", "label", "file", "stream", "params", "success_action_redirect", "url_for", "h", "storage_upload_success", "qualified", "True", "bucket", "BUCKET", "label", "label", "success", "self", "label", "success", "self", "label", "None", "label", "get", "params", "request", "label", "label", "flash_success", "h", "Upload successful", "file_url", "c", "url_for", "h", "storage_file", "label", "label", "qualified", "True", "upload_url", "c", "url_for", "h", "storage_upload", "render", "storage/success.html", "success_empty", "self", "label", "None", "", "file", "self", "label", "exists", "exists", "ofs", "self", "BUCKET", "label", "exists", "endswith", "label", "/", "label", "label", "file_url", "url_for", "h", "storage_file", "label", "label", "redirect_to", "h", "file_url", "abort", "file_url", "get_url", "ofs", "self", "BUCKET", "label", "startswith", "file_url", "file://", "metadata", "get_metadata", "ofs", "self", "BUCKET", "label", "filepath", "file_url", "len", "file://", "headers", "Content-Type", "get", "metadata", "_format", "text/plain", "fapp", "FileApp", "filepath", "headers", "None", "headers", "fapp", "environ", "request", "start_response", "self", "redirect_to", "h", "file_url", "StorageAPIController", "BaseController", "ofs", "self", "get_ofs", "property", "index", "self", "info", "metadata/{label}", "auth/request/{label}", "auth/form/{label}", "description", "Get or set metadata for this item in storage", "description", "__doc__", "auth_request", "self", "description", "__doc__", "auth_form", "self", "info", "jsonpify", "set_metadata", "self", "label", "bucket", "BUCKET", "startswith", "label", "/", "label", "/", "label", "data", "fix_stupid_pylons_encoding", "body", "request", "data", "metadata", "loads", "json", "data", "metadata", "abort", "b", "_require_bucket", "ofs", "self", "bucket", "abort", "k", "_get_key", "ofs", "self", "b", "label", "k", "None", "k", "new_key", "b", "label", "metadata", "copy", "metadata", "metadata", "_creation_time", "str", "utcnow", "datetime", "_update_key_metadata", "ofs", "self", "k", "metadata", "set_contents_from_file", "k", "StringIO", "", "method", "request", "PUT", "old", "get_metadata", "ofs", "self", "bucket", "label", "to_delete", "ok", "keys", "old", "ok", "metadata", "append", "to_delete", "ok", "to_delete", "del_metadata_keys", "ofs", "self", "bucket", "label", "to_delete", "update_metadata", "ofs", "self", "bucket", "label", "metadata", "update_metadata", "ofs", "self", "bucket", "label", "metadata", "make_public", "k", "close", "k", "get_metadata", "self", "bucket", "label", "get_metadata", "self", "label", "bucket", "BUCKET", "storage_backend", "config", "ofs.impl", "storage_backend", "google", "s3", "startswith", "label", "/", "label", "/", "label", "url", "https://%s/%s%s", "server_name", "conn", "ofs", "self", "bucket", "label", "url", "url_for", "h", "storage_file", "label", "label", "qualified", "True", "exists", "ofs", "self", "bucket", "label", "abort", "metadata", "get_metadata", "ofs", "self", "bucket", "label", "metadata", "_location", "url", "metadata", "jsonpify", "auth_request", "self", "label", "Provide authentication information for a request so a client can\n        interact with backend storage directly.\n\n        :param label: label.\n        :param kwargs: sent either via query string for GET or json-encoded\n            dict for POST). Interpreted as http headers for request plus an\n            (optional) method parameter (being the HTTP method).\n\n            Examples of headers are:\n\n                Content-Type\n                Content-Encoding (optional)\n                Content-Length\n                Content-MD5\n                Expect (should be '100-Continue')\n\n        :return: is a json hash containing various attributes including a\n        headers dictionary containing an Authorization field which is good for\n        15m.\n\n        ", "bucket", "BUCKET", "POST", "request", "data", "fix_stupid_pylons_encoding", "body", "request", "headers", "loads", "json", "data", "Exception", "e", "traceback", "print_exc", "msg", "StringIO", "print_exc", "msg", "error", "log", "read", "seek", "msg", "abort", "headers", "dict", "params", "request", "method", "headers", "method", "headers", "method", "headers", "method", "method", "POST", "authorize", "method", "bucket", "label", "userobj", "c", "ofs", "self", "http_request", "authenticate_request", "ofs", "self", "method", "bucket", "label", "headers", "host", "method", "path", "headers", "host", "http_request", "method", "http_request", "path", "http_request", "headers", "http_request", "jsonpify", "_get_remote_form_data", "self", "label", "method", "POST", "content_length_range", "int", "get", "config", "ckan.storage.max_content_length", "acl", "public-read", "fields", "name", "value", "metadata_prefix", "provider", "conn", "ofs", "self", "uploaded-by", "id", "userobj", "c", "conditions", "{\"%s\": \"%s\"}", "x", "name", "x", "value", "x", "fields", "success_action_redirect", "url_for", "h", "storage_upload_success_empty", "qualified", "True", "label", "label", "data", "build_post_form_args", "conn", "ofs", "self", "BUCKET", "label", "expires_in", "max_content_length", "content_length_range", "success_action_redirect", "success_action_redirect", "acl", "acl", "fields", "fields", "conditions", "conditions", "storage_backend", "config", "ofs.impl", "idx", "field", "enumerate", "data", "fields", "storage_backend", "google", "field", "name", "AWSAccessKeyId", "field", "name", "GoogleAccessId", "field", "name", "content-length-range", "data", "fields", "idx", "data", "_get_form_data", "self", "label", "storage_backend", "config", "ofs.impl", "storage_backend", "google", "s3", "_get_remote_form_data", "self", "label", "data", "action", "fields", "url_for", "h", "storage_upload_handle", "qualified", "True", "name", "value", "key", "label", "data", "auth_form", "self", "label", "Provide fields for a form upload to storage including\n        authentication.\n\n        :param label: label.\n        :return: json-encoded dictionary with action parameter and fields list.\n        ", "bucket", "BUCKET", "POST", "request", "data", "fix_stupid_pylons_encoding", "body", "request", "headers", "loads", "json", "data", "Exception", "e", "traceback", "print_exc", "msg", "StringIO", "print_exc", "msg", "error", "log", "read", "seek", "msg", "abort", "headers", "dict", "params", "request", "method", "POST", "authorize", "method", "bucket", "label", "userobj", "c", "ofs", "self", "data", "_get_form_data", "self", "label", "data", "jsonpify", "numpy", "np", "numpy.random", "nr", "numpy.linalg", "linalg", "networkx", "nx", "sklearn.cross_validation", "LeaveOneOut", "math", "maths", "mvn", "normal_inverse_wishart", "gaussian_network", "gaussian_clique_tree", "dataset", "bma_gct_inducer", "ml_cgn_inducer", "compare_models_bma", "model", "xtrain", "ytrain", "xtest", "ytest", "inducer", "loo_model", "get_loo_model", "model", "ytest", "xtest", "direct_model", "learn", "inducer", "str", "d", "xtrain", "ytrain", "loo_pred", "predict", "loo_model", "xtest", "any", "isnan", "np", "loo_pred", "loo is wrong", "exit", "direct_pred", "predict", "direct_model", "xtest", "any", "isnan", "np", "direct_pred", "direct is wrong", "abs", "np", "loo_pred", "direct_pred", "__name__", "__main__", "d", "load", "dataset", "../data/vehicle.mat", "x", "x", "d", "y", "y", "d", "s", "complete_graph", "nx", "n_vars", "str", "d", "cv", "LeaveOneOut", "n_instances", "str", "d", "cv", "options", "bma_ind", "bma_gct_inducer", "bma_gct_inducer", "options", "Learning main model", "bma_model", "learn", "bma_ind", "str", "d", "x", "y", "Main model induced", "bma_model", "logmeasure_bma", "zeros", "np", "n_instances", "str", "d", "n_classes", "str", "d", "train", "test", "cv", "test", "xtrain", "x", "train", "ytrain", "y", "train", "xtest", "x", "test", "ytest", "y", "test", "logmeasure_bma", "test", "compare_models_bma", "bma_model", "xtrain", "ytrain", "xtest", "ytest", "bma_ind", "meanerror", "mean", "np", "logmeasure_bma", "Mean BMA absolute error:", "meanerror", "os", "re", "django.db", "models", "django.conf", "settings", "django.core.management.base", "NoArgsCommand", "sorl.thumbnail.main", "get_thumbnail_setting", "set", "NameError", "sets", "Set", "set", "thumb_re", "compile", "re", "^%s(.*)_\\d{1,}x\\d{1,}_[-\\w]*q([1-9]\\d?|100)\\.jpg", "get_thumbnail_setting", "PREFIX", "get_thumbnail_path", "path", "basedir", "get_thumbnail_setting", "BASEDIR", "subdir", "get_thumbnail_setting", "SUBDIR", "join", "path", "os", "basedir", "path", "subdir", "clean_up", "paths", "set", "app", "get_apps", "models", "model_list", "get_models", "models", "app", "model", "model_list", "field", "fields", "_meta", "model", "isinstance", "field", "ImageField", "models", "callable", "upload_to", "field", "find", "upload_to", "field", "%", "paths", "union", "paths", "upload_to", "field", "paths", "list", "paths", "path", "paths", "thumbnail_path", "get_thumbnail_path", "path", "file_list", "listdir", "os", "join", "path", "os", "MEDIA_ROOT", "settings", "thumbnail_path", "OSError", "fn", "file_list", "m", "match", "thumb_re", "fn", "m", "org_fn", "group", "m", "org_fn_exists", "isfile", "path", "os", "join", "path", "os", "MEDIA_ROOT", "settings", "path", "org_fn", "usc_pos", "rfind", "org_fn", "_", "usc_pos", "org_fn_alt", "%s.%s", "org_fn", "usc_pos", "org_fn", "usc_pos", "org_fn_alt_exists", "isfile", "path", "os", "join", "path", "os", "MEDIA_ROOT", "settings", "path", "org_fn_alt", "org_fn_alt_exists", "False", "org_fn_exists", "org_fn_alt_exists", "del_me", "join", "path", "os", "MEDIA_ROOT", "settings", "thumbnail_path", "fn", "remove", "os", "del_me", "Command", "NoArgsCommand", "help", "Deletes thumbnails that no longer have an original file.", "requires_model_validation", "False", "handle_noargs", "options", "self", "clean_up", "time", "datetime", "django.db", "models", "django.core.exceptions", "ImproperlyConfigured", "django.http", "Http404", "django.views.generic.base", "View", "django.views.generic.detail", "BaseDetailView", "SingleObjectTemplateResponseMixin", "django.views.generic.list", "MultipleObjectMixin", "MultipleObjectTemplateResponseMixin", "YearMixin", "object", "year_format", "%Y", "year", "None", "get_year_format", "self", "\n        Get a year format string in strptime syntax to be used to parse the\n        year from url variables.\n        ", "year_format", "self", "get_year", "self", "Return the year for which this view should display data", "year", "year", "self", "year", "None", "year", "kwargs", "self", "year", "KeyError", "year", "GET", "request", "self", "year", "KeyError", "Http404", "No year specified", "year", "MonthMixin", "object", "month_format", "%b", "month", "None", "get_month_format", "self", "\n        Get a month format string in strptime syntax to be used to parse the\n        month from url variables.\n        ", "month_format", "self", "get_month", "self", "Return the month for which this view should display data", "month", "month", "self", "month", "None", "month", "kwargs", "self", "month", "KeyError", "month", "GET", "request", "self", "month", "KeyError", "Http404", "No month specified", "month", "get_next_month", "self", "date", "\n        Get the next valid month.\n        ", "first_day", "last_day", "_month_bounds", "date", "next", "replace", "last_day", "timedelta", "datetime", "days", "day", "_get_next_prev_month", "self", "next", "is_previous", "False", "use_first_day", "True", "get_previous_month", "self", "date", "\n        Get the previous valid month.\n        ", "first_day", "last_day", "_month_bounds", "date", "prev", "replace", "first_day", "timedelta", "datetime", "days", "day", "_get_next_prev_month", "self", "prev", "is_previous", "True", "use_first_day", "True", "DayMixin", "object", "day_format", "%d", "day", "None", "get_day_format", "self", "\n        Get a month format string in strptime syntax to be used to parse the\n        month from url variables.\n        ", "day_format", "self", "get_day", "self", "Return the day for which this view should display data", "day", "day", "self", "day", "None", "day", "kwargs", "self", "day", "KeyError", "day", "GET", "request", "self", "day", "KeyError", "Http404", "No day specified", "day", "get_next_day", "self", "date", "\n        Get the next valid day.\n        ", "next", "date", "timedelta", "datetime", "days", "_get_next_prev_month", "self", "next", "is_previous", "False", "use_first_day", "False", "get_previous_day", "self", "date", "\n        Get the previous valid day.\n        ", "prev", "date", "timedelta", "datetime", "days", "_get_next_prev_month", "self", "prev", "is_previous", "True", "use_first_day", "False", "WeekMixin", "object", "week_format", "%U", "week", "None", "get_week_format", "self", "\n        Get a week format string in strptime syntax to be used to parse the\n        week from url variables.\n        ", "week_format", "self", "get_week", "self", "Return the week for which this view should display data", "week", "week", "self", "week", "None", "week", "kwargs", "self", "week", "KeyError", "week", "GET", "request", "self", "week", "KeyError", "Http404", "No week specified", "week", "DateMixin", "object", "\n    Mixin class for views manipulating date-based data.\n    ", "date_field", "None", "allow_future", "False", "get_date_field", "self", "\n        Get the name of the date field to be used to filter by.\n        ", "date_field", "self", "None", "ImproperlyConfigured", "__name__", "__class__", "self", "date_field", "self", "get_allow_future", "self", "\n        Returns `True` if the view should be allowed to display objects from\n        the future.\n        ", "allow_future", "self", "BaseDateListView", "MultipleObjectMixin", "DateMixin", "View", "\n    Abstract base class for date-based views display a list of objects.\n    ", "allow_empty", "False", "get", "args", "kwargs", "self", "request", "date_list", "self", "object_list", "self", "extra_context", "get_dated_items", "self", "context", "get_context_data", "self", "object_list", "object_list", "self", "date_list", "date_list", "self", "update", "context", "extra_context", "render_to_response", "self", "context", "get_dated_items", "self", "\n        Obtain the list of dates and itesm\n        ", "NotImplementedError", "A DateView must provide an implementation of get_dated_items()", "get_dated_queryset", "lookup", "self", "\n        Get a queryset properly filtered according to `allow_future` and any\n        extra lookup kwargs.\n        ", "qs", "filter", "get_queryset", "self", "lookup", "date_field", "get_date_field", "self", "allow_future", "get_allow_future", "self", "allow_empty", "get_allow_empty", "self", "allow_future", "qs", "filter", "qs", "%s__lte", "date_field", "now", "datetime", "datetime", "allow_empty", "qs", "Http404", "unicode", "verbose_name_plural", "_meta", "model", "qs", "qs", "get_date_list", "self", "queryset", "date_type", "\n        Get a date list by calling `queryset.dates()`, checking along the way\n        for empty lists that aren't allowed.\n        ", "date_field", "get_date_field", "self", "allow_empty", "get_allow_empty", "self", "date_list", "dates", "queryset", "date_field", "date_type", "date_list", "None", "date_list", "allow_empty", "Http404", "unicode", "verbose_name_plural", "_meta", "model", "qs", "date_list", "get_context_data", "kwargs", "self", "\n        Get the context. Must return a Context (or subclass) instance.\n        ", "items", "pop", "kwargs", "object_list", "context", "get_context_data", "super", "BaseDateListView", "self", "object_list", "items", "update", "context", "kwargs", "context", "BaseArchiveIndexView", "BaseDateListView", "\n    Base class for archives of date-based items.\n\n    Requires a response mixin.\n    ", "context_object_name", "latest", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "qs", "get_dated_queryset", "self", "date_list", "get_date_list", "self", "qs", "year", "date_list", "object_list", "order_by", "qs", "-", "get_date_field", "self", "object_list", "none", "qs", "date_list", "object_list", "ArchiveIndexView", "MultipleObjectTemplateResponseMixin", "BaseArchiveIndexView", "\n    Top-level archive of date-based items.\n    ", "template_name_suffix", "_archive", "BaseYearArchiveView", "YearMixin", "BaseDateListView", "\n    List of objects published in a given year.\n    ", "make_object_list", "False", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "year", "get_year", "self", "date_field", "get_date_field", "self", "qs", "get_dated_queryset", "self", "date_field", "__year", "year", "date_list", "get_date_list", "self", "qs", "month", "get_make_object_list", "self", "object_list", "order_by", "qs", "-", "date_field", "object_list", "none", "qs", "date_list", "object_list", "year", "year", "get_make_object_list", "self", "\n        Return `True` if this view should contain the full list of objects in\n        the given year.\n        ", "make_object_list", "self", "YearArchiveView", "MultipleObjectTemplateResponseMixin", "BaseYearArchiveView", "\n    List of objects published in a given year.\n    ", "template_name_suffix", "_archive_year", "BaseMonthArchiveView", "YearMixin", "MonthMixin", "BaseDateListView", "\n    List of objects published in a given year.\n    ", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "year", "get_year", "self", "month", "get_month", "self", "date_field", "get_date_field", "self", "date", "_date_from_string", "year", "get_year_format", "self", "month", "get_month_format", "self", "first_day", "last_day", "_month_bounds", "date", "lookup_kwargs", "%s__gte", "date_field", "%s__lt", "date_field", "first_day", "last_day", "qs", "get_dated_queryset", "self", "lookup_kwargs", "date_list", "get_date_list", "self", "qs", "day", "date_list", "qs", "month", "next_month", "previous_month", "date", "get_next_month", "self", "date", "get_previous_month", "self", "date", "MonthArchiveView", "MultipleObjectTemplateResponseMixin", "BaseMonthArchiveView", "\n    List of objects published in a given year.\n    ", "template_name_suffix", "_archive_month", "BaseWeekArchiveView", "YearMixin", "WeekMixin", "BaseDateListView", "\n    List of objects published in a given week.\n    ", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "year", "get_year", "self", "week", "get_week", "self", "date_field", "get_date_field", "self", "date", "_date_from_string", "year", "get_year_format", "self", "0", "%w", "week", "get_week_format", "self", "first_day", "date", "last_day", "date", "timedelta", "datetime", "days", "lookup_kwargs", "%s__gte", "date_field", "%s__lt", "date_field", "first_day", "last_day", "qs", "get_dated_queryset", "self", "lookup_kwargs", "None", "qs", "week", "date", "WeekArchiveView", "MultipleObjectTemplateResponseMixin", "BaseWeekArchiveView", "\n    List of objects published in a given week.\n    ", "template_name_suffix", "_archive_week", "BaseDayArchiveView", "YearMixin", "MonthMixin", "DayMixin", "BaseDateListView", "\n    List of objects published on a given day.\n    ", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "year", "get_year", "self", "month", "get_month", "self", "day", "get_day", "self", "date", "_date_from_string", "year", "get_year_format", "self", "month", "get_month_format", "self", "day", "get_day_format", "self", "_get_dated_items", "self", "date", "_get_dated_items", "self", "date", "\n        Do the actual heavy lifting of getting the dated items; this accepts a\n        date object so that TodayArchiveView can be trivial.\n        ", "date_field", "get_date_field", "self", "field", "get_field", "_meta", "model", "get_queryset", "self", "date_field", "lookup_kwargs", "_date_lookup_for_field", "field", "date", "qs", "get_dated_queryset", "self", "lookup_kwargs", "None", "qs", "day", "previous_day", "next_day", "previous_month", "next_month", "date", "get_previous_day", "self", "date", "get_next_day", "self", "date", "get_previous_month", "self", "date", "get_next_month", "self", "date", "DayArchiveView", "MultipleObjectTemplateResponseMixin", "BaseDayArchiveView", "\n    List of objects published on a given day.\n    ", "template_name_suffix", "_archive_day", "BaseTodayArchiveView", "BaseDayArchiveView", "\n    List of objects published today.\n    ", "get_dated_items", "self", "\n        Return (date_list, items, extra_context) for this request.\n        ", "_get_dated_items", "self", "today", "date", "datetime", "TodayArchiveView", "MultipleObjectTemplateResponseMixin", "BaseTodayArchiveView", "\n    List of objects published today.\n    ", "template_name_suffix", "_archive_day", "BaseDateDetailView", "YearMixin", "MonthMixin", "DayMixin", "DateMixin", "BaseDetailView", "\n    Detail view of a single object on a single date; this differs from the\n    standard DetailView by accepting a year/month/day in the URL.\n    ", "get_object", "self", "queryset", "None", "\n        Get the object this request displays.\n        ", "year", "get_year", "self", "month", "get_month", "self", "day", "get_day", "self", "date", "_date_from_string", "year", "get_year_format", "self", "month", "get_month_format", "self", "day", "get_day_format", "self", "qs", "get_queryset", "self", "get_allow_future", "self", "date", "today", "date", "datetime", "Http404", "Future %s not available because %s.allow_future is False.", "verbose_name_plural", "_meta", "model", "qs", "__name__", "__class__", "self", "date_field", "get_date_field", "self", "field", "get_field", "_meta", "model", "qs", "date_field", "lookup", "_date_lookup_for_field", "field", "date", "qs", "filter", "qs", "lookup", "get_object", "super", "BaseDetailView", "self", "queryset", "qs", "DateDetailView", "SingleObjectTemplateResponseMixin", "BaseDateDetailView", "\n    Detail view of a single object on a single date; this differs from the\n    standard DetailView by accepting a year/month/day in the URL.\n    ", "template_name_suffix", "_detail", "_date_from_string", "year", "year_format", "month", "month_format", "day", "day_format", "delim", "", "", "__", "\n    Helper: get a datetime.date object given a format string and a year,\n    month, and possibly day; raise a 404 for an invalid date.\n    ", "format", "join", "delim", "year_format", "month_format", "day_format", "datestr", "join", "delim", "year", "month", "day", "date", "datetime", "strptime", "time", "datestr", "format", "ValueError", "Http404", "datestr", "format", "_month_bounds", "date", "\n    Helper: return the first and last days of the month for the given date.\n    ", "first_day", "replace", "date", "day", "month", "first_day", "last_day", "replace", "first_day", "year", "year", "first_day", "month", "last_day", "replace", "first_day", "month", "month", "first_day", "first_day", "last_day", "_get_next_prev_month", "generic_view", "naive_result", "is_previous", "use_first_day", "\n    Helper: Get the next or the previous valid date. The idea is to allow\n    links on month/day views to never be 404s by never providing a date\n    that'll be invalid for the given view.\n\n    This is a bit complicated since it handles both next and previous months\n    and days (for MonthArchiveView and DayArchiveView); hence the coupling to generic_view.\n\n    However in essance the logic comes down to:\n\n        * If allow_empty and allow_future are both true, this is easy: just\n          return the naive result (just the next/previous day or month,\n          reguardless of object existence.)\n\n        * If allow_empty is true, allow_future is false, and the naive month\n          isn't in the future, then return it; otherwise return None.\n\n        * If allow_empty is false and allow_future is true, return the next\n          date *that contains a valid object*, even if it's in the future. If\n          there are no next objects, return None.\n\n        * If allow_empty is false and allow_future is false, return the next\n          date that contains a valid object. If that date is in the future, or\n          if there are no next objects, return None.\n\n    ", "date_field", "get_date_field", "generic_view", "allow_empty", "get_allow_empty", "generic_view", "allow_future", "get_allow_future", "generic_view", "allow_empty", "result", "naive_result", "is_previous", "lookup", "%s__lte", "date_field", "naive_result", "ordering", "-%s", "date_field", "lookup", "%s__gte", "date_field", "naive_result", "ordering", "date_field", "qs", "order_by", "filter", "get_queryset", "generic_view", "lookup", "ordering", "result", "getattr", "qs", "date_field", "IndexError", "result", "None", "hasattr", "result", "date", "result", "date", "result", "result", "use_first_day", "result", "replace", "result", "day", "result", "allow_future", "result", "today", "date", "datetime", "result", "None", "_date_lookup_for_field", "field", "date", "\n    Get the lookup kwargs for looking up a date against a given Field. If the\n    date field is a DateTimeField, we can't just do filter(df=date) because\n    that doesn't take the time into account. So we need to make a range lookup\n    in those cases.\n    ", "isinstance", "field", "DateTimeField", "models", "date_range", "combine", "datetime", "datetime", "date", "min", "time", "datetime", "combine", "datetime", "datetime", "date", "max", "time", "datetime", "%s__range", "name", "field", "date_range", "name", "field", "date", "os", "sys", "up_path", "abspath", "path", "os", "..", "append", "path", "sys", "up_path", "matplotlib.pyplot", "plt", "sim_env", "SuperRaveEnv", "Beacon", "robot.ravebot", "BarretWAM", "optimize", "scp_solver_beliefs", "utils", "mat2tuple", "random", "random", "sensors", "BeaconSensor3D", "kalman_filter", "ekf_update", "covar", "cov2vec", "vec2cov", "rave_draw", "draw_ellipsoid", "transforms", "unscented_transform", "openravepy", "*", "numpy", "np", "time", "struct", "_Getch", "\ndef waitrobot(robot):\n    while not robot.GetController().IsDone():\n        time.sleep(0.01)\n", "env", "Environment", "SetViewer", "env", "qtcoin", "Load", "env", "getcwd", "os", "/data/wam_scene.env.xml", "beacons", "Beacon", "T", "mat", "np", "array", "np", "append", "beacons", "Beacon", "T", "mat", "np", "array", "np", "s", "SuperRaveEnv", "rave_env", "env", "beacons", "beacons", "draw", "s", "robot", "GetRobots", "env", "arm", "BarretWAM", "robot", "env", "attach_sensor", "arm", "BeaconSensor3D", "decay_coeff", "x", "traj_pos", "arm", "x", "add_robot", "s", "arm", "num_states", "NX", "arm", "num_ctrls", "NU", "arm", "num_measure", "len", "beacons", "Q", "mat", "np", "diag", "np", "num_states", "R", "mat", "np", "diag", "np", "num_measure", "T", "x0", "array", "np", "NX", "arm", "du", "array", "np", "du", "T", "mat", "np", "du", "mus", "mat", "np", "zeros", "np", "num_states", "T", "mus", "T", "mat", "np", "x0", "Sigmas", "zeros", "np", "shape", "Q", "shape", "Q", "T", "Sigmas", "mat", "np", "diag", "np", "num_states", "X", "mat", "np", "zeros", "np", "NX", "arm", "T", "X", "T", "mat", "np", "x0", "U", "mat", "np", "zeros", "np", "NU", "arm", "T", "t", "range", "T", "U", "t", "du", "t", "xrange", "T", "X", "t", "dynamics", "arm", "X", "t", "U", "t", "mus", "t", "Sigmas", "t", "ekf_update", "dynamics", "arm", "x", "observe", "arm", "s", "x", "x", "Q", "R", "mus", "t", "Sigmas", "t", "U", "t", "None", "draw_trajectory", "arm", "X", "mus", "Sigmas", "Bel_bar", "mat", "np", "zeros", "np", "NB", "arm", "T", "t", "xrange", "T", "Bel_bar", "t", "vstack", "np", "X", "t", "cov2vec", "Sigmas", "t", "rho_bel", "rho_u", "N_iter", "goal_bel", "copy", "np", "Bel_bar", "goal_bel", "NX", "arm", "opt_bels", "opt_ctrls", "opt_vals", "scp_solver_beliefs", "s", "copy", "Bel_bar", "U", "Q", "R", "rho_bel", "rho_u", "goal_bel", "N_iter", "NX", "arm", "method", "shooting", "opt_mus", "mat", "np", "zeros", "np", "NX", "arm", "T", "opt_mus", "X", "opt_X", "copy", "opt_mus", "opt_Sigmas", "zeros", "np", "shape", "Q", "shape", "Q", "T", "opt_Sigmas", "Sigmas", "opt_ctrls", "mat", "np", "opt_ctrls", "t", "xrange", "T", "opt_X", "t", "dynamics", "arm", "opt_X", "t", "opt_ctrls", "t", "opt_mus", "t", "opt_Sigmas", "t", "ekf_update", "dynamics", "arm", "x", "observe", "arm", "s", "x", "x", "Q", "R", "opt_mus", "t", "opt_Sigmas", "t", "opt_ctrls", "t", "None", "draw_trajectory", "arm", "opt_X", "opt_mus", "opt_Sigmas", "color", "array", "np", "drawRobot", "opt_X", "getch", "_Getch", "_Getch", "t", "True", "c", "getch", "c", "c", "x", "ord", "c", "ord", "c", "exit", "c", "n", "drawRobot = X", "drawRobot", "X", "c", "m", "drawRobot", "opt_states", "c", ",", "c", "<", "t", "t", "c", ".", "c", ">", "t", "t", "t", "T", "t", "T", "t", "t", "traj_pos", "arm", "drawRobot", "t", "UpdatePublishedBodies", "env"]}